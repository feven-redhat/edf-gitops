{
    "*baremetal.IronicCreds": {
        "Username": "bootstrap-user",
        "Password": "JdmMzTfHPcHWhORa"
    },
    "*bootkube.CVOOverrides": {
        "FileList": [
            {
                "Filename": "templates/cvo-overrides.yaml.template",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBDbHVzdGVyVmVyc2lvbgptZXRhZGF0YToKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jbHVzdGVyLXZlcnNpb24KICBuYW1lOiB2ZXJzaW9uCnNwZWM6Cnt7LSBpZiAuSXNGQ09TIH19CiAgdXBzdHJlYW06IGh0dHBzOi8vYW1kNjQub3JpZ2luLnJlbGVhc2VzLmNpLm9wZW5zaGlmdC5vcmcvZ3JhcGgKICBjaGFubmVsOiBzdGFibGUtNAp7ey0gZWxzZSBpZiAuSXNTQ09TIH19CiAgdXBzdHJlYW06IGh0dHBzOi8vYW1kNjQub3JpZ2luLnJlbGVhc2VzLmNpLm9wZW5zaGlmdC5vcmcvZ3JhcGgKICBjaGFubmVsOiBzdGFibGUtc2Nvcy00Cnt7LSBlbHNlIH19CiAgY2hhbm5lbDogc3RhYmxlLTQuMTMKe3stIGVuZCB9fQogIGNsdXN0ZXJJRDoge3suQ1ZPQ2x1c3RlcklEfX0Ke3stIGlmIC5DVk9DYXBhYmlsaXRpZXMgfX0KICBjYXBhYmlsaXRpZXM6CiAgICBiYXNlbGluZUNhcGFiaWxpdHlTZXQ6IHt7LkNWT0NhcGFiaWxpdGllcy5CYXNlbGluZUNhcGFiaWxpdHlTZXR9fQogICAge3stIGlmIC5DVk9DYXBhYmlsaXRpZXMuQWRkaXRpb25hbEVuYWJsZWRDYXBhYmlsaXRpZXN9fQogICAgYWRkaXRpb25hbEVuYWJsZWRDYXBhYmlsaXRpZXM6IHt7cmFuZ2UgLkNWT0NhcGFiaWxpdGllcy5BZGRpdGlvbmFsRW5hYmxlZENhcGFiaWxpdGllc319CiAgICAtIHt7Ln19CiAgICB7ey0gZW5kfX0KICAgIHt7LSBlbmR9fQp7ey0gZW5kIH19Cg=="
            }
        ]
    },
    "*bootkube.KubeCloudConfig": {
        "FileList": [
            {
                "Filename": "templates/kube-cloud-config.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtY2xvdWQtY2ZnCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQp0eXBlOiBPcGFxdWUKZGF0YToKICBjb25maWc6ICIiCg=="
            }
        ]
    },
    "*bootkube.KubeSystemConfigmapRootCA": {
        "FileList": [
            {
                "Filename": "templates/kube-system-configmap-root-ca.yaml.template",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IHJvb3QtY2EKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCmRhdGE6CiAgY2EuY3J0OiB8CiAgICB7ey5Sb290Q2FDZXJ0IHwgaW5kZW50IDR9fQo="
            }
        ]
    },
    "*bootkube.MachineConfigServerTLSSecret": {
        "FileList": [
            {
                "Filename": "templates/machine-config-server-tls-secret.yaml.template",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IG1hY2hpbmUtY29uZmlnLXNlcnZlci10bHMKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1tYWNoaW5lLWNvbmZpZy1vcGVyYXRvcgp0eXBlOiBPcGFxdWUKZGF0YToKICB0bHMuY3J0OiB7ey5NY3NUTFNDZXJ0fX0KICB0bHMua2V5OiB7ey5NY3NUTFNLZXl9fQo="
            }
        ]
    },
    "*bootkube.OpenshiftConfigSecretPullSecret": {
        "FileList": [
            {
                "Filename": "templates/openshift-config-secret-pull-secret.yaml.template",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0CnR5cGU6IGt1YmVybmV0ZXMuaW8vZG9ja2VyY29uZmlnanNvbgptZXRhZGF0YToKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jb25maWcKICBuYW1lOiBwdWxsLXNlY3JldApkYXRhOgogIC5kb2NrZXJjb25maWdqc29uOiB7ey5QdWxsU2VjcmV0QmFzZTY0fX0K"
            }
        ]
    },
    "*bootstrap.Bootstrap": {
        "Config": {
            "ignition": {
                "config": {
                    "replace": {
                        "verification": {}
                    }
                },
                "proxy": {},
                "security": {
                    "tls": {}
                },
                "timeouts": {},
                "version": "3.2.0"
            },
            "passwd": {
                "users": [
                    {
                        "name": "core",
                        "sshAuthorizedKeys": [
                            "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCTMl1LDqVCao2GwvnvVp1vkC0qusn1wJgsPHTtO5pT3ae9B6JoEuGP09isvBYluyJTC//CZVQ0aHjt3teV3BEFGdZTYMit22TKGzXpfqaurGyxMyVUtqp4eFQdDNAzbRvlHgeR3uF42NNz7xT9tm9VjzzUJKpf/OR5d/Utg6RwnFDT/PJLfa+nm1d7QHcEPiJeH61H6E/odKOQOF+4GZiUVUQHDtOQEUcVuVECxga2JNxzQs0zRAGRMTzQAr4xMeD6c6rDrEOD7EOKknPNQP9dgoCaVj5dv/ymj+sZ2c4xZ48EhzfQp89C3P0Buncy0C4v+HDbOedBDq/BSmZuRHJo7YmYG46IJ/HymHG3KWkgyqwd7cgD95E/2k1Sb/fSqgmgil6ka34v2B833p1PZF0/8E8XZkDBXj+FNenBct4LyfdDqtg3JxxWqYBLq1F12x12iTQBSRtIGqayPNUBMvBTr/7WuoI3H5vvdqk58z8r2j3DObipvrkx5rNr77A+U4c= feven@localhost.localdomain\n",
                            "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDDS3x58A3r8lc9rN7VniR2tw/6JprdInxsy8wEhX5pKdnbIAYv4k/aYnahhxHK0ncZKLayZxFuJnzzoW4hY+HpBKk3MLFOk72VAwOpZIPzwbe2jOhbe7b1iCdRLIVRbNxrDCh1quvE++jnjYhPZNrpDd43ws7GpMYeroEhUAAaRQO9UfouwuLJO/Y1bS2Bu5Pw1cdc7n2/UX16c9NdFdLPdtWe0oziSVRpZT1aoSfoMIQ3qyh24OP7l9E8MaBrNmIBXwf6AZ01fy3myOkAMaaNG5/JYg/lsNcd2I+8PZn1rQNWwGRY5szjF+F2ntX6+J48CHLpPUoB5ZggkMAIKqor\n"
                        ]
                    }
                ]
            },
            "storage": {
                "files": [
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/etc/containers/registries.conf",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/etc/ignition-machine-config-encapsulated.json",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,ewogICJtZXRhZGF0YSI6IHsKICAgICJuYW1lIjogImJvb3RzdHJhcC1maXBzIgogIH0sCiAgInNwZWMiOiB7CiAgICAiY29uZmlnIjogewogICAgICAiaWduaXRpb24iOiB7CiAgICAgICAgInZlcnNpb24iOiAiMy4xLjAiCiAgICAgIH0KICAgIH0sCiAgICAia2VybmVsQXJndW1lbnRzIjogW10sCiAgICAiZmlwcyI6IGZhbHNlCiAgfQp9Cg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": false,
                        "path": "/etc/motd",
                        "user": {
                            "name": "root"
                        },
                        "append": [
                            {
                                "source": "data:text/plain;charset=utf-8;base64,VGhpcyBpcyB0aGUgYm9vdHN0cmFwIG5vZGU7IGl0IHdpbGwgYmUgZGVzdHJveWVkIHdoZW4gdGhlIG1hc3RlciBpcyBmdWxseSB1cC4KClRoZSBwcmltYXJ5IHNlcnZpY2VzIGFyZSByZWxlYXNlLWltYWdlLnNlcnZpY2UgZm9sbG93ZWQgYnkgYm9vdGt1YmUuc2VydmljZS4gVG8gd2F0Y2ggdGhlaXIgc3RhdHVzLCBydW4gZS5nLgoKICBqb3VybmFsY3RsIC1iIC1mIC11IHJlbGVhc2UtaW1hZ2Uuc2VydmljZSAtdSBib290a3ViZS5zZXJ2aWNlCg==",
                                "verification": {}
                            }
                        ],
                        "contents": {
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/etc/pki/ca-trust/source/anchors/ca.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/etc/profile.d/proxy.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/etc/systemd/system.conf.d/10-default-env.conf",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,W01hbmFnZXJdCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/root/.docker/config.json",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,eyJhdXRocyI6eyJjbG91ZC5vcGVuc2hpZnQuY29tIjp7ImF1dGgiOiJiM0JsYm5Ob2FXWjBMWEpsYkdWaGMyVXRaR1YySzI5amJWOWhZMk5sYzNOZlpUQXdNakZsWmpaaU9HWXlOR001T1dJMk9URTJORGxqT1dFd1pqZzRNRGc2VTBGVFVFeFJNRE5MVUVoUldVUTVTVFpVTTBjMFZGVlhTekV4VTA4NE5WaFVXREkyV1RsUlQxcFdRa1F4UTBKS1dVTTVVREJTV2s1UU9GRkxXbE16VVE9PSIsImVtYWlsIjoiZmV2ZW5AcmVkaGF0LmNvbSJ9LCJyZWdpc3RyeS5oY3AubnVtc3BvdC5jbG91ZDo4NDQzIjogeyJhdXRoIjogImNYVmhlVHBaYTFGT01uYzNLbVp3T1dveUsyRTUiLCJlbWFpbCI6ICJkbWFydGluaUByZWRoYXQuY29tIn0sInF1YXkuaW8iOnsiYXV0aCI6ImIzQmxibk5vYVdaMExYSmxiR1ZoYzJVdFpHVjJLMjlqYlY5aFkyTmxjM05mWlRBd01qRmxaalppT0dZeU5HTTVPV0kyT1RFMk5EbGpPV0V3WmpnNE1EZzZVMEZUVUV4Uk1ETkxVRWhSV1VRNVNUWlVNMGMwVkZWWFN6RXhVMDg0TlZoVVdESTJXVGxSVDFwV1FrUXhRMEpLV1VNNVVEQlNXazVRT0ZGTFdsTXpVUT09IiwiZW1haWwiOiJmZXZlbkByZWRoYXQuY29tIn0sInJlZ2lzdHJ5LmNvbm5lY3QucmVkaGF0LmNvbSI6eyJhdXRoIjoiZkhWb1l5MXdiMjlzTFdRMFltWmtNakJpTFRSaVlqRXROR0kwT1MwNU0yWmtMVGhpTW1KaE4yWTRaVEU1TmpwbGVVcG9Za2RqYVU5cFNsTlZlbFY0VFdsS09TNWxlVXA2WkZkSmFVOXBTbXhOUjFwc1dWZFdhRTFxV1RGUFJHc3dUVWRXYlU5WFZYZE9SR2Q1VG5wQmVVMHlTbXROVkVFMVRWTktPUzVWUWxsUkxWbEZaVVUyUkhwdExWZDBaRGxXUnpkck1rWlZaamRUY1ZSc1YzTmtiV1ZPZFRaeVJWUXRRamRCUVY5UFVIZHROMUJuWm0xc01rUkthR0kzYkZsWlRYaE9iR1o1WjB0aWVtbHlNbmhSYXpFd2NqQTRTVXh6VURkdldYVk5RbUZ2ZVZJeVpXeE5SRko1VnpaV2NHNVVlRkZzVEUxNk5DMTVkbVpQTlhNMWExSkZja0UyVG5kZlNuWmtSUzFHWjIxVVVXMDBlVEJpTTBoQ09WRkpXWEpFUkdoT1dWVkNkVmh3YVZFNU1uUjZMV3hNTVRNMlZHOXNkelZRWm1jNGRHTkNTek5mUW5KcmQzVk5SbW96V25Nd1gwWnNYMk4xYW0xU1UwVXpZM2MxZW5vMVEzRlNUa2xKVlZnM2NWbHRhMDg0TkhKRmJEaE5iSFpyV1hSM1oxcHVXR3N4V0dsalptOXVVM2RwT1hoRVUxWkxjbVIyUTJsd1gzcFpOVkJRZUZBNVdHdzBSVVZKWld0VlJqQTRkVTE1TlZGZmFtdFBZbnBrU0hoNVpWRkZlazExY2xaek9VbE1NVmRsVm5sT1ptVmhUWFJST1d0clZtcDNVekpLVDJabE9GOTZNa2xWZGpVMmQxUTBlVmxUYkRWYWNVeE1hbWRsYmxaRE1FMHRTVWRoVGpFMFdGSk5TMGxLYnpOTVZWRkJibnBRTVdvd1IxaFJZVzV3YzBkTmNpMUhTVk5WWTNKdmFIWk9XV3RvVURkWVpqVjRYMmxEY0hOc01sUmhSVkl3V1hkSFdIZFNSRVp5YjNwM05XUTVlRVYwUlU5NlpYTlhiRVl0UlVWNlRtSk5aMDVIVVZSeE9VNWxkWGcyUXpKd2JHbE1VazFRVFdKdFZuSk5iRzB4VW1Nd1JsZDJTVTFMVWxNNVFVb3dWRlZzWVhaTGVtaFpTMHAwTVZNM09IQnJaRXRrUVZkUlMybzRSekJhZFZkMmRYZHVMV1U0UTBGZmNFaHhVRzVqTUMxaWNWYzNUMlYyV1ZkTk1EVlJlVVZuVFZGYVFYRklWR052VTFwNmNIa3lZMVJxUmxkUWJHRnVNRWt5Yms1TmFISXpVVWxHWmtKNlQwbENRMXBJY25CMGVsRTVaa3hQY0ZWTlYwbFdPV2hDZEhkbVEwSmZhbXQyTFZwaVdtRlJUVEV6TlZSR1REVjRidz09IiwiZW1haWwiOiJmZXZlbkByZWRoYXQuY29tIn0sInJlZ2lzdHJ5LnJlZGhhdC5pbyI6eyJhdXRoIjoiZkhWb1l5MXdiMjlzTFdRMFltWmtNakJpTFRSaVlqRXROR0kwT1MwNU0yWmtMVGhpTW1KaE4yWTRaVEU1TmpwbGVVcG9Za2RqYVU5cFNsTlZlbFY0VFdsS09TNWxlVXA2WkZkSmFVOXBTbXhOUjFwc1dWZFdhRTFxV1RGUFJHc3dUVWRXYlU5WFZYZE9SR2Q1VG5wQmVVMHlTbXROVkVFMVRWTktPUzVWUWxsUkxWbEZaVVUyUkhwdExWZDBaRGxXUnpkck1rWlZaamRUY1ZSc1YzTmtiV1ZPZFRaeVJWUXRRamRCUVY5UFVIZHROMUJuWm0xc01rUkthR0kzYkZsWlRYaE9iR1o1WjB0aWVtbHlNbmhSYXpFd2NqQTRTVXh6VURkdldYVk5RbUZ2ZVZJeVpXeE5SRko1VnpaV2NHNVVlRkZzVEUxNk5DMTVkbVpQTlhNMWExSkZja0UyVG5kZlNuWmtSUzFHWjIxVVVXMDBlVEJpTTBoQ09WRkpXWEpFUkdoT1dWVkNkVmh3YVZFNU1uUjZMV3hNTVRNMlZHOXNkelZRWm1jNGRHTkNTek5mUW5KcmQzVk5SbW96V25Nd1gwWnNYMk4xYW0xU1UwVXpZM2MxZW5vMVEzRlNUa2xKVlZnM2NWbHRhMDg0TkhKRmJEaE5iSFpyV1hSM1oxcHVXR3N4V0dsalptOXVVM2RwT1hoRVUxWkxjbVIyUTJsd1gzcFpOVkJRZUZBNVdHdzBSVVZKWld0VlJqQTRkVTE1TlZGZmFtdFBZbnBrU0hoNVpWRkZlazExY2xaek9VbE1NVmRsVm5sT1ptVmhUWFJST1d0clZtcDNVekpLVDJabE9GOTZNa2xWZGpVMmQxUTBlVmxUYkRWYWNVeE1hbWRsYmxaRE1FMHRTVWRoVGpFMFdGSk5TMGxLYnpOTVZWRkJibnBRTVdvd1IxaFJZVzV3YzBkTmNpMUhTVk5WWTNKdmFIWk9XV3RvVURkWVpqVjRYMmxEY0hOc01sUmhSVkl3V1hkSFdIZFNSRVp5YjNwM05XUTVlRVYwUlU5NlpYTlhiRVl0UlVWNlRtSk5aMDVIVVZSeE9VNWxkWGcyUXpKd2JHbE1VazFRVFdKdFZuSk5iRzB4VW1Nd1JsZDJTVTFMVWxNNVFVb3dWRlZzWVhaTGVtaFpTMHAwTVZNM09IQnJaRXRrUVZkUlMybzRSekJhZFZkMmRYZHVMV1U0UTBGZmNFaHhVRzVqTUMxaWNWYzNUMlYyV1ZkTk1EVlJlVVZuVFZGYVFYRklWR052VTFwNmNIa3lZMVJxUmxkUWJHRnVNRWt5Yms1TmFISXpVVWxHWmtKNlQwbENRMXBJY25CMGVsRTVaa3hQY0ZWTlYwbFdPV2hDZEhkbVEwSmZhbXQyTFZwaVdtRlJUVEV6TlZSR1REVjRidz09IiwiZW1haWwiOiJmZXZlbkByZWRoYXQuY29tIn19fQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/usr/local/bin/approve-csr.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaAoKIyBzaGVsbGNoZWNrIGRpc2FibGU9U0MxMDkxICAjIHVzaW5nIHBhdGggb24gYm9vdHN0cmFwIG1hY2hpbmUKLiAvdXNyL2xvY2FsL2Jpbi9ib290c3RyYXAtc2VydmljZS1yZWNvcmQuc2gKCktVQkVDT05GSUc9IiR7MX0iCgplY2hvICJBcHByb3ZpbmcgYWxsIENTUiByZXF1ZXN0cyB1bnRpbCBib290c3RyYXBwaW5nIGlzIGNvbXBsZXRlLi4uIgp3aGlsZSBbICEgLWYgL29wdC9vcGVuc2hpZnQvLmJvb3RrdWJlLmRvbmUgXQpkbwogICAgb2MgLS1rdWJlY29uZmlnPSIkS1VCRUNPTkZJRyIgZ2V0IGNzciAtLW5vLWhlYWRlcnMgfCBncmVwIFBlbmRpbmcgfCBcCiAgICAgICAgYXdrICd7cHJpbnQgJDF9JyB8IFwKICAgICAgICB4YXJncyAtLW5vLXJ1bi1pZi1lbXB0eSBvYyAtLWt1YmVjb25maWc9IiRLVUJFQ09ORklHIiBhZG0gY2VydGlmaWNhdGUgYXBwcm92ZQoJc2xlZXAgMjAKZG9uZQo=",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/usr/local/bin/bootkube.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/usr/local/bin/bootstrap-cluster-gather.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaAoKQVBJX1NFUlZFUl9BUlRJRkFDVFNfRElSPSIvdG1wL2FydGlmYWN0cy1hcGktc2VydmVyLXRlbXAiCmZ1bmN0aW9uIHF1ZXVlKCkgewogICAgbG9jYWwgVEFSR0VUPSIke0FSVElGQUNUU19URU1QfS8kezF9IgogICAgc2hpZnQKICAgICMgc2hlbGxjaGVjayBkaXNhYmxlPVNDMjE1NQogICAgbG9jYWwgTElWRT0iJChqb2JzIHwgd2MgLWwpIgogICAgd2hpbGUgW1sgIiR7TElWRX0iIC1nZSA0NSBdXTsgZG8KICAgICAgICBzbGVlcCAxCiAgICAgICAgTElWRT0iJChqb2JzIHwgd2MgLWwpIgogICAgZG9uZQogICAgaWYgW1sgLW4gIiR7RklMVEVSLX0iIF1dOyB0aGVuCiAgICAgICAgIyBzaGVsbGNoZWNrIGRpc2FibGU9U0MyMDI0CiAgICAgICAgc3VkbyBLVUJFQ09ORklHPSIke0dBVEhFUl9LVUJFQ09ORklHfSIgIiR7QH0iIHwgIiR7RklMVEVSfSIgPiIke1RBUkdFVH0iICYKICAgIGVsc2UKICAgICAgICAjIHNoZWxsY2hlY2sgZGlzYWJsZT1TQzIwMjQKICAgICAgICBzdWRvIEtVQkVDT05GSUc9IiR7R0FUSEVSX0tVQkVDT05GSUd9IiAiJHtAfSIgPiIke1RBUkdFVH0iICYKICAgIGZpCn0KCmZ1bmN0aW9uIGNsdXN0ZXJfYm9vdHN0cmFwX2dhdGhlcigpIHsKICAgIEdBVEhFUl9LVUJFQ09ORklHPSIvb3B0L29wZW5zaGlmdC9hdXRoL2t1YmVjb25maWciCgogICAgQUxURVJOQVRJVkVfS1VCRUNPTkZJRz0iL2V0Yy9rdWJlcm5ldGVzL2Jvb3RzdHJhcC1zZWNyZXRzL2t1YmVjb25maWciCiAgICBpZiBbWyAtZiAke0FMVEVSTkFUSVZFX0tVQkVDT05GSUd9IF1dOyB0aGVuCiAgICAgICAgR0FUSEVSX0tVQkVDT05GSUc9JHtBTFRFUk5BVElWRV9LVUJFQ09ORklHfQogICAgZmkKCiAgICBlY2hvICJVc2luZyAke0dBVEhFUl9LVUJFQ09ORklHfSBhcyBLVUJFQ09ORklHIgoKICAgIEFSVElGQUNUU19URU1QPSIkKG1rdGVtcCAtZCkiCgogICAgbWtkaXIgLXAgIiR7QVJUSUZBQ1RTX1RFTVB9L3Jlc291cmNlcyIKCiAgICBlY2hvICJHYXRoZXJpbmcgY2x1c3RlciByZXNvdXJjZXMgLi4uIgogICAgcXVldWUgcmVzb3VyY2VzL25vZGVzLmxpc3Qgb2MgLS1yZXF1ZXN0LXRpbWVvdXQ9NXMgZ2V0IG5vZGVzIC1vIGpzb25wYXRoIC0tdGVtcGxhdGUgJ3tyYW5nZSAuaXRlbXNbKl19ey5tZXRhZGF0YS5uYW1lfXsiXG4ifXtlbmR9JwogICAgcXVldWUgcmVzb3VyY2VzL21hc3RlcnMubGlzdCBvYyAtLXJlcXVlc3QtdGltZW91dD01cyBnZXQgbm9kZXMgLW8ganNvbnBhdGggLWwgJ25vZGUtcm9sZS5rdWJlcm5ldGVzLmlvL21hc3RlcicgLS10ZW1wbGF0ZSAne3JhbmdlIC5pdGVtc1sqXX17Lm1ldGFkYXRhLm5hbWV9eyJcbiJ9e2VuZH0nCiAgICAjIFNoZWxsQ2hlY2sgZG9lc24ndCByZWFsaXplIHRoYXQgJG5zIGlzIGZvciB0aGUgR28gdGVtcGxhdGUsIG5vdCBzb21ldGhpbmcgd2UncmUgdHJ5aW5nIHRvIGV4cGFuZCBpbiB0aGUgc2hlbGwKICAgICMgc2hlbGxjaGVjayBkaXNhYmxlPTIwMTYKICAgIHF1ZXVlIHJlc291cmNlcy9jb250YWluZXJzIG9jIC0tcmVxdWVzdC10aW1lb3V0PTVzIGdldCBwb2RzIC0tYWxsLW5hbWVzcGFjZXMgLS10ZW1wbGF0ZSAne3sgcmFuZ2UgLml0ZW1zIH19e3sgJG5hbWUgOj0gLm1ldGFkYXRhLm5hbWUgfX17eyAkbnMgOj0gLm1ldGFkYXRhLm5hbWVzcGFjZSB9fXt7IHJhbmdlIC5zcGVjLmNvbnRhaW5lcnMgfX0tbiB7eyAkbnMgfX0ge3sgJG5hbWUgfX0gLWMge3sgLm5hbWUgfX17eyAiXG4iIH19e3sgZW5kIH19e3sgcmFuZ2UgLnNwZWMuaW5pdENvbnRhaW5lcnMgfX0tbiB7eyAkbnMgfX0ge3sgJG5hbWUgfX0gLWMge3sgLm5hbWUgfX17eyAiXG4iIH19e3sgZW5kIH19e3sgZW5kIH19JwogICAgcXVldWUgcmVzb3VyY2VzL2FwaS1wb2RzIG9jIC0tcmVxdWVzdC10aW1lb3V0PTVzIGdldCBwb2RzIC1sIGFwaXNlcnZlcj10cnVlIC0tYWxsLW5hbWVzcGFjZXMgLS10ZW1wbGF0ZSAne3sgcmFuZ2UgLml0ZW1zIH19LW4ge3sgLm1ldGFkYXRhLm5hbWVzcGFjZSB9fSB7eyAubWV0YWRhdGEubmFtZSB9fXt7ICJcbiIgfX17eyBlbmQgfX0nCgogICAgcXVldWUgcmVzb3VyY2VzL2FwaXNlcnZpY2VzLmpzb24gb2MgLS1yZXF1ZXN0LXRpbWVvdXQ9NXMgZ2V0IGFwaXNlcnZpY2VzIC1vIGpzb24KICAgIHF1ZXVlIHJlc291cmNlcy9jbHVzdGVyb3BlcmF0b3JzLmpzb24gb2MgLS1yZXF1ZXN0LXRpbWVvdXQ9NXMgZ2V0IGNsdXN0ZXJvcGVyYXRvcnMgLW8ganNvbgogICAgcXVldWUgcmVzb3VyY2VzL2NsdXN0ZXJ2ZXJzaW9uLmpzb24gb2MgLS1yZXF1ZXN0LXRpbWVvdXQ9NXMgZ2V0IGNsdXN0ZXJ2ZXJzaW9uIC1vIGpzb24KICAgIHF1ZXVlIHJlc291cmNlcy9jb25maWdtYXBzLmpzb24gb2MgLS1yZXF1ZXN0LXRpbWVvdXQ9NXMgZ2V0IGNvbmZpZ21hcHMgLS1hbGwtbmFtZXNwYWNlcyAtbyBqc29uCiAgICBxdWV1ZSByZXNvdXJjZXMvY3NyLmpzb24gb2MgLS1yZXF1ZXN0LXRpbWVvdXQ9NXMgZ2V0IGNzciAtbyBqc29uCiAgICBxdWV1ZSByZXNvdXJjZXMvZW5kcG9pbnRzLmpzb24gb2MgLS1yZXF1ZXN0LXRpbWVvdXQ9NXMgZ2V0IGVuZHBvaW50cyAtLWFsbC1uYW1lc3BhY2VzIC1vIGpzb24KICAgIHF1ZXVlIHJlc291cmNlcy9ldmVudHMuanNvbiBvYyAtLXJlcXVlc3QtdGltZW91dD01cyBnZXQgZXZlbnRzIC0tYWxsLW5hbWVzcGFjZXMgLW8ganNvbgogICAgcXVldWUgcmVzb3VyY2VzL2t1YmVhcGlzZXJ2ZXIuanNvbiBvYyAtLXJlcXVlc3QtdGltZW91dD01cyBnZXQga3ViZWFwaXNlcnZlciAtbyBqc29uCiAgICBxdWV1ZSByZXNvdXJjZXMva3ViZWNvbnRyb2xsZXJtYW5hZ2VyLmpzb24gb2MgLS1yZXF1ZXN0LXRpbWVvdXQ9NXMgZ2V0IGt1YmVjb250cm9sbGVybWFuYWdlciAtbyBqc29uCiAgICBxdWV1ZSByZXNvdXJjZXMvbWFjaGluZXMuanNvbiBvYyAtLXJlcXVlc3QtdGltZW91dD01cyBnZXQgbWFjaGluZXMgLS1hbGwtbmFtZXNwYWNlcyAtbyBqc29uCiAgICBxdWV1ZSByZXNvdXJjZXMvbWFjaGluZWNvbmZpZ3Bvb2xzLmpzb24gb2MgLS1yZXF1ZXN0LXRpbWVvdXQ9NXMgZ2V0IG1hY2hpbmVjb25maWdwb29scyAtbyBqc29uCiAgICBxdWV1ZSByZXNvdXJjZXMvbWFjaGluZWNvbmZpZ3MuanNvbiBvYyAtLXJlcXVlc3QtdGltZW91dD01cyBnZXQgbWFjaGluZWNvbmZpZ3MgLW8ganNvbgogICAgcXVldWUgcmVzb3VyY2VzL25hbWVzcGFjZXMuanNvbiBvYyAtLXJlcXVlc3QtdGltZW91dD01cyBnZXQgbmFtZXNwYWNlcyAtbyBqc29uCiAgICBxdWV1ZSByZXNvdXJjZXMvbm9kZXMuanNvbiBvYyAtLXJlcXVlc3QtdGltZW91dD01cyBnZXQgbm9kZXMgLW8ganNvbgogICAgcXVldWUgcmVzb3VyY2VzL29wZW5zaGlmdGFwaXNlcnZlci5qc29uIG9jIC0tcmVxdWVzdC10aW1lb3V0PTVzIGdldCBvcGVuc2hpZnRhcGlzZXJ2ZXIgLW8ganNvbgogICAgcXVldWUgcmVzb3VyY2VzL3BvZHMuanNvbiBvYyAtLXJlcXVlc3QtdGltZW91dD01cyBnZXQgcG9kcyAtLWFsbC1uYW1lc3BhY2VzIC1vIGpzb24KICAgIHF1ZXVlIHJlc291cmNlcy9yb2xlYmluZGluZ3MuanNvbiBvYyAtLXJlcXVlc3QtdGltZW91dD01cyBnZXQgcm9sZWJpbmRpbmdzIC0tYWxsLW5hbWVzcGFjZXMgLW8ganNvbgogICAgcXVldWUgcmVzb3VyY2VzL3JvbGVzLmpzb24gb2MgLS1yZXF1ZXN0LXRpbWVvdXQ9NXMgZ2V0IHJvbGVzIC0tYWxsLW5hbWVzcGFjZXMgLW8ganNvbgogICAgIyB0aGlzIGp1c3QgbGlzdHMgbmFtZXMgYW5kIG51bWJlciBvZiBrZXlzCiAgICBxdWV1ZSByZXNvdXJjZXMvc2VjcmV0cy1uYW1lcy50eHQgb2MgLS1yZXF1ZXN0LXRpbWVvdXQ9NXMgZ2V0IHNlY3JldHMgLS1hbGwtbmFtZXNwYWNlcwogICAgIyB0aGlzIGFkZHMgYW5ub3RhdGlvbnMsIGJ1dCBzdHJpcHMgb3V0IHRoZSBTQSB0b2tlbnMgYW5kIGRvY2tlcmNmZyBzZWNyZXRzIHdoaWNoIGFyZSBub2lzeSBhbmQgbWF5IGNvbnRhaW4gc2VjcmV0cyBpbiB0aGUgYW5ub3RhdGlvbnMKICAgIHF1ZXVlIHJlc291cmNlcy9zZWNyZXRzLW5hbWVzLXdpdGgtYW5ub3RhdGlvbnMudHh0IG9jIC0tcmVxdWVzdC10aW1lb3V0PTVzIGdldCBzZWNyZXRzIC0tYWxsLW5hbWVzcGFjZXMgLW89Y3VzdG9tLWNvbHVtbnM9TkFNRVNQQUNFOi5tZXRhZGF0YS5uYW1lc3BhY2UsTkFNRToubWV0YWRhdGEubmFtZSxUWVBFOi50eXBlLEFOTk9UQVRJT05TOi5tZXRhZGF0YS5hbm5vdGF0aW9ucyB8IGdyZXAgLXYgLS0gJy10b2tlbi0nIHwgZ3JlcCAtdiAtLSAnLWRvY2tlcmNmZy0nCiAgICBxdWV1ZSByZXNvdXJjZXMvc2VydmljZXMuanNvbiBvYyAtLXJlcXVlc3QtdGltZW91dD01cyBnZXQgc2VydmljZXMgLS1hbGwtbmFtZXNwYWNlcyAtbyBqc29uCgogICAgRklMVEVSPWd6aXAgcXVldWUgcmVzb3VyY2VzL29wZW5hcGkuanNvbi5neiBvYyAtLXJlcXVlc3QtdGltZW91dD01cyBnZXQgLS1yYXcgL29wZW5hcGkvdjIKCiAgICBlY2hvICJXYWl0aW5nIGZvciBsb2dzIC4uLiIKICAgIHdoaWxlIHdhaXQgLW47IGRvIGpvYnM7IGRvbmUKCiAgICBpZiAoKCAkKHN0YXQgLWMlcyAiJHtBUlRJRkFDVFNfVEVNUH0vcmVzb3VyY2VzL29wZW5hcGkuanNvbi5neiIpIDw9IDIwICkpCiAgICB0aGVuCiAgICAgICAgcm0gLXJmICIke0FSVElGQUNUU19URU1QfSIKICAgIGVsc2UKICAgICAgICBybSAtcmYgIiR7QVBJX1NFUlZFUl9BUlRJRkFDVFNfRElSfSIKICAgICAgICBta2RpciAtcCAiJHtBUElfU0VSVkVSX0FSVElGQUNUU19ESVJ9IgogICAgICAgIG12ICIke0FSVElGQUNUU19URU1QfS9yZXNvdXJjZXMiICIke0FQSV9TRVJWRVJfQVJUSUZBQ1RTX0RJUn0iCiAgICBmaQp9Cg==",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/usr/local/bin/bootstrap-pivot.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/usr/local/bin/bootstrap-service-record.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaAojIFRoaXMgbGlicmFyeSBwcm92aWRlcyBhIGhlbHBlciBmdW5jdGlvbnMgZm9yIHJlY29yZGluZyB3aGVuIGEgc2VydmljZQojIGFuZCBpdHMgc3RhZ2VzIHN0YXJ0IGFuZCBlbmQuCgojIyMKIyBXaGVuIHJ1bm5pbmcgYXMgYSBwcmUtIG9yIHBvc3QtY29tbWFuZCwgc2V0IFBSRV9DT01NQU5EIG9yIFBPU1RfQ09NTUFORCwgcmVzcGVjdGl2ZWx5LgojIFRoZXNlIG11c3QgYmUgc2V0ICpwcmlvciogdG8gc291cmNpbmcgdGhpcyBzY3JpcHQuCiMgUFJFX0NPTU1BTkQgaXMgdGhlIG5hbWUgaWRlbnRpZnlpbmcgdGhlIHByZS1jb21tYW5kIGJlaW5nIHJ1bi4KIyBQT1NUX0NPTU1BTkQgaXMgdGhlIG5hbWUgaWRlbnRpZnlpbmcgdGhlIHBvc3QtY29tbWFuZCBiZWluZyBydW4uCgojIFNFUlZJQ0VfUkVDT1JEU19ESVIgaXMgdGhlIGRpcmVjdG9yeSB1bmRlciB3aGljaCBzZXJ2aWNlIHJlY29yZHMgd2lsbCBiZSBzdG9yZWQuClNFUlZJQ0VfUkVDT1JEU19ESVI9IiR7U0VSVklDRV9SRUNPUkRTX0RJUjotL3Zhci9sb2cvb3BlbnNoaWZ0L30iCiMgU1lTVEVNRF9VTklUX05BTUUgaXMgdGhlIG5hbWUgb2YgdGhlIHN5c3RlbWQgdW5pdCBmb3IgdGhlIHNlcnZpY2UKU1lTVEVNRF9VTklUX05BTUU9IiQocHMgLW8gdW5pdD0gJCQpIgojIFNFUlZJQ0VfTkFNRSBpcyB0aGUgbmFtZSBvZiB0aGUgc2VydmljZQpTRVJWSUNFX05BTUU9IiR7U0VSVklDRV9OQU1FOi0ke1NZU1RFTURfVU5JVF9OQU1FJS5zZXJ2aWNlfX0iCgojIGFkZF9zZXJ2aWNlX3JlY29yZF9lbnRyeSBhZGRzIGEgcmVjb3JkIGVudHJ5IHRvIHRoZSBzZXJ2aWNlIHJlY29yZHMgZmlsZS4KIyAgIFBIQVNFIC0gcGhhc2UgYmVpbmcgcmVjb3JkZWQ7IG9uZSBvZiAic2VydmljZSBzdGFydCIsICJzZXJ2aWNlIGVuZCIsICJzdGFnZSBzdGFydCIsICJzdGFnZSBlbmQiLCAicHJlLWNvbW1hbmQgc3RhcnQiLAojICAgICAgICAgICAicHJlLWNvbW1hbmQgZW5kIiwgInBvc3QtY29tbWFuZCBzdGFydCIsICJwb3N0LWNvbW1hbmQgZW5kIgojICAgUkVTVUxUIC0gcmVzdWx0IG9mIHRoZSBhY3Rpb24KIyAgIFNUQUdFIChvcHRpb25hbCkgLSBzdGFnZSBvZiB0aGUgc2VydmljZQojICAgUFJFX0NPTU1BTkQgKG9wdGlvbmFsKSAtIG5hbWUgb2YgdGhlIHByZS1jb21tYW5kCiMgICBQT1NUX0NPTU1BTkQgKG9wdGlvbmFsKSAtIG5hbWUgb2YgdGhlIHBvc3QtY29tbWFuZAojICAgRVJST1JfTElORSAob3B0aW9uYWwpIC0gbGluZSB3aGVyZSB0aGUgZXJyb3Igb2NjdXJyZWQKIyAgIEVSUk9SX01FU1NBR0UgKG9wdGlvbmFsKSAtIG1lc3NhZ2UgZm9yIHRoZSBlcnJvcgphZGRfc2VydmljZV9yZWNvcmRfZW50cnkoKSB7CiAgbG9jYWwgRklMRU5BTUU9IiR7U0VSVklDRV9SRUNPUkRTX0RJUn0vJHtTRVJWSUNFX05BTUV9Lmpzb24iCiAgbWtkaXIgLS1wYXJlbnRzICIkKGRpcm5hbWUgIiR7RklMRU5BTUV9IikiCiAgIyBBcHBlbmQgdGhlIG5ldyBlbnRyeSB0byB0aGUgZXhpc3RpbmcgYXJyYXkgaW4gdGhlIGZpbGUuCiAgIyBJZiB0aGUgZmlsZSBkb2VzIG5vdCBhbHJlYWR5IGV4aXN0LCBzdGFydCB3aXRoIGFuIGVtcHR5IGFycmF5LgogICMgVGhlIG5ldyBlbnRyeSBjb250YWlucyBvbmx5IHRoZSBmaWVsZHMgdGhhdCBoYXZlIG5vbi1lbXB0eSB2YWx1ZXMsIHRvIG9taXQgb3B0aW9uYWwgdmFsdWVzIHRoYXQgd2VyZSBub3QgcHJvdmlkZWQuCiAgKFsgLWYgIiR7RklMRU5BTUV9IiBdICYmIGNhdCAiJHtGSUxFTkFNRX0iIHx8IGVjaG8gJ1tdJykgfCBcCiAgICAgIGpxIFwKICAgICAgICAtLWFyZyB0aW1lc3RhbXAgIiQoZGF0ZSArIiVZLSVtLSVkVCVIOiVNOiVTWiIpIiBcCiAgICAgICAgLS1hcmcgcHJlQ29tbWFuZCAiJHtQUkVfQ09NTUFORC19IiBcCiAgICAgICAgLS1hcmcgcG9zdENvbW1hbmQgIiR7UE9TVF9DT01NQU5ELX0iIFwKICAgICAgICAtLWFyZyBzdGFnZSAiJHtTVEFHRV9OQU1FLX0iIFwKICAgICAgICAtLWFyZyBwaGFzZSAiJHtQSEFTRX0iIFwKICAgICAgICAtLWFyZyByZXN1bHQgIiR7UkVTVUxULX0iIFwKICAgICAgICAtLWFyZyBlcnJvckxpbmUgIiR7RVJST1JfTElORS19IiBcCiAgICAgICAgLS1hcmcgZXJyb3JNZXNzYWdlICIke0VSUk9SX01FU1NBR0UtfSIgXAogICAgICAgICcuICs9IFsKICAgICAgICAgIHskdGltZXN0YW1wLCRwcmVDb21tYW5kLCRwb3N0Q29tbWFuZCwkc3RhZ2UsJHBoYXNlLCRyZXN1bHQsJGVycm9yTGluZSwkZXJyb3JNZXNzYWdlfSB8CiAgICAgICAgICByZWR1Y2Uga2V5c1tdIGFzICRrICguOyBpZiAuWyRrXSA9PSAiIiB0aGVuIGRlbCguWyRrXSkgZWxzZSAuIGVuZCkKICAgICAgICBdJyBcCiAgICAgID4gIiR7RklMRU5BTUV9LnRtcCIgJiYgXAogICAgbXYgIiR7RklMRU5BTUV9LnRtcCIgIiR7RklMRU5BTUV9Igp9CgojIHJlY29yZF9zZXJ2aWNlX3N0YXJ0KCkgcmVjb3JkcyB0aGUgc3RhcnQgb2YgYSBzZXJ2aWNlLgpyZWNvcmRfc2VydmljZV9zdGFydCgpIHsKICBpZiBbICIke1BSRV9DT01NQU5ELX0iIF0KICB0aGVuCiAgICBsb2NhbCBQSEFTRT0icHJlLWNvbW1hbmQgc3RhcnQiCiAgZWxpZiBbICIke1BPU1RfQ09NTUFORC19IiBdCiAgdGhlbgogICAgbG9jYWwgUEhBU0U9InBvc3QtY29tbWFuZCBzdGFydCIKICBlbHNlCiAgICBsb2NhbCBQSEFTRT0ic2VydmljZSBzdGFydCIKICBmaQoKICBhZGRfc2VydmljZV9yZWNvcmRfZW50cnkKfQoKIyByZWNvcmRfc2VydmljZV9lbmQocmVzdWx0KSByZWNvcmRzIHRoZSBlbmQgb2YgYSBzZXJ2aWNlLgojICAgRVJST1JfTElORSAtIGxpbmUgd2hlcmUgdGhlIGVycm9yIG9jY3VycmVkLCBpZiB0aGVyZSB3YXMgYW4gZXJyb3IKIyAgIEVSUk9SX01FU1NBR0UgLSBlcnJvciBtZXNzYWdlLCBpZiB0aGVyZSB3YXMgYW4gZXJyb3IKcmVjb3JkX3NlcnZpY2VfZW5kKCkgewogIGlmIFsgIiR7UFJFX0NPTU1BTkQtfSIgXQogIHRoZW4KICAgIGxvY2FsIFBIQVNFPSJwcmUtY29tbWFuZCBlbmQiCiAgZWxpZiBbICIke1BPU1RfQ09NTUFORC19IiBdCiAgdGhlbgogICAgbG9jYWwgUEhBU0U9InBvc3QtY29tbWFuZCBlbmQiCiAgZWxzZQogICAgbG9jYWwgUEhBU0U9InNlcnZpY2UgZW5kIgogIGZpCiAgbG9jYWwgUkVTVUxUPSR7MTo/TXVzdCBzcGVjaWZ5IGEgcmVzdWx0fQoKICBhZGRfc2VydmljZV9yZWNvcmRfZW50cnkKfQoKIyByZWNvcmRfc2VydmljZV9zdGFnZV9zdGFydChzdGFnZV9uYW1lKSByZWNvcmRzIHRoZSBzdGFydCBvZiBhIHN0YWdlIG9mIGEgc2VydmljZS4KcmVjb3JkX3NlcnZpY2Vfc3RhZ2Vfc3RhcnQoKSB7CiAgaWYgWyAiJHtTVEFHRV9OQU1FLX0iIF0KICB0aGVuCiAgICBlY2hvICJhdHRlbXB0IHRvIHJlY29yZCB0aGUgc3RhcnQgb2YgYSBzdGFnZSB3aXRob3V0IGVuZGluZyB0aGUgcHJldmlvdXMgb25lIgogICAgZXhpdCAxCiAgZmkKCiAgbG9jYWwgUEhBU0U9InN0YWdlIHN0YXJ0IgogIFNUQUdFX05BTUU9JHsxOj9NdXN0IHNwZWNpZnkgYSBzdGFnZSBuYW1lfQoKICBhZGRfc2VydmljZV9yZWNvcmRfZW50cnkKfQoKIyByZWNvcmRfc2VydmljZV9zdGFnZV9lbmQocmVzdWx0KSByZWNvcmRzIHRoZSBlbmQgIG9mIGEgc3RhZ2Ugb2YgYSBzZXJ2aWNlLgojICAgRVJST1JfTElORSAtIGxpbmUgd2hlcmUgdGhlIGVycm9yIG9jY3VycmVkLCBpZiB0aGVyZSB3YXMgYW4gZXJyb3IKIyAgIEVSUk9SX01FU1NBR0UgLSBlcnJvciBtZXNzYWdlLCBpZiB0aGVyZSB3YXMgYW4gZXJyb3IKcmVjb3JkX3NlcnZpY2Vfc3RhZ2VfZW5kKCkgewogIGlmIFsgLXogIiR7U1RBR0VfTkFNRS19IiBdCiAgdGhlbgogICAgZWNobyAiYXR0ZW1wdCB0byByZWNvcmQgdGhlIGVuZCBvZiBhIHN0YWdlIHdpdGhvdXQgc3RhcnRpbmcgb25lIgogICAgZXhpdCAxCiAgZmkKCiAgbG9jYWwgUEhBU0U9InN0YWdlIGVuZCIKICBsb2NhbCBSRVNVTFQ9JHsxOj9NdXN0IHNwZWNpZnkgYSByZXN1bHR9CgogIGFkZF9zZXJ2aWNlX3JlY29yZF9lbnRyeQoKICBTVEFHRV9OQU1FPSIiCn0KCiMgcmVjb3JkX3NlcnZpY2Vfc3RhZ2Vfc3VjY2VzcyByZWNvcmRzIHRoZSBzdWNjZXNzZnVsIGVuZCBvZiBhIHN0YWdlIG9mIGEgc2VydmljZS4KcmVjb3JkX3NlcnZpY2Vfc3RhZ2Vfc3VjY2VzcygpIHsKICByZWNvcmRfc2VydmljZV9zdGFnZV9lbmQgInN1Y2Nlc3MiCn0KCnJlY29yZF9zZXJ2aWNlX3N0YWdlX2ZhaWx1cmUoKSB7CiAgbG9jYWwgRVJST1JfTElORQogIGxvY2FsIEVSUk9SX01FU1NBR0UKICBnZXRfZXJyb3JfaW5mbyBFUlJPUl9MSU5FIEVSUk9SX01FU1NBR0UKICByZWNvcmRfc2VydmljZV9zdGFnZV9lbmQgImZhaWx1cmUiCn0KCnJlY29yZF9zZXJ2aWNlX2V4aXQoKSB7CiAgaWYgWyAiJDEiIC1lcSAwIF0KICB0aGVuCiAgICBsb2NhbCBSRVNVTFQ9InN1Y2Nlc3MiCiAgZWxzZQogICAgbG9jYWwgUkVTVUxUPSJmYWlsdXJlIgogICAgbG9jYWwgRVJST1JfTElORQogICAgbG9jYWwgRVJST1JfTUVTU0FHRQogICAgZ2V0X2Vycm9yX2luZm8gRVJST1JfTElORSBFUlJPUl9NRVNTQUdFCiAgZmkKCiAgaWYgWyAiJHtTVEFHRV9OQU1FLX0iIF0KICB0aGVuCiAgICByZWNvcmRfc2VydmljZV9zdGFnZV9lbmQgIiR7UkVTVUxUfSIKICBmaQoKICByZWNvcmRfc2VydmljZV9lbmQgIiR7UkVTVUxUfSIKfQoKZ2V0X2Vycm9yX2luZm8oKSB7CiAgbG9jYWwgLW4gZXJyb3JfbGluZT0kMQogIGxvY2FsIC1uIGVycm9yX21lc3NhZ2U9JDIKICAjIHNoZWxsY2hlY2sgZGlzYWJsZT1TQzIwMzQgICMgdmFyaWFibGUgdXNlZCBpbmRpcmVjdGx5CiAgZXJyb3JfbGluZT0iJChjYWxsZXIgMSkiCiAgIyBzaGVsbGNoZWNrIGRpc2FibGU9U0MyMDM0ICAjIHZhcmlhYmxlIHVzZWQgaW5kaXJlY3RseQogIGVycm9yX21lc3NhZ2U9IiQoam91cm5hbGN0bCAtLXVuaXQ9IiR7U1lTVEVNRF9VTklUX05BTUV9IiAtLWxpbmVzPTMgLS1vdXRwdXQ9Y2F0KSIKfQoKcmVjb3JkX3NlcnZpY2Vfc3RhcnQKCnRyYXAgJ3JlY29yZF9zZXJ2aWNlX2V4aXQgJD8nIEVYSVQ=",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/usr/local/bin/bootstrap-verify-api-server-urls.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaAoKIyBzaGVsbGNoZWNrIGRpc2FibGU9U0MxMDkxCi4gL3Vzci9sb2NhbC9iaW4vYm9vdHN0cmFwLXNlcnZpY2UtcmVjb3JkLnNoCgojIFRoaXMgZnVuY3Rpb25zIGV4cGVjdHMgMiBhcmd1bWVudHM6CiMgMS4gbmFtZSBvZiB0aGUgVVJMCiMgMi4gVGhlIHZhbHVlIG9mIHRoZSBVUkwKZnVuY3Rpb24gbG9va3VwX3VybCgpIHsKICAgIHVuc2V0IElQUwogICAgdW5zZXQgSVAKICAgIElQUz0kKGRpZyAiJHsyfSIgK3Nob3J0KQogICAgaWYgW1sgISAteiAiJHtJUFN9IiBdXSA7IHRoZW4KICAgICAgICBlY2hvICJTdWNjZXNzZnVsbHkgcmVzb2x2ZWQgJHsxfSAkezJ9IgogICAgICAgIHJldHVybiAwCiAgICBlbHNlCiAgICAgICAgZWNobyAiVW5hYmxlIHRvIHJlc29sdmUgJHsxfSAkezJ9IgogICAgICAgIHJldHVybiAxCiAgICBmaQp9CgojIFRoaXMgZnVuY3Rpb25zIGV4cGVjdHMgMiBhcmd1bWVudHM6CiMgMS4gbmFtZSBvZiB0aGUgVVJMCiMgMi4gVVJMIHRvIHZhbGlkYXRlCmZ1bmN0aW9uIHZhbGlkYXRlX3VybCgpIHsKICAgIGlmIFtbICQoY3VybCAtLWhlYWQgLWsgLS1zaWxlbnQgLS1mYWlsIC0td3JpdGUtb3V0ICIle2h0dHBfY29kZX1cXG4iICIkezJ9IiAtbyAvZGV2L251bGwpID09IDIwMCBdXTsgdGhlbgogICAgICAgIGVjaG8gIlN1Y2Nlc3Mgd2hpbGUgdHJ5aW5nIHRvIHJlYWNoICR7MX0ncyBodHRwcyBlbmRwb2ludCBhdCAkezJ9IgogICAgICAgIHJldHVybiAwCiAgICBlbHNlCiAgICAgICAgZWNobyAiVW5hYmxlIHRvIHJlYWNoICR7MX0ncyBodHRwcyBlbmRwb2ludCBhdCAkezJ9IgogICAgICAgIHJldHVybiAxCiAgICBmaQp9CgpmdW5jdGlvbiByZXNvbHZlX3VybCgpIHsKICAgIGlmIFtbIC16ICIkezF9IiBdXSB8fCBbWyAteiAiJHsyfSIgXV07IHRoZW4KICAgICAgICBlY2hvICJVc2FnZTogcmVzb2x2ZV91cmwgPEFQSV9VUkwgb3IgQVBJX0lOVCBVUkw+IDxVUkwgdGhhdCBuZWVkcyB0byBiZSB2ZXJpZmllZD4iCiAgICAgICAgcmV0dXJuCiAgICBmaQoKICAgIGxvY2FsIFVSTF9UWVBFPSR7MX0KICAgIGxvY2FsIFNFUlZFUl9VUkw9JHsyfQoKICAgIGlmIFtbICR7VVJMX1RZUEV9ICE9IEFQSV9VUkwgXV0gJiYgW1sgJHtVUkxfVFlQRX0gIT0gQVBJX0lOVF9VUkwgXV07IHRoZW4KICAgICAgICBlY2hvICJVc2FnZTogcmVzb2x2ZV91cmwgPEFQSV9VUkwgb3IgQVBJX0lOVCBVUkw+IDxVUkwgdGhhdCBuZWVkcyB0byBiZSB2ZXJpZmllZD4iCiAgICAgICAgcmV0dXJuCiAgICBmaQoKICAgIGVjaG8gIkNoZWNraW5nIGlmICR7U0VSVkVSX1VSTH0gb2YgdHlwZSAke1VSTF9UWVBFfSBpcyByZXNvbHZhYmxlIgoKICAgIGlmIFtbICIke1VSTF9UWVBFfSIgPSAiQVBJX1VSTCIgXV07IHRoZW4KICAgICAgICBsb2NhbCBVUkxfU1RBR0VfTkFNRT0icmVzb2x2ZS1hcGktdXJsIgogICAgZWxzZSAKICAgICAgICBsb2NhbCBVUkxfU1RBR0VfTkFNRT0icmVzb2x2ZS1hcGktaW50LXVybCIKICAgIGZpCgogICAgZWNobyAiU3RhcnRpbmcgc3RhZ2UgJHtVUkxfU1RBR0VfTkFNRX0iCiAgICByZWNvcmRfc2VydmljZV9zdGFnZV9zdGFydCAke1VSTF9TVEFHRV9OQU1FfQogICAgaWYgbG9va3VwX3VybCAiJFVSTF9UWVBFIiAiJFNFUlZFUl9VUkwiOyB0aGVuCiAgICAgICAgcmVjb3JkX3NlcnZpY2Vfc3RhZ2Vfc3VjY2VzcwogICAgZWxzZQogICAgICAgIHJlY29yZF9zZXJ2aWNlX3N0YWdlX2ZhaWx1cmUKICAgICAgICAjIFdlIGRvIG5vdCB3YW50IHRvIHN0b3AgYm9vdGt1YmUgc2VydmljZSBkdWUgdG8gdGhpcyBmYWlsdXJlLgogICAgICAgICMgU28gbm90IHJldHVybmluZyBmYWlsdXJlIGF0IHRoaXMgcG9pbnQuCiAgICAgICAgcmV0dXJuCiAgICBmaQp9CgpmdW5jdGlvbiBjaGVja191cmwoKSB7CiAgICBpZiBbWyAteiAiJHsxfSIgXV0gfHwgW1sgLXogIiR7Mn0iIF1dOyB0aGVuCiAgICAgICAgZWNobyAiVXNhZ2U6IGNoZWNrX3VybCA8QVBJX1VSTCBvciBBUElfSU5UIFVSTD4gPFVSTCB0aGF0IG5lZWRzIHRvIGJlIHZlcmlmaWVkPiIKICAgICAgICByZXR1cm4KICAgIGZpCgogICAgbG9jYWwgVVJMX1RZUEU9JHsxfQogICAgbG9jYWwgU0VSVkVSX1VSTD0kezJ9CgogICAgaWYgW1sgJHtVUkxfVFlQRX0gIT0gQVBJX1VSTCBdXSAmJiBbWyAke1VSTF9UWVBFfSAhPSBBUElfSU5UX1VSTCBdXTsgdGhlbgogICAgICAgIGVjaG8gIlVzYWdlOiBjaGVja191cmwgPEFQSV9VUkwgb3IgQVBJX0lOVCBVUkw+IDxVUkwgdGhhdCBuZWVkcyB0byBiZSB2ZXJpZmllZD4iCiAgICAgICAgcmV0dXJuCiAgICBmaQoKICAgIGVjaG8gIkNoZWNraW5nIGlmICR7U0VSVkVSX1VSTH0gb2YgdHlwZSAke1VSTF9UWVBFfSByZWFjaGFibGUiCgogICAgaWYgW1sgIiR7VVJMX1RZUEV9IiA9ICJBUElfVVJMIiBdXTsgdGhlbgogICAgICAgIGxvY2FsIFVSTF9TVEFHRV9OQU1FPSJjaGVjay1hcGktdXJsIgogICAgZWxzZSAKICAgICAgICBsb2NhbCBVUkxfU1RBR0VfTkFNRT0iY2hlY2stYXBpLWludC11cmwiCiAgICBmaQoKICAgIENVUkxfVVJMPSJodHRwczovLyR7Mn06NjQ0My92ZXJzaW9uIgoKICAgIHJlY29yZF9zZXJ2aWNlX3N0YWdlX3N0YXJ0ICR7VVJMX1NUQUdFX05BTUV9CiAgICBpZiB2YWxpZGF0ZV91cmwgIiRVUkxfVFlQRSIgIiRDVVJMX1VSTCI7IHRoZW4KICAgICAgICByZWNvcmRfc2VydmljZV9zdGFnZV9zdWNjZXNzCiAgICBlbHNlCiAgICAgICAgZWNobyAiVW5hYmxlIHRvIHZhbGlkYXRlLiAke0NVUkxfVVJMfSBpcyBjdXJyZW50bHkgdW5yZWFjaGFibGUuIgogICAgICAgIHJlY29yZF9zZXJ2aWNlX3N0YWdlX2ZhaWx1cmUKICAgICAgICAjIFdlIGRvIG5vdCB3YW50IHRvIHN0b3AgYm9vdGt1YmUgc2VydmljZSBkdWUgdG8gdGhpcyBmYWlsdXJlLgogICAgICAgICMgU28gbm90IHJldHVybmluZyBmYWlsdXJlIGF0IHRoaXMgcG9pbnQuCglyZXR1cm4KICAgIGZpCn0K",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/usr/local/bin/crio-configure.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaApzZXQgLWV1byBwaXBlZmFpbAojIEJlZm9yZSBrdWJlbGV0LnNlcnZpY2UgYW5kIGNyaW8uc2VydmljZSBzdGFydCwgZW5zdXJlCiMgdGhhdCB3ZSdyZSB1c2luZyB0aGUgcGF1c2UgaW1hZ2UgZnJvbSBvdXIgcGF5bG9hZCBqdXN0IGxpa2UgdGhlIHByaW1hcnkgY2x1c3Rlci4KIyBUaGUgY29uZmlnIHNob3VsZCBtYXRjaCB0aGUgb25lIGdlbmVyYXRlZCBieSB0aGUgTUNPIGlkZWFsbHk6CiMgaHR0cHM6Ly9naXRodWIuY29tL29wZW5zaGlmdC9tYWNoaW5lLWNvbmZpZy1vcGVyYXRvci9ibG9iL2U4NjFjY2IxMmYwOWM3Yzc2OGQ1MWZkZjBhMTc4NzlmY2M5YTg3ZDUvdGVtcGxhdGVzL21hc3Rlci8wMS1tYXN0ZXItY29udGFpbmVyLXJ1bnRpbWUvX2Jhc2UvZmlsZXMvY3Jpby55YW1sCiMgQnV0IGZvciBub3cgd2UncmUganVzdCBjaGFuZ2luZyB0aGUga2V5IGJpdHM6IGltYWdlIGFuZCBjb21tYW5kLgojIFBlcmhhcHMgZG93biB0aGUgbGluZSB3ZSBjaGFuZ2UgdGhpcyB0byBydW4gc29tZXRoaW5nIGxpa2U6CiMgcG9kbWFuIHJ1biBtYWNoaW5lLWNvbmZpZy1kYWVtb24gYm9vdHN0cmFwIC4uLiAocGFzc2luZyB0aGUgcmVsZWFzZSBpbWFnZSBhbmQgdGhlIGhvc3Qgcm9vdGZzKQoKLiAvdXNyL2xvY2FsL2Jpbi9ib290c3RyYXAtc2VydmljZS1yZWNvcmQuc2gKCi4gL3Vzci9sb2NhbC9iaW4vcmVsZWFzZS1pbWFnZS5zaAoKTUFDSElORV9DT05GSUdfSU5GUkFfSU1BR0U9JChpbWFnZV9mb3IgcG9kKQoKIyBtYWtlIHRoZSBkcm9wLWluIGRpcmVjdG9yeSBpZiB0aGF0IGhhc24ndCBiZWVuIGRvbmUgeWV0Cm1rZGlyIC1wIC9ldGMvY3Jpby9jcmlvLmNvbmYuZAoKY2F0IDw8RU9GID4gL2V0Yy9jcmlvL2NyaW8uY29uZi5kLzUwLWJvb3RzdHJhcC1vdmVycmlkZS5jb25mCltjcmlvXQpbY3Jpby5ydW50aW1lXQpob29rc19kaXIgPSBbCgkiL3Vzci9zaGFyZS9jb250YWluZXJzL29jaS9ob29rcy5kIiwKCSIvZXRjL2NvbnRhaW5lcnMvb2NpL2hvb2tzLmQiLApdCltjcmlvLmltYWdlXQpwYXVzZV9pbWFnZSA9ICIkTUFDSElORV9DT05GSUdfSU5GUkFfSU1BR0UiCnBhdXNlX2NvbW1hbmQgPSAiL3Vzci9iaW4vcG9kIgpFT0YK",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/usr/local/bin/installer-gather.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/usr/local/bin/installer-masters-gather.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaAoKIyBHZXQgdGFyZ2V0IGFyY2hpdGVjdHVyZQphcmNoPSQodW5hbWUgLW0pCgppZiB0ZXN0ICJ4JHsxfSIgPSAneC0taWQnCnRoZW4KCUdBVEhFUl9JRD0iJHsyfSIKCXNoaWZ0IDIKZmkKCkFSVElGQUNUUz0iL3RtcC9hcnRpZmFjdHMtJHtHQVRIRVJfSUR9Igpta2RpciAtcCAiJHtBUlRJRkFDVFN9IgoKZWNobyAiR2F0aGVyaW5nIG1hc3RlciBzeXN0ZW1kIHN1bW1hcnkgLi4uIgpMQU5HPVBPU0lYIHN5c3RlbWN0bCBsaXN0LXVuaXRzIC0tc3RhdGU9ZmFpbGVkID4mICIke0FSVElGQUNUU30vZmFpbGVkLXVuaXRzLnR4dCIKCmVjaG8gIkdhdGhlcmluZyBtYXN0ZXIgZmFpbGVkIHN5c3RlbWQgdW5pdCBzdGF0dXMgLi4uIgpta2RpciAtcCAiJHtBUlRJRkFDVFN9L3VuaXQtc3RhdHVzIgpzZWQgLW4gJ3MvXlwqIFwoW14gXSpcKSAuKi9cMS9wJyA8ICIke0FSVElGQUNUU30vZmFpbGVkLXVuaXRzLnR4dCIgfCB3aGlsZSByZWFkIC1yIFVOSVQKZG8KICAgIHN5c3RlbWN0bCBzdGF0dXMgLS1mdWxsICIke1VOSVR9IiA+JiAiJHtBUlRJRkFDVFN9L3VuaXQtc3RhdHVzLyR7VU5JVH0udHh0IgogICAgam91cm5hbGN0bCAtdSAiJHtVTklUfSIgPiAiJHtBUlRJRkFDVFN9L3VuaXQtc3RhdHVzLyR7VU5JVH0ubG9nIgpkb25lCgplY2hvICJHYXRoZXJpbmcgbWFzdGVyIGpvdXJuYWxzIC4uLiIKbWtkaXIgLXAgIiR7QVJUSUZBQ1RTfS9qb3VybmFscyIKZm9yIHNlcnZpY2UgaW4gY3JpbyBrdWJlbGV0IG1hY2hpbmUtY29uZmlnLWRhZW1vbi1ob3N0IG1hY2hpbmUtY29uZmlnLWRhZW1vbi1maXJzdGJvb3Qgb3BlbnNoaWZ0LWF6dXJlLXJvdXRlcyBvcGVuc2hpZnQtZ2NwLXJvdXRlcyBwaXZvdCBzc3NkCmRvCiAgICBqb3VybmFsY3RsIC0tYm9vdCAtLW5vLXBhZ2VyIC0tb3V0cHV0PXNob3J0IC0tdW5pdD0iJHtzZXJ2aWNlfSIgPiAiJHtBUlRJRkFDVFN9L2pvdXJuYWxzLyR7c2VydmljZX0ubG9nIgpkb25lCgpqb3VybmFsY3RsIC0tbm8tcGFnZXIgfCBnemlwID4gIiR7QVJUSUZBQ1RTfS9qb3VybmFscy9qb3VybmFsLmxvZy5neiIKCmVjaG8gIkdhdGhlcmluZyBtYXN0ZXIgbmV0d29ya2luZyAuLi4iCm1rZGlyIC1wICIke0FSVElGQUNUU30vbmV0d29yayIKaXAgYWRkciA+JiAiJHtBUlRJRkFDVFN9L25ldHdvcmsvaXAtYWRkci50eHQiCmlwIHJvdXRlID4mICIke0FSVElGQUNUU30vbmV0d29yay9pcC1yb3V0ZS50eHQiCmhvc3RuYW1lID4mICIke0FSVElGQUNUU30vbmV0d29yay9ob3N0bmFtZS50eHQiCm5ldHN0YXQgLWFucCA+JiAiJHtBUlRJRkFDVFN9L25ldHdvcmsvbmV0c3RhdC50eHQiCmNwIC1yIC9ldGMvcmVzb2x2LmNvbmYgIiR7QVJUSUZBQ1RTfS9uZXR3b3JrLyIKCmVjaG8gIkdhdGhlcmluZyBtYXN0ZXIgY29udGFpbmVycyAuLi4iCm1rZGlyIC1wICIke0FSVElGQUNUU30vY29udGFpbmVycyIKZm9yIGNvbnRhaW5lciBpbiAkKGNyaWN0bCBwcyAtLWFsbCAtLXF1aWV0KQpkbwogICAgY29udGFpbmVyX25hbWU9JChjcmljdGwgcHMgLWEgLS1pZCAiJHtjb250YWluZXJ9IiAtdiB8IGdyZXAgLW9QICJOYW1lOiBcXEsoLiopIikKICAgIGNyaWN0bCBsb2dzICIke2NvbnRhaW5lcn0iID4mICIke0FSVElGQUNUU30vY29udGFpbmVycy8ke2NvbnRhaW5lcl9uYW1lfS0ke2NvbnRhaW5lcn0ubG9nIgogICAgY3JpY3RsIGluc3BlY3QgIiR7Y29udGFpbmVyfSIgPiYgIiR7QVJUSUZBQ1RTfS9jb250YWluZXJzLyR7Y29udGFpbmVyX25hbWV9LSR7Y29udGFpbmVyfS5pbnNwZWN0Igpkb25lCgpwb2RtYW4gcHMgLS1hbGwgLS1mb3JtYXQgInt7IC5JRCB9fSB7eyAuTmFtZXMgfX0iIHwgd2hpbGUgcmVhZCAtciBjb250YWluZXJfaWQgY29udGFpbmVyX25hbWUKZG8KICAgIHBvZG1hbiBsb2dzICIke2NvbnRhaW5lcl9pZH0iID4mICIke0FSVElGQUNUU30vY29udGFpbmVycy8ke2NvbnRhaW5lcl9uYW1lfS0ke2NvbnRhaW5lcl9pZH0ubG9nIgogICAgcG9kbWFuIGluc3BlY3QgIiR7Y29udGFpbmVyX2lkfSIgPiYgIiR7QVJUSUZBQ1RTfS9jb250YWluZXJzLyR7Y29udGFpbmVyX25hbWV9LSR7Y29udGFpbmVyX2lkfS5pbnNwZWN0Igpkb25lCgplY2hvICJHYXRoZXJpbmcgbWFzdGVyIHJwbS1vc3RyZWUgaW5mbyAuLi4iCm1rZGlyIC1wICIke0FSVElGQUNUU30vcnBtLW9zdHJlZSIKc3VkbyBycG0tb3N0cmVlIHN0YXR1cyA+JiAiJHtBUlRJRkFDVFN9L3JwbS1vc3RyZWUvc3RhdHVzIgpzdWRvIHJwbS1vc3RyZWUgZXggaGlzdG9yeSA+JiAiJHtBUlRJRkFDVFN9L3JwbS1vc3RyZWUvaGlzdG9yeSIKCiMgQ29sbGVjdCBzeXN0ZW0gaW5mb3JtYXRpb24gc3BlY2lmaWMgdG8gSUJNIExpbnV4IFogKHMzOTB4KSBzeXN0ZW1zLiBUaGUgZGJnaW5mbwojIHNjcmlwdCBpcyBhdmFpbGFibGUgYnkgZGVmYXVsdCBhcyBwYXJ0IG9mIHRoZSBzMzkwLXV0aWxzIHJwbSBwYWNrYWdlCmlmIFsgIiRhcmNoIiA9PSAiczM5MHgiIF0KdGhlbgogICAgZWNobyAiR2F0aGVyaW5nIGRiZ2luZm8gZm9yIHRoZSBzMzkweCBzeXN0ZW0iCiAgICBta2RpciAtcCAiJHtBUlRJRkFDVFN9L25vZGUtZGJnaW5mbyIKICAgIC91c3Ivc2Jpbi9kYmdpbmZvLnNoIC1kICIke0FSVElGQUNUU30vbm9kZS1kYmdpbmZvIgogICAgZmluZCAiJHtBUlRJRkFDVFN9L25vZGUtZGJnaW5mbyIgLXByaW50MCB8IHhhcmdzIC0wIGNobW9kIGErcgpmaQoKZWNobyAiV2FpdGluZyBmb3IgbG9ncyAuLi4iCndoaWxlIHdhaXQgLW47IGRvIGpvYnM7IGRvbmUK",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/usr/local/bin/kubelet-pause-image.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaApzZXQgLWV1byBwaXBlZmFpbAojIEJlZm9yZSBrdWJlbGV0LnNlcnZpY2UgYW5kIGNyaW8uc2VydmljZSBzdGFydCwgZW5zdXJlCiMgdGhhdCB3ZSdyZSB1c2luZyB0aGUgcGF1c2UgaW1hZ2UgZnJvbSBvdXIgcGF5bG9hZCBqdXN0IGxpa2UgdGhlIHByaW1hcnkgY2x1c3Rlci4KIyBOZWVkIHRvIHNldCB0aGUgLS1wb2QtaW5mcmEtY29udGFpbmVyLWltYWdlIGZsYWcgZm9yIHRoZSBrdWJlbGV0IHRvIHBvaW50IHRvIHRoZSBwYXVzZSBpbWFnZSBmcm9tIHRoZSBwYXlsb2FkCiMgU28gd2UgYWRkIE1BQ0hJTkVfQ09ORklHX0lORlJBX0lNQUdFIHRvIGFuIGVudmlyb25tZW50IGZpbGUgYW5kIHNvdXJjZSB0aGF0IGluIHRoZSBrdWJlbGV0IHNlcnZpY2UKClBSRV9DT01NQU5EPSJrdWJlbGV0LXBhdXNlLWltYWdlIgouIC91c3IvbG9jYWwvYmluL2Jvb3RzdHJhcC1zZXJ2aWNlLXJlY29yZC5zaAoKLiAvdXNyL2xvY2FsL2Jpbi9yZWxlYXNlLWltYWdlLnNoCgplY2hvICJNQUNISU5FX0NPTkZJR19JTkZSQV9JTUFHRT0kKGltYWdlX2ZvciBwb2QpIiA+IC9ldGMva3ViZXJuZXRlcy9rdWJlbGV0LXBhdXNlLWltYWdlLW92ZXJyaWRlCg==",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/usr/local/bin/kubelet.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaAoKIyBzaGVsbGNoZWNrIGRpc2FibGU9U0MxMDkxICAjIHVzaW5nIHBhdGggb24gYm9vdHN0cmFwIG1hY2hpbmUKLiAvdXNyL2xvY2FsL2Jpbi9ib290c3RyYXAtc2VydmljZS1yZWNvcmQuc2gKCi91c3IvYmluL2h5cGVya3ViZSBcCiAga3ViZWxldCBcCiAgICAtLWFub255bW91cy1hdXRoPWZhbHNlIFwKICAgIC0tY29udGFpbmVyLXJ1bnRpbWUtZW5kcG9pbnQ9L3Zhci9ydW4vY3Jpby9jcmlvLnNvY2sgXAogICAgLS1ydW50aW1lLXJlcXVlc3QtdGltZW91dD0iJHtLVUJFTEVUX1JVTlRJTUVfUkVRVUVTVF9USU1FT1VUfSIgXAogICAgLS1wb2QtbWFuaWZlc3QtcGF0aD0vZXRjL2t1YmVybmV0ZXMvbWFuaWZlc3RzIFwKICAgIC0tbWluaW11bS1jb250YWluZXItdHRsLWR1cmF0aW9uPTZtMHMgXAogICAgLS1jbHVzdGVyLWRvbWFpbj1jbHVzdGVyLmxvY2FsIFwKICAgIC0tY2dyb3VwLWRyaXZlcj1zeXN0ZW1kIFwKICAgIC0tc2VyaWFsaXplLWltYWdlLXB1bGxzPWZhbHNlIFwKICAgIC0tdj0yIFwKICAgIC0tdm9sdW1lLXBsdWdpbi1kaXI9L2V0Yy9rdWJlcm5ldGVzL2t1YmVsZXQtcGx1Z2lucy92b2x1bWUvZXhlYyBcCiAgICAtLXBvZC1pbmZyYS1jb250YWluZXItaW1hZ2U9IiR7TUFDSElORV9DT05GSUdfSU5GUkFfSU1BR0V9Igo=",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/usr/local/bin/release-image-download.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaApzZXQgLWV1byBwaXBlZmFpbAojIERvd25sb2FkIHRoZSByZWxlYXNlIGltYWdlLiBUaGlzIHNjcmlwdCBpcyBleGVjdXRlZCBhcyBhIG9uZXNob3QKIyBzZXJ2aWNlIGJ5IHN5c3RlbWQsIGJlY2F1c2Ugd2UgY2Fubm90IG1ha2UgdXNlIG9mIFJlcXVpcmVzIGFuZCBhCiMgc2ltcGxlIHNlcnZpY2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9zeXN0ZW1kL3N5c3RlbWQvaXNzdWVzLzEzMTIuCiMKIyBUaGlzIHNjcmlwdCBjb250aW51ZXMgdHJ5aW5nIHRvIGRvd25sb2FkIHRoZSByZWxlYXNlIGltYWdlIHVudGlsCiMgc3VjY2Vzc2Z1bCBiZWNhdXNlIHdlIGNhbm5vdCB1c2UgUmVzdGFydD1vbi1mYWlsdXJlIHdpdGggYSBvbmVzaG90CiMgc2VydmljZTogaHR0cHM6Ly9naXRodWIuY29tL3N5c3RlbWQvc3lzdGVtZC9pc3N1ZXMvMjU4Mi4KIwoKLiAvdXNyL2xvY2FsL2Jpbi9ib290c3RyYXAtc2VydmljZS1yZWNvcmQuc2gKClJFTEVBU0VfSU1BR0U9cXVheS5pby9vcGVuc2hpZnQtcmVsZWFzZS1kZXYvb2NwLXJlbGVhc2VAc2hhMjU2OjczOTQ2OTcxYzAzYjQzYTBkYzZmN2IwOTQ2YjI2YTE3N2MyZjNjOWQzNzEwNTQ0MTMxNWI0ZTMzNTkzNzNhNTUKCmVjaG8gIlB1bGxpbmcgJFJFTEVBU0VfSU1BR0UuLi4iCnJlbGVhc2VfaW1hZ2VfaXNzdWU9Ii9ldGMvaXNzdWUuZC81MF9yZWxlYXNlLWltYWdlLmlzc3VlIgp3aGlsZSB0cnVlCmRvCiAgICByZWNvcmRfc2VydmljZV9zdGFnZV9zdGFydCAicHVsbC1yZWxlYXNlLWltYWdlIgogICAgaWYgcG9kbWFuIHB1bGwgLS1xdWlldCAiJFJFTEVBU0VfSU1BR0UiCiAgICB0aGVuCiAgICAgICAgcm0gLWYgIiR7cmVsZWFzZV9pbWFnZV9pc3N1ZX0iCiAgICAgICAgYWdldHR5IC0tcmVsb2FkCiAgICAgICAgcmVjb3JkX3NlcnZpY2Vfc3RhZ2Vfc3VjY2VzcwogICAgICAgIGJyZWFrCiAgICBlbHNlCiAgICAgICAgcHJpbnRmICdcblxcZXtsaWdodHJlZH1VbmFibGUgdG8gcHVsbCBPcGVuU2hpZnQgcmVsZWFzZSBpbWFnZVxcZXtyZXNldH1cbicgPiIke3JlbGVhc2VfaW1hZ2VfaXNzdWV9IgogICAgICAgIGFnZXR0eSAtLXJlbG9hZAogICAgICAgIHJlY29yZF9zZXJ2aWNlX3N0YWdlX2ZhaWx1cmUKICAgICAgICBlY2hvICJQdWxsIGZhaWxlZC4gUmV0cnlpbmcgJFJFTEVBU0VfSU1BR0UuLi4iCiAgICBmaQpkb25lCgojIFNhbml0eSBjaGVjayB0aGUgaW1hZ2UgbWV0YWRhdGEgdG8gc2VlIGlmIHRoZSBhcmNoZXMgbWF0Y2gKcmVjb3JkX3NlcnZpY2Vfc3RhZ2Vfc3RhcnQgImltYWdlLW1ldGFkYXRhLWFyY2hlcy1tYXRjaCIKaW1hZ2VfYXJjaD0kKHBvZG1hbiBpbnNwZWN0ICRSRUxFQVNFX0lNQUdFIC0tZm9ybWF0IHt7LkFyY2hpdGVjdHVyZX19KQpob3N0X2FyY2g9JCh1bmFtZSAtbSkKY2FzZSAkaG9zdF9hcmNoIGluCiAgICAieDg2XzY0IikgIGhvc3RfYXJjaD0iYW1kNjQiICAgOzsKICAgICJhYXJjaDY0IikgaG9zdF9hcmNoPSJhcm02NCIgICA7OyAjIG5vdCB1c2VkLCBqdXN0IGZvciBjb21wbGV0ZW5lc3MKZXNhYwoKaWYgW1sgIiRpbWFnZV9hcmNoIiAhPSAiJGhvc3RfYXJjaCIgXV07IHRoZW4KICAgIHByaW50ZiAnXG5cXGV7bGlnaHRyZWR9UmVsZWFzZSBpbWFnZSBhcmNoICVzIGRvZXMgbm90IG1hdGNoIGhvc3QgYXJjaCAlc1xcZXtyZXNldH1cbicgIiR7aW1hZ2VfYXJjaH0iICIke2hvc3RfYXJjaH0iID4iJHtyZWxlYXNlX2ltYWdlX2lzc3VlfSIKICAgIGFnZXR0eSAtLXJlbG9hZAogICAgcmVjb3JkX3NlcnZpY2Vfc3RhZ2VfZmFpbHVyZQogICAgZWNobyAiRVJST1I6IHJlbGVhc2UgaW1hZ2UgYXJjaCAkaW1hZ2VfYXJjaCBkb2VzIG5vdCBtYXRjaCBob3N0IGFyY2ggJGhvc3RfYXJjaCIKICAgIGV4aXQgMQplbHNlCiAgICByZWNvcmRfc2VydmljZV9zdGFnZV9zdWNjZXNzCmZpCg==",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/usr/local/bin/release-image.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaAojIFRoaXMgbGlicmFyeSBwcm92aWRlcyBhbiBgaW1hZ2VfZm9yYCBoZWxwZXIgZnVuY3Rpb24gd2hpY2ggY2FuIGdldCB0aGUKIyBwdWxsIHNwZWMgZm9yIGEgc3BlY2lmaWMgaW1hZ2UgaW4gYSByZWxlYXNlLgoKIyBDb252ZXJ0IHRoZSByZWxlYXNlIGltYWdlIHB1bGwgc3BlYyB0byBhbiAiYWJzb2x1dGUiIGZvcm0gaWYgYSBkaWdlc3QgaXMgYXZhaWxhYmxlCmlmICEgUkVMRUFTRV9JTUFHRV9ESUdFU1Q9JCggcG9kbWFuIGluc3BlY3QgcXVheS5pby9vcGVuc2hpZnQtcmVsZWFzZS1kZXYvb2NwLXJlbGVhc2VAc2hhMjU2OjczOTQ2OTcxYzAzYjQzYTBkYzZmN2IwOTQ2YjI2YTE3N2MyZjNjOWQzNzEwNTQ0MTMxNWI0ZTMzNTkzNzNhNTUgLS1mb3JtYXQgJ3t7IGluZGV4IC5SZXBvRGlnZXN0cyAwIH19JyApIHx8IFtbIC16ICIke1JFTEVBU0VfSU1BR0VfRElHRVNUfSIgXV07IHRoZW4KCWVjaG8gIldhcm5pbmc6IENvdWxkIG5vdCByZXNvbHZlIHJlbGVhc2UgaW1hZ2UgdG8gcHVsbCBieSBkaWdlc3QiIDI+JjEKCVJFTEVBU0VfSU1BR0VfRElHRVNUPSJxdWF5LmlvL29wZW5zaGlmdC1yZWxlYXNlLWRldi9vY3AtcmVsZWFzZUBzaGEyNTY6NzM5NDY5NzFjMDNiNDNhMGRjNmY3YjA5NDZiMjZhMTc3YzJmM2M5ZDM3MTA1NDQxMzE1YjRlMzM1OTM3M2E1NSIKZmkKCmltYWdlX2ZvcigpIHsKICAgIHBvZG1hbiBydW4gLS1xdWlldCAtLXJtIC0tbmV0PW5vbmUgIiR7UkVMRUFTRV9JTUFHRV9ESUdFU1R9IiBpbWFnZSAiJHsxfSIKfQo=",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/usr/local/bin/report-progress.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaAoKIyBzaGVsbGNoZWNrIGRpc2FibGU9U0MxMDkxICAjIHVzaW5nIHBhdGggb24gYm9vdHN0cmFwIG1hY2hpbmUKLiAvdXNyL2xvY2FsL2Jpbi9ib290c3RyYXAtc2VydmljZS1yZWNvcmQuc2gKCktVQkVDT05GSUc9IiR7MX0iCgp3YWl0X2Zvcl9leGlzdGVuY2UoKSB7Cgl3aGlsZSBbICEgLWUgIiR7MX0iIF0KCWRvCgkJc2xlZXAgNQoJZG9uZQp9CgpyZWNvcmRfc2VydmljZV9zdGFnZV9zdGFydCAid2FpdC1mb3ItYm9vdHN0cmFwLWNvbXBsZXRlIgplY2hvICJXYWl0aW5nIGZvciBib290c3RyYXAgdG8gY29tcGxldGUuLi4iCndhaXRfZm9yX2V4aXN0ZW5jZSAvb3B0L29wZW5zaGlmdC8uYm9vdGt1YmUuZG9uZQpyZWNvcmRfc2VydmljZV9zdGFnZV9zdWNjZXNzCgpyZWNvcmRfc2VydmljZV9zdGFnZV9zdGFydCAicmVwb3J0LWJvb3RzdHJhcC1jb21wbGV0ZSIKZWNobyAiUmVwb3J0aW5nIGluc3RhbGwgcHJvZ3Jlc3MuLi4iCndoaWxlICEgb2MgLS1rdWJlY29uZmlnPSIkS1VCRUNPTkZJRyIgY3JlYXRlIC1mIC0gPDwtRU9GCglhcGlWZXJzaW9uOiB2MQoJa2luZDogQ29uZmlnTWFwCgltZXRhZGF0YToKCSAgbmFtZTogYm9vdHN0cmFwCgkgIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KCWRhdGE6CgkgIHN0YXR1czogY29tcGxldGUKRU9GCmRvCglzbGVlcCA1CmRvbmUKcmVjb3JkX3NlcnZpY2Vfc3RhZ2Vfc3VjY2Vzcwo=",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/manifests/cluster-config.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKZGF0YToKICBpbnN0YWxsLWNvbmZpZzogfAogICAgYWRkaXRpb25hbFRydXN0QnVuZGxlUG9saWN5OiBQcm94eW9ubHkKICAgIGFwaVZlcnNpb246IHYxCiAgICBiYXNlRG9tYWluOiBzYW5kYm94MTg4MC5vcGVudGxjLmNvbQogICAgY29tcHV0ZToKICAgIC0gYXJjaGl0ZWN0dXJlOiBhbWQ2NAogICAgICBoeXBlcnRocmVhZGluZzogRW5hYmxlZAogICAgICBuYW1lOiB3b3JrZXIKICAgICAgcGxhdGZvcm06IHt9CiAgICAgIHJlcGxpY2FzOiAzCiAgICBjb250cm9sUGxhbmU6CiAgICAgIGFyY2hpdGVjdHVyZTogYW1kNjQKICAgICAgaHlwZXJ0aHJlYWRpbmc6IEVuYWJsZWQKICAgICAgbmFtZTogbWFzdGVyCiAgICAgIHBsYXRmb3JtOiB7fQogICAgICByZXBsaWNhczogMwogICAgbWV0YWRhdGE6CiAgICAgIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgICAgIG5hbWU6IGVkZi1kZW1vCiAgICBuZXR3b3JraW5nOgogICAgICBjbHVzdGVyTmV0d29yazoKICAgICAgLSBjaWRyOiAxMC4xMjguMC4wLzE0CiAgICAgICAgaG9zdFByZWZpeDogMjMKICAgICAgbWFjaGluZU5ldHdvcms6CiAgICAgIC0gY2lkcjogMTAuMC4wLjAvMTYKICAgICAgbmV0d29ya1R5cGU6IE9WTkt1YmVybmV0ZXMKICAgICAgc2VydmljZU5ldHdvcms6CiAgICAgIC0gMTcyLjMwLjAuMC8xNgogICAgcGxhdGZvcm06CiAgICAgIGF3czoKICAgICAgICByZWdpb246IHVzLWVhc3QtMgogICAgcHVibGlzaDogRXh0ZXJuYWwKICAgIHB1bGxTZWNyZXQ6ICIiCiAgICBzc2hLZXk6IHwKICAgICAgc3NoLXJzYSBBQUFBQjNOemFDMXljMkVBQUFBREFRQUJBQUFCZ1FDVE1sMUxEcVZDYW8yR3d2bnZWcDF2a0MwcXVzbjF3SmdzUEhUdE81cFQzYWU5QjZKb0V1R1AwOWlzdkJZbHV5SlRDLy9DWlZRMGFIanQzdGVWM0JFRkdkWlRZTWl0MjJUS0d6WHBmcWF1ckd5eE15VlV0cXA0ZUZRZEROQXpiUnZsSGdlUjN1RjQyTk56N3hUOXRtOVZqenpVSktwZi9PUjVkL1V0ZzZSd25GRFQvUEpMZmErbm0xZDdRSGNFUGlKZUg2MUg2RS9vZEtPUU9GKzRHWmlVVlVRSER0T1FFVWNWdVZFQ3hnYTJKTnh6UXMwelJBR1JNVHpRQXI0eE1lRDZjNnJEckVPRDdFT0trblBOUVA5ZGdvQ2FWajVkdi95bWorc1oyYzR4WjQ4RWh6ZlFwODlDM1AwQnVuY3kwQzR2K0hEYk9lZEJEcS9CU21adVJISm83WW1ZRzQ2SUovSHltSEczS1drZ3lxd2Q3Y2dEOTVFLzJrMVNiL2ZTcWdtZ2lsNmthMzR2MkI4MzNwMVBaRjAvOEU4WFprREJYaitGTmVuQmN0NEx5ZmREcXRnM0p4eFdxWUJMcTFGMTJ4MTJpVFFCU1J0SUdxYXlQTlVCTXZCVHIvN1d1b0kzSDV2dmRxazU4ejhyMmozRE9iaXB2cmt4NXJOcjc3QStVNGM9IGZldmVuQGxvY2FsaG9zdC5sb2NhbGRvbWFpbgpraW5kOiBDb25maWdNYXAKbWV0YWRhdGE6CiAgYW5ub3RhdGlvbnM6CiAgICBrdWJlcm5ldGVzLmlvL2Rlc2NyaXB0aW9uOiBUaGUgaW5zdGFsbC1jb25maWcgY29udGVudCB1c2VkIHRvIGNyZWF0ZSB0aGUgY2x1c3Rlci4gIFRoZQogICAgICBjbHVzdGVyIGNvbmZpZ3VyYXRpb24gbWF5IGhhdmUgZXZvbHZlZCBzaW5jZSBpbnN0YWxsYXRpb24sIHNvIGNoZWNrIGNsdXN0ZXIKICAgICAgY29uZmlndXJhdGlvbiByZXNvdXJjZXMgZGlyZWN0bHkgaWYgeW91IGFyZSBpbnRlcmVzdGVkIGluIHRoZSBjdXJyZW50IGNsdXN0ZXIKICAgICAgc3RhdGUuCiAgbmFtZTogY2x1c3Rlci1jb25maWctdjEKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/manifests/cluster-dns-02-config.yml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBETlMKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBuYW1lOiBjbHVzdGVyCnNwZWM6CiAgYmFzZURvbWFpbjogZWRmLWRlbW8uc2FuZGJveDE4ODAub3BlbnRsYy5jb20KICBwbGF0Zm9ybToKICAgIGF3czogbnVsbAogICAgdHlwZTogIiIKICBwcml2YXRlWm9uZToKICAgIHRhZ3M6CiAgICAgIE5hbWU6IGVkZi1kZW1vLThncDZ6LWludAogICAgICBrdWJlcm5ldGVzLmlvL2NsdXN0ZXIvZWRmLWRlbW8tOGdwNno6IG93bmVkCiAgcHVibGljWm9uZToKICAgIGlkOiBaWVA0ODFBSjZUQk43CnN0YXR1czoge30K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/manifests/cluster-infrastructure-02-config.yml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBJbmZyYXN0cnVjdHVyZQptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIG5hbWU6IGNsdXN0ZXIKc3BlYzoKICBjbG91ZENvbmZpZzoKICAgIG5hbWU6ICIiCiAgcGxhdGZvcm1TcGVjOgogICAgYXdzOiB7fQogICAgdHlwZTogQVdTCnN0YXR1czoKICBhcGlTZXJ2ZXJJbnRlcm5hbFVSSTogaHR0cHM6Ly9hcGktaW50LmVkZi1kZW1vLnNhbmRib3gxODgwLm9wZW50bGMuY29tOjY0NDMKICBhcGlTZXJ2ZXJVUkw6IGh0dHBzOi8vYXBpLmVkZi1kZW1vLnNhbmRib3gxODgwLm9wZW50bGMuY29tOjY0NDMKICBjb250cm9sUGxhbmVUb3BvbG9neTogSGlnaGx5QXZhaWxhYmxlCiAgY3B1UGFydGl0aW9uaW5nOiBOb25lCiAgZXRjZERpc2NvdmVyeURvbWFpbjogIiIKICBpbmZyYXN0cnVjdHVyZU5hbWU6IGVkZi1kZW1vLThncDZ6CiAgaW5mcmFzdHJ1Y3R1cmVUb3BvbG9neTogSGlnaGx5QXZhaWxhYmxlCiAgcGxhdGZvcm06IEFXUwogIHBsYXRmb3JtU3RhdHVzOgogICAgYXdzOgogICAgICByZWdpb246IHVzLWVhc3QtMgogICAgdHlwZTogQVdTCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/manifests/cluster-ingress-02-config.yml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBJbmdyZXNzCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbmFtZTogY2x1c3RlcgpzcGVjOgogIGRvbWFpbjogYXBwcy5lZGYtZGVtby5zYW5kYm94MTg4MC5vcGVudGxjLmNvbQogIGxvYWRCYWxhbmNlcjoKICAgIHBsYXRmb3JtOgogICAgICBhd3M6CiAgICAgICAgdHlwZTogQ2xhc3NpYwogICAgICB0eXBlOiBBV1MKc3RhdHVzOgogIGRlZmF1bHRQbGFjZW1lbnQ6IFdvcmtlcnMK",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/manifests/cluster-network-01-crd.yml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/manifests/cluster-network-02-config.yml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBOZXR3b3JrCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbmFtZTogY2x1c3RlcgpzcGVjOgogIGNsdXN0ZXJOZXR3b3JrOgogIC0gY2lkcjogMTAuMTI4LjAuMC8xNAogICAgaG9zdFByZWZpeDogMjMKICBleHRlcm5hbElQOgogICAgcG9saWN5OiB7fQogIG5ldHdvcmtUeXBlOiBPVk5LdWJlcm5ldGVzCiAgc2VydmljZU5ldHdvcms6CiAgLSAxNzIuMzAuMC4wLzE2CnN0YXR1czoge30K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/manifests/cluster-proxy-01-config.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBQcm94eQptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIG5hbWU6IGNsdXN0ZXIKc3BlYzoKICB0cnVzdGVkQ0E6CiAgICBuYW1lOiAiIgpzdGF0dXM6IHt9Cg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/manifests/cluster-scheduler-02-config.yml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBTY2hlZHVsZXIKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBuYW1lOiBjbHVzdGVyCnNwZWM6CiAgbWFzdGVyc1NjaGVkdWxhYmxlOiBmYWxzZQogIHBvbGljeToKICAgIG5hbWU6ICIiCnN0YXR1czoge30K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/manifests/cvo-overrides.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBDbHVzdGVyVmVyc2lvbgptZXRhZGF0YToKICBuYW1lOiB2ZXJzaW9uCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY2x1c3Rlci12ZXJzaW9uCnNwZWM6CiAgY2hhbm5lbDogc3RhYmxlLTQuMTMKICBjbHVzdGVySUQ6IDY0MmY5ODYyLThiYjYtNDliNi04YTQ0LTJmODc1MjdjM2Y2NwogIG92ZXJyaWRlczoKICAtIGdyb3VwOiAiIgogICAga2luZDogQ29uZmlnTWFwCiAgICBuYW1lOiBjbHVzdGVyLWNvbmZpZy12MQogICAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQogICAgdW5tYW5hZ2VkOiB0cnVlCiAgLSBncm91cDogY29uZmlnLm9wZW5zaGlmdC5pbwogICAga2luZDogRE5TCiAgICBuYW1lOiBjbHVzdGVyCiAgICBuYW1lc3BhY2U6ICIiCiAgICB1bm1hbmFnZWQ6IHRydWUKICAtIGdyb3VwOiBjb25maWcub3BlbnNoaWZ0LmlvCiAgICBraW5kOiBJbmZyYXN0cnVjdHVyZQogICAgbmFtZTogY2x1c3RlcgogICAgbmFtZXNwYWNlOiAiIgogICAgdW5tYW5hZ2VkOiB0cnVlCiAgLSBncm91cDogY29uZmlnLm9wZW5zaGlmdC5pbwogICAga2luZDogSW5ncmVzcwogICAgbmFtZTogY2x1c3RlcgogICAgbmFtZXNwYWNlOiAiIgogICAgdW5tYW5hZ2VkOiB0cnVlCiAgLSBncm91cDogYXBpZXh0ZW5zaW9ucy5rOHMuaW8KICAgIGtpbmQ6IEN1c3RvbVJlc291cmNlRGVmaW5pdGlvbgogICAgbmFtZTogbmV0d29ya3MuY29uZmlnLm9wZW5zaGlmdC5pbwogICAgbmFtZXNwYWNlOiAiIgogICAgdW5tYW5hZ2VkOiB0cnVlCiAgLSBncm91cDogY29uZmlnLm9wZW5zaGlmdC5pbwogICAga2luZDogTmV0d29yawogICAgbmFtZTogY2x1c3RlcgogICAgbmFtZXNwYWNlOiAiIgogICAgdW5tYW5hZ2VkOiB0cnVlCiAgLSBncm91cDogY29uZmlnLm9wZW5zaGlmdC5pbwogICAga2luZDogUHJveHkKICAgIG5hbWU6IGNsdXN0ZXIKICAgIG5hbWVzcGFjZTogIiIKICAgIHVubWFuYWdlZDogdHJ1ZQogIC0gZ3JvdXA6IGNvbmZpZy5vcGVuc2hpZnQuaW8KICAgIGtpbmQ6IFNjaGVkdWxlcgogICAgbmFtZTogY2x1c3RlcgogICAgbmFtZXNwYWNlOiAiIgogICAgdW5tYW5hZ2VkOiB0cnVlCiAgLSBncm91cDogIiIKICAgIGtpbmQ6IFNlY3JldAogICAgbmFtZToga3ViZS1jbG91ZC1jZmcKICAgIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICAgIHVubWFuYWdlZDogdHJ1ZQogIC0gZ3JvdXA6ICIiCiAgICBraW5kOiBDb25maWdNYXAKICAgIG5hbWU6IHJvb3QtY2EKICAgIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICAgIHVubWFuYWdlZDogdHJ1ZQogIC0gZ3JvdXA6ICIiCiAgICBraW5kOiBTZWNyZXQKICAgIG5hbWU6IG1hY2hpbmUtY29uZmlnLXNlcnZlci10bHMKICAgIG5hbWVzcGFjZTogb3BlbnNoaWZ0LW1hY2hpbmUtY29uZmlnLW9wZXJhdG9yCiAgICB1bm1hbmFnZWQ6IHRydWUKICAtIGdyb3VwOiAiIgogICAga2luZDogU2VjcmV0CiAgICBuYW1lOiBwdWxsLXNlY3JldAogICAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY29uZmlnCiAgICB1bm1hbmFnZWQ6IHRydWUKICAtIGdyb3VwOiAiIgogICAga2luZDogU2VjcmV0CiAgICBuYW1lOiBhd3MtY3JlZHMKICAgIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICAgIHVubWFuYWdlZDogdHJ1ZQogIC0gZ3JvdXA6ICIiCiAgICBraW5kOiBTZWNyZXQKICAgIG5hbWU6IGt1YmVhZG1pbgogICAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQogICAgdW5tYW5hZ2VkOiB0cnVlCiAgLSBncm91cDogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pbwogICAga2luZDogUm9sZQogICAgbmFtZTogYXdzLWNyZWRzLXNlY3JldC1yZWFkZXIKICAgIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICAgIHVubWFuYWdlZDogdHJ1ZQogIC0gZ3JvdXA6ICIiCiAgICBraW5kOiBDb25maWdNYXAKICAgIG5hbWU6IG9wZW5zaGlmdC1pbnN0YWxsLW1hbmlmZXN0cwogICAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY29uZmlnCiAgICB1bm1hbmFnZWQ6IHRydWUK",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/manifests/kube-cloud-config.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtY2xvdWQtY2ZnCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQp0eXBlOiBPcGFxdWUKZGF0YToKICBjb25maWc6ICIiCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/manifests/kube-system-configmap-root-ca.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IHJvb3QtY2EKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCmRhdGE6CiAgY2EuY3J0OiB8CiAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgIE1JSURFRENDQWZpZ0F3SUJBZ0lJWVBCSFFjbGdzR1l3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKICAgIEN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5YjI5MExXTmhNQjRYRFRJek1Ea3lOVEl4TXpRek5Wb1gKICAgIERUTXpNRGt5TWpJeE16UXpOVm93SmpFU01CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHkKICAgIGIyOTBMV05oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3Wm9jZkVobUd2SXgKICAgIE0xTmZCVWpGRGVhSDdCZEN6YkpxakNxeHNZQkJwTkh1MjM4ZXI4c0d2R3QvUGo4bU1Cc2lKZlZmYXJTMzR3VysKICAgIFFTVUs0ZWtSUVk1RVBjT2RTOWhmMTYzMzFiM29DL0psdTl2c25xd013MjYwMDNWYXhnc3V2eE1JOW1naERUdFcKICAgIHJYYndSejkvWWFxa0xYdUhFd0lJMVlzWVJlNXMxSEF6aitrcTRGbmRzOERKYktPcFJMS2d4L2x1cmZOdnNSVHoKICAgIC9ZYzA3NXZuUmJ4bUVwallHUVlwNHkwSFFGZk5XMHJ3RUc2NkpZY1pMYWVFMll3Z1hWdDBHZFR5MTBnZytlclcKICAgIExHeEUxYVBHdDJ1cmMyS0RVWHhOV0VxM1BlUE5JeU5NZXN2VjhiSXFPYjAva01sdlc0YW8wWjlsZjlJYisxWUgKICAgIE41Vkg4cXBVNHdJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKICAgIC96QWRCZ05WSFE0RUZnUVVlM0szKzJ1YkhsMVIwZTE4VXBUOHB1MTdKL1F3RFFZSktvWklodmNOQVFFTEJRQUQKICAgIGdnRUJBTGNneGpXWDRtZGM1YlFndDN6NTZ2clA0eW5ab3RFTy92Z09ieG16U25NQzBUTXB0NkdkWW1Dc3ZsT3YKICAgIFVEdXBkY1VmeUZDZ1Y0ZlBXQnBUYTNpaEVaYnhKVktjRFk1NEoxZmNjUkQxNDE5ZGFKQVVBRkpXY1ZiQTdQUjIKICAgIFVIL1ZFTjR5Ny9YMWplQm1CMVBlcDlwSGVDTm9XbVRnYkoxb3FaQnFoM1pHak9kZWt5V1A0K1piMUZzSXFicXoKICAgIEZuMEZSbDlZMFB0WjVXem82c0FsZDdhRTdDeVMrMTlBVjNPOTJFVG5ic3ltY1VIN0IxOE5LMGRSd3loeEpJMzMKICAgIHhDSmxZanczUEZvMU9WSWU0Q1pYSjFmLzFFNld4QVk1cElETERNRk5XREJldDB6bFc1azlwdkZSdEZVSnA5N04KICAgIFZQak5RMXN6WkdpSGxyMkYwTW5Qdm5BTy9DRT0KICAgIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KICAgIAo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/manifests/machine-config-server-tls-secret.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IG1hY2hpbmUtY29uZmlnLXNlcnZlci10bHMKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1tYWNoaW5lLWNvbmZpZy1vcGVyYXRvcgp0eXBlOiBPcGFxdWUKZGF0YToKICB0bHMuY3J0OiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSaGVrTkRRV3hQWjBGM1NVSkJaMGxKUVhsWmR6RXpXbFZhZURSM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEtha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFTUVhkRVoxbEVWbEZSUkVWM1pIbGlNamt3VEZkT2FFMUNORmhFVkVsNlRVUnJlVTVVU1hoTmVsRjZUbFp2V0FwRVZFMTZUVVJyZVUxcVNYaE5lbEY2VGxadmQwcDZSV3hOUTAxSFFURlZSVUY0VFdOak0yeDZaRWRXZEU5dE1XaFpNbWh3WW0xVmRGa3lPWFZhYld4dUNreFlUbXhqYmxwc1kycERRMEZUU1hkRVVWbEtTMjlhU1doMlkwNUJVVVZDUWxGQlJHZG5SVkJCUkVORFFWRnZRMmRuUlVKQlRVZ3djamQ2TkU1VFJEUUtWalZ1VGtSb1VHeGxkMkppZHlzNU1VRndaaTltY0VOUWVXWlhjRVZxVTJ4Q05EaHRabU00V1ZVeFVXbFRORXM0WVd0d1NHWXlRMjE2TTNaYWVrVjZjQXB5VVZnMmNIVTVaV0pSU2xkcE1rWXhaWEU1Vkc0M2EwbEdSMXB3UjA0MlZtSjFVRWxSZFUweGFFY3pOVTVETjJsR1RtMW1OVGR4YkVkUGIwOXNTMmhOQ21oTmIwRnlSMUZIVW5OU2IzaFpXalpZSzIxYWJrMXlNalpuUzNsdU5HbHpSMkZvVlhGcFkwUm5hMkpSZVc1RVMxbzJhRkZXTUVoTlRpOWlMelF5U3pJS1Eyd3dXRzlSYmtzclRqaGlla05JT1VORlN6bERRV1kwTW5sUldFRm5lbkJKTDJKeWMyZG1NMDlOTVZsTFFUWnpZbWN5WVVGYVRIVm9SVmhOVkhZNGJRcFVXVzlrYVVkNVoxSlRhM3BqZEd4MVQyODJOalJUZUhSV1prdHJXRmdyYUUwNGJrdEVXWFpLWmk5aGVXdERURWdyYkZGSVVreDRiR0pJT1ROcE9IQjRDamcyZFVoNU1WSTJPWEE0UTBGM1JVRkJZVTlDYlhwRFFtMUVRVlJDWjA1V1NGTlZSVVJFUVV0Q1oyZHlRbWRGUmtKUlkwUkJWRUZOUW1kT1ZraFNUVUlLUVdZNFJVRnFRVUZOUWpCSFFURlZaRVJuVVZkQ1FsTlJjRW93T1RJMGFtNWxWVzVOT1hWVVRWRktXalE1Ymt0TFYwUkJaa0puVGxaSVUwMUZSMFJCVndwblFsSTNZM0ptTjJFMWMyVllWa2hTTjFoNFUyeFFlVzAzV0hOdU9VUkJla0puVGxaSVVrVkZURVJCY1dkcGFHaGpSMnQwWVZjMU1FeHRWbXRhYVRGckNscFhNWFpNYms1b1ltMVNhV0l6WjNoUFJHZDNURzA1ZDFwWE5UQmlSMDExV1RJNWRFMUJNRWREVTNGSFUwbGlNMFJSUlVKRGQxVkJRVFJKUWtGUlFrNEtVMVJwUVZGUmRYaExjRFZzZDJsVE5WTnVaRTVRZFZwSVZEbHlhRlpVZFdWSGJuQnRVRFV6UVU1V1dVaG1UVkIzVm5keU1FWkdORWR6VHpVeFlqaFVWZ3BuUWxjelYxRk1WMGwyZEVSVU5VOUpiblpDVlhCTmRYTTVhbU5VTlhnNFpVaDVObVppTjB4RE1raGpPVFJrV1V3clNHRldUR3MzZVV0U2RFNXJSR2xZQ2pObE5UTkpMMFpwYmpZMGMzWkxiVGhyUTFjNFZUQkxaeTgzTVd4NlltOWpTazVxVkdwYVkwRmthMmRNWmxKVmFVTk5iVXRMT1VweFQwMHlWak5KUmt3S1VqZ3pObVp6YTNBMFJYWlBVVEpXVkdzM1FUSnBNV0ZqVDNwTmFEUm1WWE16UzFwaUwyZG9PRTFxVGpsakwwVkVWRUZRVlZwT2RURTBNemR4Tm5wc1RBcGlkamxQWmk5UFZYcExXbWROTlhKblZHVjVTbTlqY0ZOdVdqRkVhbHBuVFdWdWJ6SklPRU5rU3pOM01YZFRjSEE0V0RsaVprOXZPRmRDZEd0SFVqbFhDbTQyYWtaUldFZ3dlVFpvVTA1cGMxQXhNMmh3Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgdGxzLmtleTogTFMwdExTMUNSVWRKVGlCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRcE5TVWxGY0VGSlFrRkJTME5CVVVWQmQyWlRkblpRWnpGSlVHaFliV013VDBVclZqZENkSFpFTnpOVlEyd3ZPU3RyU1M5S09XRnJVMDVMVlVocWVWbzVDbnA0YUZSV1EwcE1aM0o0Y1ZOclpDOVpTMkpRWlRsdVRWUlBiWFJDWm5GdE56RTFkRUZzWVV4WldGWTJjakZQWm5WUloxVmFiV3RaTTNCV2RUUTRhRU1LTkhwWFJXSm1hekJNZFVsVk1sb3ZiblZ4VlZrMlp6WlZjVVY1UlhsblEzTmFRVnBIZUVkcVJtaHVjR1kyV20xamVYWmljVUZ5UzJacFMzZGFjVVpUY1FwS2QwOURVblJFUzJOTmNHNXhSa0pZVVdOM016bDJMMnBaY2xsTFdGSmxhRU5qY2pRemVIWk5TV1l3U1ZGeU1FbENMMnBpU2tKalEwUlBhMm81ZFhWNUNrSXZZelI2Vm1kdlJIRjRkVVJhYjBKcmRUWkZVbU40VHk5NVdrNXBhREpKWWt0Q1JrdFVUbmt5VnpRMmFuSnlhRXhITVZZNGNWSmtaalpGZW5samIwNEthVGhzTHpseVMxRkpjMlkyVmtGa1JYWkhWbk5tTTJWTWVXNUllbkUwWmt4V1NISXlibmRKUkVGUlFVSkJiMGxDUVVGWGIyeGtaakZvWkdSSldqUllaQXBNWVZBeU9XWm1iRkZZYjJrNU9HaHVZemxJVkRSQ2FVTnlhakZMT0RCWFFqUm1ia0YzS3pKWlkyOTFSalEzVURORloyaElNVnBZVUdKT05YaHJkRXQ0Q2pGV2VqSmlSV1U1VEhGUVVsRmFjMHd6V1ZWUllqQm1kRzFSVVd4YUt6ZE9WVTlhUVVWWVZVUTJSRzVXTjNKWVMzSkpRVTVuVVZOVVIwWk5kM0ZGT0dNS1dtVnpiRWszZEc1TmVIZFNVbVZ6VTNsRWFFUnhLMEZaVW1ZNEszVlRRa0Y2VlhWRmRTdDZkRkJNVWtkaWNWbHZOQzlpWlhneldtazNZMlpxTW1sdGR3cFVNbEJxUlUxNlZqbE1PWGROTVhwd1JGWmpRMjE1UjNaMVNUQkJaa1YyWlhsNFZuTmxkbUZpZGtRM05WSXJXbUowYVdsdVJVZHJNSGRWU0doMFdVMXZDbTB3VERBMllXRlhiMUJaVEU1T1VHMTFRWFYxUmk5a2JsWm1ORTk0TDFsRU1HMU9NVGQ1VFdaRE1EVkZUR3AzTHpaSE5GaGtaVVpRVG1WV01EY3dZVFVLUVdKMFdFVmpSVU5uV1VWQk0wd3dRbGRZWlhOYVVWRndNMWhSZDNSd09GcElRblJYVERsWE5tTmFhbTFuYmt0TGRVZzBUa0ZhUmtVemJ6Tk9LMU4yWXdvNVFsYzJWM3BtVmpRelUwcHpjWFZGYlhabWIzTkJSR05vTTJwVk1XdzJTVGRxVUM4dk4zQjZTekJxUmtNMVMwSXhVbXh4VlhsRlNFcEtja3cyYmpObkNtRm9LMnBhTlZWM01IZHlNVlpQZDFSMldXbzNlakVyU3pSQ2MxbDNUVUZMTWt0bE9GZ3lWM3BSWVdnMFUxZDVVVmRGYUZoUloxVkRaMWxGUVRSUVFuTUtValJ0VlZCcU5ESlFValV3TkdKR2VESTViMHhLUm5aakwwdG9ha1Z0ZGxSa1Zqa3ZUbTlQVVVKWU5GcFJkVkIzTm1sdWVrODVNM2x2UzFGRlQxRk5OUXBMSzNWNVdGbHZMMUYzYWtsMk1UQjBXa1JGSzNSalpURXZNMjR2TTJKT1QzbHRiWFZZWWpsTlppOWFVR00wYUZsV1NGQmtlVEZ3VlRBMlVUZHhjemxJQ2pkeFNtSjZWalpuTnpWWk1uQTVha3BqT1dsNFJuRk9RM2xuYzJGUVNVSkZaMjlvU1djeFRVTm5XVVZCZW5Fek9YWkljVTFLVlRGbWMyRlhaMFYxTkcwS2QyRldjVGR2UlU1QlJqUnpkbk5zYlhvNVdHVmpZa0pIVEhGbVVubDBUbWxJTDNwVlREWkxOVVo1Tmk4eU1WbDZXa1JLY0ZsYWNEZzBhU3R0UVZVMGF3cHZabmcwV0RCaFFtNVhObGRoVURVeGNVVlZVM2NyUlhnMFptczJiekJZV0ZGVFdqaG9ibXQyWWxCMFpYVklVVkJETjBabFRGVTBSa293TjFoMk1uQlJDaTlaYTFsdVN6UktlVXBzYjJaNk9IbGlRMkpZTlUwd1EyZFpSVUZvSzI1a2EzcEJXRU5pUkhaa2RXbHFUMUZtVG5jd2FYaGxUWFZyT0VkclUxTTNkM0FLVEdZclFYb3dRMXBWYVdoTFVGUmxZbWgyU0VsRVdVWnFURUowVDJwbFFtSjFRMVZZVW1oMlZtTTNlVzlDTjBSWFZETmlUamRIY0Rac2NEVjRjM1JUTkFwSksyWk9UM051ZGtGR1lXc3hVM054VEVGV1EyMDJLeXRHTkRsb2JXbHFZWHAwTnpsV01EYzFUVk55ZWxwWFNFRXZObGROUVhsRGMzQTBXV295VkVOeUNuUkxLME5IVVRoRFoxbENSekF3ZWtWMWVtSTJiM2xOVTNneWMyVTVLMnhRYzNkaU1VcHhhRGs1U1Vkak1IcHhVMWRPVTFCSk1YUkhWbEp3VDFJelRGVUtXUzlEVmxkUmJWZEtXalV6VG5salZGYzJkMDlVTUVwRlVqSkJNRlpCWkVkalVEVkpibkUxYVhORlkyRnlaVklyUzJ0TmJsZGxSRE0yWTBWQk0xUk1hd3BhT0dRNE5Hd3lLMDVoTVZOa09FVllSakpqVERjeFF6VXJkR3BTUkRacFFsSTJSWFpuVGxKelJreHBNMEZvWjI5VVVITkNjWGM5UFFvdExTMHRMVVZPUkNCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRbz0K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/manifests/openshift-config-secret-pull-secret.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0CnR5cGU6IGt1YmVybmV0ZXMuaW8vZG9ja2VyY29uZmlnanNvbgptZXRhZGF0YToKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jb25maWcKICBuYW1lOiBwdWxsLXNlY3JldApkYXRhOgogIC5kb2NrZXJjb25maWdqc29uOiBleUpoZFhSb2N5STZleUpqYkc5MVpDNXZjR1Z1YzJocFpuUXVZMjl0SWpwN0ltRjFkR2dpT2lKaU0wSnNZbTVPYjJGWFdqQk1XRXBzWWtkV2FHTXlWWFJhUjFZeVN6STVhbUpXT1doWk1rNXNZek5PWmxwVVFYZE5ha1pzV21wYWFVOUhXWGxPUjAwMVQxZEpNazlVUlRKT1JHeHFUMWRGZDFwcVp6Uk5SR2MyVlRCR1ZGVkZlRkpOUkU1TVZVVm9VbGRWVVRWVFZGcFZUVEJqTUZaR1ZsaFRla1Y0VlRBNE5FNVdhRlZYUkVreVYxUnNVbFF4Y0ZkUmExRjRVVEJLUzFkVlRUVlZSRUpUVjJzMVVVOUdSa3hYYkUxNlZWRTlQU0lzSW1WdFlXbHNJam9pWm1WMlpXNUFjbVZrYUdGMExtTnZiU0o5TENKeVpXZHBjM1J5ZVM1b1kzQXViblZ0YzNCdmRDNWpiRzkxWkRvNE5EUXpJam9nZXlKaGRYUm9Jam9nSW1OWVZtaGxWSEJhWVRGR1QwMXVZek5MYlZwM1QxZHZlVXN5UlRVaUxDSmxiV0ZwYkNJNklDSmtiV0Z5ZEdsdWFVQnlaV1JvWVhRdVkyOXRJbjBzSW5GMVlYa3VhVzhpT25zaVlYVjBhQ0k2SW1JelFteGliazV2WVZkYU1FeFlTbXhpUjFab1l6SlZkRnBIVmpKTE1qbHFZbFk1YUZreVRteGpNMDVtV2xSQmQwMXFSbXhhYWxwcFQwZFplVTVIVFRWUFYwa3lUMVJGTWs1RWJHcFBWMFYzV21wbk5FMUVaelpWTUVaVVZVVjRVazFFVGt4VlJXaFNWMVZSTlZOVVdsVk5NR013VmtaV1dGTjZSWGhWTURnMFRsWm9WVmRFU1RKWFZHeFNWREZ3VjFGclVYaFJNRXBMVjFWTk5WVkVRbE5YYXpWUlQwWkdURmRzVFhwVlVUMDlJaXdpWlcxaGFXd2lPaUptWlhabGJrQnlaV1JvWVhRdVkyOXRJbjBzSW5KbFoybHpkSEo1TG1OdmJtNWxZM1F1Y21Wa2FHRjBMbU52YlNJNmV5SmhkWFJvSWpvaVpraFdiMWw1TVhkaU1qbHpURmRSTUZsdFdtdE5ha0pwVEZSU2FWbHFSWFJPUjBrd1QxTXdOVTB5V210TVZHaHBUVzFLYUU0eVdUUmFWRVUxVG1wd2JHVlZjRzlaYTJScVlWVTVjRk5zVGxabGJGWTBWRmRzUzA5VE5XeGxWWEEyV2taa1NtRlZPWEJUYlhoT1VqRndjMWRXWkZkaFJURnhWMVJHVUZKSGMzZFVWV1JYWWxVNVdGWllaRTlTUjJRMVZHNXdRbVZWTUhsVGJYUk9Wa1ZGTVZSV1RrdFBVelZXVVd4c1VreFdiRVphVlZVeVVraHdkRXhXWkRCYVJHeFhVbnBrY2sxcldsWmFhbVJVWTFaU2MxWXpUbXRpVjFaUFpGUmFlVkpXVVhSUmFtUkNVVlk1VUZWSVpIUk9NVUp1V20weGMwMXJVa3RoUjBrellrWnNXbFJZYUU5aVIxbzFXakIwYVdWdGJIbE5ibWhTWVhwRmQyTnFRVFJUVlhoNlZVUmtkbGRZVms1UmJVWjJaVlpKZVZwWGVFNVNSa28xVm5wYVYyTkhOVlZsUmtaelZFVXhOazVETVRWa2JWcFFUbGhOTVdFeFNrWmphMFV5Vkc1a1psTnVXbXRTVXpGSFdqSXhWVlZYTURCbFZFSnBUVEJvUTA5V1JrcFhXRXBGVWtkb1QxZFdWa05rVm1oM1lWWkZOVTF1VWpaTVYzaE5UVlJOTWxaSE9YTmtlbFpSV20xak5HUkhUa05UZWs1bVVXNUtjbVF6Vms1U2JXOTZWMjVOZDFnd1duTllNazR4WVcweFUxVXdWWHBaTTJNeFpXNXZNVkV6UmxOVWEyeEtWbFpuTTJOV2JIUmhNRGcwVGtoS1JtSkVhRTVpU0ZweVYxaFNNMW94Y0hWWFIzTjRWMGRzYWxwdE9YVlZNMlJ3VDFob1JWVXhXa3hqYlZJeVVUSnNkMWd6Y0ZwT1ZrSlJaVVpCTlZkSGR6QlNWVlpLV2xkMFZsSnFRVFJrVlRFMVRsWkdabUZ0ZEZCWmJuQnJVMGhvTlZwV1JrWmxhekV4WTJ4YWVrOVZiRTFOVm1Sc1ZtNXNUMXB0Vm1oVVdGSlNUMWQwY2xadGNETlZla3BMVkRKYWJFOUdPVFpOYTJ4V1pHcFZNbVF4VVRCbFZteFVZa1JXWVdOVmVFMWhiV1JzWW14YVJFMUZNSFJUVldSb1ZHcEZNRmRHU2s1VE1HeExZbnBPVFZaV1JrSmlibkJSVFZkdmQxSXhhRkpaVnpWM1l6QmtUbU5wTVVoVFZrNVdXVE5LZG1GSVdrOVhWM1J2VlVSa1dWcHFWalJZTW14RVkwaE9jMDFzVW1oU1ZrbDNWMWhrU0ZkSVpGTlNSVnA1WWpOd00wNVhVVFZsUlZZd1VsVTVObHBZVGxoaVJWbDBVbFZXTmxSdFNrNWFNRFZJVlZaU2VFOVZOV3hrV0djeVVYcEtkMkpIYkUxVmF6RlJWRmRLZEZadVNrNWlSekI0VlcxTmQxSnNaREpUVlRGTVZXeE5OVkZWYjNkV1JsWnpXVmhhVEdWdGFGcFRNSEF3VFZaTk0wOUlRbkphUlhSclVWWmtVbE15YnpSU2VrSmhaRlprTW1SWVpIVk1WMVUwVVRCR1ptTkZhSGhWUnpWcVRVTXhhV05XWXpOVU1sWXlWMVprVGsxRVZsSmxWVlp1VkZaR1lWRllSa2xXUjA1MlZURndObU5JYTNsWk1WSnhVbXhrVVdKSFJuVk5SV3Q1WW1zMVRtRklTWHBWVld4SFdtdEtObFF3YkVOUk1YQkpZMjVDTUdWc1JUVmFhM2hRWTBaV1RsWXdiRmRQVjJoRFpFaGtiVkV3U21aaGJYUXlURlp3YVZkdFJsSlVWRVY2VGxaU1IxUkVWalJpZHowOUlpd2laVzFoYVd3aU9pSm1aWFpsYmtCeVpXUm9ZWFF1WTI5dEluMHNJbkpsWjJsemRISjVMbkpsWkdoaGRDNXBieUk2ZXlKaGRYUm9Jam9pWmtoV2IxbDVNWGRpTWpselRGZFJNRmx0V210TmFrSnBURlJTYVZscVJYUk9SMGt3VDFNd05VMHlXbXRNVkdocFRXMUthRTR5V1RSYVZFVTFUbXB3YkdWVmNHOVphMlJxWVZVNWNGTnNUbFpsYkZZMFZGZHNTMDlUTld4bFZYQTJXa1prU21GVk9YQlRiWGhPVWpGd2MxZFdaRmRoUlRGeFYxUkdVRkpIYzNkVVZXUlhZbFU1V0ZaWVpFOVNSMlExVkc1d1FtVlZNSGxUYlhST1ZrVkZNVlJXVGt0UFV6VldVV3hzVWt4V2JFWmFWVlV5VWtod2RFeFdaREJhUkd4WFVucGtjazFyV2xaYWFtUlVZMVpTYzFZelRtdGlWMVpQWkZSYWVWSldVWFJSYW1SQ1VWWTVVRlZJWkhST01VSnVXbTB4YzAxclVrdGhSMGt6WWtac1dsUllhRTlpUjFvMVdqQjBhV1Z0YkhsTmJtaFNZWHBGZDJOcVFUUlRWWGg2VlVSa2RsZFlWazVSYlVaMlpWWkplVnBYZUU1U1JrbzFWbnBhVjJOSE5WVmxSa1p6VkVVeE5rNURNVFZrYlZwUVRsaE5NV0V4U2taamEwVXlWRzVrWmxOdVdtdFNVekZIV2pJeFZWVlhNREJsVkVKcFRUQm9RMDlXUmtwWFdFcEZVa2RvVDFkV1ZrTmtWbWgzWVZaRk5VMXVValpNVjNoTlRWUk5NbFpIT1hOa2VsWlJXbTFqTkdSSFRrTlRlazVtVVc1S2NtUXpWazVTYlc5NlYyNU5kMWd3V25OWU1rNHhZVzB4VTFVd1ZYcFpNMk14Wlc1dk1WRXpSbE5VYTJ4S1ZsWm5NMk5XYkhSaE1EZzBUa2hLUm1KRWFFNWlTRnB5VjFoU00xb3hjSFZYUjNONFYwZHNhbHB0T1hWVk0yUndUMWhvUlZVeFdreGpiVkl5VVRKc2QxZ3pjRnBPVmtKUlpVWkJOVmRIZHpCU1ZWWktXbGQwVmxKcVFUUmtWVEUxVGxaR1ptRnRkRkJaYm5CclUwaG9OVnBXUmtabGF6RXhZMnhhZWs5VmJFMU5WbVJzVm01c1QxcHRWbWhVV0ZKU1QxZDBjbFp0Y0ROVmVrcExWREphYkU5R09UWk5hMnhXWkdwVk1tUXhVVEJsVm14VVlrUldZV05WZUUxaGJXUnNZbXhhUkUxRk1IUlRWV1JvVkdwRk1GZEdTazVUTUd4TFlucE9UVlpXUmtKaWJuQlJUVmR2ZDFJeGFGSlpWelYzWXpCa1RtTnBNVWhUVms1V1dUTktkbUZJV2s5WFYzUnZWVVJrV1ZwcVZqUllNbXhFWTBoT2MwMXNVbWhTVmtsM1YxaGtTRmRJWkZOU1JWcDVZak53TTA1WFVUVmxSVll3VWxVNU5scFlUbGhpUlZsMFVsVldObFJ0U2s1YU1EVklWVlpTZUU5Vk5XeGtXR2N5VVhwS2QySkhiRTFWYXpGUlZGZEtkRlp1U2s1aVJ6QjRWVzFOZDFKc1pESlRWVEZNVld4Tk5WRlZiM2RXUmxaeldWaGFUR1Z0YUZwVE1IQXdUVlpOTTA5SVFuSmFSWFJyVVZaa1VsTXlielJTZWtKaFpGWmtNbVJZWkhWTVYxVTBVVEJHWm1ORmFIaFZSelZxVFVNeGFXTldZek5VTWxZeVYxWmtUazFFVmxKbFZWWnVWRlpHWVZGWVJrbFdSMDUyVlRGd05tTklhM2xaTVZKeFVteGtVV0pIUm5WTlJXdDVZbXMxVG1GSVNYcFZWV3hIV210S05sUXdiRU5STVhCSlkyNUNNR1ZzUlRWYWEzaFFZMFpXVGxZd2JGZFBWMmhEWkVoa2JWRXdTbVpoYlhReVRGWndhVmR0UmxKVVZFVjZUbFpTUjFSRVZqUmlkejA5SWl3aVpXMWhhV3dpT2lKbVpYWmxia0J5WldSb1lYUXVZMjl0SW4xOWZRPT0K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/openshift/99_cloud-creds-secret.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,a2luZDogU2VjcmV0CmFwaVZlcnNpb246IHYxCm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBuYW1lOiBhd3MtY3JlZHMKZGF0YToKICBhd3NfYWNjZXNzX2tleV9pZDogUVV0SlFWbFRNMFpTUmpWUU1qUTFTa1pCVmxvPQogIGF3c19zZWNyZXRfYWNjZXNzX2tleTogZEdweVRtNTJjR3hCUXl0RlFtTnRSRGhJZW5FeFRGQlNkVWx4UTNwWlQwazNhWEJNYkU5QlVRPT0K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/openshift/99_kubeadmin-password-secret.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,a2luZDogU2VjcmV0CmFwaVZlcnNpb246IHYxCm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBuYW1lOiBrdWJlYWRtaW4KZGF0YToKICBrdWJlYWRtaW46IEpESmhKREV3Skc1SVJ5OW9Wblo2U0ZSM2MxbFBjMGd6VW1aQk9HVnJZbkJTTG1odWVtcFFNemRpTG1OUlVsbDVWRk5hYW13NWJXVnhkREZMCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/openshift/99_role-cloud-creds-secret-reader.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,a2luZDogUm9sZQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBuYW1lOiBhd3MtY3JlZHMtc2VjcmV0LXJlYWRlcgpydWxlczoKLSBhcGlHcm91cHM6IFsiIl0KICByZXNvdXJjZXM6IFsic2VjcmV0cyJdCiAgcmVzb3VyY2VOYW1lczogWyJhd3MtY3JlZHMiXQogIHZlcmJzOiBbImdldCJdCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/openshift/openshift-install-manifests.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKZGF0YToKICBpbnZva2VyOiB1c2VyCiAgdmVyc2lvbjogdjQuMTMuMApraW5kOiBDb25maWdNYXAKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBuYW1lOiBvcGVuc2hpZnQtaW5zdGFsbC1tYW5pZmVzdHMKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jb25maWcK",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/openshift/99_openshift-cluster-api_master-user-data-secret.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IG1hc3Rlci11c2VyLWRhdGEKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1tYWNoaW5lLWFwaQp0eXBlOiBPcGFxdWUKZGF0YToKICBkaXNhYmxlVGVtcGxhdGluZzogImRISjFaUW89IgogIHVzZXJEYXRhOiBleUpwWjI1cGRHbHZiaUk2ZXlKamIyNW1hV2NpT25zaWJXVnlaMlVpT2x0N0luTnZkWEpqWlNJNkltaDBkSEJ6T2k4dllYQnBMV2x1ZEM1bFpHWXRaR1Z0Ynk1ellXNWtZbTk0TVRnNE1DNXZjR1Z1ZEd4akxtTnZiVG95TWpZeU15OWpiMjVtYVdjdmJXRnpkR1Z5SW4xZGZTd2ljMlZqZFhKcGRIa2lPbnNpZEd4eklqcDdJbU5sY25ScFptbGpZWFJsUVhWMGFHOXlhWFJwWlhNaU9sdDdJbk52ZFhKalpTSTZJbVJoZEdFNmRHVjRkQzl3YkdGcGJqdGphR0Z5YzJWMFBYVjBaaTA0TzJKaGMyVTJOQ3hNVXpCMFRGTXhRMUpWWkVwVWFVSkVVbFpLVlZOVldrcFJNRVpWVWxNd2RFeFRNSFJEYXpGS1UxVlNSbEpGVGtSUlYxcHdXakJHTTFOVlNrSmFNR3hLVjFaQ1ExTkdSbXBpUjJSNlVqRnNNMUpHUmxwVGEzUjJWMnRzYjJSdFRrOVJWa1pHVkVWS1VsRllaRXRoYTFaVVZGVktRbEl3UlhoV1ZWVkxVVE5vVGxOdFNYcFJiWGhwWW1zMWRsbFdaR0ZOUlRGVFVWaGtSVm94YkVWV2JFWlNVa1ZXTTFwSWJHbE5hbXQzVkVaa1QyRkZNVU5PUm1oRlZrVnNObFJWVW5KbFZUVlZVMWhvVG1Wc1JqWlViRnAyVjBGd1JWWkZNVFpVVlZKeVpWVXhjVk5ZYUU1bGJFWTJWR3hhZG1Rd2NIRlNWazVPVVd0R1NGRlVSbFpTVlU0MFZGVndhVTB3U25OWmJUVlBZakpHV0ZkcVFrNVZhMFl6VWtka1dsSkdXbEpWVlZKR1pESlNOVU50U1hsUFZFSk5WakExYjFSVmJFcFJhMnh4VVZVMVExb3lkSGhoUjNSd1VucHNNMDFGU2tKVlZWWkhVVlZHVUZFd1JsSlBSVVpPVTFWc1ExRXlaRXhSTUVaU1VsVkdNMWR0T1dwYWExWnZZbFZrTWxOWVowdFVWRVpQV210S1ZtRnJXa1ZhVjBaSlRqQkthMUV6Y0dsVGJrWnhVVE5HTkdNeGJFTlJia0pQVTBoVmVVMTZhR3hqYW1oNlVqTmFTR1JET1ZGaGFtaDBWRlZLZW1GVmNHMVdiVnBvWTJ4TmVrNUlaRmhMZDNCU1ZURldURTVIVm5KVmJFWmFUbFZXVVZrd09XdFZlbXh2V21wRk1rMTZUWGhaYWs1MlVYazVTMkpJVlRWa2JrNTFZMWhrVG1SNlNUSk5SRUY2Vm0xR05Gb3pUakZrYm1oT1UxUnNkRm95YUVWV1NGSllRMjVLV1ZsdVpGTmxhbXQyVjFkR2VHRXdlRmxrVldoR1pEQnNTazFXYkhwWFZrcHNUbGhOZUZORlJqWmhhWFJ5WTFSU1IySnRVbnBQUlZKTFdXdDBVR05HU2sxVE1tUTBUREo0TVdOdFdrOWtiazVUVmtodlMwd3hiR3BOUkdNeFpHMDFVMWx1YUhSU1dFSnhWMVZrVWxkWVFUQmxWRUpKVlZWYWJWUnNZM2RqYm1SR1VucFpNbE5zYkdwWGEzaG9XbFZWZVZkWVpHNVhSbG93VFVWa2ExWklhM2hOUjJSdVN6SldlVlozY0UxU00yaEdUVmRHVVZJelVYbGtXRXBxVFd0MFJWWldhRFJVYkdSR1kxUk9VVnBXUWs5VFdHeFBWRmRXZW1Sc1dUUlphMng0VkRKSmQwd3lkRTVpU0ZwWVRrZEdkazFHYnpWaVIxazFVMWRKY2sxV2JFbERhelF4Vm10bk5HTllRbFpPU0dSS1VrVkdVbEZWU25aTlJXd3pWVlZTUWxRd1NtNVViRnBKVlZSb1ExRlhXVFJTVlVwQ1ZGVk9RbU5XUmpOU1NHUmFVa1phVTAxR1VrSlZWV2QyVVd0R1ZtUXdSak5TVlVsTFRETndRbHBGU201VWJGcEpWVlJTUmxKdFpGSldWMVY2VTNwTmNrMXVWbWxUUjNkNFZXcENiRTFVYUZaalJsRTBZMGhWZUU0d2IzWlZXR1JGVlZac1MxTXlPV0ZUVjJneVdUQTFRbFZWVmsxUmJFWkNVa0Z3Ymxvd1ZrTlJWWGhxV2pOb2NWWXhaekJpVjFKcVRsZEtVbG96VVhwbGFsVXlaRzVLVVU1SWJIVlhiVGt3VWxVNGRtUnRaRkJaYm1oMFpXeE9kVlJWVFhkV1JURjNaRVJhU0ZwR2JIUlJNMDR5WWtVNU1rTnNWa1ZrV0VKcldURldiV1ZWV2tSYU1Wa3dXbXhDV0ZGdVFsVlpWRTV3WVVWV1lWbHVhRXRXYTNScVVrWnJNVTVGYjNoYWJVNXFWV3RSZUU1RVJUVmFSMFpMVVZaV1FsSnJjRmhaTVZwcFVWUmtVVlZxU1V0V1ZXZDJWbXRXVDA1SWF6Tk1NV2Q0WVcxV1EySlZTWGhWUjFaM1QxaENTVnBWVGs5aU1XUjBWa2RrYVZOcVJuWmpWbkJEWTFkbmVsZHJaSEZVTWxKc1lUTnNXRlZFVVhKWGJVbDRVbTVPU21OWFNuaGxaM0JIWW1wQ1IxVnRkelZYVkVKUlpFWnZNVll6Y0haT2JrNUNZa2RSTTFsVlZUTlJNMnhVUzNwRk5WRldXWHBVZW10NVVsWlNkVmx1VGpWaVYwNVdVMFJrUTAxVWFFOVRla0pyVlc1a05XRklhRXRUVkUxNlEyNW9SRk50ZUZwaGJtTjZWVVZhZGsxVk9WZFRWMVV3VVRGd1dWTnFSbTFNZWtaR1RteGtORkZXYXpGalJXeEZWRVZTVGxKck5WaFNSVXBzWkVSQ05tSkdZekZoZW14M1pHdGFVMlJGV2xaVGJrRTFUakEwUzFac1FuRlViRVY0WXpOd1lWSXliRWxpU0VsNVVtcENUbUpzUWpKaWEwWlFUREJPUmxCUmIzUk1VekIwVEZWV1QxSkRRa1JTVmtwVlUxVmFTbEV3UmxWU1V6QjBURk13ZEVOblBUMGlmVjE5ZlN3aWRtVnljMmx2YmlJNklqTXVNaTR3SW4xOQo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/openshift/99_openshift-machineconfig_99-master-ssh.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogbWFjaGluZWNvbmZpZ3VyYXRpb24ub3BlbnNoaWZ0LmlvL3YxCmtpbmQ6IE1hY2hpbmVDb25maWcKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBsYWJlbHM6CiAgICBtYWNoaW5lY29uZmlndXJhdGlvbi5vcGVuc2hpZnQuaW8vcm9sZTogbWFzdGVyCiAgbmFtZTogOTktbWFzdGVyLXNzaApzcGVjOgogIGNvbmZpZzoKICAgIGlnbml0aW9uOgogICAgICB2ZXJzaW9uOiAzLjIuMAogICAgcGFzc3dkOgogICAgICB1c2VyczoKICAgICAgLSBuYW1lOiBjb3JlCiAgICAgICAgc3NoQXV0aG9yaXplZEtleXM6CiAgICAgICAgLSB8CiAgICAgICAgICBzc2gtcnNhIEFBQUFCM056YUMxeWMyRUFBQUFEQVFBQkFBQUJnUUNUTWwxTERxVkNhbzJHd3ZudlZwMXZrQzBxdXNuMXdKZ3NQSFR0TzVwVDNhZTlCNkpvRXVHUDA5aXN2QllsdXlKVEMvL0NaVlEwYUhqdDN0ZVYzQkVGR2RaVFlNaXQyMlRLR3pYcGZxYXVyR3l4TXlWVXRxcDRlRlFkRE5BemJSdmxIZ2VSM3VGNDJOTno3eFQ5dG05Vmp6elVKS3BmL09SNWQvVXRnNlJ3bkZEVC9QSkxmYStubTFkN1FIY0VQaUplSDYxSDZFL29kS09RT0YrNEdaaVVWVVFIRHRPUUVVY1Z1VkVDeGdhMkpOeHpRczB6UkFHUk1UelFBcjR4TWVENmM2ckRyRU9EN0VPS2tuUE5RUDlkZ29DYVZqNWR2L3ltaitzWjJjNHhaNDhFaHpmUXA4OUMzUDBCdW5jeTBDNHYrSERiT2VkQkRxL0JTbVp1UkhKbzdZbVlHNDZJSi9IeW1IRzNLV2tneXF3ZDdjZ0Q5NUUvMmsxU2IvZlNxZ21naWw2a2EzNHYyQjgzM3AxUFpGMC84RThYWmtEQlhqK0ZOZW5CY3Q0THlmZERxdGczSnh4V3FZQkxxMUYxMngxMmlUUUJTUnRJR3FheVBOVUJNdkJUci83V3VvSTNINXZ2ZHFrNTh6OHIyajNET2JpcHZya3g1ck5yNzdBK1U0Yz0gZmV2ZW5AbG9jYWxob3N0LmxvY2FsZG9tYWluCiAgZXh0ZW5zaW9uczogbnVsbAogIGZpcHM6IGZhbHNlCiAga2VybmVsQXJndW1lbnRzOiBudWxsCiAga2VybmVsVHlwZTogIiIKICBvc0ltYWdlVVJMOiAiIgo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/openshift/99_openshift-cluster-api_master-machines-0.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogZWRmLWRlbW8tOGdwNnoKICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtcm9sZTogbWFzdGVyCiAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXR5cGU6IG1hc3RlcgogIG5hbWU6IGVkZi1kZW1vLThncDZ6LW1hc3Rlci0wCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtbWFjaGluZS1hcGkKc3BlYzoKICBsaWZlY3ljbGVIb29rczoge30KICBtZXRhZGF0YToge30KICBwcm92aWRlclNwZWM6CiAgICB2YWx1ZToKICAgICAgYW1pOgogICAgICAgIGlkOiBhbWktMGVkM2YyNzNiMmU3NGY4MTQKICAgICAgYXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQogICAgICBibG9ja0RldmljZXM6CiAgICAgIC0gZWJzOgogICAgICAgICAgZW5jcnlwdGVkOiB0cnVlCiAgICAgICAgICBpb3BzOiAwCiAgICAgICAgICBrbXNLZXk6CiAgICAgICAgICAgIGFybjogIiIKICAgICAgICAgIHZvbHVtZVNpemU6IDEyMAogICAgICAgICAgdm9sdW1lVHlwZTogZ3AzCiAgICAgIGNyZWRlbnRpYWxzU2VjcmV0OgogICAgICAgIG5hbWU6IGF3cy1jbG91ZC1jcmVkZW50aWFscwogICAgICBkZXZpY2VJbmRleDogMAogICAgICBpYW1JbnN0YW5jZVByb2ZpbGU6CiAgICAgICAgaWQ6IGVkZi1kZW1vLThncDZ6LW1hc3Rlci1wcm9maWxlCiAgICAgIGluc3RhbmNlVHlwZTogbTZpLnhsYXJnZQogICAgICBraW5kOiBBV1NNYWNoaW5lUHJvdmlkZXJDb25maWcKICAgICAgbG9hZEJhbGFuY2VyczoKICAgICAgLSBuYW1lOiBlZGYtZGVtby04Z3A2ei1pbnQKICAgICAgICB0eXBlOiBuZXR3b3JrCiAgICAgIC0gbmFtZTogZWRmLWRlbW8tOGdwNnotZXh0CiAgICAgICAgdHlwZTogbmV0d29yawogICAgICBtZXRhZGF0YToKICAgICAgICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogICAgICBtZXRhZGF0YVNlcnZpY2VPcHRpb25zOiB7fQogICAgICBwbGFjZW1lbnQ6CiAgICAgICAgYXZhaWxhYmlsaXR5Wm9uZTogdXMtZWFzdC0yYQogICAgICAgIHJlZ2lvbjogdXMtZWFzdC0yCiAgICAgIHNlY3VyaXR5R3JvdXBzOgogICAgICAtIGZpbHRlcnM6CiAgICAgICAgLSBuYW1lOiB0YWc6TmFtZQogICAgICAgICAgdmFsdWVzOgogICAgICAgICAgLSBlZGYtZGVtby04Z3A2ei1tYXN0ZXItc2cKICAgICAgc3VibmV0OgogICAgICAgIGZpbHRlcnM6CiAgICAgICAgLSBuYW1lOiB0YWc6TmFtZQogICAgICAgICAgdmFsdWVzOgogICAgICAgICAgLSBlZGYtZGVtby04Z3A2ei1wcml2YXRlLXVzLWVhc3QtMmEKICAgICAgdGFnczoKICAgICAgLSBuYW1lOiBrdWJlcm5ldGVzLmlvL2NsdXN0ZXIvZWRmLWRlbW8tOGdwNnoKICAgICAgICB2YWx1ZTogb3duZWQKICAgICAgdXNlckRhdGFTZWNyZXQ6CiAgICAgICAgbmFtZTogbWFzdGVyLXVzZXItZGF0YQpzdGF0dXM6IHt9Cg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/openshift/99_openshift-cluster-api_master-machines-1.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogZWRmLWRlbW8tOGdwNnoKICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtcm9sZTogbWFzdGVyCiAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXR5cGU6IG1hc3RlcgogIG5hbWU6IGVkZi1kZW1vLThncDZ6LW1hc3Rlci0xCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtbWFjaGluZS1hcGkKc3BlYzoKICBsaWZlY3ljbGVIb29rczoge30KICBtZXRhZGF0YToge30KICBwcm92aWRlclNwZWM6CiAgICB2YWx1ZToKICAgICAgYW1pOgogICAgICAgIGlkOiBhbWktMGVkM2YyNzNiMmU3NGY4MTQKICAgICAgYXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQogICAgICBibG9ja0RldmljZXM6CiAgICAgIC0gZWJzOgogICAgICAgICAgZW5jcnlwdGVkOiB0cnVlCiAgICAgICAgICBpb3BzOiAwCiAgICAgICAgICBrbXNLZXk6CiAgICAgICAgICAgIGFybjogIiIKICAgICAgICAgIHZvbHVtZVNpemU6IDEyMAogICAgICAgICAgdm9sdW1lVHlwZTogZ3AzCiAgICAgIGNyZWRlbnRpYWxzU2VjcmV0OgogICAgICAgIG5hbWU6IGF3cy1jbG91ZC1jcmVkZW50aWFscwogICAgICBkZXZpY2VJbmRleDogMAogICAgICBpYW1JbnN0YW5jZVByb2ZpbGU6CiAgICAgICAgaWQ6IGVkZi1kZW1vLThncDZ6LW1hc3Rlci1wcm9maWxlCiAgICAgIGluc3RhbmNlVHlwZTogbTZpLnhsYXJnZQogICAgICBraW5kOiBBV1NNYWNoaW5lUHJvdmlkZXJDb25maWcKICAgICAgbG9hZEJhbGFuY2VyczoKICAgICAgLSBuYW1lOiBlZGYtZGVtby04Z3A2ei1pbnQKICAgICAgICB0eXBlOiBuZXR3b3JrCiAgICAgIC0gbmFtZTogZWRmLWRlbW8tOGdwNnotZXh0CiAgICAgICAgdHlwZTogbmV0d29yawogICAgICBtZXRhZGF0YToKICAgICAgICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogICAgICBtZXRhZGF0YVNlcnZpY2VPcHRpb25zOiB7fQogICAgICBwbGFjZW1lbnQ6CiAgICAgICAgYXZhaWxhYmlsaXR5Wm9uZTogdXMtZWFzdC0yYgogICAgICAgIHJlZ2lvbjogdXMtZWFzdC0yCiAgICAgIHNlY3VyaXR5R3JvdXBzOgogICAgICAtIGZpbHRlcnM6CiAgICAgICAgLSBuYW1lOiB0YWc6TmFtZQogICAgICAgICAgdmFsdWVzOgogICAgICAgICAgLSBlZGYtZGVtby04Z3A2ei1tYXN0ZXItc2cKICAgICAgc3VibmV0OgogICAgICAgIGZpbHRlcnM6CiAgICAgICAgLSBuYW1lOiB0YWc6TmFtZQogICAgICAgICAgdmFsdWVzOgogICAgICAgICAgLSBlZGYtZGVtby04Z3A2ei1wcml2YXRlLXVzLWVhc3QtMmIKICAgICAgdGFnczoKICAgICAgLSBuYW1lOiBrdWJlcm5ldGVzLmlvL2NsdXN0ZXIvZWRmLWRlbW8tOGdwNnoKICAgICAgICB2YWx1ZTogb3duZWQKICAgICAgdXNlckRhdGFTZWNyZXQ6CiAgICAgICAgbmFtZTogbWFzdGVyLXVzZXItZGF0YQpzdGF0dXM6IHt9Cg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/openshift/99_openshift-cluster-api_master-machines-2.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogZWRmLWRlbW8tOGdwNnoKICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtcm9sZTogbWFzdGVyCiAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXR5cGU6IG1hc3RlcgogIG5hbWU6IGVkZi1kZW1vLThncDZ6LW1hc3Rlci0yCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtbWFjaGluZS1hcGkKc3BlYzoKICBsaWZlY3ljbGVIb29rczoge30KICBtZXRhZGF0YToge30KICBwcm92aWRlclNwZWM6CiAgICB2YWx1ZToKICAgICAgYW1pOgogICAgICAgIGlkOiBhbWktMGVkM2YyNzNiMmU3NGY4MTQKICAgICAgYXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQogICAgICBibG9ja0RldmljZXM6CiAgICAgIC0gZWJzOgogICAgICAgICAgZW5jcnlwdGVkOiB0cnVlCiAgICAgICAgICBpb3BzOiAwCiAgICAgICAgICBrbXNLZXk6CiAgICAgICAgICAgIGFybjogIiIKICAgICAgICAgIHZvbHVtZVNpemU6IDEyMAogICAgICAgICAgdm9sdW1lVHlwZTogZ3AzCiAgICAgIGNyZWRlbnRpYWxzU2VjcmV0OgogICAgICAgIG5hbWU6IGF3cy1jbG91ZC1jcmVkZW50aWFscwogICAgICBkZXZpY2VJbmRleDogMAogICAgICBpYW1JbnN0YW5jZVByb2ZpbGU6CiAgICAgICAgaWQ6IGVkZi1kZW1vLThncDZ6LW1hc3Rlci1wcm9maWxlCiAgICAgIGluc3RhbmNlVHlwZTogbTZpLnhsYXJnZQogICAgICBraW5kOiBBV1NNYWNoaW5lUHJvdmlkZXJDb25maWcKICAgICAgbG9hZEJhbGFuY2VyczoKICAgICAgLSBuYW1lOiBlZGYtZGVtby04Z3A2ei1pbnQKICAgICAgICB0eXBlOiBuZXR3b3JrCiAgICAgIC0gbmFtZTogZWRmLWRlbW8tOGdwNnotZXh0CiAgICAgICAgdHlwZTogbmV0d29yawogICAgICBtZXRhZGF0YToKICAgICAgICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogICAgICBtZXRhZGF0YVNlcnZpY2VPcHRpb25zOiB7fQogICAgICBwbGFjZW1lbnQ6CiAgICAgICAgYXZhaWxhYmlsaXR5Wm9uZTogdXMtZWFzdC0yYwogICAgICAgIHJlZ2lvbjogdXMtZWFzdC0yCiAgICAgIHNlY3VyaXR5R3JvdXBzOgogICAgICAtIGZpbHRlcnM6CiAgICAgICAgLSBuYW1lOiB0YWc6TmFtZQogICAgICAgICAgdmFsdWVzOgogICAgICAgICAgLSBlZGYtZGVtby04Z3A2ei1tYXN0ZXItc2cKICAgICAgc3VibmV0OgogICAgICAgIGZpbHRlcnM6CiAgICAgICAgLSBuYW1lOiB0YWc6TmFtZQogICAgICAgICAgdmFsdWVzOgogICAgICAgICAgLSBlZGYtZGVtby04Z3A2ei1wcml2YXRlLXVzLWVhc3QtMmMKICAgICAgdGFnczoKICAgICAgLSBuYW1lOiBrdWJlcm5ldGVzLmlvL2NsdXN0ZXIvZWRmLWRlbW8tOGdwNnoKICAgICAgICB2YWx1ZTogb3duZWQKICAgICAgdXNlckRhdGFTZWNyZXQ6CiAgICAgICAgbmFtZTogbWFzdGVyLXVzZXItZGF0YQpzdGF0dXM6IHt9Cg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/openshift/99_openshift-machine-api_master-control-plane-machine-set.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjEKa2luZDogQ29udHJvbFBsYW5lTWFjaGluZVNldAptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIGxhYmVsczoKICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLWNsdXN0ZXI6IGVkZi1kZW1vLThncDZ6CiAgbmFtZTogY2x1c3RlcgogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LW1hY2hpbmUtYXBpCnNwZWM6CiAgcmVwbGljYXM6IDMKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiBlZGYtZGVtby04Z3A2egogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXJvbGU6IG1hc3RlcgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXR5cGU6IG1hc3RlcgogIHN0YXRlOiBBY3RpdmUKICBzdHJhdGVneToge30KICB0ZW1wbGF0ZToKICAgIG1hY2hpbmVUeXBlOiBtYWNoaW5lc192MWJldGExX21hY2hpbmVfb3BlbnNoaWZ0X2lvCiAgICBtYWNoaW5lc192MWJldGExX21hY2hpbmVfb3BlbnNoaWZ0X2lvOgogICAgICBmYWlsdXJlRG9tYWluczoKICAgICAgICBhd3M6CiAgICAgICAgLSBwbGFjZW1lbnQ6CiAgICAgICAgICAgIGF2YWlsYWJpbGl0eVpvbmU6IHVzLWVhc3QtMmEKICAgICAgICAgIHN1Ym5ldDoKICAgICAgICAgICAgZmlsdGVyczoKICAgICAgICAgICAgLSBuYW1lOiB0YWc6TmFtZQogICAgICAgICAgICAgIHZhbHVlczoKICAgICAgICAgICAgICAtIGVkZi1kZW1vLThncDZ6LXByaXZhdGUtdXMtZWFzdC0yYQogICAgICAgICAgICB0eXBlOiBGaWx0ZXJzCiAgICAgICAgLSBwbGFjZW1lbnQ6CiAgICAgICAgICAgIGF2YWlsYWJpbGl0eVpvbmU6IHVzLWVhc3QtMmIKICAgICAgICAgIHN1Ym5ldDoKICAgICAgICAgICAgZmlsdGVyczoKICAgICAgICAgICAgLSBuYW1lOiB0YWc6TmFtZQogICAgICAgICAgICAgIHZhbHVlczoKICAgICAgICAgICAgICAtIGVkZi1kZW1vLThncDZ6LXByaXZhdGUtdXMtZWFzdC0yYgogICAgICAgICAgICB0eXBlOiBGaWx0ZXJzCiAgICAgICAgLSBwbGFjZW1lbnQ6CiAgICAgICAgICAgIGF2YWlsYWJpbGl0eVpvbmU6IHVzLWVhc3QtMmMKICAgICAgICAgIHN1Ym5ldDoKICAgICAgICAgICAgZmlsdGVyczoKICAgICAgICAgICAgLSBuYW1lOiB0YWc6TmFtZQogICAgICAgICAgICAgIHZhbHVlczoKICAgICAgICAgICAgICAtIGVkZi1kZW1vLThncDZ6LXByaXZhdGUtdXMtZWFzdC0yYwogICAgICAgICAgICB0eXBlOiBGaWx0ZXJzCiAgICAgICAgcGxhdGZvcm06IEFXUwogICAgICBtZXRhZGF0YToKICAgICAgICBsYWJlbHM6CiAgICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiBlZGYtZGVtby04Z3A2egogICAgICAgICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktbWFjaGluZS1yb2xlOiBtYXN0ZXIKICAgICAgICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtdHlwZTogbWFzdGVyCiAgICAgIHNwZWM6CiAgICAgICAgbGlmZWN5Y2xlSG9va3M6IHt9CiAgICAgICAgbWV0YWRhdGE6IHt9CiAgICAgICAgcHJvdmlkZXJTcGVjOgogICAgICAgICAgdmFsdWU6CiAgICAgICAgICAgIGFtaToKICAgICAgICAgICAgICBpZDogYW1pLTBlZDNmMjczYjJlNzRmODE0CiAgICAgICAgICAgIGFwaVZlcnNpb246IG1hY2hpbmUub3BlbnNoaWZ0LmlvL3YxYmV0YTEKICAgICAgICAgICAgYmxvY2tEZXZpY2VzOgogICAgICAgICAgICAtIGViczoKICAgICAgICAgICAgICAgIGVuY3J5cHRlZDogdHJ1ZQogICAgICAgICAgICAgICAgaW9wczogMAogICAgICAgICAgICAgICAga21zS2V5OgogICAgICAgICAgICAgICAgICBhcm46ICIiCiAgICAgICAgICAgICAgICB2b2x1bWVTaXplOiAxMjAKICAgICAgICAgICAgICAgIHZvbHVtZVR5cGU6IGdwMwogICAgICAgICAgICBjcmVkZW50aWFsc1NlY3JldDoKICAgICAgICAgICAgICBuYW1lOiBhd3MtY2xvdWQtY3JlZGVudGlhbHMKICAgICAgICAgICAgZGV2aWNlSW5kZXg6IDAKICAgICAgICAgICAgaWFtSW5zdGFuY2VQcm9maWxlOgogICAgICAgICAgICAgIGlkOiBlZGYtZGVtby04Z3A2ei1tYXN0ZXItcHJvZmlsZQogICAgICAgICAgICBpbnN0YW5jZVR5cGU6IG02aS54bGFyZ2UKICAgICAgICAgICAga2luZDogQVdTTWFjaGluZVByb3ZpZGVyQ29uZmlnCiAgICAgICAgICAgIGxvYWRCYWxhbmNlcnM6CiAgICAgICAgICAgIC0gbmFtZTogZWRmLWRlbW8tOGdwNnotaW50CiAgICAgICAgICAgICAgdHlwZTogbmV0d29yawogICAgICAgICAgICAtIG5hbWU6IGVkZi1kZW1vLThncDZ6LWV4dAogICAgICAgICAgICAgIHR5cGU6IG5ldHdvcmsKICAgICAgICAgICAgbWV0YWRhdGE6CiAgICAgICAgICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgICAgICAgbWV0YWRhdGFTZXJ2aWNlT3B0aW9uczoge30KICAgICAgICAgICAgcGxhY2VtZW50OgogICAgICAgICAgICAgIHJlZ2lvbjogdXMtZWFzdC0yCiAgICAgICAgICAgIHNlY3VyaXR5R3JvdXBzOgogICAgICAgICAgICAtIGZpbHRlcnM6CiAgICAgICAgICAgICAgLSBuYW1lOiB0YWc6TmFtZQogICAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgICAgLSBlZGYtZGVtby04Z3A2ei1tYXN0ZXItc2cKICAgICAgICAgICAgc3VibmV0OiB7fQogICAgICAgICAgICB0YWdzOgogICAgICAgICAgICAtIG5hbWU6IGt1YmVybmV0ZXMuaW8vY2x1c3Rlci9lZGYtZGVtby04Z3A2egogICAgICAgICAgICAgIHZhbHVlOiBvd25lZAogICAgICAgICAgICB1c2VyRGF0YVNlY3JldDoKICAgICAgICAgICAgICBuYW1lOiBtYXN0ZXItdXNlci1kYXRhCnN0YXR1czoge30K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/openshift/99_openshift-cluster-api_worker-user-data-secret.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IHdvcmtlci11c2VyLWRhdGEKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1tYWNoaW5lLWFwaQp0eXBlOiBPcGFxdWUKZGF0YToKICBkaXNhYmxlVGVtcGxhdGluZzogImRISjFaUW89IgogIHVzZXJEYXRhOiBleUpwWjI1cGRHbHZiaUk2ZXlKamIyNW1hV2NpT25zaWJXVnlaMlVpT2x0N0luTnZkWEpqWlNJNkltaDBkSEJ6T2k4dllYQnBMV2x1ZEM1bFpHWXRaR1Z0Ynk1ellXNWtZbTk0TVRnNE1DNXZjR1Z1ZEd4akxtTnZiVG95TWpZeU15OWpiMjVtYVdjdmQyOXlhMlZ5SW4xZGZTd2ljMlZqZFhKcGRIa2lPbnNpZEd4eklqcDdJbU5sY25ScFptbGpZWFJsUVhWMGFHOXlhWFJwWlhNaU9sdDdJbk52ZFhKalpTSTZJbVJoZEdFNmRHVjRkQzl3YkdGcGJqdGphR0Z5YzJWMFBYVjBaaTA0TzJKaGMyVTJOQ3hNVXpCMFRGTXhRMUpWWkVwVWFVSkVVbFpLVlZOVldrcFJNRVpWVWxNd2RFeFRNSFJEYXpGS1UxVlNSbEpGVGtSUlYxcHdXakJHTTFOVlNrSmFNR3hLVjFaQ1ExTkdSbXBpUjJSNlVqRnNNMUpHUmxwVGEzUjJWMnRzYjJSdFRrOVJWa1pHVkVWS1VsRllaRXRoYTFaVVZGVktRbEl3UlhoV1ZWVkxVVE5vVGxOdFNYcFJiWGhwWW1zMWRsbFdaR0ZOUlRGVFVWaGtSVm94YkVWV2JFWlNVa1ZXTTFwSWJHbE5hbXQzVkVaa1QyRkZNVU5PUm1oRlZrVnNObFJWVW5KbFZUVlZVMWhvVG1Wc1JqWlViRnAyVjBGd1JWWkZNVFpVVlZKeVpWVXhjVk5ZYUU1bGJFWTJWR3hhZG1Rd2NIRlNWazVPVVd0R1NGRlVSbFpTVlU0MFZGVndhVTB3U25OWmJUVlBZakpHV0ZkcVFrNVZhMFl6VWtka1dsSkdXbEpWVlZKR1pESlNOVU50U1hsUFZFSk5WakExYjFSVmJFcFJhMnh4VVZVMVExb3lkSGhoUjNSd1VucHNNMDFGU2tKVlZWWkhVVlZHVUZFd1JsSlBSVVpPVTFWc1ExRXlaRXhSTUVaU1VsVkdNMWR0T1dwYWExWnZZbFZrTWxOWVowdFVWRVpQV210S1ZtRnJXa1ZhVjBaSlRqQkthMUV6Y0dsVGJrWnhVVE5HTkdNeGJFTlJia0pQVTBoVmVVMTZhR3hqYW1oNlVqTmFTR1JET1ZGaGFtaDBWRlZLZW1GVmNHMVdiVnBvWTJ4TmVrNUlaRmhMZDNCU1ZURldURTVIVm5KVmJFWmFUbFZXVVZrd09XdFZlbXh2V21wRk1rMTZUWGhaYWs1MlVYazVTMkpJVlRWa2JrNTFZMWhrVG1SNlNUSk5SRUY2Vm0xR05Gb3pUakZrYm1oT1UxUnNkRm95YUVWV1NGSllRMjVLV1ZsdVpGTmxhbXQyVjFkR2VHRXdlRmxrVldoR1pEQnNTazFXYkhwWFZrcHNUbGhOZUZORlJqWmhhWFJ5WTFSU1IySnRVbnBQUlZKTFdXdDBVR05HU2sxVE1tUTBUREo0TVdOdFdrOWtiazVUVmtodlMwd3hiR3BOUkdNeFpHMDFVMWx1YUhSU1dFSnhWMVZrVWxkWVFUQmxWRUpKVlZWYWJWUnNZM2RqYm1SR1VucFpNbE5zYkdwWGEzaG9XbFZWZVZkWVpHNVhSbG93VFVWa2ExWklhM2hOUjJSdVN6SldlVlozY0UxU00yaEdUVmRHVVZJelVYbGtXRXBxVFd0MFJWWldhRFJVYkdSR1kxUk9VVnBXUWs5VFdHeFBWRmRXZW1Sc1dUUlphMng0VkRKSmQwd3lkRTVpU0ZwWVRrZEdkazFHYnpWaVIxazFVMWRKY2sxV2JFbERhelF4Vm10bk5HTllRbFpPU0dSS1VrVkdVbEZWU25aTlJXd3pWVlZTUWxRd1NtNVViRnBKVlZSb1ExRlhXVFJTVlVwQ1ZGVk9RbU5XUmpOU1NHUmFVa1phVTAxR1VrSlZWV2QyVVd0R1ZtUXdSak5TVlVsTFRETndRbHBGU201VWJGcEpWVlJTUmxKdFpGSldWMVY2VTNwTmNrMXVWbWxUUjNkNFZXcENiRTFVYUZaalJsRTBZMGhWZUU0d2IzWlZXR1JGVlZac1MxTXlPV0ZUVjJneVdUQTFRbFZWVmsxUmJFWkNVa0Z3Ymxvd1ZrTlJWWGhxV2pOb2NWWXhaekJpVjFKcVRsZEtVbG96VVhwbGFsVXlaRzVLVVU1SWJIVlhiVGt3VWxVNGRtUnRaRkJaYm1oMFpXeE9kVlJWVFhkV1JURjNaRVJhU0ZwR2JIUlJNMDR5WWtVNU1rTnNWa1ZrV0VKcldURldiV1ZWV2tSYU1Wa3dXbXhDV0ZGdVFsVlpWRTV3WVVWV1lWbHVhRXRXYTNScVVrWnJNVTVGYjNoYWJVNXFWV3RSZUU1RVJUVmFSMFpMVVZaV1FsSnJjRmhaTVZwcFVWUmtVVlZxU1V0V1ZXZDJWbXRXVDA1SWF6Tk1NV2Q0WVcxV1EySlZTWGhWUjFaM1QxaENTVnBWVGs5aU1XUjBWa2RrYVZOcVJuWmpWbkJEWTFkbmVsZHJaSEZVTWxKc1lUTnNXRlZFVVhKWGJVbDRVbTVPU21OWFNuaGxaM0JIWW1wQ1IxVnRkelZYVkVKUlpFWnZNVll6Y0haT2JrNUNZa2RSTTFsVlZUTlJNMnhVUzNwRk5WRldXWHBVZW10NVVsWlNkVmx1VGpWaVYwNVdVMFJrUTAxVWFFOVRla0pyVlc1a05XRklhRXRUVkUxNlEyNW9SRk50ZUZwaGJtTjZWVVZhZGsxVk9WZFRWMVV3VVRGd1dWTnFSbTFNZWtaR1RteGtORkZXYXpGalJXeEZWRVZTVGxKck5WaFNSVXBzWkVSQ05tSkdZekZoZW14M1pHdGFVMlJGV2xaVGJrRTFUakEwUzFac1FuRlViRVY0WXpOd1lWSXliRWxpU0VsNVVtcENUbUpzUWpKaWEwWlFUREJPUmxCUmIzUk1VekIwVEZWV1QxSkRRa1JTVmtwVlUxVmFTbEV3UmxWU1V6QjBURk13ZEVOblBUMGlmVjE5ZlN3aWRtVnljMmx2YmlJNklqTXVNaTR3SW4xOQo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/openshift/99_openshift-machineconfig_99-worker-ssh.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogbWFjaGluZWNvbmZpZ3VyYXRpb24ub3BlbnNoaWZ0LmlvL3YxCmtpbmQ6IE1hY2hpbmVDb25maWcKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBsYWJlbHM6CiAgICBtYWNoaW5lY29uZmlndXJhdGlvbi5vcGVuc2hpZnQuaW8vcm9sZTogd29ya2VyCiAgbmFtZTogOTktd29ya2VyLXNzaApzcGVjOgogIGNvbmZpZzoKICAgIGlnbml0aW9uOgogICAgICB2ZXJzaW9uOiAzLjIuMAogICAgcGFzc3dkOgogICAgICB1c2VyczoKICAgICAgLSBuYW1lOiBjb3JlCiAgICAgICAgc3NoQXV0aG9yaXplZEtleXM6CiAgICAgICAgLSB8CiAgICAgICAgICBzc2gtcnNhIEFBQUFCM056YUMxeWMyRUFBQUFEQVFBQkFBQUJnUUNUTWwxTERxVkNhbzJHd3ZudlZwMXZrQzBxdXNuMXdKZ3NQSFR0TzVwVDNhZTlCNkpvRXVHUDA5aXN2QllsdXlKVEMvL0NaVlEwYUhqdDN0ZVYzQkVGR2RaVFlNaXQyMlRLR3pYcGZxYXVyR3l4TXlWVXRxcDRlRlFkRE5BemJSdmxIZ2VSM3VGNDJOTno3eFQ5dG05Vmp6elVKS3BmL09SNWQvVXRnNlJ3bkZEVC9QSkxmYStubTFkN1FIY0VQaUplSDYxSDZFL29kS09RT0YrNEdaaVVWVVFIRHRPUUVVY1Z1VkVDeGdhMkpOeHpRczB6UkFHUk1UelFBcjR4TWVENmM2ckRyRU9EN0VPS2tuUE5RUDlkZ29DYVZqNWR2L3ltaitzWjJjNHhaNDhFaHpmUXA4OUMzUDBCdW5jeTBDNHYrSERiT2VkQkRxL0JTbVp1UkhKbzdZbVlHNDZJSi9IeW1IRzNLV2tneXF3ZDdjZ0Q5NUUvMmsxU2IvZlNxZ21naWw2a2EzNHYyQjgzM3AxUFpGMC84RThYWmtEQlhqK0ZOZW5CY3Q0THlmZERxdGczSnh4V3FZQkxxMUYxMngxMmlUUUJTUnRJR3FheVBOVUJNdkJUci83V3VvSTNINXZ2ZHFrNTh6OHIyajNET2JpcHZya3g1ck5yNzdBK1U0Yz0gZmV2ZW5AbG9jYWxob3N0LmxvY2FsZG9tYWluCiAgZXh0ZW5zaW9uczogbnVsbAogIGZpcHM6IGZhbHNlCiAga2VybmVsQXJndW1lbnRzOiBudWxsCiAga2VybmVsVHlwZTogIiIKICBvc0ltYWdlVVJMOiAiIgo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/openshift/99_openshift-cluster-api_worker-machineset-0.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lU2V0Cm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogZWRmLWRlbW8tOGdwNnoKICBuYW1lOiBlZGYtZGVtby04Z3A2ei13b3JrZXItdXMtZWFzdC0yYQogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LW1hY2hpbmUtYXBpCnNwZWM6CiAgcmVwbGljYXM6IDEKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiBlZGYtZGVtby04Z3A2egogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiBlZGYtZGVtby04Z3A2ei13b3JrZXItdXMtZWFzdC0yYQogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGxhYmVsczoKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiBlZGYtZGVtby04Z3A2egogICAgICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtcm9sZTogd29ya2VyCiAgICAgICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktbWFjaGluZS10eXBlOiB3b3JrZXIKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiBlZGYtZGVtby04Z3A2ei13b3JrZXItdXMtZWFzdC0yYQogICAgc3BlYzoKICAgICAgbGlmZWN5Y2xlSG9va3M6IHt9CiAgICAgIG1ldGFkYXRhOiB7fQogICAgICBwcm92aWRlclNwZWM6CiAgICAgICAgdmFsdWU6CiAgICAgICAgICBhbWk6CiAgICAgICAgICAgIGlkOiBhbWktMGVkM2YyNzNiMmU3NGY4MTQKICAgICAgICAgIGFwaVZlcnNpb246IG1hY2hpbmUub3BlbnNoaWZ0LmlvL3YxYmV0YTEKICAgICAgICAgIGJsb2NrRGV2aWNlczoKICAgICAgICAgIC0gZWJzOgogICAgICAgICAgICAgIGVuY3J5cHRlZDogdHJ1ZQogICAgICAgICAgICAgIGlvcHM6IDAKICAgICAgICAgICAgICBrbXNLZXk6CiAgICAgICAgICAgICAgICBhcm46ICIiCiAgICAgICAgICAgICAgdm9sdW1lU2l6ZTogMTIwCiAgICAgICAgICAgICAgdm9sdW1lVHlwZTogZ3AzCiAgICAgICAgICBjcmVkZW50aWFsc1NlY3JldDoKICAgICAgICAgICAgbmFtZTogYXdzLWNsb3VkLWNyZWRlbnRpYWxzCiAgICAgICAgICBkZXZpY2VJbmRleDogMAogICAgICAgICAgaWFtSW5zdGFuY2VQcm9maWxlOgogICAgICAgICAgICBpZDogZWRmLWRlbW8tOGdwNnotd29ya2VyLXByb2ZpbGUKICAgICAgICAgIGluc3RhbmNlVHlwZTogbTZpLnhsYXJnZQogICAgICAgICAga2luZDogQVdTTWFjaGluZVByb3ZpZGVyQ29uZmlnCiAgICAgICAgICBtZXRhZGF0YToKICAgICAgICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgICAgIG1ldGFkYXRhU2VydmljZU9wdGlvbnM6IHt9CiAgICAgICAgICBwbGFjZW1lbnQ6CiAgICAgICAgICAgIGF2YWlsYWJpbGl0eVpvbmU6IHVzLWVhc3QtMmEKICAgICAgICAgICAgcmVnaW9uOiB1cy1lYXN0LTIKICAgICAgICAgIHNlY3VyaXR5R3JvdXBzOgogICAgICAgICAgLSBmaWx0ZXJzOgogICAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgIC0gZWRmLWRlbW8tOGdwNnotd29ya2VyLXNnCiAgICAgICAgICBzdWJuZXQ6CiAgICAgICAgICAgIGZpbHRlcnM6CiAgICAgICAgICAgIC0gbmFtZTogdGFnOk5hbWUKICAgICAgICAgICAgICB2YWx1ZXM6CiAgICAgICAgICAgICAgLSBlZGYtZGVtby04Z3A2ei1wcml2YXRlLXVzLWVhc3QtMmEKICAgICAgICAgIHRhZ3M6CiAgICAgICAgICAtIG5hbWU6IGt1YmVybmV0ZXMuaW8vY2x1c3Rlci9lZGYtZGVtby04Z3A2egogICAgICAgICAgICB2YWx1ZTogb3duZWQKICAgICAgICAgIHVzZXJEYXRhU2VjcmV0OgogICAgICAgICAgICBuYW1lOiB3b3JrZXItdXNlci1kYXRhCnN0YXR1czoKICByZXBsaWNhczogMAo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/openshift/99_openshift-cluster-api_worker-machineset-1.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lU2V0Cm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogZWRmLWRlbW8tOGdwNnoKICBuYW1lOiBlZGYtZGVtby04Z3A2ei13b3JrZXItdXMtZWFzdC0yYgogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LW1hY2hpbmUtYXBpCnNwZWM6CiAgcmVwbGljYXM6IDEKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiBlZGYtZGVtby04Z3A2egogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiBlZGYtZGVtby04Z3A2ei13b3JrZXItdXMtZWFzdC0yYgogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGxhYmVsczoKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiBlZGYtZGVtby04Z3A2egogICAgICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtcm9sZTogd29ya2VyCiAgICAgICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktbWFjaGluZS10eXBlOiB3b3JrZXIKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiBlZGYtZGVtby04Z3A2ei13b3JrZXItdXMtZWFzdC0yYgogICAgc3BlYzoKICAgICAgbGlmZWN5Y2xlSG9va3M6IHt9CiAgICAgIG1ldGFkYXRhOiB7fQogICAgICBwcm92aWRlclNwZWM6CiAgICAgICAgdmFsdWU6CiAgICAgICAgICBhbWk6CiAgICAgICAgICAgIGlkOiBhbWktMGVkM2YyNzNiMmU3NGY4MTQKICAgICAgICAgIGFwaVZlcnNpb246IG1hY2hpbmUub3BlbnNoaWZ0LmlvL3YxYmV0YTEKICAgICAgICAgIGJsb2NrRGV2aWNlczoKICAgICAgICAgIC0gZWJzOgogICAgICAgICAgICAgIGVuY3J5cHRlZDogdHJ1ZQogICAgICAgICAgICAgIGlvcHM6IDAKICAgICAgICAgICAgICBrbXNLZXk6CiAgICAgICAgICAgICAgICBhcm46ICIiCiAgICAgICAgICAgICAgdm9sdW1lU2l6ZTogMTIwCiAgICAgICAgICAgICAgdm9sdW1lVHlwZTogZ3AzCiAgICAgICAgICBjcmVkZW50aWFsc1NlY3JldDoKICAgICAgICAgICAgbmFtZTogYXdzLWNsb3VkLWNyZWRlbnRpYWxzCiAgICAgICAgICBkZXZpY2VJbmRleDogMAogICAgICAgICAgaWFtSW5zdGFuY2VQcm9maWxlOgogICAgICAgICAgICBpZDogZWRmLWRlbW8tOGdwNnotd29ya2VyLXByb2ZpbGUKICAgICAgICAgIGluc3RhbmNlVHlwZTogbTZpLnhsYXJnZQogICAgICAgICAga2luZDogQVdTTWFjaGluZVByb3ZpZGVyQ29uZmlnCiAgICAgICAgICBtZXRhZGF0YToKICAgICAgICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgICAgIG1ldGFkYXRhU2VydmljZU9wdGlvbnM6IHt9CiAgICAgICAgICBwbGFjZW1lbnQ6CiAgICAgICAgICAgIGF2YWlsYWJpbGl0eVpvbmU6IHVzLWVhc3QtMmIKICAgICAgICAgICAgcmVnaW9uOiB1cy1lYXN0LTIKICAgICAgICAgIHNlY3VyaXR5R3JvdXBzOgogICAgICAgICAgLSBmaWx0ZXJzOgogICAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgIC0gZWRmLWRlbW8tOGdwNnotd29ya2VyLXNnCiAgICAgICAgICBzdWJuZXQ6CiAgICAgICAgICAgIGZpbHRlcnM6CiAgICAgICAgICAgIC0gbmFtZTogdGFnOk5hbWUKICAgICAgICAgICAgICB2YWx1ZXM6CiAgICAgICAgICAgICAgLSBlZGYtZGVtby04Z3A2ei1wcml2YXRlLXVzLWVhc3QtMmIKICAgICAgICAgIHRhZ3M6CiAgICAgICAgICAtIG5hbWU6IGt1YmVybmV0ZXMuaW8vY2x1c3Rlci9lZGYtZGVtby04Z3A2egogICAgICAgICAgICB2YWx1ZTogb3duZWQKICAgICAgICAgIHVzZXJEYXRhU2VjcmV0OgogICAgICAgICAgICBuYW1lOiB3b3JrZXItdXNlci1kYXRhCnN0YXR1czoKICByZXBsaWNhczogMAo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/openshift/99_openshift-cluster-api_worker-machineset-2.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lU2V0Cm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogZWRmLWRlbW8tOGdwNnoKICBuYW1lOiBlZGYtZGVtby04Z3A2ei13b3JrZXItdXMtZWFzdC0yYwogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LW1hY2hpbmUtYXBpCnNwZWM6CiAgcmVwbGljYXM6IDEKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiBlZGYtZGVtby04Z3A2egogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiBlZGYtZGVtby04Z3A2ei13b3JrZXItdXMtZWFzdC0yYwogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGxhYmVsczoKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiBlZGYtZGVtby04Z3A2egogICAgICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtcm9sZTogd29ya2VyCiAgICAgICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktbWFjaGluZS10eXBlOiB3b3JrZXIKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiBlZGYtZGVtby04Z3A2ei13b3JrZXItdXMtZWFzdC0yYwogICAgc3BlYzoKICAgICAgbGlmZWN5Y2xlSG9va3M6IHt9CiAgICAgIG1ldGFkYXRhOiB7fQogICAgICBwcm92aWRlclNwZWM6CiAgICAgICAgdmFsdWU6CiAgICAgICAgICBhbWk6CiAgICAgICAgICAgIGlkOiBhbWktMGVkM2YyNzNiMmU3NGY4MTQKICAgICAgICAgIGFwaVZlcnNpb246IG1hY2hpbmUub3BlbnNoaWZ0LmlvL3YxYmV0YTEKICAgICAgICAgIGJsb2NrRGV2aWNlczoKICAgICAgICAgIC0gZWJzOgogICAgICAgICAgICAgIGVuY3J5cHRlZDogdHJ1ZQogICAgICAgICAgICAgIGlvcHM6IDAKICAgICAgICAgICAgICBrbXNLZXk6CiAgICAgICAgICAgICAgICBhcm46ICIiCiAgICAgICAgICAgICAgdm9sdW1lU2l6ZTogMTIwCiAgICAgICAgICAgICAgdm9sdW1lVHlwZTogZ3AzCiAgICAgICAgICBjcmVkZW50aWFsc1NlY3JldDoKICAgICAgICAgICAgbmFtZTogYXdzLWNsb3VkLWNyZWRlbnRpYWxzCiAgICAgICAgICBkZXZpY2VJbmRleDogMAogICAgICAgICAgaWFtSW5zdGFuY2VQcm9maWxlOgogICAgICAgICAgICBpZDogZWRmLWRlbW8tOGdwNnotd29ya2VyLXByb2ZpbGUKICAgICAgICAgIGluc3RhbmNlVHlwZTogbTZpLnhsYXJnZQogICAgICAgICAga2luZDogQVdTTWFjaGluZVByb3ZpZGVyQ29uZmlnCiAgICAgICAgICBtZXRhZGF0YToKICAgICAgICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgICAgIG1ldGFkYXRhU2VydmljZU9wdGlvbnM6IHt9CiAgICAgICAgICBwbGFjZW1lbnQ6CiAgICAgICAgICAgIGF2YWlsYWJpbGl0eVpvbmU6IHVzLWVhc3QtMmMKICAgICAgICAgICAgcmVnaW9uOiB1cy1lYXN0LTIKICAgICAgICAgIHNlY3VyaXR5R3JvdXBzOgogICAgICAgICAgLSBmaWx0ZXJzOgogICAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgIC0gZWRmLWRlbW8tOGdwNnotd29ya2VyLXNnCiAgICAgICAgICBzdWJuZXQ6CiAgICAgICAgICAgIGZpbHRlcnM6CiAgICAgICAgICAgIC0gbmFtZTogdGFnOk5hbWUKICAgICAgICAgICAgICB2YWx1ZXM6CiAgICAgICAgICAgICAgLSBlZGYtZGVtby04Z3A2ei1wcml2YXRlLXVzLWVhc3QtMmMKICAgICAgICAgIHRhZ3M6CiAgICAgICAgICAtIG5hbWU6IGt1YmVybmV0ZXMuaW8vY2x1c3Rlci9lZGYtZGVtby04Z3A2egogICAgICAgICAgICB2YWx1ZTogb3duZWQKICAgICAgICAgIHVzZXJEYXRhU2VjcmV0OgogICAgICAgICAgICBuYW1lOiB3b3JrZXItdXNlci1kYXRhCnN0YXR1czoKICByZXBsaWNhczogMAo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/original_cvo_overrides.patch",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,eyJzcGVjIjp7Im92ZXJyaWRlcyI6bnVsbH19",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/auth/kubeconfig",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/auth/kubeconfig-kubelet",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/auth/kubeconfig-loopback",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,Y2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSUlJFTkRRV2xwWjBGM1NVSkJaMGxKVWxWWlZHcFhTRUZrTDFsM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZFFha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFUWjNkS1oxbEVWbEZSUkVWNE9YSmtWMHBzVEZkR2QyRllUbXhqYmxwc1kya3hjMkl5VG1oaVIyaDJZek5SZEFwak1teHVZbTFXZVUxQ05GaEVWRWw2VFVScmVVNVVTWGhOZWxGNlRteHZXRVJVVFhwTlJHdDVUV3BKZUUxNlVYcE9iRzkzVUdwRlUwMUNRVWRCTVZWRkNrTjRUVXBpTTBKc1ltNU9iMkZYV2pCTlUyZDNTbWRaUkZaUlVVUkZlRGx5WkZkS2JFeFhSbmRoV0U1c1kyNWFiR05wTVhOaU1rNW9Za2RvZG1NelVYUUtZekpzYm1KdFZubE5TVWxDU1dwQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSUlVaQlFVOURRVkU0UVUxSlNVSkRaMHREUVZGRlFYWm1kV1pUWVU1RVZXSXlRZ3BzU0hweFRreGlRWFVyVEhjNFZqTkNZa2RPYlRkT1NUZFdSM00wVFRCVGFqRmhValV3UjJKWWFsRnVhakJxVjJkaWFtVjBRMFpqUlVNMVZUUk5lVVUzQ2xWSlZUWlRiMVJIVm0xVVpsaHBZMk5vWmpGQ00zQldRWEY1UVhnM1l6bEdiMDgzVFhOWU5XcEhNRlJ4VUdoWlVpOTNUV0ZFTTBWVU5qWkpWbGQwYVdjS2EyRnFOR2RJY0dWTmIwbzBXa2hNYlZaQ2NGZEpOa2x2YjAxNE5WZ3lZbEZyVHpCTVpYWkhkMHRRVTFkb0swRllUVmhsVTJoMlpVbFVZM1ZVYVdnMmJncDNXWGQzZVRVellXNTJjbFJDV2pkeE1rTmFibHB3UTBOS1pqWjJZelZaVVdSMlVYUkNNa05HVmpKUGNEVTBaRmRKYzNOWWRWQTJaRnBRWTBkSGNrTmtDbkZhVUhvNFpVMTJNMDFCUjBrdlFVOURMMWREV2tsbWJIUjRXa1pHZW01blNtUjBVbVowUm5aUFoxQTVSV05HYTAxNFpuQTVaRzFaWkVrMGJUUklVWG9LY1hscWQxSXJRMDFtZDBsRVFWRkJRbTh3U1hkUlJFRlBRbWRPVmtoUk9FSkJaamhGUWtGTlEwRnhVWGRFZDFsRVZsSXdWRUZSU0M5Q1FWVjNRWGRGUWdvdmVrRmtRbWRPVmtoUk5FVkdaMUZWZDBkb2NVcG5aMk5KYlZOV1pVazBhMEZDZG5aNlNWY3ZVWEZGZDBSUldVcExiMXBKYUhaalRrRlJSVXhDVVVGRUNtZG5SVUpCUzJkRll6azBUVmw0VFRSWGF6RjFXRmxFTlhoR0wweGlTMjU1ZVRCd1dVazFVbEJWV205NWJrMUxjamwzTUhWbVlYaElMMmRNYUdGamRta0tjazFOZFRWM2JYVk9jbkpEZEdkQmJVd3lPVFpoWlZGTFoxTlRVVFJyUWxaWk9HSkpMMGRwYVhkUlFVOUdiM0pFY1d4VGVVWk1WWEoxYVdoSGNtNUpkZ3BvT1hvemVXcENWRVZPV2sxTGNXTllWR2R2V0U1VEwyeFVaekUxTldKVFptNDNURzkyYzBGRU5ETjViazF4VUZCTWVFd3lTRE5rWlZjMGJrcGpNMFl5Q2xBcldFaGpSekkxTXpKelNsQktSVzlsVVc1aFRFMUJSbEI1V1dGTmVFRnhkazlSYjBjeVZXMHJjalZvVFZKR1lYUktjall6T1hwRk0wNHZValJTY200S2RXUkRiR2w0Tld0S1lVZFNhazFyZFVGblZHRXdSbkIwVUhWNmFVcElRVzRyTldsU1JITjVTbk41UVhGTGNtTmpRMGx1ZWtsWlNrVk1PRzVQWTBoSVdncE5hMlpWVXpZdmJWUnNNVUZWTTAxTVEyUnhXVEJCWW1KWGNIYzlDaTB0TFMwdFJVNUVJRU5GVWxSSlJrbERRVlJGTFMwdExTMEsKICAgIHNlcnZlcjogaHR0cHM6Ly9sb2NhbGhvc3Q6NjQ0MwogIG5hbWU6IGVkZi1kZW1vCmNvbnRleHRzOgotIGNvbnRleHQ6CiAgICBjbHVzdGVyOiBlZGYtZGVtbwogICAgdXNlcjogbG9vcGJhY2sKICBuYW1lOiBsb29wYmFjawpjdXJyZW50LWNvbnRleHQ6IGxvb3BiYWNrCnByZWZlcmVuY2VzOiB7fQp1c2VyczoKLSBuYW1lOiBsb29wYmFjawogIHVzZXI6CiAgICBjbGllbnQtY2VydGlmaWNhdGUtZGF0YTogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUmFla05EUVdzclowRjNTVUpCWjBsSlNUSnpWM0Y1T1ZKQ1NUUjNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRWGRPYWtWVFRVSkJSMEV4VlVVS1EzaE5TbUl6UW14aWJrNXZZVmRhTUUxVFFYZElaMWxFVmxGUlJFVjRaR2hhUnpGd1lta3hjbVJYU214Wk1qbDFXbTFzYmt4WVRuQmFNalZzWTJwQlpRcEdkekI1VFhwQk5VMXFWWGxOVkUwd1RYcFdZVVozTUhwTmVrRTFUV3BKZVUxVVRUQk5lbHBoVFVSQmVFWjZRVlpDWjA1V1FrRnZWRVJ1VGpWak0xSnNDbUpVY0hSWldFNHdXbGhLZWsxU1ZYZEZkMWxFVmxGUlJFVjNlSHBsV0U0d1dsY3dObGxYVW5SaFZ6UjNaMmRGYVUxQk1FZERVM0ZIVTBsaU0wUlJSVUlLUVZGVlFVRTBTVUpFZDBGM1oyZEZTMEZ2U1VKQlVVUmpibVp2VERZMmVIbEJlRlJ4ZVdzd04wOVlVWFZJZUhkNFowbG9PRUU0Tm10TVZVczRNakp4YkFvM2RuaEJLemRRUVRWeVVUSnFNV0pzY2pKNlkwUXZTV1UyU1daeWVVdFFieXRyTjJGdVUyVm5SMVoxVm5aTFUyZFZSemg0VEhZNFlsUm9iVEF5YzBvMUNtaFFkRUZaUmpVdlZYTjRVRTFtVlU5UGNUZG5jbmRyU1hJNVVVdDBia05sWjFkTWVUTnFRV1JXT0ZSc1FtSjZVM05QSzNNMlZXazVORGg0VTFoYWN6QUtXRmQyTjFnM1IyVm5ja014ZEdaYWQxSlZhV1paZGxodVQzb3JXREExWWxacGNHUXZhMmgxWlN0SGRuTjBWMHhpUm1oTmRURnZWRkZrWm5oTVZWSTVid293SzBGd01rZFZUWFpDS3pSb1JIcG5XVzFwTkcweVJrRnJURzl5VVV4NVltaHNMemQxY3pVNFRtUktMMmR4UzJWNFJFUTRRMmxhYW1oaWMwRnFUR3d6Q2swdlYxQlRlRlJPUVZCWWRsVnVjbEprYW5CSlpYWXZUM2RGWkhsc1JtUnNibTB3TTNCbk5tZFBXamMzUVdkTlFrRkJSMnBtZWtJNVRVRTBSMEV4VldRS1JIZEZRaTkzVVVWQmQwbEdiMFJCWkVKblRsWklVMVZGUm1wQlZVSm5aM0pDWjBWR1FsRmpSRUZSV1VsTGQxbENRbEZWU0VGM1NYZEVRVmxFVmxJd1ZBcEJVVWd2UWtGSmQwRkVRV1JDWjA1V1NGRTBSVVpuVVZWblNWTjVURFV5TjI1RVdHZFFOVmRCUzFWeFNWaElWVUpFUWpCM1NIZFpSRlpTTUdwQ1FtZDNDa1p2UVZVNE5UVXpSakY1VlhOU1JHczRUaTh6Y0hkUFltaHdOakJQWkhOM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFVUm5aMFZDUVVsWU9VRlpaRmdLTm1kS1duQlpka1o2TTJkQ2FESmxSR0ZyTm5OMU9WVkdablEwWlRkeVkyRnpVSEo2VFd0UGFYbFJkSGM1YTBwamVVMXVabEl6VWt4RGF6UktaemN6ZVFvMGVIb3dTbU53VlU1aVR6QjFVRlpyVVVNMVRsZHJNVFZTV1hKR2JUQmhkRVE0YXpOemNrMXRRa1Z5Y0ZoRE0xRXpVVkJyY0RsbFVtMHhaR2c1T0ZkV0NsTkRWRGRsWTBwTU1GaElSalJaWmtreU1FVnhlRXByYWxCMlZFbGFSRkJJYmxZd01rVmhieXQwY21aVVRESklXVUZSU0daUlpVd3dibko0TUc5V016SUtiVkpUUTNNeVFXRm9kRmRVTVV4UFVXUm5lbkZRWW1OQlpYWnRVbEpTYTFGd1NpdHFSRzUwWTFCMFYxUjZMekJvYldaT1QzRmFZV0ZwVEdwTU4zQlFOUW8xU0dsdFl6TXJjRTFxV1VwTWVrZHdiV1F6TVhCWldXa3dTVUY0V2xKS1dDOTFkSEJRWkhablZFNUtWRXhyVTBwbGJUbEJZa1Z1VUdSWFREbHhiakpNQ2xaMGFXWmtVVVZGUldGSVMxUm9kejBLTFMwdExTMUZUa1FnUTBWU1ZFbEdTVU5CVkVVdExTMHRMUW89CiAgICBjbGllbnQta2V5LWRhdGE6IExTMHRMUzFDUlVkSlRpQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUXBOU1VsRmIzZEpRa0ZCUzBOQlVVVkJNMG96TmtNcmRYTmpaMDFWTm5Od1RrOTZiREJNYURoalRWbERTV1pCVUU5d1F6RkRkazUwY1hCbE56aFJVSFY2Q25kUFlUQk9iemxYTldFNWN6TkJMM2xJZFdsSU5qaHBhalpRY0U4eWNEQnViMEpzWW14aWVXdHZSa0oyVFZNM0wwY3dORnAwVG5KRFpWbFVOMUZIUW1VS1pqRk1UVlI2U0RGRWFuRjFORXM0U2tOTEwxVkRjbHAzYm05R2FUaDBOSGRJVm1aRk5WRlhPREJ5UkhaeVQyeEpkbVZRVFZWc01tSk9SakZ5S3pFcmVBcHViMHQzZEdKWU1tTkZWa2x1TWt3eE5YcHpMMnc1VDFjeFdYRllaalZKWW01MmFISTNURlpwTW5oWlZFeDBZVVV3U0ZnNFV6RkZabUZPVUdkTFpHaHNDa1JNZDJaMVNWRTRORWRLYjNWS2RHaFJTa00yU3pCRE9HMDBXbVlyTjNKUFprUllVMlkwUzJsdWMxRjNMMEZ2YlZrMFZ6ZEJTWGsxWkhwUU1Xb3djMVVLZWxGRU1UY3hTall3V0ZrMlUwaHlMM3B6UWtoamNGSllXbG8xZEU0MldVOXZSRzFsSzNkSlJFRlJRVUpCYjBsQ1FVWnVjMmh3VVM5VWNqTXlTbHAxUXdwT1JFc3dkVE5rYkU1T0t6QnFWekZJVHk4MVRtVkpkREJSUTJNNGJqRk9OV2hSTlZkMWVGRlhTSGQ0YlVWa1FYUkxOM0ZRWlRNclR5czRhV3cxYldoVUNtTkhhR2RxWVZWbFJFWm9VVVZPUzFOWWJXUndNRk0yV0d0SVpIQjZaVTk1Y0VSSWRuUk9iQ3NyYlhvdldFaExNbmhqTjJ4d1JqbDBaRGhCVkRaNGIyd0tiVXRWVGs1dVRraG5SM2s0ZEVOVVpIWmpiWGQ0V1VzMVNuUTRWR2g0UkZvMGNHWkxZemhXTUdWMlltTkdSV2hQYmpkUVRYSjZOREZ0Y20xWk5GSnRad3BYUmxnMmRqa3hOR3hUVWxOdU1UZzVaRkUxZVhOa2JGZFdSa2t5VFROSWRFVTVUMjFMWm1KTWVHeDFNblUwVlVsMmVITm9ibFZTUzBWb1ZWTTFObmd5Q25aTFkyOVllSGhQYTFNemVGUkdOVGxKT0hZclNXcDFNMjlOUTBKNEwzaHpXSEEwUjNwek9FVXhUVk5UV0VGRWVuVmhZM2RsYkZneVNHNUZVSHBzVVcwS2VIVnNVa0ZoUlVObldVVkJNMkpWVEdwa1NFaG1VamhJT0VsVlMzazNObk5PVUVkbE5FeE5VR0YyZDFKSmFuaDBNMU0zTkcxdFVuSnhhMFZrYWpONlZ3cEZUV0UwU1dGdWNGbzJlamxVVkd3eWRqRndNa1JaUTFNd01FcFZka0pPZEVvM1owOXRSRXhJYTIxVWNGZzFOMHBKWXpndmFUWjBWMk5CTkVwa2EyaHNDbEZDWkdWeVdUQXZNVkZ5YWtoWmNHa3pSMkpWTDNGc09XVkVhblZHWlRCQk9VazFkMGh4THlzMllUUTFNVVYwVnpRdmNpOVFWWE5EWjFsRlFTOXlNMFVLVGtGc05uazRhR0puWVdacGVEVllOekl2VDJac1MyY3ZkVWM1ZDFGR2EwZHJkamw2YmxwaGIyOVFUbVF3Y1hoTGNuUjVUeXR4UlVaS1dYUk9iRGhqUWdwVWRXTlNhRFJVYWpWbmFVbGxOV05sYUhBNU1FYzRUSGxqY2pCa2JucHJSRWQzU2l0UlNreDFjWFpLVG1OQ1VVaFZWamN6U0RoSFMxSXhia3BRUWxsdUNsZDFURU4zZGtOV1FWVmtkbk5JZEhCUGNIcHhZamN2VlU1SmNGY3laVVZwVlU0NVkyaDRSVU5uV1VKQlNXcFZZbUV3YlRONWFHZDZNMWRwU1VVM2IyY0tMM0IzYkVJcll6TXpXRGRtVm01bE5XVm1UREJTYjFKWGJHTjFSbFJIYkc5S1VGQjVNbEZJY0hWalREQmhaVVZPTjFrNGEzcE5TM05XWnpOSk9HZ3ljZ3BXWWxSNlJtY3hhRXhqZGsxdE1WRXpZMWx3UTFSMVowMU9hVTVMYTJoeGJqbGFjWFoyWVVwMlkwWjZUMjFOSzAxVWFuSnFRMEZwUW14SldtRXhWbkJ1Q2xwRFZFOHlOelY2ZG5KQ0x6RjFUbXgzTlNzclJGRkxRbWRSUTJOMlVqVjJPV3BWT0VaaVpGZ3JNMmx3TTFSeWRXaDFVREZxSzBKR1JubDNNa3MxUkVRS0sySkhiR3RSUjBsd2NsWm1NM1Z5UlRGTGFWVjRWMXB3VWpKRmFYUnBkWG8xVEVWQlpGWXZWVTVuVUd0S05FNDRlV0psYWt4VWQwbEtVbmxKZWpSa09RcHZkbU5VZGtaU2JHdHNhbUpWVkdRdlpHSk5VVTEzUm0xRVdGTnZTaXRzYmtodll5OWpjeTgzZWxoNVNGWnBabFpFU2l0cGVYRkdSRUZ4ZFZaMU9WSnNDbVJyYkRCUlVVdENaMFpKVG5kWlpVSm5SMDFhTkZOdk56TnBPRW92VnpKck1sWklVamM1UTFKNlMwaGhNbVZhTVU5UFpsUkpRVVUzVERCU1ZISmxiV3dLTTBWSGJtRndVbWRHVTJWNWFYTm5WVTVMZUU5VWFrZzFNVUkzTjJVclZXeDNLelZCUjJscVYzTTNjVWxUWWt0d2Iya3lVM3BhWkhOMmRHNXRlbXgxWXdwTU5VRnROVzVGVEdWR1JWQndNVU52VVVsVk0yMTVWbEJuWkM5emNraFpUVWh2VVc0MFVqTkpabEk0WW1aamMyWkxiVFp1Q2kwdExTMHRSVTVFSUZKVFFTQlFVa2xXUVZSRklFdEZXUzB0TFMwdENnPT0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/admin-kubeconfig-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJWFg4cVh2aFpaNG93RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB5TXpBNU1qVXlNVE0wTXpWYUZ3MHpNekE1TWpJeU1UTTBNelZhTURZeEVqQVFCZ05WQkFzVENXOXdaVzV6CmFHbG1kREVnTUI0R0ExVUVBeE1YWVdSdGFXNHRhM1ZpWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRDlwK1R0N21HVzJjQmdyK0orU3JLM3krc2dvN1B3YUZVdQpDQ2Fub3ZwOXUwZTEvYlBOZlkreHlHVUNEYmprMVBWa0w2R0dGVG9UWHllZ3FtaExNVWN0UjQ1ODExMGVZNGpVClJ2UVZ5b21Jb2h0dnovaWZTVUowWVowakcvR3pwM2J6WlBhU3BHWWxEQ0xMcy9keHhpS240bzAyWi9FaHZ2QXgKRkhQcmIwWW5hdWY0V0tuTEFoZGpLaEg3ZzFTczEydk1ER25kMGdvdFk0b2dvZk40ZmdQNjIvcVlQWTY4eHcvWgoxRHBzdko4M0FBVEY3d0xqcE5MSTNLcVdnRFRjQXAwaW4yQ0dvZGh0MUtzYlc0WnZObXprcnpCaXR3bmZCVGRxCmRxMTdGR1lFYkhMQWI5N0N1VCtSbmUrZFNSN3hpOCs5OFVKNHAyU29hN1J2d05GNWJlS3RBZ01CQUFHalFqQkEKTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlR6bm5jWApYSlN4RU9UdzMvZW5BNXVHbnJRNTJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUE5REVTYVo2NW9IMkg5UDFQCitDZXZ1b1FCMnc5ZVB2NTVVMmZHVGkrSFhuTnF1cWZtK0lDNGh0cHp1R0RVSHdkZENJSzJjbjdmUGhJbW9oRFkKT3lQb1hROGI4N2hkdXZyMElRdGdmZVFQb1MzWlFpakltdzZ3b1FmclpsbVVoU1lFc1U2TEowSUJ1dU9ORXpXNQpyeEF5YlJuQmJaUGlYVVVwUSthdVpSbXRFeHFaVDVoUkg0alBUaW8rNEg3UXh1TlFYZEJLUmppMnJSVWl5NmI4CmFZUTAzNDhUdHErdnJZdjRJME01N2ZJdFNLOTJVT2o0ZXd0ZUNUOGlXWkliVXlNQzM5WEN0dGJGUHRzRjlFRGEKR2pyM1NLZ1hCQkdhaUVnVloweGxPZjQ0MU1FUEY0TitqQlBZLzdWY0RjQVhCd2xoMTRydmF2dTlhc3VBbXpSMApsMEw5elE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/aggregator-ca.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc0x0bGo0VW1SVC9nM21CQy9XTzNpdnlhbVc0cWFzTjg4ejhMRElIWElXM0xOcVVTCnhCM3dKVDdVS21EcU1hT1ZoTzgybXlXekpNbGJCYmZQMXN2Y293ZzlnU3VQdklKZnVsOHR6M1lpRWRhanh6dWYKRVpyR254MXVGdWRTSEF1aFptU20xVFFoVXRkMm1KNXVQQkJEelN3TXNQZ1JnaUJTd1daS2JFNXowUVdwUnRRcgpGTmk3eDhmc1VxOXZ0Qk5SWU1BMTRLRGltU2RZTk9rTFBlZCs1WUVVb3VzRDRtSncrM2hOVDdNZGM5UlNiRFZZCktLeHlJdzllR3BCd0xnM0VGc2xrby9NWklGWitqKzRSZ3JtR3FyYkE2Rm5ZVHg4aFZPbHhvV3NCczc0ek1vTXUKMmhGcUF0SzdtSVE1VmNQdTRLdTJNMUhtMktSMEJzRGNQbnpSeHdJREFRQUJBb0lCQVFDbk1QRTRYLzgvZmRuTwpwZ1JaMEc3L3BrN2ZIWEExUmpDN3NZVlRWTFhmWXczZTZUVWlvU3ZoSUZuNHFXeUVmenZnNGFpb0IzYzlNdHZRClFmNzJOaS9KYis4M2RxMW82WEdFVDZ4MzJrc0sweUpuUllrTFQzL2RZU3NYc2Noa3piL25yUXFESWVqd2hQTW0KR0tNeVlUU3pNWnZrQXhvVkgxMEtweWw2NHBFQVNDWmZLb2VGVDRENWVYYWhJazNOWk1Gekx5WmU3d1hpdGVXZwpkdTRVcnJCUlV0VndmTXRGVDBhVjFkSkRTNjJTYjFlbk5yWTZaTi9seCtkaFNjY25uajFSejZxeGNuWVcvakRvCnBNMXdxTTViWHpXZmNvTlpwaEdYa2FwZG5jTHJ2S09PMnpjQVA1bmVzL3JOZlZYYmZXLzBnNWtYRlZ0cVpISEQKejlaSkhYYkpBb0dCQU1hTW9nd09pWStoWnRlOXI0Vjl4elE0dnNiTm5tY1JVM0RvQU5JR0hRSG9DczNCeUtuRgoyNHdvMGt2c3JXVGZWSzhLTy9ZcGtlTDBHalQ5czY3by81a3RMTUgwUm9qWC9GeWsvSTR4SHRGZms4SWtnUW5lCllIeHF1TlpOaXBqS2VvOUhQdHRVWDVqblBoS3pYSzM0TTBRQUhoa21ndUdPMktiYldZWWtJcVg5QW9HQkFPUGUKcWhYUEpQZS9ZN0dWbkcyN3dHb3NKeUpub1R3WXFUSGlBYTkyNi9WdWhTOFQ5bUhaVStWUllJaHRza0dHZWYwLwpBZWRIZkladFVmeDMxNXpHYjFWMmM0dDBtQ09NbDdDRFFrREZ0WjRSQzlPcXVxRzg5VGV1VlZrRmV5TW04azdvCk5sbVBxd0wzSVMvNkJzaGVtSjVJbXF2YnVXY2JqeHgrRzJYT1hJQVRBb0dCQUxiSHlIWW8rK0pKeDQ5Y2hEVHoKOFdyVndtcnA1NlVpZ2hveXVtNmVTaDN6Szk3M1FtOW9RaERwazQ5cHRzWmlBbWVSbUZtcE16QW5YK2pnbFlXego0WGwxNlBvMGtxcHZpMWNPVzZIYS9tL28rUEdGQVhYQVRqcTdWS1dVaEw3Yng3QVcrbnFYVmRwQkp4ZTRIdDNZCjIva0Iwck44akloeEpHbVhEUGM4Vk5sUkFvR0FkWUFoOEhFS1BQNWg1L2FmM1MzTmdISVlFL09mL3A4d3o5b2MKeUYvb09IeXZES0dja01SQ01LT1B4WW5iTzFLZW9PbldqMjRiVmk0VThyelJYN1FyUU1SOXZGRjVDZ3U3UkhmSwp1Qis3RVREMUNrYWxTalZudFRpZUpmTmZsYmJGaDg3U0I4aS9oQjN1N1JCZVl2LzBidG85ZDVVcnUzRklrSWF1CmxnYWRTQ1VDZ1lCaWlLWDBwYTVqTlFreVFMRmIvY2VaOUJjZmNEd2Q5K3lhN00zZjlDU04vclRkZUczSVh4QVcKOVB1VWE4K0RvUUlYejlpcUcySzljSzF1S2hRcCtTcGVXUGJ2WjgvcTZNbWFnS09KWnp3TGZzYzBabDJOL1NrbApteU1uL2lDamd6cmcwc2hNODFSbzBmK3VNK08zeVFob2NkUHhybUFUNVptdUNrNEVGYmFhRnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/aggregator-ca.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lJUm04U1F6MVJTdDB3RFFZSktvWklodmNOQVFFTEJRQXdLREVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEV6QVJCZ05WQkFNVENtRm5aM0psWjJGMGIzSXdIaGNOTWpNd09USTFNakV6TkRNNApXaGNOTWpNd09USTJNakV6TkRNNFdqQW9NUkV3RHdZRFZRUUxFd2hpYjI5MGEzVmlaVEVUTUJFR0ExVUVBeE1LCllXZG5jbVZuWVhSdmNqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxDN1pZK0YKSmtVLzRONWdRdjFqdDRyOG1wbHVLbXJEZlBNL0N3eUIxeUZ0eXphbEVzUWQ4Q1UrMUNwZzZqR2psWVR2TnBzbApzeVRKV3dXM3o5YkwzS01JUFlFcmo3eUNYN3BmTGM5MkloSFdvOGM3bnhHYXhwOGRiaGJuVWh3TG9XWmtwdFUwCklWTFhkcGllYmp3UVE4MHNETEQ0RVlJZ1VzRm1TbXhPYzlFRnFVYlVLeFRZdThmSDdGS3ZiN1FUVVdEQU5lQ2cKNHBrbldEVHBDejNuZnVXQkZLTHJBK0ppY1B0NFRVK3pIWFBVVW13MVdDaXNjaU1QWGhxUWNDNE54QmJKWktQegpHU0JXZm8vdUVZSzVocXEyd09oWjJFOGZJVlRwY2FGckFiTytNektETHRvUmFnTFN1NWlFT1ZYRDd1Q3J0ak5SCjV0aWtkQWJBM0Q1ODBjY0NBd0VBQWFOQ01FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUE1aazJva0J5M2ZNYnRNNTJYZElUb1JBWWxOTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVBrNzB1aUttakduZVFkMnZqdUpuYWlVanVyMVFZaXFYb1gzUU0zWUFIWGZqRm5DcjBuRFFzCnRJYXc2YVI0b2t5ZDhoT2ZlSEE0K1Z5TDRXd2ZUeVV2cGZNOTRvUVNqOWYvVmVvL3A3ODQ3ODFGdGVCWi91WmgKc1NrKzYwalQvMU5wZGpNT2Fka2tnWkpDK0xzeGpnb1orMU9pUUh4N3E2UnJHeFpuQVNOVUhVYlZRbDlFWkVuUAo1ZHhBbDZDbmFFUkVxdGNyT3lPRFpsV0FoWWk1QWVaQjlGdm5wVThXYSsvRDlCanh2c3lFaUR4Sm5oWVNNUkxjCkFhTzFrSTduUG8vRGQ4MTFTb25iT01SNDlWN3FQUXVIQ3d1cTVFY2xqYmI1T2wvVEUxNmVKemVNQ0pHWXV6d1MKTGtyWjIvb0g3V2QreVZtemphNkZidFlHeW5zNXZBUkkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/aggregator-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lJZDdoaHFBTWxVNVF3RFFZSktvWklodmNOQVFFTEJRQXdNREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sb3dHQVlEVlFRREV4RmhaMmR5WldkaGRHOXlMWE5wWjI1bGNqQWVGdzB5TXpBNQpNalV5TVRNME16aGFGdzB5TXpBNU1qWXlNVE0wTXpoYU1EQXhFakFRQmdOVkJBc1RDVzl3Wlc1emFHbG1kREVhCk1CZ0dBMVVFQXhNUllXZG5jbVZuWVhSdmNpMXphV2R1WlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFEUDBjN1RZcUJFWExtTld5bDZYSmVDVU1KdUYxZk9mdk1pb25tRllabnNTZy8rL3dNQgpCZi9RWjVwVGtsVTFGWUU2Z25ic1pOeldoMHA2UjV4ZHhsYTA5KytmVVdJRDdmeTh1bWpTUXYrNTZScmowUkMvCjBGMUJUYnZmYWNhbGJqSFZCZjM2dCtnNzBwYWluS0FiaWlRczZqT3VKMmlSUkNyc0VSQ0VqN0MycFFFMDhPbDkKNGluT0NkVlJTZjd5STZFQnFGYVZ4cVVBSDd2ZHVBTU5LdThLYkl2cVN2aDNCRGwxNWFFdDJsWVJBeHJLeU5ubAplN1lPcmxOZ3BOQmJRR0t2anBma3lQd294WTlSQWxoQXFXYzZjdTBqdmRhbWorQmdNMFltcE4rNUVNS0ZIOUtjCkNsYUIrZFUzWERQc0gycHVoZ1pCVTVMWXhUdldIc0dvQUVZdEFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUUKQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUWdabFFxV0VFSnFldWduRFU5RklrWgpTL0xhL0RBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUtURzkxQWwrb2UxK1R5UnhRYjZhTnFzaXlDbEw5YnBLCnVIdHFOdi95TXNrRmV5N2hKakorNG1kaW9oVFBkV2F6SHRVQU5taENFQittL2NpRTAwNm9XdkFDaDhTODBFcmkKTkNIeTljYzVNNVRKNDFNc1pjYm5ybXVIeFk4UlRNNkU4UTRTRWNuam9iZnFWby8zRGQyanlPV2E0UTBJb2hXcwpCcE9SbForN2dUZG1BNndXL2lXMkZyYWlvVWREY3ZxTnZpbkpUZUpNZjRhbURSZXRieTdMc0Z5eVpyQzRISjVHCmJxM05uRklSZjIxN3R1YW5yT1VMREFaa1ZxTG9id3lBZm1PamRwU1YvM0JyYURoSXBPRG5PY2lLY25NTmd0NnYKMVhidDVvcExCeWxWOU1HTWdPZVZmQlJpSHdDUCtzci9DQ3pRQkNxdTRrckxaM2ZUZGFqRmVBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/aggregator-client.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdzZLSUJteTlyVUZBRDRYUk9HL3ZIZW43d3BZREhXblRtQ0xZYnVPZHhENnlSRXRlCnU1c3loYTc2ekdrbXY3RmlRb2xLeGFNblkxSUVON2lDZkxIWVhGK2Eyd1I5SW10SGhER2Z0Z2VvSEdhY3UwVzQKbEVHU1FVOUlBQ1NGR0lZRlpsbmFPZndSaFZRZGg1RGRiMHRVSHBhcHBlZGRUMzFTc3JKRnFRM1hwZzdVUUxmMAp1ZE5nSHVtdXduNXRnYjFPWktLa1hRMGYxRkFYQXdydy9qTGw3Vi9YYmNMbFRUYkNublpXMVZTZ0xtSGdWczZiCitBY21kZ2hNdG9BV3c4N0JzeElzOUtqUEhYcWgwNEpxbXdsaWtYdzRvbnBzK0xXZSszNnNTVnEreEZwR0p4U3UKQjc5VmRNK2pFVmZtdzFwc2w0TXB2cmtDOUVXVUhKYVFkd3gyVndJREFRQUJBb0lCQUJCdTJhQTRpQ0pDaGVBSAo3SkFpRHVMallhdHhzR2RMR1dRQklVOEhQWnhiYTl3Q3ZMMWpodlhsd2Rsang4WjRYdm1aMExjVFFsNjhaL0JLClJtTzFDS2lSdTA5RWJFSjA0bmYvTnh3eVBuUE1Sc1FRVWpYWjREQXVPYTBSWkVDd0dVb0VxQ2tRdkdRSHNjZE8KYXR0TFo1QitOVmZqUEZwTis2RlpDakx1SDd3cUF4ZTRXM1NDdWU0dGMxbllhVFpacytZdnFYSDdMV1lGRjM5bwpMY01mZHBiQkllZDZVeExIM1FaeDF2UGxoMC9BRDJSL0U4S0w4RENDaGgwZXNYcjFFMW8wNW5ZMUR5UmpaNzBNCnlVbWtOYmVTRm5Rbks3MXMvUVgxb0Z4cWZETCtNblVwZzJlZXRtWmtGTUZOZjZiMlREblZHclQ4elE1RXBsYzUKZGdGU1BJRUNnWUVBNlBXdXJvdlBhbCtIUmd3TzNvTFhjV2MwSVBVcG5hVDNOYmVnZkpnaHh5Mk85cSt6dzIrYgplL3ZRMzJta2VSbG84ZjJReFZ0YkhYSm04SHcvTkVrOW83cEdHTWtoVTQzbzNzRldPV1VrdHU4WUhmZXd0SDlECkg3b1R5K0l1Rit5ZVJIYzhWKytoZTdVOG1XMGQ5eUZwSVpMMFErVlpLa3I2L09YbGptejdkeGNDZ1lFQTF2dlMKQlN5b2o0bS9uNUtYeC9raXJZUHdkZGZ1c3JtZjlaZmgwZ3JGU1czWUFqNHFLK2ZMTHVlR0d0aFgrUlBLNHVJSQpOVTlaN0VFZTc3U29wdURCUjZ3T0lQUVN2bEdPSVB4NlRVZFBEWlNLeXk2WWJxVm54ODJNUUQ1OXhXdG8ranJNClEvK090bjUrZWZtdjlwWXQrSS9GK3FHN3BEKytLMVVGVHJ1eWdzRUNnWUEyaHlzNEYrbVkwSHR0WGUwdEVCczEKcEI2RGlGOFJVMGU1L3gxRmpLWjdaS0tPQTFwa2FIOVFhZ1RlQm5CRkdEbUVTd0hUOENwSG5qdVNGc01FamhBcgpmckpob3RKMktFVlZ2cE5jSTl5UUpTN1Q5T0liblo0c2t2V0hSNDNhYzd3bjhuRGhkR21yOXlRVUZZSnFFaHYxCmk5dzQrRG9DdUVJL1orQnZrZnJhU1FLQmdGV096cHlrazBqY3gxaFlYUE9HNFJneEpDZWlFaXNxMk5CQzYrcE4Kd3dwZ0h0RjFzQTdkSnUyNTBwTW9lb3AwS0JCM2FGRGZEYWlLbWlkSHZMNzlQNjZvZU04QWs5ME9WQVFvdHZ1KwpYMlhHTWg1K29zZVdLR0ZLR29FTzNic043aTkzNndjODA2MHBWbWh3eUdqWWg5OGVTT3BnSjI5TXR3QkR5K0x6CnJDMkJBb0dCQUtScERHVUlKS3QxdzFRQktqRVNKY0Zyb1JZT3V6R0JTOUczUUVBUlUyYVNMaG1mRkh4SXR2SGYKZWp1OXlqUDNaMmFCZGtoMkYwVjI4TDhEbkRaMHB0cTFjTW9ETEJuZDhxVHVQL0dxWm5qTnZocHBQdjVxSTBScQpkVjh6R09YYkJKdks3YnVxSmYrSU1kdTRPbW45TDBPc2ZLNHAzY0tIUUdXUmh5R1VNdGFoCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/aggregator-client.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZekNDQWt1Z0F3SUJBZ0lJZHFMUEZjVERwaEl3RFFZSktvWklodmNOQVFFTEJRQXdNREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sb3dHQVlEVlFRREV4RmhaMmR5WldkaGRHOXlMWE5wWjI1bGNqQWVGdzB5TXpBNQpNalV5TVRNME16aGFGdzB5TXpBNU1qWXlNVE0wTXpoYU1Ed3hGREFTQmdOVkJBb1RDMnQxWW1VdGJXRnpkR1Z5Ck1TUXdJZ1lEVlFRREV4dHplWE4wWlcwNmEzVmlaUzFoY0dselpYSjJaWEl0Y0hKdmVIa3dnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRERvb2dHYkwydFFVQVBoZEU0Yis4ZDZmdkNsZ01kYWRPWQpJdGh1NDUzRVBySkVTMTY3bXpLRnJ2ck1hU2Evc1dKQ2lVckZveWRqVWdRM3VJSjhzZGhjWDVyYkJIMGlhMGVFCk1aKzJCNmdjWnB5N1JiaVVRWkpCVDBnQUpJVVloZ1ZtV2RvNS9CR0ZWQjJIa04xdlMxUWVscW1sNTExUGZWS3kKc2tXcERkZW1EdFJBdC9TNTAyQWU2YTdDZm0yQnZVNWtvcVJkRFIvVVVCY0RDdkQrTXVYdFg5ZHR3dVZOTnNLZQpkbGJWVktBdVllQld6cHY0QnlaMkNFeTJnQmJEenNHekVpejBxTThkZXFIVGdtcWJDV0tSZkRpaWVtejR0Wjc3CmZxeEpXcjdFV2tZbkZLNEh2MVYwejZNUlYrYkRXbXlYZ3ltK3VRTDBSWlFjbHBCM0RIWlhBZ01CQUFHamRUQnoKTUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUIwR0ExVWREZ1FXQkJUQzNnTnA2a1UrOC9XOGdPYUlJY1V5c0ZBMmN6QWZCZ05WSFNNRUdEQVdnQlFnClpsUXFXRUVKcWV1Z25EVTlGSWtaUy9MYS9EQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFhZnQwM1IxQTR5Qk8KQUhxVWtCZFFkWnBQRnArQ2I0SS9wbG5OQWxaRm9pNFQwZXl1a0Z0K3dUZURWWmFxVHFvZUsrTkxuVHllaGN2Ngpkd1lCQ1h5cGtNQUwwWTR4cHJ2WUwvMEpuTUN6cWhOS3hGNzVvdW5LMXd1dWg4cE5nQ3NrU29RU3BwbmJ1NzZuCnNCNWVVMzIyZCttckRYSVJvM0lVMDVHSFdzYlNsUG1BTlZ6YlBxYkFFKy9vT1JqVHVTREVRN1RrM20wUk5hV1gKK3lCLytRMEJaVlpPM3pQdVBvVU4xZVI1aFlXaWpBQlhVODJES2xGWmtNUDUvNVJ2U1kwR2h5bnRqdFBTSGxhQgpLS2hWNEFBb2s3c0QzSFhXalhuV3l0QnpRUE1UYm1lMGJ0dFVGa3lPdXYwZXd0VlNSVmtHWXhBdExpYlhaem4yCmQ4bURFR3I1bUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/aggregator-signer.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBejlITzAyS2dSRnk1alZzcGVseVhnbERDYmhkWHpuN3pJcUo1aFdHWjdFb1AvdjhECkFRWC8wR2VhVTVKVk5SV0JPb0oyN0dUYzFvZEtla2VjWGNaV3RQZnZuMUZpQSszOHZMcG8wa0wvdWVrYTQ5RVEKdjlCZFFVMjczMm5HcFc0eDFRWDkrcmZvTzlLV29weWdHNG9rTE9venJpZG9rVVFxN0JFUWhJK3d0cVVCTlBEcApmZUlwemduVlVVbis4aU9oQWFoV2xjYWxBQis3M2JnRERTcnZDbXlMNmtyNGR3UTVkZVdoTGRwV0VRTWF5c2paCjVYdTJEcTVUWUtUUVcwQmlyNDZYNU1qOEtNV1BVUUpZUUtsbk9uTHRJNzNXcG8vZ1lETkdKcVRmdVJEQ2hSL1MKbkFwV2dmblZOMXd6N0I5cWJvWUdRVk9TMk1VNzFoN0JxQUJHTFFJREFRQUJBb0lCQVFEQ1VneHkyK1hBQm5QNgpHU1BQcG9TRTliN1g4anZJZWl3ZVZvNEtpaGpET1AxOEVqZGMzWjgxMzZvT091WXhuTW9aUzZTbnBpaFk4R2hUCnJtSW56UzJHU2M5bHlWTTlHV3NaamJRMTV5LzNSbUErWlY2ai9ORTJIdGx0TGhydzFQa0RsM2JFMlBIdC9odWMKTVpnRUtFZHJPQkxhNVQ2Qmxwd0w0R2p4aXVwUjNJZkM2Vzk5a0w3dFc0YjQzVWlDcm12a0NoWGpsRHlhbGkrUQpoMmN4MGsxbmJnbkJJTFlWb0FXbGs5YVJBUVVGVS92d08rRjNNVnB2ZnNXZ05uY2tHbnZqSitRdXZyZGx2NGdmCmdYYzBGaUhrb2xRSWFERTlNeWRKeUJ4dlR4b0plREthSDVwcnJvMTJ3OEhJcWpvdHh4bDNQVmUyMHYvMTBIMkkKYUZHblEwd0JBb0dCQU5kRXFBaGZuejZta3JBQUZvMndvWjlLZnVLcHlHT0dGam1VYmFvTlB5THFVVUFnK251eApXbmRjNklJbW4yS0RYOFZMSkFHVVhOdm5xdWFuZTZSMVNEZEdPb2pNNEdJVmV2Z0FmRnJPZlF1Y01wV3BXWkVaCmpHdk1OVndGanJjcTdhZ0hCNEpEZ05kTHBMVmpua2pNT21RTVU3cUprajFKeXYwTlFoNlB3YUZGQW9HQkFQY2sKV1Q3TXR2ZisyWE5OVG5DNHArbE83cWlKQnMrRXB6WHRGb09KNkZNcmZSUSt4dFVLMFZrQUpyWlYzc0M2VVIxVgpzNzVOa1BGR2x6QXJlWXpYRHFETEt0cTZ1SE5zT2psWEt0dXJFTnlDUzFXUHkrYS9odGh6Y1dPdWVTMW1GeGFzClJkQTdXMmZMdDJsTXpwM2ozY2FmM0sxYXpVVTJhV01zOXY5RkV2dkpBb0dBV1hIMm05d1hqL0dvbTZhOXVFdi8KSysvSlB5Y3EwMmVnam5aRkJ0YVFPRkxDUmZJdUFmMVVTS3A3RmJFMG9ydFJyT21tNFYwakpHQmpXNG1WejJUSQpCK2VQWk00MElhMHBOaWtGZ3JtdnJZWk9ZbTlHZndydGxORDZEdTFrT21tRTdEOVhlR0hTQkNNeklnZHRlblFaCmd2NjRQNWJ3QTdWSXVkS3JlWVZrQUQwQ2dZRUF1MkR5elZ0M1NsWU9WbzZCYjVPQnM3SGwzeUJ0YW45Z0s5SEQKWlIzMWFNR3JSdU5GNjVjVkhNNnhpME5WN1hnV01oQ2RoQ2JaUXlYTFVYbFU0a1RYMFcvWTRSZjY2NEJlTU1WMwpPQy9lUytINTdqaGxWMkZWZ3QwY1ZvQ2RYWjl1MkFEcnViS1hYZjRsNUkrWWhEdVZGWmgxUDNaOTlnRUlMR3FXCkp2c2ZKb2tDZ1lBRjU1aXF4TEJ0Q01WcVRBTWEweGl5MTNlaHVnNkVIZUNVcjIvQkJLTEFZTDF6TU1DazJ3cWIKbEJOOFJzSE9MQ3lRWXpDK2MvNlkwYS9yS2s3VDR2QUMxZElSTjAxcEIyKy9RWElxSkpNQ0VGL1NWTFhrOHluZQp1eitnVlVLNEJqVHk3WGtvcm9oZjNoNm5RcWwrdXprZHVNMkppQkVUNlBPTjkyOHJyQ3ZiVGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/aggregator-signer.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lJZDdoaHFBTWxVNVF3RFFZSktvWklodmNOQVFFTEJRQXdNREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sb3dHQVlEVlFRREV4RmhaMmR5WldkaGRHOXlMWE5wWjI1bGNqQWVGdzB5TXpBNQpNalV5TVRNME16aGFGdzB5TXpBNU1qWXlNVE0wTXpoYU1EQXhFakFRQmdOVkJBc1RDVzl3Wlc1emFHbG1kREVhCk1CZ0dBMVVFQXhNUllXZG5jbVZuWVhSdmNpMXphV2R1WlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFEUDBjN1RZcUJFWExtTld5bDZYSmVDVU1KdUYxZk9mdk1pb25tRllabnNTZy8rL3dNQgpCZi9RWjVwVGtsVTFGWUU2Z25ic1pOeldoMHA2UjV4ZHhsYTA5KytmVVdJRDdmeTh1bWpTUXYrNTZScmowUkMvCjBGMUJUYnZmYWNhbGJqSFZCZjM2dCtnNzBwYWluS0FiaWlRczZqT3VKMmlSUkNyc0VSQ0VqN0MycFFFMDhPbDkKNGluT0NkVlJTZjd5STZFQnFGYVZ4cVVBSDd2ZHVBTU5LdThLYkl2cVN2aDNCRGwxNWFFdDJsWVJBeHJLeU5ubAplN1lPcmxOZ3BOQmJRR0t2anBma3lQd294WTlSQWxoQXFXYzZjdTBqdmRhbWorQmdNMFltcE4rNUVNS0ZIOUtjCkNsYUIrZFUzWERQc0gycHVoZ1pCVTVMWXhUdldIc0dvQUVZdEFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUUKQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUWdabFFxV0VFSnFldWduRFU5RklrWgpTL0xhL0RBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUtURzkxQWwrb2UxK1R5UnhRYjZhTnFzaXlDbEw5YnBLCnVIdHFOdi95TXNrRmV5N2hKakorNG1kaW9oVFBkV2F6SHRVQU5taENFQittL2NpRTAwNm9XdkFDaDhTODBFcmkKTkNIeTljYzVNNVRKNDFNc1pjYm5ybXVIeFk4UlRNNkU4UTRTRWNuam9iZnFWby8zRGQyanlPV2E0UTBJb2hXcwpCcE9SbForN2dUZG1BNndXL2lXMkZyYWlvVWREY3ZxTnZpbkpUZUpNZjRhbURSZXRieTdMc0Z5eVpyQzRISjVHCmJxM05uRklSZjIxN3R1YW5yT1VMREFaa1ZxTG9id3lBZm1PamRwU1YvM0JyYURoSXBPRG5PY2lLY25NTmd0NnYKMVhidDVvcExCeWxWOU1HTWdPZVZmQlJpSHdDUCtzci9DQ3pRQkNxdTRrckxaM2ZUZGFqRmVBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/apiserver-proxy.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBb3hTdVJKR2c2VmpxcWc3eVJCd1BQZUorRzBrN0s2ZCtibWRQbUI3RmIyZnhFT1Y3ClV4dkNWNlpVZWg3ZHJja1B3K2hRNW40VzhHdU1oNlp3NzUyeW1vOG0zMTl4Y1VvWjhMNHU0dkt4bGlreXE1eE4KUDUyaHFrbG9xbEd1cG1LREh5Y2tZaUhxKzNyemU4NVo3cDFEaFphU1pHKzBMWU5SY0VtNTl4YnFDLzFkdk9FeQp2dWlYNXp0Vk5ZU2tmTWVOSUZTSldyK3huWHJoYlhLUTRiTTlwVlZiaUIzeExkcC9JTXJhUkxJZmhpby9HRjJZCnRjNlBuUXdyRDlnaVpWMlphR1hlc2t1MjMzTUVKZW9vZnJyTVFzN1lIYkVTNWJEam9salNLL0h2akt2RnRhUUEKUnI2UWhwMTJmNHpwa1l2MzhCZCtuL0R0bUJPWGl5b2F3SmtPeFFJREFRQUJBb0lCQURHa0FPdjBYRVBMZ2hyagowOUR4clo0THpKRW51SEF3V3VibVlhOFBacy9qbHRpcTBlQlphYzNlWG9hUjBLNnVyakxYQzVFdHZuUE9lUWR0Cm5hRUNvclF6Y1FTN2U3K2RhOG9CU2lwZzc3ZWlzTDdXSkJtQ05ReXRyY055ZTdRLzltUE1PV0g1cXhxRHNZdjEKSXlEa0ZBS2M4OURJdzlLNnoxWmJ5dFN3eit0MzV0NjFOemFQQmVrbk5sU2lzcHY0TGlpVUI5VlJSMDkreGsyNApZczl3Ym9uYk84dlZZaExQbS90Z1VmZUhzZjN5TEl2L2hBdjdmSkZlcFp0Y1Uwa1h1MmdQdVgwckJlSzVYWnEyClV1VUpjcEtZRGdyemtsNkZUSFlZRStHREozSHpMWTNQUVd6NlZmd21QNWg1Q3JibGtFVEVoRnZUQzlDclVmdHUKTmk0cnI3MENnWUVBMElqTllTejVjeFpYNERPR0h2UjNQdlRKcHRlWFZWRytKZTcySU5LVngvTkFkMm4wQ0F5QQpWUWVnRlM1SFkxQ0hTbUVrTjhqaHhUU0pGanJkUVlkRHhPbDRoN1duVmRPT25oRDJWRko5VjFKUFFybTFGREFQCm5CdHdvNllEZmhLSmR2eGVRbEF4b05uWGZQS0FjYkRPWTZmeGRaUW9TZHg4ZHMrOHUvM3VBZ01DZ1lFQXlETlIKdGowL2U4U3JrSGpHQjJEVWdhVXVkVkJ3K1F6cmdxQTllVHlYVlJqSTZibVEwVVdSK2dPbjBnTVZGVGpOMlhHbwpPaU43bko5NHlqSmRWZWpVTGpMK2hBZjNnajk1L0ZCRUoyTnQ0VElkNnhtcGc5SjRLZURiZ05td3JnOGRLdjloClNuY3dWZlZUbVpxeHpYeGNBb2xObFl3Uk9lRVpRWk1EdGVQRDlaY0NnWUJaK094RDVSZXJaQlIrRXp6bTFpc3MKNm9pbWg1WXZwWmtZM01VczNDN3JtalJTVVZDTXVIZ1dON2dGNjNXNWorRVBZbUl4LzJZSm8rVVJ4a3Y0SGRoTAplVUFiclhDSlEwSGhTUWcrMFdocTZJUnlFWlhqSStsWVBTNllMT1NNM0lxYTM3LzdkSVkxRkVnNURKZ0dkWFpXCjRQcjQ4L2QrQnJkY3U3eCtqOHpFNlFLQmdCc2JwOUxQVkV0RUJCOFoyMmFnVytYNkllSk10QjlrK25iRGo4OWMKdnZrTTFCZWh3dFF6WVdMREgvUTE2cUxuQUNpVFZUNGFFK0RQVHlIQjFCV1A0enNtT0lSVU45VnhGdWx0VE8wdwpiMjV3eE5CU3R6dGNRbDBaVDErUkduVlhJcEh4NXBDWXR2ak1zVGM1VlI0SDJzV1ZKZVk4QXhFZFE3ZzNXZWRGCklnR2RBb0dBQVNSemFpeUY4NWpmWEU0dkhESURodlFieXVFWkJWY1o0UXlJQ1UxMUx3bGpnODYvZk42MmdaZFQKNmV3SUNkSkNRa3c0QVJSdVk5UzFKOE4yZiswMS9xR3ZDY21LbEVwclBWY1NQVFgyRy9FK1UreWZCVThRS0MrVAovYTJxb0QzNUxNL0doMUdXVnNGQ09nUUFiMTRNeUhuTGl0MHRrZEFOZHVPRXRWRDV1M3M9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/apiserver-proxy.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXekNDQWtPZ0F3SUJBZ0lJQlc3aG55RGY1MG93RFFZSktvWklodmNOQVFFTEJRQXdLREVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEV6QVJCZ05WQkFNVENtRm5aM0psWjJGMGIzSXdIaGNOTWpNd09USTFNakV6TkRNNApXaGNOTWpNd09USTJNakV6TkRNNFdqQThNUlF3RWdZRFZRUUtFd3RyZFdKbExXMWhjM1JsY2pFa01DSUdBMVVFCkF4TWJjM2x6ZEdWdE9tdDFZbVV0WVhCcGMyVnlkbVZ5TFhCeWIzaDVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUYKQUFPQ0FROEFNSUlCQ2dLQ0FRRUFveFN1UkpHZzZWanFxZzd5UkJ3UFBlSitHMGs3SzZkK2JtZFBtQjdGYjJmeApFT1Y3VXh2Q1Y2WlVlaDdkcmNrUHcraFE1bjRXOEd1TWg2Wnc3NTJ5bW84bTMxOXhjVW9aOEw0dTR2S3hsaWt5CnE1eE5QNTJocWtsb3FsR3VwbUtESHlja1lpSHErM3J6ZTg1WjdwMURoWmFTWkcrMExZTlJjRW01OXhicUMvMWQKdk9FeXZ1aVg1enRWTllTa2ZNZU5JRlNKV3IreG5YcmhiWEtRNGJNOXBWVmJpQjN4TGRwL0lNcmFSTElmaGlvLwpHRjJZdGM2UG5Rd3JEOWdpWlYyWmFHWGVza3UyMzNNRUplb29mcnJNUXM3WUhiRVM1YkRqb2xqU0svSHZqS3ZGCnRhUUFScjZRaHAxMmY0enBrWXYzOEJkK24vRHRtQk9YaXlvYXdKa094UUlEQVFBQm8zVXdjekFPQmdOVkhROEIKQWY4RUJBTUNCYUF3RXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVgpIUTRFRmdRVVZSd3NjcTdFQlhIUlgvck1ROGVhOEgrUlhtc3dId1lEVlIwakJCZ3dGb0FVOHhtVGFpUUhMZDh4CnUwem5aZDBoT2hFQmlVMHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRDlaenQxam9GaGJBZlRmZWpnZHV5Wk0KN3pFSy82Uk4yUmdKTllnSnVpUmJ5SVhVTDVzWUZuSklzTndvd1QzTXJrMVM2K25Uc0VJU05Mdjkrb1BOVHVTOAp0RlRDcGNKajdQSjJ2RFl1MlhpdDAyVW1MNXNTME4wOU1LN05TWkhhQWZ1dUM3Yjd3cUhXZGZrUzM5UkhPdDIwCmdGUGxUL0JoRVRXRndiaUYyS1pHZ2VsNEFHZm1kOUUxU05jeGc4TVdLT2IyaWxVYmJpZzdpWUZ3QUNBd2xMWFoKM0NmU0FPQmZDekVnaGMraGlQU3BLQVo1RjU5RGFoVEhOZEk4cEFEUmNLazUza1hNOUhocG9JTm4xY2pKckhtdwozWHBKOHZucmVCUmVyOXJDcDl0dDFvMlNZQ3BIaW5QUkMzSnFmUk1QcWs0RGlYdEdkQ2UydlJiaWJpOFVZVDQ9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-lb-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJTVF2VExZTmxlYkF3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd09USTFNakV6TkRNMldoY05Nek13T1RJeU1qRXpORE0yV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS2FBdU56YVk4VmNhMkNIbk04bnZody9FelFkbXFSeApLM1hpK3pMUmJKZUsxZko0NXFsOXZVeVBjM0MvTjlXVGY0TUhpWGYyV1laTENvZmFUa0plYks1SWFrN2pBb3IvClpqYjlHNnZDeVNtbDkzMm1WOWJnQU5USVc3YzVOR2J0Q3dLKzZYeWxQdnlPdmpuM0RUWGVzTzF2QTRVL2t6V08KaDc3Tkp1U2RyRm1lTk9nUnNmWVdKeEMwRy9semsrQzc4ZmFCazJIMDd3cGo4WWZTRnRkZ1RHVk00VFVIbE0xawpXQkJTaDdVY24vTDlDZmExTnlBM2JXWjZGTTl5YU9pa2dmdWE1MlFJSjZxKzZ0RVkxVW5zWndZUmpESnRBWlpGClBJNnQ4VytCdlZjY3FZTys2ZGN5ZWN6amJZa3RpcEdwRDFFZlNnR0c4c1YyVzQ3UVpDUk9CeGtDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk5ZTAppdFVmVmdiekVxSlFCZTU5TUtmaG1sUU9NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJBWmd1am1ZRE1WbU5JCjJPbjZGNHp6VUM3OG1lNFpCQ3Jyd3lSWXZGRk9KTzdldzYwNFBQQ1lSLzNPSllaZHdrK3Y1bEozT0FIOWo0a2oKV255TGNpVkdqaG8wNjNyY21YV29JU1JIem1aeVdKaWVzbWFnR1c3Y0U5ZGFlNnBHamR0N0FBTWZBYVNFbGt1RgpIR1ZwQUpWeHE5bytmcE9md0VqM2pRSUxYcy9NWE1QU3FMK3ZxbnI3SkZKUGFCM1ptSExaMXBYUGhQNGkyc2VsCkRSRjZVUExGcVk4WkloZlVxUXAra2wrcHEzdExENkQ1S25kTzBSY3ErM2hReGFQek0rOXkwSUI5aWZKUHprU3EKVDdOWXgrL1ZpRURNREdkbjhyRmJsVXROdGdOa1dvL2NONXZ1TVREdDVxRWtLZ045cnJRWGNPUGxNcXN2OHNFRQpZeUJqV3NSSAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-lb-server.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMWtXSHpSL3AvbVljSldyd21jditWemFia0t6ejNRZEJDQlY5MVc2OHJzYituUi9yCjBMKzF1c0dINkVOWlpoMGE0WXVUVGY3Rll5b1dMUnN1RFZLeGUxR1BsWDFHcC9zNGFVMjkvYlNqNGlCWVh6bnYKN01nSDRYeC9yNy9xOEg3Q2JneDJFSEhtOGZmNURSeUJYTW9ZZXNPRjBBOHFtejdPUStjUFlqcHVhSmFxWWdsLwpmZnpKTnVTc3ZsMDNEb2NOSCtGbTNlZ1JMdDk3OEd2K1d4WGJ6RkxPeTM5cFlUcWhrV3cxdG13Y1d1akRKbGZGCkQzSk1seStmWDBteG1QNUg5TGhNZWYrWWp0RDcvaG8wQ3JsSXhJb1dyYzJzb3FkeVdsUEN1aTdSaDI0T2JBWlMKM2lPa2Z3Um84VWtGb3RyeUR1OFFnend0N2xvelN2a0xQREh6elFJREFRQUJBb0lCQVFEQXBiVUtaUll4eDBhcApFYlFPNHd6akJ0THBTY2JidzhqaFpzbERHeFFEcENDSnpvaHJuK0haYm1VdUcxZUdhc2FmWUtscEo1WDZxWDFVCndxb3VDbHBPUUs5eXZUYklreU5OOGpyT254bjFsaFUrVU0zNU9vTnpaVWM4RWJZKzBna25mb2FzRkd5S3d1T2wKdVNwSjdkNENpa2FHSVF5eWxjNUgyTGZKSGpYa1MyTmZtTnNuQS9qVUV0VmNyL0R0SlVTNWU1Qk9UMG9IQzNZQwpLY1RoRjVzOVg3TkVRQThKQytpNzVKcmdYOWE4QUg5VWRTbkk1dnZzbXBJQ2FMRU9NMkRQUTZrSGhxV3o4akxYCkt6N2t2TS9OV1J2ZllIN0MxN3R0RWVnUWVBM2dKcWo3Uy9oelY5MXZHb3NCckU4K1YrQlNXQVNad0JNS2tqcmcKckJwZlN6ZVZBb0dCQU5iYkVGM3hlVHMya21EWVBxSlkzYmNxYkZFS1F4TGs0eDY4Kzh4dmg3RWtwbmRpalhXRwpCelBlYW1lVzBSM3l3QW85enM4ZUd6N01WTVU0WGxjR2o4OHRyRFc2TEo4VVVSRzBYT0FkbEhkaEhUZWRUcTI3CmV5bDNVODUrUzB5QkZLek5SeTNSM3EzbU54Q2VtQko5aS9YNTFNcVI0Q0FDSDV6eG1aeGhVL0pyQW9HQkFQOU4KMU0rVEUvOXA5Rm1qaHhOcGtHT3I3NWFJaGRxTmd6c0Y3dTdGRUY2K1BEbVNNam5qSTRsbTBEcTFuNHJLd0ZQWQorWU1panFxTGdOdlRKc0dYeHlWbnVsTlg1K0FyRjhaWDE0alY2Z3VpN25RNk1LdHg4cUFxMVRjUTdJaUZkNDhICjFkaThzUHcvMll4MU9ibGpzV0VuemcwRktmYzlxZktQZWhIbElIQ25Bb0dBWGo5QjhyT1dCazl0N21WdE5ESGYKTUJXLzVkeW1oNGMzeWFnRW5DemdUT2hTelZQQjBhZTFTUjlyZFgxR3hlaFNMU3ZucUJzQXdJOUpNQ29GMkE3Ywp6bml1YmZMNDE5OUZvSXFKb3hYV3BuZEhKYm92WlM0MFhJQW5seEQzWHR2UWdleWFLSk5ESnUweGdtelBNRzA2CkUvQS9VNHloeitpZWpXMjlnRWVCVjNrQ2dZQTV4M09TUnNjUDF2cm1Eb3hUYUdDMUxnUmJIU3F0KzdqbmNzQlEKYVdqN0NESzVGTTBwTEs2dU9nYUdRdlNJaExwaVA0aTRsT21VejEycVltOHpBUmFnOElqS3MrcFdZV3BRQ1RGTwpWcHRSWnQ1d2ozclVVa1dHMmlyRys1Mk1pQ2cyeHA4dkhnVXdFWU02dG8wSjEvWWM5dFU3UFIveVJKSmh3dmJ0CmRkMlJvUUtCZ1FDVW1FcXAxTVpSVXlKdDNHM1IyZ0YrMzVMck1xMldTRTlIRDhwSi83QVRqN0dETE93b2xUdWYKbWlUNTF3Q1pGSVB6T2NNYk1YVVFDNnVvd3VFcmo3VU0xT21rWVJEMGV1OG96Znpwc0ZTbU9KQ1JVNXJIQzFnYQpzVDZ1RWZaNi9UNVJlaU9wSmFZN3NDNy9wWXN3NC8rVm5OZnFqSldvemljWVdMcWNVdlpKMGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-lb-server.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURsekNDQW4rZ0F3SUJBZ0lJTStIdlNaWHNDb1V3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd09USTFNakV6TkRNMldoY05Nak13T1RJMk1qRXpORE00V2pBMk1SUXdFZ1lEVlFRS0V3dHJkV0psCkxXMWhjM1JsY2pFZU1Cd0dBMVVFQXhNVmMzbHpkR1Z0T210MVltVXRZWEJwYzJWeWRtVnlNSUlCSWpBTkJna3EKaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUExa1dIelIvcC9tWWNKV3J3bWN2K1Z6YWJrS3p6M1FkQgpDQlY5MVc2OHJzYituUi9yMEwrMXVzR0g2RU5aWmgwYTRZdVRUZjdGWXlvV0xSc3VEVkt4ZTFHUGxYMUdwL3M0CmFVMjkvYlNqNGlCWVh6bnY3TWdINFh4L3I3L3E4SDdDYmd4MkVISG04ZmY1RFJ5QlhNb1llc09GMEE4cW16N08KUStjUFlqcHVhSmFxWWdsL2ZmekpOdVNzdmwwM0RvY05IK0ZtM2VnUkx0OTc4R3YrV3hYYnpGTE95MzlwWVRxaAprV3cxdG13Y1d1akRKbGZGRDNKTWx5K2ZYMG14bVA1SDlMaE1lZitZanRENy9obzBDcmxJeElvV3JjMnNvcWR5CldsUEN1aTdSaDI0T2JBWlMzaU9rZndSbzhVa0ZvdHJ5RHU4UWd6d3Q3bG96U3ZrTFBESHp6UUlEQVFBQm80R24KTUlHa01BNEdBMVVkRHdFQi93UUVBd0lGb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFUQU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdRV0JCUkIxMVU0Zy9KQlNUbi9aRnJmakttdjdJNnhNREFmQmdOVkhTTUVHREFXCmdCVFdDNHJWSDFZRzh4S2lVQVh1ZlRDbjRacFVEakF2QmdOVkhSRUVLREFtZ2lSaGNHa3VaV1JtTFdSbGJXOHUKYzJGdVpHSnZlREU0T0RBdWIzQmxiblJzWXk1amIyMHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQ2h5eXFKeApPekQrM010Y1dXNXA2WHZVallramlDcjJuNzVMZnBNckUrSk1FelpRbWJ4dEw4OVFvL28zbjJqajlOclRuNU1hCktlZEFHTmZkRExrdWR4QVVSbk5aVTZzeTZacGpLSytIVkRsTDQvcnZrVDFjTHFKbGp1OUhsY2t6K2JVN0IrWm4KSVdHR3orajZTbllFbHNlZ1VVaWd4ZUdqOE9wSnd0UHJ4eFNnekEvOUJwV1BTK3NMVDZoeVFFd3M0dkEranFyawp0TDlZbi9ZK3R4RWhIb3lSZUNzdENWWVd6RkxxQWtBVDhDWDhqYnIrL2ZhN1ZFLzNRSExKMmplTXBDY1diZ3lNCnMzbTRlQ3JQdVcwT2ZZa1VSMkpZYk9OYkdIeWhVOWEwa3gvMHM5WFdKRVJiUU9zcE1YL2praDdNSU1YTGtMMkcKMG5vY2Rjc25ONGljb1M0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRE1qQ0NBaHFnQXdJQkFnSUlNUXZUTFlObGViQXdEUVlKS29aSWh2Y05BUUVMQlFBd056RVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNFd0h3WURWUVFERXhocmRXSmxMV0Z3YVhObGNuWmxjaTFzWWkxemFXZHVaWEl3CkhoY05Nak13T1RJMU1qRXpORE0yV2hjTk16TXdPVEl5TWpFek5ETTJXakEzTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhJVEFmQmdOVkJBTVRHR3QxWW1VdFlYQnBjMlZ5ZG1WeUxXeGlMWE5wWjI1bGNqQ0NBU0l3RFFZSgpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFLYUF1TnphWThWY2EyQ0huTThudmh3L0V6UWRtcVJ4CkszWGkrekxSYkplSzFmSjQ1cWw5dlV5UGMzQy9OOVdUZjRNSGlYZjJXWVpMQ29mYVRrSmViSzVJYWs3akFvci8KWmpiOUc2dkN5U21sOTMybVY5YmdBTlRJVzdjNU5HYnRDd0srNlh5bFB2eU92am4zRFRYZXNPMXZBNFUva3pXTwpoNzdOSnVTZHJGbWVOT2dSc2ZZV0p4QzBHL2x6aytDNzhmYUJrMkgwN3dwajhZZlNGdGRnVEdWTTRUVUhsTTFrCldCQlNoN1Vjbi9MOUNmYTFOeUEzYldaNkZNOXlhT2lrZ2Z1YTUyUUlKNnErNnRFWTFVbnNad1lSakRKdEFaWkYKUEk2dDhXK0J2VmNjcVlPKzZkY3llY3pqYllrdGlwR3BEMUVmU2dHRzhzVjJXNDdRWkNST0J4a0NBd0VBQWFOQwpNRUF3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTllMCml0VWZWZ2J6RXFKUUJlNTlNS2ZobWxRT01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQkFaZ3VqbVlETVZtTkkKMk9uNkY0enpVQzc4bWU0WkJDcnJ3eVJZdkZGT0pPN2V3NjA0UFBDWVIvM09KWVpkd2srdjVsSjNPQUg5ajRragpXbnlMY2lWR2pobzA2M3JjbVhXb0lTUkh6bVp5V0ppZXNtYWdHVzdjRTlkYWU2cEdqZHQ3QUFNZkFhU0Vsa3VGCkhHVnBBSlZ4cTlvK2ZwT2Z3RWozalFJTFhzL01YTVBTcUwrdnFucjdKRkpQYUIzWm1ITFoxcFhQaFA0aTJzZWwKRFJGNlVQTEZxWThaSWhmVXFRcCtrbCtwcTN0TEQ2RDVLbmRPMFJjcSszaFF4YVB6TSs5eTBJQjlpZkpQemtTcQpUN05ZeCsvVmlFRE1ER2RuOHJGYmxVdE50Z05rV28vY041dnVNVER0NXFFa0tnTjlyclFYY09QbE1xc3Y4c0VFCll5QmpXc1JICi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-internal-lb-server.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcXNKK05iTnZlcnM0SVBNNEUrN0VnTnRyeERCd0xtRnllT3d3R1RKSGZhbnIrUVhZCmdJNlowN1lEYkJYOHVrOFVyQU5EVmZVWjBGeUFuc0NUVG13cUpEM2RzVnFPOEorbHo0ZCs3S0dGSEpvSGYyV1cKMmxIQTJaVmRlOWs1dzdVU045TFJyZFpZVWdQMnVHemlTbXRic1FTTXRhUVFwQmJlVVI5TVMyRXZGMjNXMi9QMQpWRnB6eFhMQ2gwdnpnaEszY09RTitGMzcxWHFJcXhaWHUxOFNWK1hUc1IyT1p5ZmJCbmNtRjBRUktKeE9xZGpTClQxeE1yNUZ5eUFwZlB0U3plMlU4VCt6aEtxTGdTUVQza3V4Nk1UK1B0ZGxXYWxuQ2MxN2pqdEJISE5xODZxTzYKV2hONk1QbWlrckl2bXIxTG91Q3dzUktUbGk5YzM2NTZsSGdVOXdJREFRQUJBb0lCQUZqbURwellnTll0ZCtnMwpsMTlSTS80OXZab1MrYVE3MlVPNCtzVnpWcUxHZnZKVEo4YXQ5c213ZlpHYzFNa04rSjRneU1LTWF0YitBWHdrCmw4d0JKZU5lVGZkU1JRNWlud2t1NmxZNU5McVNPZ3NLRVlJeGc2d0RSZnIvT1VKNUZ6WDJ6SENySWFuNUpFNFoKYWFvQ3dHYWxEcmhWNU0vNGs5ODU0eGR2VGZ2c3VsdVlXSVpYNmZiNnFQLzN1ZjZQSDQ4NG1LMHZFV1hpR0tQUgpjdXYyQXp1SDRBdUVlOEFkVVNpYTEyUDFYQ0k4eHFsTjhjZXRKK2JaOGdpNWdXOTIrVXNCVkMrcHovZDgzeWRQCmFGNEtESGV4TEUrYWhaQUI5b3dFZCtudVNZWWJrUFJ0L2llTGxPR3dNNmI1L1Q3OGQ2cFVZZHBqY2lobVdQekUKYXFuT05BRUNnWUVBeXFTRlVNTk42cDVRRVdRSjE4YWpYenZSUWl6RkVZQ0ZLbGd5cUhtdjBRSWxtdTlBRnA0YwoxZkxFa3lLMnM1aEhJVytjQmpSMGJQSFZhVXpoNXppeElPb01oVHlrSllUeG5vN0k5TVpReFZlU1RMVlQxdStrCmdCN1M0aWV4WXYvaXhyeElWUzlScXV4dDlJZ2FXTXp5WWFvWWZ3VXRXOFNsZloycFYzZWNCdmNDZ1lFQTE3aloKU01Lb0VQWHdyd0NMRDg2NWd5Y2I0Q3NDWWY0VFprN0t3T3A1MktsMGlIbXVTeWpibHlKRXg4MHRjN2RUeUNibAp0dy9GaFMyVnkxbVhxaEg1MGI2VUVFbXdnUnpuVjVjZGp0MWQvVDRkM25Za1lpa1pqcHVCQ3p5SUFiMTVydUxjClZ3YnNpMXk2UjRSWmRNcFg1SzBWRmI4WC9ONE91anlLTEJ0NjRnRUNnWUFqWjE4TFh6UHJ1OEVOYU1iM2RmTHgKSG9oTzRYZUV1VW1Ldm1JTFlVZEFZdm1pK2czZVpiMXYrN3d3WUs0KzdtbnZBNHJrNHFFOHIzdXpyQVVEMnJuSApvRnlUb3FhakQza1BWSzd6WlBxVG45c2xuOENJR3RKSXVCbnIvVGRXcnBJMldvcmdweVhEa1E4YzIvS09kVEFiCnRCWVhpeFlEcEhXdFhyQkpZZEpXdlFLQmdDN1luWmNIYnFnQVFMeEFTZktzMmV4NVdieGNtcS9kRlNscWd1MVIKL2hQbStMK0tiU2MxUURxWjNvWGxNTEdvWmpGWkFSbTMreFRveVZiWHBlL3c1MmQ5RTNwV0JsYURpRm1sSDI0ZQo5SUpDTXdwVWJhSkRlcUZWYzdpVTlKUXNLWGlwRzJCcXlJT2JKM2pRYlB6SDFENTh0ODk1S0NScHRKa00vSlNICmd6QUJBb0dBVmRiZHpuZjRlVmJMajJWUmtzVFhINStDU1JJVWx4UFZBVU9KYmNFb0hPQjRBTitiZWJtZXpEeFQKWkd4UGhNMFhuNUM4RnJ3WSs1cVlnSkR0NWw0OUFtQmZEd0ErSWluM3JJdGM5My9uc29mTWVFVUFoV2c1R3J6WApFdGc2U0RJMTJ0TWRXaURXNXIwdHVQRnJSL21WSWV4WVkvVlAzWnlzQi9UMHFhSDlvTzA9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-internal-lb-server.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lJZTBWZGhBd2Nsa0V3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd09USTFNakV6TkRNMldoY05Nak13T1RJMk1qRXpORE01V2pBMk1SUXdFZ1lEVlFRS0V3dHJkV0psCkxXMWhjM1JsY2pFZU1Cd0dBMVVFQXhNVmMzbHpkR1Z0T210MVltVXRZWEJwYzJWeWRtVnlNSUlCSWpBTkJna3EKaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFxc0orTmJOdmVyczRJUE00RSs3RWdOdHJ4REJ3TG1GeQplT3d3R1RKSGZhbnIrUVhZZ0k2WjA3WURiQlg4dWs4VXJBTkRWZlVaMEZ5QW5zQ1RUbXdxSkQzZHNWcU84SitsCno0ZCs3S0dGSEpvSGYyV1cybEhBMlpWZGU5azV3N1VTTjlMUnJkWllVZ1AydUd6aVNtdGJzUVNNdGFRUXBCYmUKVVI5TVMyRXZGMjNXMi9QMVZGcHp4WExDaDB2emdoSzNjT1FOK0YzNzFYcUlxeFpYdTE4U1YrWFRzUjJPWnlmYgpCbmNtRjBRUktKeE9xZGpTVDF4TXI1Rnl5QXBmUHRTemUyVThUK3poS3FMZ1NRVDNrdXg2TVQrUHRkbFdhbG5DCmMxN2pqdEJISE5xODZxTzZXaE42TVBtaWtySXZtcjFMb3VDd3NSS1RsaTljMzY1NmxIZ1U5d0lEQVFBQm80R3IKTUlHb01BNEdBMVVkRHdFQi93UUVBd0lGb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFUQU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdRV0JCVGZLd0NsTVczRjkyNUlXREZybnB3azVrVFR2VEFmQmdOVkhTTUVHREFXCmdCVFdDNHJWSDFZRzh4S2lVQVh1ZlRDbjRacFVEakF6QmdOVkhSRUVMREFxZ2loaGNHa3RhVzUwTG1Wa1ppMWsKWlcxdkxuTmhibVJpYjNneE9EZ3dMbTl3Wlc1MGJHTXVZMjl0TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBNwpPTUJ6NTN0VlJTbFFMRDdPd2lXTXBLQXR2Mm9yN0NlTDFQQWFmVTUzNnNTNVBFd3JYWlBkRXIwQjlVemc5dGRxCld0R2lQTzh6T0YwRXE4RXhBelZGY3Q0SWkyQVFqMVkvbHhtOHg2RDdaaHYzWDJiL1NoNVZYWkZlYVl0UHErck4KZXAzbUdYS0JGNTFlcW4rU2t6STFxUkswVVpuc3Rsa2gvUlNFdGJoWHRNanRQcjZhMVkvRjd4UkpSUTF1YTZ3VQpYWWxISDNwSTFZMzFEelN5S0lubFMrWlVoK0JGZTg0bmlSaGMvK1JDaVUxRjhQdGp5Mlkxb1UrNTFNdXdUYUhzCjhyZDltUy9Jc21QYllIblBiOTRrWlY0MXRUTGsranJuV0M5c2RaTzBwckF4QnhRTWRFa3c2R1ZoYWR3R29DeW8KUGFvRmprSEUvVUdOUFpSK3psaTUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJTVF2VExZTmxlYkF3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd09USTFNakV6TkRNMldoY05Nek13T1RJeU1qRXpORE0yV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS2FBdU56YVk4VmNhMkNIbk04bnZody9FelFkbXFSeApLM1hpK3pMUmJKZUsxZko0NXFsOXZVeVBjM0MvTjlXVGY0TUhpWGYyV1laTENvZmFUa0plYks1SWFrN2pBb3IvClpqYjlHNnZDeVNtbDkzMm1WOWJnQU5USVc3YzVOR2J0Q3dLKzZYeWxQdnlPdmpuM0RUWGVzTzF2QTRVL2t6V08KaDc3Tkp1U2RyRm1lTk9nUnNmWVdKeEMwRy9semsrQzc4ZmFCazJIMDd3cGo4WWZTRnRkZ1RHVk00VFVIbE0xawpXQkJTaDdVY24vTDlDZmExTnlBM2JXWjZGTTl5YU9pa2dmdWE1MlFJSjZxKzZ0RVkxVW5zWndZUmpESnRBWlpGClBJNnQ4VytCdlZjY3FZTys2ZGN5ZWN6amJZa3RpcEdwRDFFZlNnR0c4c1YyVzQ3UVpDUk9CeGtDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk5ZTAppdFVmVmdiekVxSlFCZTU5TUtmaG1sUU9NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJBWmd1am1ZRE1WbU5JCjJPbjZGNHp6VUM3OG1lNFpCQ3Jyd3lSWXZGRk9KTzdldzYwNFBQQ1lSLzNPSllaZHdrK3Y1bEozT0FIOWo0a2oKV255TGNpVkdqaG8wNjNyY21YV29JU1JIem1aeVdKaWVzbWFnR1c3Y0U5ZGFlNnBHamR0N0FBTWZBYVNFbGt1RgpIR1ZwQUpWeHE5bytmcE9md0VqM2pRSUxYcy9NWE1QU3FMK3ZxbnI3SkZKUGFCM1ptSExaMXBYUGhQNGkyc2VsCkRSRjZVUExGcVk4WkloZlVxUXAra2wrcHEzdExENkQ1S25kTzBSY3ErM2hReGFQek0rOXkwSUI5aWZKUHprU3EKVDdOWXgrL1ZpRURNREdkbjhyRmJsVXROdGdOa1dvL2NONXZ1TVREdDVxRWtLZ045cnJRWGNPUGxNcXN2OHNFRQpZeUJqV3NSSAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-lb-signer.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcG9DNDNOcGp4VnhyWUllY3p5ZStIRDhUTkIyYXBIRXJkZUw3TXRGc2w0clY4bmptCnFYMjlUSTl6Y0w4MzFaTi9nd2VKZC9aWmhrc0toOXBPUWw1c3JraHFUdU1DaXY5bU52MGJxOExKS2FYM2ZhWlgKMXVBQTFNaGJ0emswWnUwTEFyN3BmS1UrL0k2K09mY05OZDZ3N1c4RGhUK1ROWTZIdnMwbTVKMnNXWjQwNkJHeAo5aFluRUxRYitYT1Q0THZ4OW9HVFlmVHZDbVB4aDlJVzEyQk1aVXpoTlFlVXpXUllFRktIdFJ5Zjh2MEo5clUzCklEZHRabm9VejNKbzZLU0IrNXJuWkFnbnFyN3EwUmpWU2V4bkJoR01NbTBCbGtVOGpxM3hiNEc5Vnh5cGc3N3AKMXpKNXpPTnRpUzJLa2FrUFVSOUtBWWJ5eFhaYmp0QmtKRTRIR1FJREFRQUJBb0lCQVFDQ2VEZGppQlhLSHlOYwozcWMzaEhMcCsxcjI2WU8xKzZBTW5qSXNuZ0l6dFd6MHRWdzV6L2UzdUdqREhuT0gvaTVhNUZzS0Q1WVRMMVl2CkloZFUxbHpmTEl0eENWMkN3YUs4MEJVUXdHK1ZIU0lUNlhiSFAzd25RR0R0Ny90cDg3RS9FNDR1UitaVlRSMHUKbXJKVlZnelo0TFduZ2l1K09kT1E1WHptZzg3NzRVTHRpak9IQ1psYkJVaEd5cWlUSjlSaE9OT1hWbEQ4QjJ2VQpRbjh4c0xUL2xiY1BjTURJK2hoTDhFemxSdVdsTUdmSi9YM1VqYkM2bDBpUm1Sa0l4THFSTU1XZ3lwVHVVM3J2CjdBRDlUa2FTUTQ1U3ptdVR5bUpWV3JMNENqU0RoRVpaS3g0b0JMdkRmeDJoZ0pWeU1JR2V6YkwzeUppeWZWYjgKZ3QrRjlVQkpBb0dCQU1pTXNzR043bElxOTRHZWRoRnZkbHJYZ0Z0MlJKcEFDRHMxMURocFNOM1Z2dXJiK1V3NgpIcS9rZm5NQ2lXd2VBcnVXNldrQ3c0bXJWVThhR3VVRmdXSmdPZ1R6MVRuYXhhbWFEMERpeW41bEpOcnVIUnRFCnVONTcyRldVcnEwcWhiNC9yajVoYlNwYmphNUxNdUI2OTVQdUtHcHdHWDBTZkVJUlR5d3A4OFRQQW9HQkFOU0sKSCtTMHN5RjBQQ1NSd0RvZTlSaEI1MXkxalZXNTFmNitlVWZJUURjOFYxMEEyaDZJZUY0MnB5UlFEV2tJRUZoUAo5UlQyTkFGY1NmUmt2dlg4RitQOGx1REdoS3lwNzU0UENIVmhMeHdQcTd3aDRjZHJvVXM5MUhYczJDcEIwbHhqCmJ2V2tLQ0pZNGxRY2VwVzhha0hWU0sycnRmQjVjeVhwNDdQSUNqK1hBb0dBWXZSUmk0R05zMHR5SHFuaWxnM0sKZDE1WC9ra241bmhyMTFOaktJYUNwcnE5M2tLMkNxK3V6cGxPNzA2MElmM1kyVmpJU01GTlhGT0czMllCR1RvVApNa2hLdUlEYm1CVmpiS0VRbjdLSHVjQU1aRjRUVEk0bkxkZ3IwV1p3bmc4YU9OcFJEb1NpQ2NGczhqQTJwVjduClpEMmlBWXJZZU1jek9xSXh6NWZQcVM4Q2dZRUFxMDNnd3Q5NStaN0wwdFcrejVtZ0Jqc29GU3NualU3SlVoZUgKZlBuRCtFRWtVUXVjd2p0UWVPOG43RGF4ZUZSTmlFQjUwcmxWMVRyalNKM2k1RFNadE9JallXdmdCNks0UlBicwo1RjYrTDZuWnl6cXIxYVhFVFBhNnhZbHQrVEV3TWRMYTNoVy9XMSswbkFLUU14dTNzUFFOTGgxVitVcUtLcWJICkptSTNFR1VDZ1lBWjgzQmJ6ajBOMWY4b3lNekYxbFhNSVIzSzFjVHBNeVdtK1dEcjZTTWpaTGtIbUNMK2VFbUoKaFNDTHFZaWoyRlFFdE0xb2xVQU5MY2JTQzdnZ3lwV3hqbEpPSjBvOFhmN3pqSG9sYXk2WGNDcEFDSlMvNUlHVQpwY2o5eThpK1QvWWQzQ2xBTWVDRWUxNmt4OVFXalpQWmkzV0drNmtId3ZaRDMxQ1MrNVY5RkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-lb-signer.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJTVF2VExZTmxlYkF3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd09USTFNakV6TkRNMldoY05Nek13T1RJeU1qRXpORE0yV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS2FBdU56YVk4VmNhMkNIbk04bnZody9FelFkbXFSeApLM1hpK3pMUmJKZUsxZko0NXFsOXZVeVBjM0MvTjlXVGY0TUhpWGYyV1laTENvZmFUa0plYks1SWFrN2pBb3IvClpqYjlHNnZDeVNtbDkzMm1WOWJnQU5USVc3YzVOR2J0Q3dLKzZYeWxQdnlPdmpuM0RUWGVzTzF2QTRVL2t6V08KaDc3Tkp1U2RyRm1lTk9nUnNmWVdKeEMwRy9semsrQzc4ZmFCazJIMDd3cGo4WWZTRnRkZ1RHVk00VFVIbE0xawpXQkJTaDdVY24vTDlDZmExTnlBM2JXWjZGTTl5YU9pa2dmdWE1MlFJSjZxKzZ0RVkxVW5zWndZUmpESnRBWlpGClBJNnQ4VytCdlZjY3FZTys2ZGN5ZWN6amJZa3RpcEdwRDFFZlNnR0c4c1YyVzQ3UVpDUk9CeGtDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk5ZTAppdFVmVmdiekVxSlFCZTU5TUtmaG1sUU9NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJBWmd1am1ZRE1WbU5JCjJPbjZGNHp6VUM3OG1lNFpCQ3Jyd3lSWXZGRk9KTzdldzYwNFBQQ1lSLzNPSllaZHdrK3Y1bEozT0FIOWo0a2oKV255TGNpVkdqaG8wNjNyY21YV29JU1JIem1aeVdKaWVzbWFnR1c3Y0U5ZGFlNnBHamR0N0FBTWZBYVNFbGt1RgpIR1ZwQUpWeHE5bytmcE9md0VqM2pRSUxYcy9NWE1QU3FMK3ZxbnI3SkZKUGFCM1ptSExaMXBYUGhQNGkyc2VsCkRSRjZVUExGcVk4WkloZlVxUXAra2wrcHEzdExENkQ1S25kTzBSY3ErM2hReGFQek0rOXkwSUI5aWZKUHprU3EKVDdOWXgrL1ZpRURNREdkbjhyRmJsVXROdGdOa1dvL2NONXZ1TVREdDVxRWtLZ045cnJRWGNPUGxNcXN2OHNFRQpZeUJqV3NSSAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-localhost-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJUlVZVGpXSEFkL1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURreU5USXhNelF6TmxvWERUTXpNRGt5TWpJeE16UXpObG93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZmdWZTYU5EVWIyQgpsSHpxTkxiQXUrTHc4VjNCYkdObTdOSTdWR3M0TTBTajFhUjUwR2JYalFuajBqV2diamV0Q0ZjRUM1VTRNeUU3ClVJVTZTb1RHVm1UZlhpY2NoZjFCM3BWQXF5QXg3YzlGb083TXNYNWpHMFRxUGhZUi93TWFEM0VUNjZJVld0aWcKa2FqNGdIcGVNb0o0WkhMbVZCcFdJNklvb014NVgyYlFrTzBMZXZHd0tQU1doK0FYTVhlU2h2ZUlUY3VUaWg2bgp3WXd3eTUzYW52clRCWjdxMkNablpwQ0NKZjZ2YzVZUWR2UXRCMkNGVjJPcDU0ZFdJc3NYdVA2ZFpQY0dHckNkCnFaUHo4ZU12M01BR0kvQU9DL1dDWklmbHR4WkZGem5nSmR0UmZ0RnZPZ1A5RWNGa014ZnA5ZG1ZZEk0bTRIUXoKcXlqd1IrQ01md0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVd0docUpnZ2NJbVNWZUk0a0FCdnZ6SVcvUXFFd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBS2dFYzk0TVl4TTRXazF1WFlENXhGL0xiS255eTBwWUk1UlBVWm95bk1Lcjl3MHVmYXhIL2dMaGFjdmkKck1NdTV3bXVOcnJDdGdBbUwyOTZhZVFLZ1NTUTRrQlZZOGJJL0dpaXdRQU9Gb3JEcWxTeUZMVXJ1aWhHcm5JdgpoOXozeWpCVEVOWk1LcWNYVGdvWE5TL2xUZzE1NWJTZm43TG92c0FENDN5bk1xUFBMeEwySDNkZVc0bkpjM0YyClArWEhjRzI1MzJzSlBKRW9lUW5hTE1BRlB5WWFNeEFxdk9Rb0cyVW0rcjVoTVJGYXRKcjYzOXpFM04vUjRScm4KdWRDbGl4NWtKYUdSak1rdUFnVGEwRnB0UHV6aUpIQW4rNWlSRHN5SnN5QXFLcmNjQ0lueklZSkVMOG5PY0hIWgpNa2ZVUzYvbVRsMUFVM01MQ2RxWTBBYmJXcHc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-localhost-server.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdzFOWnV1TCs0OTRDa3dMTDRGamhDVTZHN1ExbWJHMkZ0alhQWHdHNGdJNmdPSnpICjVaQ3JkOW5kM0haTlRpajlueDVKME9raHFrbVdtbWF5dGVPQ1QrMXVVaEJLS0lLay9nTlZKSXBMSzhLYXB4U1cKdGxja2ZCUXRta2FGTkpZMko3dVZVV0ZDcnN3aDR0dnBxYzZxZTN0dnpiTytCNlcvMWdJMHBwdEtqaDU1bEh5Swp6NHBBRVh6alpMQkZDUlFXbFZUS2F1TjgwbTVKLzJkdmVsOEFLbFBwVjNRQVhzTlRPbWNTYTZWaXNxa3ZDYnk3Cnp6bCtOc3JoN25MRG9lTFpYSzhaN0x5cnZtTW5WZjBZY0F4QUN4M2hNOUwyL0FvYVN2eHNNMkRVRHRSQWY1Z1YKbDJ3OEllQWs5UE1ZS3czV2twRk5BUDIwZ3dtYXBBR0JJRkJaWXdJREFRQUJBb0lCQVFEQVZ0aDZMc01lY2VVSgpET3prTzhGRm45MC9tejFyc2lIRVBwSzRsSUl4bmNEcVhvQjliNHRaMXVFaEVpR253TGVXczRXdXdaTlVFMmpKCkhDNEk3RUxMSUJ2Tmxacmc3MTAzZ09LYnU4NndCYzZ5anBTbWM0Tks1N2ZNUG5zM1FGK05tcXM3MnRHR1BSOTEKUEdhSXZ5aWp0Zlp2a2Zxam56VWJzVXBWY1gvbUZ5TVkzdnZDUFQ1MkpLcVJGSjNHU0Q0amhoM0ExMWVxcGlqRQo1K1cvRkV3ZXp0ZUZxcitJdE42bUxqUEswbUx0dmdNK2tyLzRSdncrWHlhbWpJajJGMTMvT1h3dFhiVEVyUUpxCmxMelRVRFRqMnFRYU1JYkk5ajhkcC9lWnZNaEtydUhKVmVKamNzMkcyVmZySUo3dkR0eHh4RnJacmJHNkNibDcKVzlySTc3WVJBb0dCQU1lbHVMVmxTWS9BUUlVNXVoWmkvblg1NlY0bFRXNEgyOUpPdFE2VERoMldFOElQcXAweApXd3ZyUHNJNkowdmZnUVhqcTRPQnlpRkNjTEFINGE4MlN6YmFyWGpHMjJSV1M4WW9BeEdCcDFhQkdjQjZYUW9mClg2bXdxYmFqcTlJUVgrSTVRR2NUN1drcEwraTNqdWJPVUgwNEZnZ3NMWllHZjgzTlovS0t4WUFaQW9HQkFQcDEKVi9vTVJUTkIyQTQ0bkY2Y3V3ajByQ2toRjBKN3RFRmpUUlVyTkV1V3YvYTFXb3FNNkV1RWtFbkhZd1U3UEM1eQpNZVdId1hOb3pCNVdYeEZhKzF0WkszaFpnRDNYVG5pQWxONzlLYUNGY2JoS1JvdWY5dzhlUFhFbGZVd2czYi9jCnRQV0V6YithVFV5ZDlUNTVWRmhFbS9INzFTVytMZ1J1NXI1QUltVGJBb0dBRzJDYldxeWdFTWxoVDZPaDVBNEIKTFBadlRReTZlSHMxWnJxS1U0eFE1RGUvVDk1TUhEQTNkd1AwWURnUFNYVkZ3U1ArVWhOTFA1SlgxNXZORS9UVApEWnVoTEMzQXlocVhXMzRESmJSczJRenRGaHJ4aFVEV0luUHFZZlJCekpXWVFISnZaWE16SERlY3JVSDJvNm5wCkdiTEdPcXFzT2FWOGd5Rkd2dGpPeW9rQ2dZQTY0ell4TzR0VnR1aUd4M2EwcENNeHd0MXJ1alVPMDZrWktyRG8KQmtXQWRFeGtSRldxZCtEeVNKUG9WUElLTzlnMWozSDk1c0pzVVRxVTgzZmN5OGlIdk5xRXJINkRpOGtPZWlVRwpuUDJabVdhWWp4WXhKQVpoenBsaHJnL2N3MmwvLy9Pb09uWnAwMnpUVTl4aXVRSkUwclRiMjN0TktYOEdXZEQwCjhIMWx1d0tCZ1FDTlp1UFNBNnpsL21qQkNZekF0bXhYMG0waDhSVkhjZnRsdFAxYjY2ZWRmb3ZxWTlxTG1UNE4KcVlTdFZkRmxaU1RyNXYyaU1Ndk5Rdy9DVVQ3SFhNMEppdmZFbXR0NGZnNFc4azVlZTBpRXhEazlVeGp4MDRUcwpRaGdTMnUrRTVKUWlxdFVUUFdXZzRWSUVISU5qKzJ5MmVqcjNyR0sxZTd2bC9vVWNCbEVDNWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-localhost-server.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lJVWgwaWlWNWlQWWd3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURreU5USXhNelF6TmxvWERUSXpNRGt5TmpJeE16UXpPVm93TmpFVU1CSUdBMVVFCkNoTUxhM1ZpWlMxdFlYTjBaWEl4SGpBY0JnTlZCQU1URlhONWMzUmxiVHByZFdKbExXRndhWE5sY25abGNqQ0MKQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFNTlRXYnJpL3VQZUFwTUN5K0JZNFFsTwpodTBOWm14dGhiWTF6MThCdUlDT29EaWN4K1dRcTNmWjNkeDJUVTRvL1o4ZVNkRHBJYXBKbHBwbXNyWGpnay90CmJsSVFTaWlDcFA0RFZTU0tTeXZDbXFjVWxyWlhKSHdVTFpwR2hUU1dOaWU3bFZGaFFxN01JZUxiNmFuT3FudDcKYjgyenZnZWx2OVlDTkthYlNvNGVlWlI4aXMrS1FCRjg0MlN3UlFrVUZwVlV5bXJqZk5KdVNmOW5iM3BmQUNwVAo2VmQwQUY3RFV6cG5FbXVsWXJLcEx3bTh1ODg1ZmpiSzRlNXl3NkhpMlZ5dkdleThxNzVqSjFYOUdIQU1RQXNkCjRUUFM5dndLR2tyOGJETmcxQTdVUUgrWUZaZHNQQ0hnSlBUekdDc04xcEtSVFFEOXRJTUptcVFCZ1NCUVdXTUMKQXdFQUFhT0JwRENCb1RBT0JnTlZIUThCQWY4RUJBTUNCYUF3RXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdFdwpEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVWhEV2FpSkNPTWVMTW1GenZ2b0svd1JvdnpTRXdId1lEClZSMGpCQmd3Rm9BVXdHaHFKZ2djSW1TVmVJNGtBQnZ2eklXL1FxRXdMQVlEVlIwUkJDVXdJNElKYkc5allXeG8KYjNOMGh3Ui9BQUFCaHhBQUFBQUFBQUFBQUFBQUFBQUFBQUFCTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDMgo3eisrSGlkT2greXRyWVRjbmlJbVVheWVSMzd2a0ptSVN2VGVpRXptUHIyRnNNeXgyMXk2RHp2Z2Z5MHdGUTd1CmJRVUtFQ2J3QklWVGYxMjdMdTMvMDRnSGZ2MWFQeG8xRGZFalJnZnZ1T21nN2Z5YzNOdHJ1SlBJaFRyV1JFbWcKYkVXNDBPZkMrUHVyWmZleFk4SmVaZVVhRE8vYXBaT3ZvREVMdFJFNGE0QWluRVJWU0FJSlRsZ0tLTFRsSmJxOAo4OERmUUJkNW53OUlRRTJ6NWoyRFAzQlVDNGd2QW5FSmkySCtadlc5bEtjc2ZJdGJRKzlCMGhYbGhEbmZvTVVRClN3Q1JhaWR1MnV1Wk1RZ0NiaFhnQjBDRitiaXNLQ2d0U2pJSm9mUTlZWVZvc085Y0JZUmhUNWorOVl5QU9pOVIKY2JQdDFWdzhoa0FFZERrbkZ3YjYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJUlVZVGpXSEFkL1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURreU5USXhNelF6TmxvWERUTXpNRGt5TWpJeE16UXpObG93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZmdWZTYU5EVWIyQgpsSHpxTkxiQXUrTHc4VjNCYkdObTdOSTdWR3M0TTBTajFhUjUwR2JYalFuajBqV2diamV0Q0ZjRUM1VTRNeUU3ClVJVTZTb1RHVm1UZlhpY2NoZjFCM3BWQXF5QXg3YzlGb083TXNYNWpHMFRxUGhZUi93TWFEM0VUNjZJVld0aWcKa2FqNGdIcGVNb0o0WkhMbVZCcFdJNklvb014NVgyYlFrTzBMZXZHd0tQU1doK0FYTVhlU2h2ZUlUY3VUaWg2bgp3WXd3eTUzYW52clRCWjdxMkNablpwQ0NKZjZ2YzVZUWR2UXRCMkNGVjJPcDU0ZFdJc3NYdVA2ZFpQY0dHckNkCnFaUHo4ZU12M01BR0kvQU9DL1dDWklmbHR4WkZGem5nSmR0UmZ0RnZPZ1A5RWNGa014ZnA5ZG1ZZEk0bTRIUXoKcXlqd1IrQ01md0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVd0docUpnZ2NJbVNWZUk0a0FCdnZ6SVcvUXFFd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBS2dFYzk0TVl4TTRXazF1WFlENXhGL0xiS255eTBwWUk1UlBVWm95bk1Lcjl3MHVmYXhIL2dMaGFjdmkKck1NdTV3bXVOcnJDdGdBbUwyOTZhZVFLZ1NTUTRrQlZZOGJJL0dpaXdRQU9Gb3JEcWxTeUZMVXJ1aWhHcm5JdgpoOXozeWpCVEVOWk1LcWNYVGdvWE5TL2xUZzE1NWJTZm43TG92c0FENDN5bk1xUFBMeEwySDNkZVc0bkpjM0YyClArWEhjRzI1MzJzSlBKRW9lUW5hTE1BRlB5WWFNeEFxdk9Rb0cyVW0rcjVoTVJGYXRKcjYzOXpFM04vUjRScm4KdWRDbGl4NWtKYUdSak1rdUFnVGEwRnB0UHV6aUpIQW4rNWlSRHN5SnN5QXFLcmNjQ0lueklZSkVMOG5PY0hIWgpNa2ZVUzYvbVRsMUFVM01MQ2RxWTBBYmJXcHc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-localhost-signer.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdmZ1ZlNhTkRVYjJCbEh6cU5MYkF1K0x3OFYzQmJHTm03Tkk3VkdzNE0wU2oxYVI1CjBHYlhqUW5qMGpXZ2JqZXRDRmNFQzVVNE15RTdVSVU2U29UR1ZtVGZYaWNjaGYxQjNwVkFxeUF4N2M5Rm9PN00Kc1g1akcwVHFQaFlSL3dNYUQzRVQ2NklWV3RpZ2thajRnSHBlTW9KNFpITG1WQnBXSTZJb29NeDVYMmJRa08wTApldkd3S1BTV2grQVhNWGVTaHZlSVRjdVRpaDZud1l3d3k1M2FudnJUQlo3cTJDWm5acENDSmY2dmM1WVFkdlF0CkIyQ0ZWMk9wNTRkV0lzc1h1UDZkWlBjR0dyQ2RxWlB6OGVNdjNNQUdJL0FPQy9XQ1pJZmx0eFpGRnpuZ0pkdFIKZnRGdk9nUDlFY0ZrTXhmcDlkbVlkSTRtNEhRenF5andSK0NNZndJREFRQUJBb0lCQUhleWNES0tEYUVUZisvWgpJQXFrVmh4S3FMbTU4MkxoNGZnMW9MSFlkK2s5UnVnVkg3YWhCUS9VZWxoMzl5TmFLc2ZGWTBRVStQcWw1bVFkCi9KTDB3cTJ1RWxtVTFOREt0dFNSUHRSU2pZS2lnK0VZYzVrazR6Wk1IaldOM0RyS2JvSHFJYjNsT2dVcDFValEKcC9qeW9DUzh0VE84Zk1maWJBRTVhdFdjM3ArdTVlbjI3ZkVDa2J1cWtRekwrQXpqM04rV2RxRG5zNVdvcnUxUAp6NXdJL0pBN2lLSlc2S1ZUMnZGRUxtbUt1WmFjMHF1S1dzR2ZQV3liRGZsSzJacllKY002bGxwUjhXNXk3K2lJCjd3UW4vQVlyQlYra09xZDRJRjFuNUhRQU1yRjlMb2w5bXVUWnpaWkV4U1VURmI2SzVvSFYwVWgzSFNhU3p6R0cKUnI2L0Y2a0NnWUVBekhUUk9uQmFCTjhSdzFMQU9kZ3k2dTk5L1JIc3NrRXlPK1NpZllXOEdTTlYzWU00MmJyTApCRGY3ZTg2RXo2bHl5OGlUNHlaTDlsOWFUOUJNVEgycVE5bUpqV3Q3cjRmZmZOQkFxd0o0UUdCZUw2YkZrMlgyCks5UjFraTZBNTR3TFZUWk9jVEFzL0JTOWFqa2I4WTdTVytscWExYS9KMXhsMDRVeW5vV2ljNXNDZ1lFQTdlQzQKaHBsOW9aRFN5em5hMlN1OGxrS2J4YTJUSUdxTFBaRitKUnFqMjhhQVY5OGRaRWpycWVEdkQ4ckV2a3V3TTk3NApoT0NxT1VaYzhwL3J2ZHBwWk1mZ2ZBTzQ0VUd3WHozbEZhRnBISklSczJmaVYyajZ1R0dvVlc1dG9kVFFCTmNWCnFZUVFCWUdUMmxBL1FZcHg4N2pyYlh0bVdLRUE5RWxkN0poSjh1MENnWUErNlhzd0pqNHMzWThUc1RUaEY3dWoKT3dwamdzNTRrME1uMXRTQkYxT24wSTJ0V2FGMnJkbW1kS3QzanphaXg1dEJSWGpzSG02bFl2WGhOVkVsQUU0UwpEckFheWdZSEh5SVB2KzBHTWY1YW9NeWFrUkNlcUhNMVRXellER014M0kvb0tvdThuSHhiSE82ajd1ckFTNWhECkcvSFpFWnBFUEZSQTMrMlJoY0ZWSFFLQmdCTkJZbzU2dEVHMDBHdGs5b01uMkM4dG15Qm9TWVdST2s0MGpjcUIKR294NngvN1U3N01qZC9nYlhoNmdJa2JwSjQwN1dsQ2ZRd2c1MnVKRThiYy9pOUo5bjMxS2E5ZklFbmZUTWMwTApjTS9BUHpDUGt6SFNMS0ZxUGs4VURrblFTVHByRXJUVEhOemxQVXVwdlVVWDZOdDZ0NHY0TmpPc2JNQlpoQUhYCjNmeU5Bb0dCQUt3SDIxRlNXWkl0Y0EwTEZQQVpleW5RUi9wMExEbmg4aktabUZienZoMTFtajlXakxRWU1sMzUKbEl0UFM1MEx1YU5ET2tVQm1qV2RiTEJHOWxxTDAyUXpiMktrWjhxMHpzcy9wRnFEaDlyWUVKZFlpekZWc0hGNAo2MkQwaElkaWY0VXBPaS9qa2VtZGMya0xLd3h1b1JGalBtVjh1TWxMWEFGWFA3cTdZV3MzCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-localhost-signer.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJUlVZVGpXSEFkL1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURreU5USXhNelF6TmxvWERUTXpNRGt5TWpJeE16UXpObG93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZmdWZTYU5EVWIyQgpsSHpxTkxiQXUrTHc4VjNCYkdObTdOSTdWR3M0TTBTajFhUjUwR2JYalFuajBqV2diamV0Q0ZjRUM1VTRNeUU3ClVJVTZTb1RHVm1UZlhpY2NoZjFCM3BWQXF5QXg3YzlGb083TXNYNWpHMFRxUGhZUi93TWFEM0VUNjZJVld0aWcKa2FqNGdIcGVNb0o0WkhMbVZCcFdJNklvb014NVgyYlFrTzBMZXZHd0tQU1doK0FYTVhlU2h2ZUlUY3VUaWg2bgp3WXd3eTUzYW52clRCWjdxMkNablpwQ0NKZjZ2YzVZUWR2UXRCMkNGVjJPcDU0ZFdJc3NYdVA2ZFpQY0dHckNkCnFaUHo4ZU12M01BR0kvQU9DL1dDWklmbHR4WkZGem5nSmR0UmZ0RnZPZ1A5RWNGa014ZnA5ZG1ZZEk0bTRIUXoKcXlqd1IrQ01md0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVd0docUpnZ2NJbVNWZUk0a0FCdnZ6SVcvUXFFd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBS2dFYzk0TVl4TTRXazF1WFlENXhGL0xiS255eTBwWUk1UlBVWm95bk1Lcjl3MHVmYXhIL2dMaGFjdmkKck1NdTV3bXVOcnJDdGdBbUwyOTZhZVFLZ1NTUTRrQlZZOGJJL0dpaXdRQU9Gb3JEcWxTeUZMVXJ1aWhHcm5JdgpoOXozeWpCVEVOWk1LcWNYVGdvWE5TL2xUZzE1NWJTZm43TG92c0FENDN5bk1xUFBMeEwySDNkZVc0bkpjM0YyClArWEhjRzI1MzJzSlBKRW9lUW5hTE1BRlB5WWFNeEFxdk9Rb0cyVW0rcjVoTVJGYXRKcjYzOXpFM04vUjRScm4KdWRDbGl4NWtKYUdSak1rdUFnVGEwRnB0UHV6aUpIQW4rNWlSRHN5SnN5QXFLcmNjQ0lueklZSkVMOG5PY0hIWgpNa2ZVUzYvbVRsMUFVM01MQ2RxWTBBYmJXcHc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-service-network-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJTkxWVFBEbERCQXN3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRGt5TlRJeE16UXpObG9YRFRNek1Ea3lNakl4TXpRek5sb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBcUFzaEF2bmcwN1ptRnlLaGZ5cS9GWHJrTzM4dVF6a04zQlNoWnBEa2NTVzlIOGxxemh4cjcvWXZkR3FnCisrckdQQ2Zra1dQTTZLNC9SZXVDZDhadEJUR3J0cGVEbXVPSHNpd0lPK0ZTN29ibFAwZWJMNFVmNkVqd2VwcWkKaCtOOE03UkRZaWVRMWhDcGt5K1NRUk9TbkFhVnZ1Y2xaZW4ram5VK2lMUzBGOXl3UUtoblRXci9QOEFwTnZTaApxNGo5NEpZYmpadUdrdG82K0wzclVzcHBMdi9TWFNQK1ZpdlFBRmYvRFZnV0Zad0p4OGY1SlF4bEttYnBpbjlXCmtpTnFZMHYvaFAyNHpIKzdWOTM5SmZMRXdNZVB3TWRrYXFsZGp2YkdUQlNwN0lKczNML2hzVVkyTkNUNHJVSnUKRUpnekF4dW01N0ZXeGYydnBQcFVBVmdBWlFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVVlJd25XUzJTc2FrWlk0R2E1UXNFZlFWQ2FWVXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUppb0d5dVB2bzlnTVUxenlVQm41bXpGaVUzVytPQ2RHeGJ3M1JjenFMckYKN0FKd2V3Q01PdHl1UDlkWDNlMEtuUkxIRXhra0F4ZzQwRGxmcTRkWWJZZGhaSFVRbm10dGsrRnhLTHMzU3VuWgovd2xUZGR3Y1BpUXl3WlJ0VUhCdGxGaUtkYzEydUtvd3hJemd5eWpZTGxTYktyNHpxanpnMkxoL0xicXRpWnVyCjdwNFlGL29aaWdFRllGQzBRTTVpZHl3SS91OEJ1Y1ZJdmRVeFNycTJJZnVDeDJkU0ZZUW0vZlVoVmlpWFBoTkMKdjduY2JPTGQ3OWtqMHVXeThJV1RRRWNKSVN3UW13V2xyZU1hcVovcGRrY1VVaEpYS29KaUdManV6aUFDZXJZRgowSXRJWmh2c3FXbk4vci9OSUZ3amttWlFDN3ZQcjZqV00rZTJiTzJib0hJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-service-network-server.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMEJqUWFpTWRBK0FzSnhZZ1BQeVB6VXkyYmZhakNOY0RTRlNCZVBVL2hOL0lPcnY5ClB3VUlQVWVBSUN2TFkxUzlCS250eSs3TzNzV0lCR3UzOWp0WGhnR3B1QlFsd2h4b1d2WFlaWkxCaU1VUGZDSFMKczg2SVJlSzluZzN4T3ZkN0FadE5zRldkQ2FhUGxKVFBUNjlSakJhWlRIR0ZyWVYyQ245aXdUcUovU1dJUW95Rwo5bStzOUpjQjFwYTJkRWtwWG9nOXhQQzV0bmFobVIzSVFsQm0zZmk2K0pBSVZ6T0VWQXZQMHN6b1p1QnFTMVpVCjVZMEdQUWE3R3dlUkFKQ09tdy93TGMyaFdUYmo1UUNNRlRJNmRadDJxdUlmQUdDa1FPa0pGMG5FZVVrMzRPQTMKSkpENlpJR0VpNkFwK2J5MDF3TElEQUdNU2lpZzA1bmRPYWV0cFFJREFRQUJBb0lCQVFDcjZKUGoybllSeVpNdwpCdnRDNW5IMWE3WVpTWEtOenZJTFFxUml4RmRnOFcxNzkralJzdHFIcFJXWGZoWmJUSm1Kek1lQmZScXd0Z1lUCmdObE1OT0dzOXBxNlV3cU9QT0dJb3lmTllWczRIWE1aWE9ldldxTUErTHNrWXVneGlsaTNqeEN5NTBiL3ZmVkgKRFZmbHdETmh3eG1KS1E4QnRnczV5TnBRUG9mWDh6Y1RwSkcrV01jWFk3Z01SNlhDMWtJTFoxWldmRHRFZE5wVAp5a2RUUjlwQ2owMzZwem5FeS85bmV0bW1Zb0dMZmZRNmIzWHR1RW83dzI0VVVJYWlPdVFXdWRkN1ByYnM2cXpXCjVhaW8rM3hGU1JjQXh0dytuaXQ2VTR6bTJMdUFhU1hFUm1GeEtVeTRiR2NBVGJzcXhlaFFyZjlkMkZPZjVqUksKNW50dmc1YUJBb0dCQVBraHFaU3RHYTlDT3JZdVBBb3FTaWwzMWU3S0k1cUNEOW1vVmtVa1phdi9jVGNNTlVRdApFYnFYeDdsTWxvNnNlSlM3YWdzZVlid3doWVJ0dmJtWEtXTDFrRjlqdjd1bGIxRVN1T05yVFRyMVl4UWkxUW5QClZhaHUyRmU5Z1RoVWpvSm5QamN2UDJaMklxL1pIRFZvWTVQcy9weTVhdm45cXYwZkdLai9FQzZwQW9HQkFOWFYKaVB3NHJnSjJWVlorelQ1eHNrTDdJc3poanRSOXprMTlIaWs3QXFydXJLamtCdGZhbHkrU0NoZXc2MUc4clhvRQpWdllGaEpBdWNvY1V5c09GS1ZSMGdJbm1RM09GU0JYWmd4dC9IRXZqL0JyV3ZqNmsxMm9XSDBLWkxOWStLbDNOClp1SzlDV21PU0VuRmJRaS9IV0kvMytSZ2tTZTN2alh4UGp6WUhKQ2RBb0dCQU1GVnNVK1M0ZXJUWDlLL29KSlcKN1VTdkhkTjVCUlpEdHQ4M3R2TmpZbytPNWFKTmxBeTdXUlhQOGd2SDl0THozNE8weVgrbGJUMW8va1NlRVcwMApkTWE2UVBiMTV2Wk5WVXk2VmNjUEgxa1EwM250Nmh2NXpjU3ZlSzdtZnFCalpsQ21wRzZZK1ArZjBCMWRSSG5oCjc5ejlQejRLMm96MG9ieGJaSHpKckJvNUFvR0FiYll1bjRJUlBiQXJIc0xXV1hpS1JyV0ZhR3MrRmlZcUtEWE8KdU1iUEdwWjB2ZjZveUMwZUxza1dKb3VlWVFTV1dTbEsyTldCNjF2NVpQYzFCVllZRzMzZXlXSDhMNVF0cFJCQgpwV1QxUnJiRmpadXFab2U3QW5JeFBjRkxjT3phWGVCYUxuRmhGK2hwakhnZjlrSGdPSjJmS1JTbXhTTVFFNnNnCkRLV3hHajBDZ1lFQXhrc0VTbUdBOUxjRHBBeFplZEhUV3ZQYTNTWXNSWFRQSWcrdGg1aEdGeFpySFdRMmJaVkwKRGpNV0UraDM4dWxlZlRrWUJOWEVNRXFZMTFvT05wOTF0VTRpT0pFQmFIZ1gzZTkxelZwMVc1RUVDdzdFMENKZgpIS0pPWHZBT0xRcklJSlNyYzB6dzZBK1Y1OTVhbzZUUzdqajdRQ28wQ3VrenlxTEQ2UXlUQTRVPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-service-network-server.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVRVENDQXltZ0F3SUJBZ0lJR3ZHTzVFeEdqR1F3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRGt5TlRJeE16UXpObG9YRFRJek1Ea3lOakl4TXpRek9Wb3dOakVVCk1CSUdBMVVFQ2hNTGEzVmlaUzF0WVhOMFpYSXhIakFjQmdOVkJBTVRGWE41YzNSbGJUcHJkV0psTFdGd2FYTmwKY25abGNqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU5BWTBHb2pIUVBnTENjVwpJRHo4ajgxTXRtMzJvd2pYQTBoVWdYajFQNFRmeURxNy9UOEZDRDFIZ0NBcnkyTlV2UVNwN2N2dXp0N0ZpQVJyCnQvWTdWNFlCcWJnVUpjSWNhRnIxMkdXU3dZakZEM3doMHJQT2lFWGl2WjROOFRyM2V3R2JUYkJWblFtbWo1U1UKejArdlVZd1dtVXh4aGEyRmRncC9Zc0U2aWYwbGlFS01odlp2clBTWEFkYVd0blJKS1Y2SVBjVHd1Yloyb1prZAp5RUpRWnQzNHV2aVFDRmN6aEZRTHo5TE02R2JnYWt0V1ZPV05CajBHdXhzSGtRQ1FqcHNQOEMzTm9WazI0K1VBCmpCVXlPbldiZHFyaUh3QmdwRURwQ1JkSnhIbEpOK0RnTnlTUSttU0JoSXVnS2ZtOHROY0N5QXdCakVvb29OT1oKM1RtbnJhVUNBd0VBQWFPQ0FVTXdnZ0UvTUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdncgpCZ0VGQlFjREFUQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJRZWUvRVBLcHM3ZFkvejduVHVYMTBvCkV6RmFnekFmQmdOVkhTTUVHREFXZ0JSZ2pDZFpMWkt4cVJsamdacmxDd1I5QlVKcFZUQ0J5UVlEVlIwUkJJSEIKTUlHK2dncHJkV0psY201bGRHVnpnaEpyZFdKbGNtNWxkR1Z6TG1SbFptRjFiSFNDRm10MVltVnlibVYwWlhNdQpaR1ZtWVhWc2RDNXpkbU9DSkd0MVltVnlibVYwWlhNdVpHVm1ZWFZzZEM1emRtTXVZMngxYzNSbGNpNXNiMk5oCmJJSUpiM0JsYm5Ob2FXWjBnaEZ2Y0dWdWMyaHBablF1WkdWbVlYVnNkSUlWYjNCbGJuTm9hV1owTG1SbFptRjEKYkhRdWMzWmpnaU52Y0dWdWMyaHBablF1WkdWbVlYVnNkQzV6ZG1NdVkyeDFjM1JsY2k1c2IyTmhiSWNFckI0QQpBVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBUjdNTVZZUzNWRExuMnVTN0VBbFJJWm05aTlXd2ZzeGUvRnZjCmRodEdnby9URnZPZ3QzOTZQc1NzelVNQWJGQ3BSNFd1UkxNUFZDWWxHb2x5ZDhhQUtJMmM2NWVMUVlFUTZsQ3MKMFpMcGRraGdvemZvZ2FKUDdCV3BIcXhJWmhtUGIrdGw1QWlsVnVPK3FqZ01VZFFQMVNxcWtBTDQ5TjRxcUpWVgprQnVpMUtuN1dydVRFTjd6NFFraHh0WjJBSFl3Q2IwZEtUNlpNdXE4bWZSTHZpTitMd2dYWlR5WlpMVGx1bnNGCnlaRXV4akJaTllyc0htR1RnWDFKemZad0VEYVB0Q1BPZWlWdkdWbVNYSzdZZXFnNUtCRVFJUENiMzBZTlFuNGUKVkhMczlGTUw0cERjOGVBQzNMM09SM2RUcmFQVXFRVnJEMkZBNlNCZmkzTDkrdTNUL1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRFREQ0NBalNnQXdJQkFnSUlOTFZUUERsREJBc3dEUVlKS29aSWh2Y05BUUVMQlFBd1JERVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVM0d0xBWURWUVFERXlWcmRXSmxMV0Z3YVhObGNuWmxjaTF6WlhKMmFXTmxMVzVsCmRIZHZjbXN0YzJsbmJtVnlNQjRYRFRJek1Ea3lOVEl4TXpRek5sb1hEVE16TURreU1qSXhNelF6Tmxvd1JERVMKTUJBR0ExVUVDeE1KYjNCbGJuTm9hV1owTVM0d0xBWURWUVFERXlWcmRXSmxMV0Z3YVhObGNuWmxjaTF6WlhKMgphV05sTFc1bGRIZHZjbXN0YzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDCkFRRUFxQXNoQXZuZzA3Wm1GeUtoZnlxL0ZYcmtPMzh1UXprTjNCU2hacERrY1NXOUg4bHF6aHhyNy9ZdmRHcWcKKytyR1BDZmtrV1BNNks0L1JldUNkOFp0QlRHcnRwZURtdU9Ic2l3SU8rRlM3b2JsUDBlYkw0VWY2RWp3ZXBxaQpoK044TTdSRFlpZVExaENwa3krU1FST1NuQWFWdnVjbFplbitqblUraUxTMEY5eXdRS2huVFdyL1A4QXBOdlNoCnE0ajk0Sllialp1R2t0bzYrTDNyVXNwcEx2L1NYU1ArVml2UUFGZi9EVmdXRlp3Sng4ZjVKUXhsS21icGluOVcKa2lOcVkwdi9oUDI0ekgrN1Y5MzlKZkxFd01lUHdNZGthcWxkanZiR1RCU3A3SUpzM0wvaHNVWTJOQ1Q0clVKdQpFSmd6QXh1bTU3Rld4ZjJ2cFBwVUFWZ0FaUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEClZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVWUl3bldTMlNzYWtaWTRHYTVRc0VmUVZDYVZVd0RRWUoKS29aSWh2Y05BUUVMQlFBRGdnRUJBSmlvR3l1UHZvOWdNVTF6eVVCbjVtekZpVTNXK09DZEd4YnczUmN6cUxyRgo3QUp3ZXdDTU90eXVQOWRYM2UwS25STEhFeGtrQXhnNDBEbGZxNGRZYllkaFpIVVFubXR0aytGeEtMczNTdW5aCi93bFRkZHdjUGlReXdaUnRVSEJ0bEZpS2RjMTJ1S293eEl6Z3l5allMbFNiS3I0enFqemcyTGgvTGJxdGladXIKN3A0WUYvb1ppZ0VGWUZDMFFNNWlkeXdJL3U4QnVjVkl2ZFV4U3JxMklmdUN4MmRTRllRbS9mVWhWaWlYUGhOQwp2N25jYk9MZDc5a2owdVd5OElXVFFFY0pJU3dRbXdXbHJlTWFxWi9wZGtjVVVoSlhLb0ppR0xqdXppQUNlcllGCjBJdElaaHZzcVduTi9yL05JRndqa21aUUM3dlByNmpXTStlMmJPMmJvSEk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-service-network-signer.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcUFzaEF2bmcwN1ptRnlLaGZ5cS9GWHJrTzM4dVF6a04zQlNoWnBEa2NTVzlIOGxxCnpoeHI3L1l2ZEdxZysrckdQQ2Zra1dQTTZLNC9SZXVDZDhadEJUR3J0cGVEbXVPSHNpd0lPK0ZTN29ibFAwZWIKTDRVZjZFandlcHFpaCtOOE03UkRZaWVRMWhDcGt5K1NRUk9TbkFhVnZ1Y2xaZW4ram5VK2lMUzBGOXl3UUtobgpUV3IvUDhBcE52U2hxNGo5NEpZYmpadUdrdG82K0wzclVzcHBMdi9TWFNQK1ZpdlFBRmYvRFZnV0Zad0p4OGY1CkpReGxLbWJwaW45V2tpTnFZMHYvaFAyNHpIKzdWOTM5SmZMRXdNZVB3TWRrYXFsZGp2YkdUQlNwN0lKczNML2gKc1VZMk5DVDRyVUp1RUpnekF4dW01N0ZXeGYydnBQcFVBVmdBWlFJREFRQUJBb0lCQVFDajJ6WTFVTEtKdmpHTwpIWmFjQ1hLSjMycnRHUFpqVmg3Tm10Qkcwc0h1RW41M29FOGs2MUhVaXBsN1N2M3VwdDdsaVlDMnhEbnFLUDVKCmozdUlqMU4rM1JBeTIwclluVVNUMTV1dngrYTE3NU5hUU5oeFhiM2ZJa0JiVEsxdkU4TG9KNzRNMThmQzlEeGwKNk4wVDE2SDl3ZTRDV0NGL1hzdDQzWm84Y3Zlb3kxT01mN2NvendUK3JGdXVXSWlxRHZhVnZQLzVvNVdaV3lsMgpBc1VjeFRyajdwM3Y5WEM2alc0bk0wRmtTdkM5eC9sM2Y0THBIdDdYRlJ6aVlrNjYxZzVzanE2WldLQWdLdngrCnRLODBsOTJPMkRZMWFhckE5WFNzUXBWVVZLWFNMbi84MzdCbmZrV3plQVJpUzBkd2pZUWMzZHNicVdQTEVqMHcKcHZPcGkvZ0JBb0dCQU5wTDd6VEsvclVIekxXVVVIcC94Y1h1UHVSbEFiSnVOUUkwQ0NqZUhHcnYrNGtkUlp0awo3ZnlTVVlLZ1JTTlYvWDVlRzB6dlo2d1FWUU9mR3Y2V3ZvUGVNYnBZaCtVMjU1VVN1b21VMm9abFZvbEkxbGRSCnpoNVpKdTB2U0hORTlGN1hqalZoTmxvUnB3MTFqNU5URzhEMmJYWHh6NWt1V0NjV1VUNHYyc2sxQW9HQkFNVVIKTzY2eGtyRTY5VVRkeVBydktVSE1jZ3lDRUpvVmxHclNva3M5SVljZWF2WHVJZkRxVTVWdUpkdlZ3Zm1CL08zZAoyRWZNNXprVDl3YWtnVDhmeUJXT1dCUUxPc0dKd1pHb0NMdFJPZ045ZEJUbVVNOWszNldoQkFRWDR1MU5HUklUCnJsbmJPRkRZeWxxanM3WjZmRnpiTUxrZ2JISmp4TWQ4OUE5NGhuQnhBb0dBT3E0bzJpY3JPdHlpNGJqQnZYdzEKWE5TRFlYL3BhZDZJTDFSdlVSVUx6STlBTFlhSjNKRFFESklFaVRtdC9DYTBZdERIUS9JakN6VEV0Wm1DZHlkcwpoU1FvZC9BdWI2WkhzR0g5ZE5obnViTHFCVE5vTXNiUndvU3lteFdYd3l5cENBbW50NSt2TFowTEsrb0xNMDRtCjZzTVRmNTRGOFNadEdleTg0QnViRTNVQ2dZRUFyVUNPV1BKU3hpL1FUQUEwWHJCK2RCT2F2UFpvUkI3dXdjOTIKMFhEb0ZoT2U4Nkd0QTFIdnMvTUhvN0xVKzFmVmx3WXZ6RWdQakhYSituUU1FUVFPOHl5V3NPQ0NnbjVxeUhTVApZS056dm5lLzQxUHMvYmh3aXZ2NVBPUUhKSnRnakN6elhwcEZjNFowdUtVdExTT1lURWFFR20yd0NnMCtoaWVMCnBrSk81M0VDZ1lBVW10akdpMENtQVhFc00reVlVZ3NWcWtmT3NTZEpVa01ydTJqZ1VSUWhBUmpLU254T0I2MnYKZjZua3VuRnIwcTdpeGJ5dVczQVJHckc0dWxBUTVaTXFTOFk4VHVVeWFteXBmQU1zV0JyYlQ4NjIyeGVaRTZOMgpsQ05Xb1BZNXhLRnJhYUg3QTZYbHFXQzBWWS9zRjBQb0tEZXY4b2dCdVR0UENnM1FzazFHYmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-service-network-signer.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJTkxWVFBEbERCQXN3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRGt5TlRJeE16UXpObG9YRFRNek1Ea3lNakl4TXpRek5sb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBcUFzaEF2bmcwN1ptRnlLaGZ5cS9GWHJrTzM4dVF6a04zQlNoWnBEa2NTVzlIOGxxemh4cjcvWXZkR3FnCisrckdQQ2Zra1dQTTZLNC9SZXVDZDhadEJUR3J0cGVEbXVPSHNpd0lPK0ZTN29ibFAwZWJMNFVmNkVqd2VwcWkKaCtOOE03UkRZaWVRMWhDcGt5K1NRUk9TbkFhVnZ1Y2xaZW4ram5VK2lMUzBGOXl3UUtoblRXci9QOEFwTnZTaApxNGo5NEpZYmpadUdrdG82K0wzclVzcHBMdi9TWFNQK1ZpdlFBRmYvRFZnV0Zad0p4OGY1SlF4bEttYnBpbjlXCmtpTnFZMHYvaFAyNHpIKzdWOTM5SmZMRXdNZVB3TWRrYXFsZGp2YkdUQlNwN0lKczNML2hzVVkyTkNUNHJVSnUKRUpnekF4dW01N0ZXeGYydnBQcFVBVmdBWlFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVVlJd25XUzJTc2FrWlk0R2E1UXNFZlFWQ2FWVXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUppb0d5dVB2bzlnTVUxenlVQm41bXpGaVUzVytPQ2RHeGJ3M1JjenFMckYKN0FKd2V3Q01PdHl1UDlkWDNlMEtuUkxIRXhra0F4ZzQwRGxmcTRkWWJZZGhaSFVRbm10dGsrRnhLTHMzU3VuWgovd2xUZGR3Y1BpUXl3WlJ0VUhCdGxGaUtkYzEydUtvd3hJemd5eWpZTGxTYktyNHpxanpnMkxoL0xicXRpWnVyCjdwNFlGL29aaWdFRllGQzBRTTVpZHl3SS91OEJ1Y1ZJdmRVeFNycTJJZnVDeDJkU0ZZUW0vZlVoVmlpWFBoTkMKdjduY2JPTGQ3OWtqMHVXeThJV1RRRWNKSVN3UW13V2xyZU1hcVovcGRrY1VVaEpYS29KaUdManV6aUFDZXJZRgowSXRJWmh2c3FXbk4vci9OSUZ3amttWlFDN3ZQcjZqV00rZTJiTzJib0hJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-complete-server-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJUlVZVGpXSEFkL1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURreU5USXhNelF6TmxvWERUTXpNRGt5TWpJeE16UXpObG93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZmdWZTYU5EVWIyQgpsSHpxTkxiQXUrTHc4VjNCYkdObTdOSTdWR3M0TTBTajFhUjUwR2JYalFuajBqV2diamV0Q0ZjRUM1VTRNeUU3ClVJVTZTb1RHVm1UZlhpY2NoZjFCM3BWQXF5QXg3YzlGb083TXNYNWpHMFRxUGhZUi93TWFEM0VUNjZJVld0aWcKa2FqNGdIcGVNb0o0WkhMbVZCcFdJNklvb014NVgyYlFrTzBMZXZHd0tQU1doK0FYTVhlU2h2ZUlUY3VUaWg2bgp3WXd3eTUzYW52clRCWjdxMkNablpwQ0NKZjZ2YzVZUWR2UXRCMkNGVjJPcDU0ZFdJc3NYdVA2ZFpQY0dHckNkCnFaUHo4ZU12M01BR0kvQU9DL1dDWklmbHR4WkZGem5nSmR0UmZ0RnZPZ1A5RWNGa014ZnA5ZG1ZZEk0bTRIUXoKcXlqd1IrQ01md0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVd0docUpnZ2NJbVNWZUk0a0FCdnZ6SVcvUXFFd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBS2dFYzk0TVl4TTRXazF1WFlENXhGL0xiS255eTBwWUk1UlBVWm95bk1Lcjl3MHVmYXhIL2dMaGFjdmkKck1NdTV3bXVOcnJDdGdBbUwyOTZhZVFLZ1NTUTRrQlZZOGJJL0dpaXdRQU9Gb3JEcWxTeUZMVXJ1aWhHcm5JdgpoOXozeWpCVEVOWk1LcWNYVGdvWE5TL2xUZzE1NWJTZm43TG92c0FENDN5bk1xUFBMeEwySDNkZVc0bkpjM0YyClArWEhjRzI1MzJzSlBKRW9lUW5hTE1BRlB5WWFNeEFxdk9Rb0cyVW0rcjVoTVJGYXRKcjYzOXpFM04vUjRScm4KdWRDbGl4NWtKYUdSak1rdUFnVGEwRnB0UHV6aUpIQW4rNWlSRHN5SnN5QXFLcmNjQ0lueklZSkVMOG5PY0hIWgpNa2ZVUzYvbVRsMUFVM01MQ2RxWTBBYmJXcHc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJTkxWVFBEbERCQXN3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRGt5TlRJeE16UXpObG9YRFRNek1Ea3lNakl4TXpRek5sb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBcUFzaEF2bmcwN1ptRnlLaGZ5cS9GWHJrTzM4dVF6a04zQlNoWnBEa2NTVzlIOGxxemh4cjcvWXZkR3FnCisrckdQQ2Zra1dQTTZLNC9SZXVDZDhadEJUR3J0cGVEbXVPSHNpd0lPK0ZTN29ibFAwZWJMNFVmNkVqd2VwcWkKaCtOOE03UkRZaWVRMWhDcGt5K1NRUk9TbkFhVnZ1Y2xaZW4ram5VK2lMUzBGOXl3UUtoblRXci9QOEFwTnZTaApxNGo5NEpZYmpadUdrdG82K0wzclVzcHBMdi9TWFNQK1ZpdlFBRmYvRFZnV0Zad0p4OGY1SlF4bEttYnBpbjlXCmtpTnFZMHYvaFAyNHpIKzdWOTM5SmZMRXdNZVB3TWRrYXFsZGp2YkdUQlNwN0lKczNML2hzVVkyTkNUNHJVSnUKRUpnekF4dW01N0ZXeGYydnBQcFVBVmdBWlFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVVlJd25XUzJTc2FrWlk0R2E1UXNFZlFWQ2FWVXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUppb0d5dVB2bzlnTVUxenlVQm41bXpGaVUzVytPQ2RHeGJ3M1JjenFMckYKN0FKd2V3Q01PdHl1UDlkWDNlMEtuUkxIRXhra0F4ZzQwRGxmcTRkWWJZZGhaSFVRbm10dGsrRnhLTHMzU3VuWgovd2xUZGR3Y1BpUXl3WlJ0VUhCdGxGaUtkYzEydUtvd3hJemd5eWpZTGxTYktyNHpxanpnMkxoL0xicXRpWnVyCjdwNFlGL29aaWdFRllGQzBRTTVpZHl3SS91OEJ1Y1ZJdmRVeFNycTJJZnVDeDJkU0ZZUW0vZlVoVmlpWFBoTkMKdjduY2JPTGQ3OWtqMHVXeThJV1RRRWNKSVN3UW13V2xyZU1hcVovcGRrY1VVaEpYS29KaUdManV6aUFDZXJZRgowSXRJWmh2c3FXbk4vci9OSUZ3amttWlFDN3ZQcjZqV00rZTJiTzJib0hJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETWpDQ0FocWdBd0lCQWdJSU1RdlRMWU5sZWJBd0RRWUpLb1pJaHZjTkFRRUxCUUF3TnpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU0V3SHdZRFZRUURFeGhyZFdKbExXRndhWE5sY25abGNpMXNZaTF6YVdkdVpYSXcKSGhjTk1qTXdPVEkxTWpFek5ETTJXaGNOTXpNd09USXlNakV6TkRNMldqQTNNUkl3RUFZRFZRUUxFd2x2Y0dWdQpjMmhwWm5ReElUQWZCZ05WQkFNVEdHdDFZbVV0WVhCcGMyVnlkbVZ5TFd4aUxYTnBaMjVsY2pDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUthQXVOemFZOFZjYTJDSG5NOG52aHcvRXpRZG1xUngKSzNYaSt6TFJiSmVLMWZKNDVxbDl2VXlQYzNDL045V1RmNE1IaVhmMldZWkxDb2ZhVGtKZWJLNUlhazdqQW9yLwpaamI5RzZ2Q3lTbWw5MzJtVjliZ0FOVElXN2M1TkdidEN3Sys2WHlsUHZ5T3ZqbjNEVFhlc08xdkE0VS9reldPCmg3N05KdVNkckZtZU5PZ1JzZllXSnhDMEcvbHprK0M3OGZhQmsySDA3d3BqOFlmU0Z0ZGdUR1ZNNFRVSGxNMWsKV0JCU2g3VWNuL0w5Q2ZhMU55QTNiV1o2Rk05eWFPaWtnZnVhNTJRSUo2cSs2dEVZMVVuc1p3WVJqREp0QVpaRgpQSTZ0OFcrQnZWY2NxWU8rNmRjeWVjempiWWt0aXBHcEQxRWZTZ0dHOHNWMlc0N1FaQ1JPQnhrQ0F3RUFBYU5DCk1FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZOWUwKaXRVZlZnYnpFcUpRQmU1OU1LZmhtbFFPTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCQVpndWptWURNVm1OSQoyT242RjR6elVDNzhtZTRaQkNycnd5Ull2RkZPSk83ZXc2MDRQUENZUi8zT0pZWmR3ayt2NWxKM09BSDlqNGtqCldueUxjaVZHamhvMDYzcmNtWFdvSVNSSHptWnlXSmllc21hZ0dXN2NFOWRhZTZwR2pkdDdBQU1mQWFTRWxrdUYKSEdWcEFKVnhxOW8rZnBPZndFajNqUUlMWHMvTVhNUFNxTCt2cW5yN0pGSlBhQjNabUhMWjFwWFBoUDRpMnNlbApEUkY2VVBMRnFZOFpJaGZVcVFwK2tsK3BxM3RMRDZENUtuZE8wUmNxKzNoUXhhUHpNKzl5MElCOWlmSlB6a1NxClQ3Tll4Ky9WaUVETURHZG44ckZibFV0TnRnTmtXby9jTjV2dU1URHQ1cUVrS2dOOXJyUVhjT1BsTXFzdjhzRUUKWXlCaldzUkgKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-complete-client-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJWFg4cVh2aFpaNG93RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB5TXpBNU1qVXlNVE0wTXpWYUZ3MHpNekE1TWpJeU1UTTBNelZhTURZeEVqQVFCZ05WQkFzVENXOXdaVzV6CmFHbG1kREVnTUI0R0ExVUVBeE1YWVdSdGFXNHRhM1ZpWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRDlwK1R0N21HVzJjQmdyK0orU3JLM3krc2dvN1B3YUZVdQpDQ2Fub3ZwOXUwZTEvYlBOZlkreHlHVUNEYmprMVBWa0w2R0dGVG9UWHllZ3FtaExNVWN0UjQ1ODExMGVZNGpVClJ2UVZ5b21Jb2h0dnovaWZTVUowWVowakcvR3pwM2J6WlBhU3BHWWxEQ0xMcy9keHhpS240bzAyWi9FaHZ2QXgKRkhQcmIwWW5hdWY0V0tuTEFoZGpLaEg3ZzFTczEydk1ER25kMGdvdFk0b2dvZk40ZmdQNjIvcVlQWTY4eHcvWgoxRHBzdko4M0FBVEY3d0xqcE5MSTNLcVdnRFRjQXAwaW4yQ0dvZGh0MUtzYlc0WnZObXprcnpCaXR3bmZCVGRxCmRxMTdGR1lFYkhMQWI5N0N1VCtSbmUrZFNSN3hpOCs5OFVKNHAyU29hN1J2d05GNWJlS3RBZ01CQUFHalFqQkEKTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlR6bm5jWApYSlN4RU9UdzMvZW5BNXVHbnJRNTJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUE5REVTYVo2NW9IMkg5UDFQCitDZXZ1b1FCMnc5ZVB2NTVVMmZHVGkrSFhuTnF1cWZtK0lDNGh0cHp1R0RVSHdkZENJSzJjbjdmUGhJbW9oRFkKT3lQb1hROGI4N2hkdXZyMElRdGdmZVFQb1MzWlFpakltdzZ3b1FmclpsbVVoU1lFc1U2TEowSUJ1dU9ORXpXNQpyeEF5YlJuQmJaUGlYVVVwUSthdVpSbXRFeHFaVDVoUkg0alBUaW8rNEg3UXh1TlFYZEJLUmppMnJSVWl5NmI4CmFZUTAzNDhUdHErdnJZdjRJME01N2ZJdFNLOTJVT2o0ZXd0ZUNUOGlXWkliVXlNQzM5WEN0dGJGUHRzRjlFRGEKR2pyM1NLZ1hCQkdhaUVnVloweGxPZjQ0MU1FUEY0TitqQlBZLzdWY0RjQVhCd2xoMTRydmF2dTlhc3VBbXpSMApsMEw5elE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlESGpDQ0FnYWdBd0lCQWdJSVRNK1NqcC81djV3d0RRWUpLb1pJaHZjTkFRRUxCUUF3TFRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUmN3RlFZRFZRUURFdzVyZFdKbGJHVjBMWE5wWjI1bGNqQWVGdzB5TXpBNU1qVXkKTVRNME16bGFGdzB5TXpBNU1qWXlNVE0wTXpsYU1DMHhFakFRQmdOVkJBc1RDVzl3Wlc1emFHbG1kREVYTUJVRwpBMVVFQXhNT2EzVmlaV3hsZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURDNkdpY3JrVzgrTVV1RDlPVkJTOHM4MEY4Tnd0L1pJeGxxcTVadmJTQy9HTWFGRXhiUU1GL2cxd3UKd1RpWm93MmFEQTJrdWhVL2o3Ym03U2lRZ010VndVd3ZtNEFQd0Z2VzZSVnErNzBDT1lBcFh1eHhjdlZKbm51Ywo5Y0UyT084ZnFHakZIVGFmaCswdHIweS9FUDJJdEhTcHZLeVJMeTNjbnNGRU5ycG9vU2ZSdGQ5cWs2dzg2MlhsCllHSXFFTis5S2hHNWloYm9FOE5TdFpRU29Wblpvdm9sQndEZ0x5TTZ1R0hHdnpNaHVGWEFXYUx4dmowSjEvKzcKcllvVkR4dm5XRWFzMUd5VWsrR1VjblZJMGNwaGIvWnRmQUVIR0ZYTEk0M1EvU1BZZHA0SEVVY3lWMzlPdXhBdgoveVJtSGExeDBuL0ZsSm0xMHdBUCtoaDJPUm0xQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUdmFWNXhXemJJV1RBeEpCT3p4OWU4cktqd0lqQU4KQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBbjdvcGFtaVVVcGh2cGVMMDNEby82dkpTdllQdVZzRnFDWlJDd3V2bQpwMDgxMitzOFV2MEFHS2ZXZDl1OTdNbTZSMERuR2pxWDJEVU93QWNUMlF2Y29JTzAzc2ZseDJTRXRtQU91MkVoCldmcUJQZGRIM0ltV2VuYVlIb1oxOS9FZGtSWDdPejlaY2ovZHRGdmI2LzVWNjJzRkdaSnFtVnlRakY1VThYSGoKTnhUUGFXSWZoTEYzeU9KYXVpSXRaMVovakh5OEZQdmN2bHhjaTZuZkpONUE2RTFvUkdZR2U4VkpudjZsQnpJVQo0NmZUSjZ3VVdrcEhjYkcvVkYxSmlqcGQvcFlaNjRlZ2w5cm4zaWg4dzdMamYyc3BqNCtobE1nMGFmSEpYOVNwCm0vNXB1OW5XTEsrcjZhVkZzYk5jSmFIOUttd1k2ZW5xQlp6Z251NVlkcFUyM2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETkRDQ0FoeWdBd0lCQWdJSUh1SFJ1OHgzeXg0d0RRWUpLb1pJaHZjTkFRRUxCUUF3T0RFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU0l3SUFZRFZRUURFeGxyZFdKbExXTnZiblJ5YjJ3dGNHeGhibVV0YzJsbmJtVnkKTUI0WERUSXpNRGt5TlRJeE16UXpPVm9YRFRJME1Ea3lOREl4TXpRek9Wb3dPREVTTUJBR0ExVUVDeE1KYjNCbApibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeU1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQThPSVBXNWs1MGIza3pUK1plV21oNWcxaTNsbEMKTktZSzA0YjVPdjdReWkzMFd0K0daT0ZFZ1NyNTRUZlloNW5iK05pekRaenFhTjJWZytlazVEU0VMYW5kRkF1Vgo5Y3h1TWpldTRpZVU4aUtzTmJYdWRyM1dPWms1dXdlZzBUY0ZoYnc4ZGpOQWFRRlV1enR5SVRLTXQyVlBVSDBJCjVqWVQvQTE4UUUreUl0SjgxSEROTlhTMWlQUlEvbTZDK3FTdHRHdzJ4c3lIblIzcTIwVnhkdnE5VDhFd3ExNEgKbktPL3lKaUFhVmZjbHdBSTdXa3BFamRlVGdXL1ZHdFRjUm53c0JRRGRLRm5ocVNNREZVTXJPTFY2dGdqSXllOQpyUmlIeXBuMGpCODIzSDJIUDh1ZjVuRXAwVHIxT3UzUEJnR1lvOWNzRm9Mc0FHTnpKR1dFYll5dTN3SURBUUFCCm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVUKM1c0VzRFVGdsbVdvRkxvMitNbU9FNjRJaGc0d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFMR0tRT2poSVgzMgpLYjMxM085WWE0R0dpZU5ka1k0eWFoREVyT0M3ZXEzakJzVXVjd3VvREJLNys5MkQ4OHVwYlVWRk00U3I1SGhiCnFuWmNFNG1aUmcyMS8zMUk5dzU5WUhxbDdGUzR5ekZGOE1KNDNUOVY2aCsvUkRkWVlPQ0lhTEZnZE1yTEhvWEoKbU8wcWViNHRrWHZQZEZCaElGTXRaTmRGVjB2ZjBDUHhqZ2FFWUIrY1FVbjI4d2FGb3ZLTUpyYXhLWEtZaFdyOApmbUpMS090UnJrNjF4em9zZjNpZDN3ZE4yQTBHSDQydXhuRDI3U2I0OWZRTUFjWVVLSmZHSEIxQUQydkYwcnlwCi8vU2Q5by95TStTN2ZqSEtVSW5TUjRMdU9zODJEcEZGMFNUOTRyRUx4YXBtMWM2Z2R5R0JNZXVVY053YU9OemUKNGRDZFhCUE1lbjA9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJV21sQkt5ZWUvL0F3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB5TXpBNU1qVXlNVE0wTXpsYUZ3MHlOREE1TWpReU1UTTBNemxhTUQ4eEVqQVFCZ05WCkJBc1RDVzl3Wlc1emFHbG1kREVwTUNjR0ExVUVBeE1nYTNWaVpTMWhjR2x6WlhKMlpYSXRkRzh0YTNWaVpXeGwKZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQy9Jd0s0cXFYaQpjZ2xaQlhndEs4RE4wSEphRnR4amNqY1k3djN0YXVXeTZ6TGI2TEN5L25XdE9Pc2RCN2xCL0VSMVc5anJNOGtvCmdreFZJaWdYK3RxblBzaDNIMmk3UUw0SE5WZENWb0lhcGlnbFIwYjlYVFNVVThIYkwvTEQ1eWF6cHFEOFVyT2gKV3VDcEtaY0xjYkVvazRVeFd4OHgxamNwbXRtVkdvWE41b3BjSksxQlNrTnhLdTNYd0s3S1lKK04zQkQzdEs1dApHRHpTUEJFOGVxZDdPVWVNUlJyQXEzN1I5RG4yM3NuOEp0bHBXQUJiVWJHK2h4MEtNS2NqVHFtWFJ1aUw5MmpoCjdsUUNPbEJaYnlRTFZuZXF2aGJSMlZlQ2RWd3RjQkRReExaRXNXZlhkcnJYQzhkQlpXYmVwQnJ1QWlTLzVQYzgKSTQzOTd6L2tLRjVWQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBRApBUUgvTUIwR0ExVWREZ1FXQkJRd0FEVEova2lWaDcyYmgzVTI3MmRqU28wVnh6QU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBVWNHRlJzV3lOektHZW1zeFhiQnp1cVRvVzNuRlRNT0xqUFNVTE9URDhpNXQyUlFjZFJ0cUZYeHYKdnQ0cng1N29zbS9zSnczejczUDFwcCs4ZXhSOUJrcGpHOVdpdGJQcDgzdFd2Y05wcDF5dGoxWEIrQkplbC9BeApDVEpEcGFTVGw2eWVIdGphOE45QnJqeTlCL1JCQjhMWWpJenJoelh0elhtNjhKcnVKKzdQTU5iYVhiOWc5RnZWCllxeGFDdkIzMWxoUnh6cWtjUld4QjBOM3cyNGY0dk4vZTREeFZEWTNva0NZRFlvallsSCtVMWRTWEt3VUt6Mk4KRWxWWUxZRDBNWER3SGVBblBrQmJKK2t2ai9EaWhIY0R1Y0E5eDhQUTFwbEpZMWFhQmtLNE9QVStGZHQ3andLLwowM1YwbHgwN0o3M3Rkb09jdDM1S3dDUUpwUEFUMkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEU0RDQ0FqQ2dBd0lCQWdJSUtKM1JxNk43OUZNd0RRWUpLb1pJaHZjTkFRRUxCUUF3UWpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU3d3S2dZRFZRUURFeU5yZFdKbGJHVjBMV0p2YjNSemRISmhjQzFyZFdKbFkyOXUKWm1sbkxYTnBaMjVsY2pBZUZ3MHlNekE1TWpVeU1UTTBNelphRncwek16QTVNakl5TVRNME16WmFNRUl4RWpBUQpCZ05WQkFzVENXOXdaVzV6YUdsbWRERXNNQ29HQTFVRUF4TWphM1ZpWld4bGRDMWliMjkwYzNSeVlYQXRhM1ZpClpXTnZibVpwWnkxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFgKSDRoc2FFL1V0b0FueVRydXE2L2FZcFc2Z0kvZjdTaHdSaHY3RmtJWGtDYXB0eWJNblREamRBa2svRmdFU21JMwo0VjFCWmQrV3ZScWFSNHl6NEpXWkloMndaWlBFeEZ6M2oxM1Nabm5JSWFvWDBWcGQvYWE5bEMrUmYrSjNrdytCCkZPUWh1ckhyai9Iak9DT0RlZFdUS1RmOTRHSCt5eHdOUXFhMUJCSkZ6UGZwcTh2dndDN0hVN1JvaXF1aHJKR2cKUFlXZGJaazloTy9UalJOMUJOSlZpRVVZOHhFc1B1OEFVR2FBVTZJOWVaZmxoYkt0ZzUwVnBPR0dJQVBmdFBBOApsR2hKbkIxaEhteTZ0MlpRRGFPbkFvdUl2RzgzeFRDRG5jcFpwbkNzelhJeTJhL2tBVUVRS1ZhQ3pIeXVSbEdDCk5ZSVJESFpBK3VycmxGQ0pFbzBkQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUIKQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUdEpOVGNyTTB1U1g4eVgzSXp6ZCtUTytIRjJUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBRkNmYUZHM3pRQ0tRRE9lZmlFUkhjSCs2bDFXSTZ3RXViM0QxVExEK3dUMmF3eEZWCjBvL2ZTRUF6R2xCOWJCK0ZmSklobmwvNlZQMGp4bTUvWmtiYmdxVDRaelpDU3RuYWlpNE0xSjBkNGE2Vml0VXYKVmFuRzZ5MkN3UzZ4M0NKV2VQcmdUYTNFM1l6TGVjZlFHcXBZV1VLdDBOWlBSSzVaV1ljUG16MDQwQTZsK1dpVQovVTJxc2kvT0EvRk5pQjg0alc5TnVaQklONnRJRHJXS1hja0QzcUZNWjQ3bHZ1SnNidm9qdlgzY21PMFdiZyt5ClZHNEx6NEx0cXMyMEZrS2M4bzNXZXZnMmtCQWNkcHYrSG44TWdsaVhwRmVQeTdyak9xQWVISHk1M3ZWVE9sU3QKVERDcHlmeHNjb0V0UmcxSG91ME1NcnFJWGNoZU0yN1R6OTNKRGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-to-kubelet-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJV21sQkt5ZWUvL0F3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB5TXpBNU1qVXlNVE0wTXpsYUZ3MHlOREE1TWpReU1UTTBNemxhTUQ4eEVqQVFCZ05WCkJBc1RDVzl3Wlc1emFHbG1kREVwTUNjR0ExVUVBeE1nYTNWaVpTMWhjR2x6WlhKMlpYSXRkRzh0YTNWaVpXeGwKZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQy9Jd0s0cXFYaQpjZ2xaQlhndEs4RE4wSEphRnR4amNqY1k3djN0YXVXeTZ6TGI2TEN5L25XdE9Pc2RCN2xCL0VSMVc5anJNOGtvCmdreFZJaWdYK3RxblBzaDNIMmk3UUw0SE5WZENWb0lhcGlnbFIwYjlYVFNVVThIYkwvTEQ1eWF6cHFEOFVyT2gKV3VDcEtaY0xjYkVvazRVeFd4OHgxamNwbXRtVkdvWE41b3BjSksxQlNrTnhLdTNYd0s3S1lKK04zQkQzdEs1dApHRHpTUEJFOGVxZDdPVWVNUlJyQXEzN1I5RG4yM3NuOEp0bHBXQUJiVWJHK2h4MEtNS2NqVHFtWFJ1aUw5MmpoCjdsUUNPbEJaYnlRTFZuZXF2aGJSMlZlQ2RWd3RjQkRReExaRXNXZlhkcnJYQzhkQlpXYmVwQnJ1QWlTLzVQYzgKSTQzOTd6L2tLRjVWQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBRApBUUgvTUIwR0ExVWREZ1FXQkJRd0FEVEova2lWaDcyYmgzVTI3MmRqU28wVnh6QU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBVWNHRlJzV3lOektHZW1zeFhiQnp1cVRvVzNuRlRNT0xqUFNVTE9URDhpNXQyUlFjZFJ0cUZYeHYKdnQ0cng1N29zbS9zSnczejczUDFwcCs4ZXhSOUJrcGpHOVdpdGJQcDgzdFd2Y05wcDF5dGoxWEIrQkplbC9BeApDVEpEcGFTVGw2eWVIdGphOE45QnJqeTlCL1JCQjhMWWpJenJoelh0elhtNjhKcnVKKzdQTU5iYVhiOWc5RnZWCllxeGFDdkIzMWxoUnh6cWtjUld4QjBOM3cyNGY0dk4vZTREeFZEWTNva0NZRFlvallsSCtVMWRTWEt3VUt6Mk4KRWxWWUxZRDBNWER3SGVBblBrQmJKK2t2ai9EaWhIY0R1Y0E5eDhQUTFwbEpZMWFhQmtLNE9QVStGZHQ3andLLwowM1YwbHgwN0o3M3Rkb09jdDM1S3dDUUpwUEFUMkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-to-kubelet-client.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdGw5Z2tnQUNvT0dNMVc2am96eStLVHd1NE83MS9YUFN6STB4QkN0a1YrbCtVdm4yCnJEb3lPTWVqZGlUcTJMb04zNGs5cGloam5NU296WnFBNGdtTnVIZnNKdjZrVWJGODcwOUl4YmtmUlNpN0srSVcKU3NYMXpmSzhObThwc2FXYXRQZURpcGp2NCs5b0FiV1ByYWUwaXVOL3R5RHBMSDB1K1RadUJwRG5RWWsxYktUaApMcUdDWjd4NTQvNUZ1VitzcldHZFlwdVZyaWtwSlBhbE8rYnRnUy9hRElOaTVoTng4WU81QjhvVklISGhxZ0piCnFqVlllR2lhYW1kVHREcW93MmdBMG80d0ZlbThaMG9pNldDaER3WlB5NERHQ3p0TzJJL0RVc2dJQUhOQXJZd28KZFVyS1grWkJUR2NBY2Z0QzJiZ0kyb21CbXpmd1QwanJDQ1VPbHdJREFRQUJBb0lCQUQzekRDVE1LQmhxUmFMQwpvSWQwdk12WkM3dVFzTExWdzBlRXRwL0o5WjMvVE0vMjVSbi84c3RpMVYzdWtHL3FVNGdaWUgydXZwZWtIZ3NwCmJwcFowSEJYSERycXlQcVBKZmRNb1ZXNDJxeHRkNWNpaDV3Q3ZzcWtwOVo5MEZYdUFTMXozcFVYK25VYy8rR0UKd1RlbC9pZ251MXlEcTNGWFhMdC9COFRuT0FjRWQzRmsxRFRtWk9JOFdsakM1V3JlQkxPWlRzamNiR1c1V3NHSQpTcFk5OSsvbjJ3UWM2MDNtK0NZeTlBLzEvcDUvVW5reFdzejZBSlZlcTBSczRGRVE5OGI2NjR4NUY4d2pzVkhnCmwxMWFTdjRTVW1kRG1DUEd3ZzJJNnJ2cTlYd0lPVk1oL0RZdDNJd1VOOFNmc2lmVUR6REd4L0hWRzVTSDlsbW4KNFl4TUxwRUNnWUVBNjJxWGh3YWhLY2hvc1FPRk9qUFlsaTBiZ3MzNThxNW5KMTZvV3NRZjdYcVpKS2wyTkJWdAo1eUhZWm9jU1dlTnVFZFNCRGpoUmVyaUFVZHRoQytTZ3NFMDU0RzI1TmFRaWI2TVNoNXZpRlhldmtKM2JFdy9YCkQwUW8yZWtuYVhCRWZpWW9IMTh4TldYSzBieFI1K0cxMTBFUFJwWEJsZ29YNDlkWHJDVnZaYk1DZ1lFQXhsRjgKcTg0alZIUE1uU1NzVHE1UHBJWDBWcXl5Z04zNXRGK1V2Q1VjOTdsL3ZyOXdSTDhZYTdueUZqQjVYL2tyUkVWcgpYSmpvN2xiSnpYcTNCSnZvaGwxeXk0TWRNUWVOZ3BEUTIwaytWQjBoaGFQV21mMVFMQjZMZWhEUE9NNFRhL0lYCkhLZ010NTBvKzk1MzlYN3RkZ2MzQlhiV1dPSnVheWk3VXBJT1NZMENnWUVBZzZwVUlWTFY1SGFRQnlDKzdMUisKbUUrV0tXeG1OUkxSNHJVUVYrT0ZMOTczdEFlTGNzbmhjL243L0N2aldaN1h1dVV0WVBTaXJZNXZSbGo2U0JxUQp2TW9VYXE4emZRclZyN1oyOEoyQXJ4MEhka3l6Y0UvVnFsWW11dW1wLzFDcEhoemRKOTZudVFPN2tkNVB1TzhHCk11UFNWVm9Bc1pmbmtLaXFBai9Wcy8wQ2dZRUF1U2h6Z2VTZ1Q4VWVFTW1ncG9WUWpvY1NyYW5ucnpHUVpidW4KbmxINFRjRy9aMVJOZWFJQkp2TWc5MTZpczl4cmJQNXpVcXpoTFVXU2ZHcEtYZDlDcGRDeDBSakZOSFdjeFg1Mwp3WVVNMEhPeVRKZS9VVjZVYjl6RTFGN0ZXbi9zMmlmWk5FUWlPM3hjTzJ4bUM2dEtBWnlTM21NcGxTc3pkSkUrCjg4U3gyakVDZ1lFQTVtaE1sT3ExTWVLWk4reFQwOEFKL0Jqc3NUNlVTTlFFcFhNUE9hdHhxRXYrTkd2OVZPUEcKalZuUWFRTEtxRFZZWVlSV0JlVGhmTVV6UGZqT1ZEYnp0NE1rTlQ2MmQ5azdXL0ZKVTFSNVh5aW82d0liRlBHeAprb25GNlpwWE0rL1Yycm9PSThPeXZPV1JVa2ZGUUFxdFpXdzZ3SjBTbWJTQ2ZRblExUjFlYmNVPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-to-kubelet-client.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURiRENDQWxTZ0F3SUJBZ0lJQ3VzS0VjblIwNGd3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB5TXpBNU1qVXlNVE0wTXpsYUZ3MHlOREE1TWpReU1UTTBNemxhTURZeEZEQVNCZ05WCkJBb1RDMnQxWW1VdGJXRnpkR1Z5TVI0d0hBWURWUVFERXhWemVYTjBaVzA2YTNWaVpTMWhjR2x6WlhKMlpYSXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzJYMkNTQUFLZzRZelZicU9qUEw0cApQQzdnN3ZYOWM5TE1qVEVFSzJSWDZYNVMrZmFzT2pJNHg2TjJKT3JZdWczZmlUMm1LR09jeEtqTm1vRGlDWTI0CmQrd20vcVJSc1h6dlQwakZ1UjlGS0xzcjRoWkt4ZlhOOHJ3MmJ5bXhwWnEwOTRPS21PL2o3MmdCdFkrdHA3U0sKNDMrM0lPa3NmUzc1Tm00R2tPZEJpVFZzcE9FdW9ZSm52SG5qL2tXNVg2eXRZWjFpbTVXdUtTa2s5cVU3NXUyQgpMOW9NZzJMbUUzSHhnN2tIeWhVZ2NlR3FBbHVxTlZoNGFKcHFaMU8wT3FqRGFBRFNqakFWNmJ4blNpTHBZS0VQCkJrL0xnTVlMTzA3WWo4TlN5QWdBYzBDdGpDaDFTc3BmNWtGTVp3QngrMExadUFqYWlZR2JOL0JQU09zSUpRNlgKQWdNQkFBR2pkVEJ6TUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNEQWpBTQpCZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJRM3VUSFJxOU9RUkpRV0x6NnkwTHM5S0ZHYWVqQWZCZ05WCkhTTUVHREFXZ0JRd0FEVEova2lWaDcyYmgzVTI3MmRqU28wVnh6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUEKQjVpZDNSTzA5ejBMdmprdDVkcmFVQVc3bUlJSXZXSjJxVUR1N0JhMWM5QXVobmgrRithK2NTSGZtb25BUTFFTgovN0pnbWxWamx5OUJ3K3p1WHJOSmozWlBFd1J1S1NJUWhLcythTERJSnBlanV6NmJwWXNuV1g0Qmw5UHkwbWFECkRZaDNQdjBickpOWTJrVmdYY1d2Y2xhOVBwbm1xdmdDRVJoaUh3TDFUTTB1UlZMZjdSUjZialBaSG9LdGduVzUKMFlIVkh3cjB3UXJyb0J2dERMWDhMUVljbjh6ZERDZzRLOE9hVXZQNThSdDlGTlpSMWl1ekkxVVNqQ0k1akxxbApVTTIwL2FXOGFSRzJ5bkVlZjBGbmQ1djY0a3BrQmlxMU1HWldORkY3eVZ4cVV0WURxSUhPbmZBV1d3YWhISXBFCkZCSWRmZWFtZnR5ckVsYjN0d0Zibmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-to-kubelet-signer.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdnlNQ3VLcWw0bklKV1FWNExTdkF6ZEJ5V2hiY1kzSTNHTzc5N1dybHN1c3kyK2l3CnN2NTFyVGpySFFlNVFmeEVkVnZZNnpQSktJSk1WU0lvRi9yYXB6N0lkeDlvdTBDK0J6VlhRbGFDR3FZb0pVZEcKL1YwMGxGUEIyeS95dytjbXM2YWcvRkt6b1ZyZ3FTbVhDM0d4S0pPRk1Wc2ZNZFkzS1pyWmxScUZ6ZWFLWENTdApRVXBEY1NydDE4Q3V5bUNmamR3UTk3U3ViUmc4MGp3UlBIcW5lemxIakVVYXdLdCswZlE1OXQ3Si9DYlphVmdBClcxR3h2b2NkQ2pDbkkwNnBsMGJvaS9kbzRlNVVBanBRV1c4a0MxWjNxcjRXMGRsWGduVmNMWEFRME1TMlJMRm4KMTNhNjF3dkhRV1ZtM3FRYTdnSWt2K1QzUENPTi9lOC81Q2hlVlFJREFRQUJBb0lCQURhQXhVWGpZMm92R250SQpFL3pOZlMwelEyaHRIR3MvSm5iMXIzTUVDSHY4bFlRZjFrTTBURm9ZNFBKbVFXMlBnZlgxT3VYVzNvV3VvaFdrCnA4b3V2aXJ5dkRjN3ZhR24xSWc1cmFnOUF0eVdoTndjZHlISWNqWFpyRzNVUG1XZWhHcTJHVEhhWTE2ZmkzQ3gKYTJEWUNxeUhaSE91aURhdDN3eitHdzFwZ3I0emdSZ2tjcGhKdVFSd293dWlPT1poRytPU2p5cVdhWndmQlc5aQpDVHBydExDUVVRRExSbkxiaGhBU051MnMrWFhzMk5XcUhvV1VBUGhiaFJaa2lrZHRrUzRkUVVQYi9QcDdxM3EzClBXWExBdUpMcXlueHRMUXA5T3pGTnk5WmtjRFFtTFFBUjI3Ti9EU1lNVDQvSkczTkJvaTNvWFlkWXQ4eWFHdVQKaDZRS2dBRUNnWUVBMjR5S0w0L1NIUmFKQkcxNU9zaXRwd1NKcTRaRFZKbi9SM0pUTnVJT2V3cDhwUXdwU3Z6TwoxR01DeHRQYnNyNkcxT04vYVVtazVSSXJGUWt1USttTGFkTm9GSjVDNVhPSkE5QkErektldmhpZWFqOGZMRVBKCk1wYklVOXUyWElScGMrWitscTFiV3dHekVRU2pjczd6WkttcDNaaG9pOXl1cUJRL3VHZTdFWFVDZ1lFQTN0N2UKdWpzcDRxYzJhWGRiampDdmJ0UVZOVU5XeGRnOVVodmNyaUMyREgzUnA0YThKcFhPdkQ5RXBEdng1YXF3ZVJkVwovNThDb0tzWHJzV3pDVExjVmk0eGQydU5ETVJxRGJKZ0JCaXI1VlBWclIvVCtkRW1ZRG5JbUVHM0R4MXJrVFdICkMwSmNpZUZYVVJ1b0RiODdaRzlVTVh5Syt6TlVXdnRHZjdZS25XRUNnWUVBdVF6NVFHT0IzMENxVnBBTFdZL2kKUmw5ZHhyUlJOaExqQjQ2R00wRlFvVWJTanE3MGN4OHBHZjBtVHY0dE5MakFudG50LzRteU1kNGhjQWFmOTEvMwpRVWlPZHFwNmlqbmFwOXMxbWtVdFpkOE1UMU5LN0IxcWpYaG4rNzY2TTdycncyUHBHUW1mY2RLNTRzTTlIVHp3CkM4Mnh2blNDMGpnOUFyQ21rTURsL1MwQ2dZQjJ2Qi9HOGF3djcwdWl4bzhGWXRTajQrTmttL3FIcnR1RWVnbUkKenk2TjJ4NHQ5UzhhRTJldmpMbGlFZm1lbE9BdHN3eUxaTWgrbG9nb2VYVVhxbndPZ2MraXdxN0RwWVNteFdnMwo1bmoxMVVNYVY4R1Q3eVJWMFpNWDRyTEhIN0ptQ3pGbUF6WFAwemkwb2xwVzhKR1F3V3NHYmthUTY5aStHKzZFCkxaVGNJUUtCZ1FDMjRaQWt1OGxsNjBkZTE4SFIzcCtPWVpPTmVTTW8rZ1JNVERtQUxhenA0bFRhOTZqWTZ3ZFkKZFJxMU9yTG5INkhySnBwbVFncUFWMC9vWHprdWdUUmozRFhLeVc2bFBuTVlIRUx6bW1wWFhWU1ZCYk16UXhkSgp0ZnIyanVGNXppcDZUYTNYbjE2VE9mRG5zUURZYlJBaDBVREhWQzdyYWFLM3ZodG56NnI5OGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-apiserver-to-kubelet-signer.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJV21sQkt5ZWUvL0F3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB5TXpBNU1qVXlNVE0wTXpsYUZ3MHlOREE1TWpReU1UTTBNemxhTUQ4eEVqQVFCZ05WCkJBc1RDVzl3Wlc1emFHbG1kREVwTUNjR0ExVUVBeE1nYTNWaVpTMWhjR2x6WlhKMlpYSXRkRzh0YTNWaVpXeGwKZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQy9Jd0s0cXFYaQpjZ2xaQlhndEs4RE4wSEphRnR4amNqY1k3djN0YXVXeTZ6TGI2TEN5L25XdE9Pc2RCN2xCL0VSMVc5anJNOGtvCmdreFZJaWdYK3RxblBzaDNIMmk3UUw0SE5WZENWb0lhcGlnbFIwYjlYVFNVVThIYkwvTEQ1eWF6cHFEOFVyT2gKV3VDcEtaY0xjYkVvazRVeFd4OHgxamNwbXRtVkdvWE41b3BjSksxQlNrTnhLdTNYd0s3S1lKK04zQkQzdEs1dApHRHpTUEJFOGVxZDdPVWVNUlJyQXEzN1I5RG4yM3NuOEp0bHBXQUJiVWJHK2h4MEtNS2NqVHFtWFJ1aUw5MmpoCjdsUUNPbEJaYnlRTFZuZXF2aGJSMlZlQ2RWd3RjQkRReExaRXNXZlhkcnJYQzhkQlpXYmVwQnJ1QWlTLzVQYzgKSTQzOTd6L2tLRjVWQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBRApBUUgvTUIwR0ExVWREZ1FXQkJRd0FEVEova2lWaDcyYmgzVTI3MmRqU28wVnh6QU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBVWNHRlJzV3lOektHZW1zeFhiQnp1cVRvVzNuRlRNT0xqUFNVTE9URDhpNXQyUlFjZFJ0cUZYeHYKdnQ0cng1N29zbS9zSnczejczUDFwcCs4ZXhSOUJrcGpHOVdpdGJQcDgzdFd2Y05wcDF5dGoxWEIrQkplbC9BeApDVEpEcGFTVGw2eWVIdGphOE45QnJqeTlCL1JCQjhMWWpJenJoelh0elhtNjhKcnVKKzdQTU5iYVhiOWc5RnZWCllxeGFDdkIzMWxoUnh6cWtjUld4QjBOM3cyNGY0dk4vZTREeFZEWTNva0NZRFlvallsSCtVMWRTWEt3VUt6Mk4KRWxWWUxZRDBNWER3SGVBblBrQmJKK2t2ai9EaWhIY0R1Y0E5eDhQUTFwbEpZMWFhQmtLNE9QVStGZHQ3andLLwowM1YwbHgwN0o3M3Rkb09jdDM1S3dDUUpwUEFUMkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-control-plane-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURORENDQWh5Z0F3SUJBZ0lJSHVIUnU4eDN5eDR3RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRJek1Ea3lOVEl4TXpRek9Wb1hEVEkwTURreU5ESXhNelF6T1Zvd09ERVNNQkFHQTFVRUN4TUpiM0JsCmJuTm9hV1owTVNJd0lBWURWUVFERXhscmRXSmxMV052Ym5SeWIyd3RjR3hoYm1VdGMybG5ibVZ5TUlJQklqQU4KQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBOE9JUFc1azUwYjNrelQrWmVXbWg1ZzFpM2xsQwpOS1lLMDRiNU92N1F5aTMwV3QrR1pPRkVnU3I1NFRmWWg1bmIrTml6RFp6cWFOMlZnK2VrNURTRUxhbmRGQXVWCjljeHVNamV1NGllVThpS3NOYlh1ZHIzV09aazV1d2VnMFRjRmhidzhkak5BYVFGVXV6dHlJVEtNdDJWUFVIMEkKNWpZVC9BMThRRSt5SXRKODFIRE5OWFMxaVBSUS9tNkMrcVN0dEd3MnhzeUhuUjNxMjBWeGR2cTlUOEV3cTE0SApuS08veUppQWFWZmNsd0FJN1drcEVqZGVUZ1cvVkd0VGNSbndzQlFEZEtGbmhxU01ERlVNck9MVjZ0Z2pJeWU5CnJSaUh5cG4wakI4MjNIMkhQOHVmNW5FcDBUcjFPdTNQQmdHWW85Y3NGb0xzQUdOekpHV0ViWXl1M3dJREFRQUIKbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVQozVzRXNEVUZ2xtV29GTG8yK01tT0U2NEloZzR3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUxHS1FPamhJWDMyCktiMzEzTzlZYTRHR2llTmRrWTR5YWhERXJPQzdlcTNqQnNVdWN3dW9EQks3KzkyRDg4dXBiVVZGTTRTcjVIaGIKcW5aY0U0bVpSZzIxLzMxSTl3NTlZSHFsN0ZTNHl6RkY4TUo0M1Q5VjZoKy9SRGRZWU9DSWFMRmdkTXJMSG9YSgptTzBxZWI0dGtYdlBkRkJoSUZNdFpOZEZWMHZmMENQeGpnYUVZQitjUVVuMjh3YUZvdktNSnJheEtYS1loV3I4CmZtSkxLT3RScms2MXh6b3NmM2lkM3dkTjJBMEdINDJ1eG5EMjdTYjQ5ZlFNQWNZVUtKZkdIQjFBRDJ2RjByeXAKLy9TZDlvL3lNK1M3ZmpIS1VJblNSNEx1T3M4MkRwRkYwU1Q5NHJFTHhhcG0xYzZnZHlHQk1ldVVjTndhT056ZQo0ZENkWEJQTWVuMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRE1qQ0NBaHFnQXdJQkFnSUlNUXZUTFlObGViQXdEUVlKS29aSWh2Y05BUUVMQlFBd056RVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNFd0h3WURWUVFERXhocmRXSmxMV0Z3YVhObGNuWmxjaTFzWWkxemFXZHVaWEl3CkhoY05Nak13T1RJMU1qRXpORE0yV2hjTk16TXdPVEl5TWpFek5ETTJXakEzTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhJVEFmQmdOVkJBTVRHR3QxWW1VdFlYQnBjMlZ5ZG1WeUxXeGlMWE5wWjI1bGNqQ0NBU0l3RFFZSgpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFLYUF1TnphWThWY2EyQ0huTThudmh3L0V6UWRtcVJ4CkszWGkrekxSYkplSzFmSjQ1cWw5dlV5UGMzQy9OOVdUZjRNSGlYZjJXWVpMQ29mYVRrSmViSzVJYWs3akFvci8KWmpiOUc2dkN5U21sOTMybVY5YmdBTlRJVzdjNU5HYnRDd0srNlh5bFB2eU92am4zRFRYZXNPMXZBNFUva3pXTwpoNzdOSnVTZHJGbWVOT2dSc2ZZV0p4QzBHL2x6aytDNzhmYUJrMkgwN3dwajhZZlNGdGRnVEdWTTRUVUhsTTFrCldCQlNoN1Vjbi9MOUNmYTFOeUEzYldaNkZNOXlhT2lrZ2Z1YTUyUUlKNnErNnRFWTFVbnNad1lSakRKdEFaWkYKUEk2dDhXK0J2VmNjcVlPKzZkY3llY3pqYllrdGlwR3BEMUVmU2dHRzhzVjJXNDdRWkNST0J4a0NBd0VBQWFOQwpNRUF3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTllMCml0VWZWZ2J6RXFKUUJlNTlNS2ZobWxRT01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQkFaZ3VqbVlETVZtTkkKMk9uNkY0enpVQzc4bWU0WkJDcnJ3eVJZdkZGT0pPN2V3NjA0UFBDWVIvM09KWVpkd2srdjVsSjNPQUg5ajRragpXbnlMY2lWR2pobzA2M3JjbVhXb0lTUkh6bVp5V0ppZXNtYWdHVzdjRTlkYWU2cEdqZHQ3QUFNZkFhU0Vsa3VGCkhHVnBBSlZ4cTlvK2ZwT2Z3RWozalFJTFhzL01YTVBTcUwrdnFucjdKRkpQYUIzWm1ITFoxcFhQaFA0aTJzZWwKRFJGNlVQTEZxWThaSWhmVXFRcCtrbCtwcTN0TEQ2RDVLbmRPMFJjcSszaFF4YVB6TSs5eTBJQjlpZkpQemtTcQpUN05ZeCsvVmlFRE1ER2RuOHJGYmxVdE50Z05rV28vY041dnVNVER0NXFFa0tnTjlyclFYY09QbE1xc3Y4c0VFCll5QmpXc1JICi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJUlVZVGpXSEFkL1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURreU5USXhNelF6TmxvWERUTXpNRGt5TWpJeE16UXpObG93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZmdWZTYU5EVWIyQgpsSHpxTkxiQXUrTHc4VjNCYkdObTdOSTdWR3M0TTBTajFhUjUwR2JYalFuajBqV2diamV0Q0ZjRUM1VTRNeUU3ClVJVTZTb1RHVm1UZlhpY2NoZjFCM3BWQXF5QXg3YzlGb083TXNYNWpHMFRxUGhZUi93TWFEM0VUNjZJVld0aWcKa2FqNGdIcGVNb0o0WkhMbVZCcFdJNklvb014NVgyYlFrTzBMZXZHd0tQU1doK0FYTVhlU2h2ZUlUY3VUaWg2bgp3WXd3eTUzYW52clRCWjdxMkNablpwQ0NKZjZ2YzVZUWR2UXRCMkNGVjJPcDU0ZFdJc3NYdVA2ZFpQY0dHckNkCnFaUHo4ZU12M01BR0kvQU9DL1dDWklmbHR4WkZGem5nSmR0UmZ0RnZPZ1A5RWNGa014ZnA5ZG1ZZEk0bTRIUXoKcXlqd1IrQ01md0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVd0docUpnZ2NJbVNWZUk0a0FCdnZ6SVcvUXFFd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBS2dFYzk0TVl4TTRXazF1WFlENXhGL0xiS255eTBwWUk1UlBVWm95bk1Lcjl3MHVmYXhIL2dMaGFjdmkKck1NdTV3bXVOcnJDdGdBbUwyOTZhZVFLZ1NTUTRrQlZZOGJJL0dpaXdRQU9Gb3JEcWxTeUZMVXJ1aWhHcm5JdgpoOXozeWpCVEVOWk1LcWNYVGdvWE5TL2xUZzE1NWJTZm43TG92c0FENDN5bk1xUFBMeEwySDNkZVc0bkpjM0YyClArWEhjRzI1MzJzSlBKRW9lUW5hTE1BRlB5WWFNeEFxdk9Rb0cyVW0rcjVoTVJGYXRKcjYzOXpFM04vUjRScm4KdWRDbGl4NWtKYUdSak1rdUFnVGEwRnB0UHV6aUpIQW4rNWlSRHN5SnN5QXFLcmNjQ0lueklZSkVMOG5PY0hIWgpNa2ZVUzYvbVRsMUFVM01MQ2RxWTBBYmJXcHc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJTkxWVFBEbERCQXN3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRGt5TlRJeE16UXpObG9YRFRNek1Ea3lNakl4TXpRek5sb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBcUFzaEF2bmcwN1ptRnlLaGZ5cS9GWHJrTzM4dVF6a04zQlNoWnBEa2NTVzlIOGxxemh4cjcvWXZkR3FnCisrckdQQ2Zra1dQTTZLNC9SZXVDZDhadEJUR3J0cGVEbXVPSHNpd0lPK0ZTN29ibFAwZWJMNFVmNkVqd2VwcWkKaCtOOE03UkRZaWVRMWhDcGt5K1NRUk9TbkFhVnZ1Y2xaZW4ram5VK2lMUzBGOXl3UUtoblRXci9QOEFwTnZTaApxNGo5NEpZYmpadUdrdG82K0wzclVzcHBMdi9TWFNQK1ZpdlFBRmYvRFZnV0Zad0p4OGY1SlF4bEttYnBpbjlXCmtpTnFZMHYvaFAyNHpIKzdWOTM5SmZMRXdNZVB3TWRrYXFsZGp2YkdUQlNwN0lKczNML2hzVVkyTkNUNHJVSnUKRUpnekF4dW01N0ZXeGYydnBQcFVBVmdBWlFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVVlJd25XUzJTc2FrWlk0R2E1UXNFZlFWQ2FWVXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUppb0d5dVB2bzlnTVUxenlVQm41bXpGaVUzVytPQ2RHeGJ3M1JjenFMckYKN0FKd2V3Q01PdHl1UDlkWDNlMEtuUkxIRXhra0F4ZzQwRGxmcTRkWWJZZGhaSFVRbm10dGsrRnhLTHMzU3VuWgovd2xUZGR3Y1BpUXl3WlJ0VUhCdGxGaUtkYzEydUtvd3hJemd5eWpZTGxTYktyNHpxanpnMkxoL0xicXRpWnVyCjdwNFlGL29aaWdFRllGQzBRTTVpZHl3SS91OEJ1Y1ZJdmRVeFNycTJJZnVDeDJkU0ZZUW0vZlVoVmlpWFBoTkMKdjduY2JPTGQ3OWtqMHVXeThJV1RRRWNKSVN3UW13V2xyZU1hcVovcGRrY1VVaEpYS29KaUdManV6aUFDZXJZRgowSXRJWmh2c3FXbk4vci9OSUZ3amttWlFDN3ZQcjZqV00rZTJiTzJib0hJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-control-plane-kube-controller-manager-client.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBczRhbDlxWjJzekFOQmVuUDl6SVVXRjhyT3czNER0dzc5a204Y1JTdTBzenZ0RURTClo4dHQ2Ym00aXJkMHluN0NldTY1RkFndlFMbjVnV1lmZHNzRWZFN04wNEJCTnd0djhkRmNydkJqNWlpZmNvRjYKZ21LcUUzclphdVNtSHM3VWFDQmJXc1RwanpTSC94d1RHNGFXNkw4N3l3KzdNZWwrNTltZi80cUhIOFk0aC8yTwplZVdNU2s5Tm9ERnJGOUh0RFZDQUpFeWNLcXRpU1JYcUd6eGphT2pBNStxcW56Qk1UQWUrVnp4UDkyYjdhMWZUCmpralpkd3hETG00eW1wcW9FWXJuUDZWSnk4NVgwZUdydjBFdmhyQm9CUHhkZzRISE9XaGkyMEh5UHBENTRldkgKZkkycU5qcFJUR2dSS0JrK2FyWXlkL0lHd1R1U2xLd1A0amxGN3dJREFRQUJBb0lCQUVqUVF2NFFOREtuT1pEOQpiVGtRbWNuaUI3R3pEN3BQUHc2OGgyN0IrY3BNRHFqb1phNXRodzMySXRBNGFtazdFbnd6Mk9NMEVwNUpEOWFZCjZnZ1BmYWxCZVIvZ2RCTDBVNW9iMVdDcTVZblRUaUJ1UFpjbWwxN0JRKytqLzNDZGFPODJ1SGJQU1ArcFNjT0IKeW9vdWc0U3hFM3BmemdnSGNVNXVLUVBIVnRqZXFkWnV0YkpLOHJDc2dvaG91U2FmUWpBcG9lMlBYTmJjWThSSAptTzJUME1jSjVTTXdBVVk3V3ZTR29ZU0dFSDVUanNPUnY3MkVZeEh2RzVtd2VPbldnQ2FEaE5kTWpmN1B2R1pkCmY4d2lINDZWbXkrbHBLaE83cE5BelBXcnFXajBQaGZiYjBpSUk5VjhZVERBQWJQZ3M1TVdwbTNxRWJqNDQ1b0gKdFpIM0lNRUNnWUVBM0NZb0c1a0ZoOVRoME1yZlJEN01lWlhsZkpVaElMSVR0TFptUTVaVVNxejRWVnpyMkZFQgpEWWJPTG5teVBJcEVHeVgrb2t5bFJ4VUFSMGRxM1grT2JGWkxZQ29VQ0FQanFBdDh1ZkhsQVlySUdsbmxSSG9jCkttWWMwNkU0OGJPSXJnRVR5VlRFTVZUalJMdG56dkYvQWxMelA0blo4WThaSm13b3hxU3g5ZzhDZ1lFQTBNTHkKYUdGemw2dlhMMmt6bGw3bHBGSDNEQUQwNCtxY2FRL0ozU2RmbUFtTVpEYUgydzdDUFl4bGk4bytOQU4rZEs2MAp1TXkzMXRzYkkxQnNSbVZ1NUkxU1JwUDF4YkUvZzQ3d3VmY3Rxa2lpcytybGw0SzdRSVZLWWVpWmZveGlVM0ovCk9SdFNDNFpIQnIwS21SRHpoTkZzc3VyYWNFdGorWXFOaEp2TWtpRUNnWUErMkxHNGR5MnFBaTdZNFNGdHBSUFEKWGVkZWNtQTdxanFQNjBZMFl6VDdBSGdBUG4raGlEWnB1eU1mQjJUSGZaMUZ0c29EWVNnSnE4Z2hrUlREMk1jNgp6RVBHVnh6UzBQRnJwcVBiblYrSDJpdVh3alArSVhIcTlLMmtDTEZ0NXBmTlBNZCtRVEdrOTV2Tm9rWlhRSC9HCmxSR1dBTzl6MHlzVjJlaW1GSnd0SndLQmdRQ2ZqMUZPSEtZSUdDeVpyVFBqeTlhRHVLNDFlNG14cGtFMFFBQVAKUzZmU0FnSlBHaXJPY01KZjNxNUNvU3JZQUkrbnlWeVNIczZvcHNGZ1JYanNlVnkvelpCRUo1VGpMQzJhZFNkagpUQnlZR1hwYVA4Q0tCRDd3K3ErMms5eTJEOENiZlZqbUlnNmNobDVGTlRvamNnUmUwTjdmQllnOTZqR1lxcUN0CjZaTDdZUUtCZ1FEVlNLc2F0KzJFdENxbjdwVUR5VkhhZ1REeGdMNWhJU2NIQXNKTCtQbm5UT1lIRzlNSGVUMDQKWm9jd0VUT0xNdFZsTFMxWTRMK0Fwa3ZNSnRBcldVd1VRYW5icERUYlcyTmYvTEgwVENJUWtLRk9aaGpwemYvSgpFVTIyMlRHeW5RbCtMOTNoZE5DY2Nmb2Q4Y1dMK1A5ZkJqQW5jdjRtUVc3bG9vdTIweGxvUmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-control-plane-kube-controller-manager-client.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lJU3A0Uk1sSzlOSFF3RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRJek1Ea3lOVEl4TXpRek9Wb1hEVEkwTURreU5ESXhNelF6T1Zvd01ERVhNQlVHQTFVRUNoTU9jM2x6CmRHVnRPbTFoYzNSbGNuTXhGVEFUQmdOVkJBTVRESE41YzNSbGJUcGhaRzFwYmpDQ0FTSXdEUVlKS29aSWh2Y04KQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxPR3BmYW1kck13RFFYcHovY3lGRmhmS3pzTitBN2NPL1pKdkhFVQpydExNNzdSQTBtZkxiZW01dUlxM2RNcCt3bnJ1dVJRSUwwQzUrWUZtSDNiTEJIeE96ZE9BUVRjTGIvSFJYSzd3ClkrWW9uM0tCZW9KaXFoTjYyV3JrcGg3TzFHZ2dXMXJFNlk4MGgvOGNFeHVHbHVpL084c1B1ekhwZnVmWm4vK0sKaHgvR09JZjlqbm5sakVwUFRhQXhheGZSN1ExUWdDUk1uQ3FyWWtrVjZoczhZMmpvd09mcXFwOHdURXdIdmxjOApUL2RtKzJ0WDA0NUkyWGNNUXk1dU1wcWFxQkdLNXorbFNjdk9WOUhocTc5Qkw0YXdhQVQ4WFlPQnh6bG9ZdHRCCjhqNlErZUhyeDN5TnFqWTZVVXhvRVNnWlBtcTJNbmZ5QnNFN2twU3NEK0k1UmU4Q0F3RUFBYU4xTUhNd0RnWUQKVlIwUEFRSC9CQVFEQWdXZ01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpIUVlEVlIwT0JCWUVGRzdVaXlJUGRoa0ZZU1NYT0UvMHBzQ25EWGV1TUI4R0ExVWRJd1FZTUJhQUZOMXVGdUJFCjRKWmxxQlM2TnZqSmpoT3VDSVlPTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDc1dGMy9JVVBBclJ1dTJhTTkKZHlEL1hBVlF6QkRoc3FILzBlLzk5dVNDYmFmQ0psdEVpeTZzMEtyVklYS0o5ZGhiUnRWSTUyTjFHS0hpc0pZQgpnVVd2SStkQy8xTjNtYnRjVFRZRTVzemlzUWg4dUNpbklZMEMwYTRyeFVnZmZvRFc0bStFN3hiZDJHZ3dKSGNMCnllS0JsamN5OTh0d3RCd3hJTXYwV2wyMFovejJCOUlHbS8xd2UvOFpWekd6d3IySE41SXR1SmFDemtvbG9HSmMKSHlRUk9uZ0FXVWtwN3gyYW9Bd213WnVJRTEzdUIvMVRJakpvUGJMNjhZbWdHb2xBTnZwT0duc016Q3RKZDNlWApwVEJXUGtoaGlBamxOZE8xWmtIYk5wZmpBYy9WVHF1cVV6WlBvZmVxa1Naekt6VmdocjN1ZEg2MWNJWVpwQnA5CjZxK2EKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-control-plane-kube-scheduler-client.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMlU5Qmc4cG9rZWIvUk5YSVpDdkF0MVZtNE5FbFI3bkttc3dOODhjUkVFenQ2QUFpCjUzZUxhSnUwTXZ2WWpDbjd3UHQwUHk5d0tTUEE4M2xvT00zczBRdWVZY0YxSDRYOC91Q3JVaGdsdWl5TGxkRmUKSTJXY2VsYVZkelI5d3haVUphenBTTHY3eWlBcTNTMWNxYWQ1dkRQTHZ2aEhWZ1hpNThYQktKelRWZ3RmYS84MApFNFlFMkRpWHVFM1FTMGVJVGl5aDRqSlVtN3VQSFZNR0R3M1BMaTE3VmtMOUp1NXY3UlV0eXpjVmloYXltaDAzCitBblRSSFZBWUtXTVFvQ1ZFd0Z3aFFDcHVkbDdDeWRpOHFKVVZEOVBGU25iNlVtQ1pLVU5Bd3E2VUc2VEcwN3MKT1lhZzY2OEZCc29PUkJsK0FTNW50UGVURHRrbEtaakl1UVh5UXdJREFRQUJBb0lCQUdNNUVRMEFDcWN6OWpLVAorcC9pYW1oTGttSHNuVDBXMUMvQ0pFeS9CRWVSR0wvcDhBWUlTNXRFSFE5NmR2SG82WTdBUWQvbjVTcWpyS0ovCk9OdFhDMTZZRTRWSE5CZGtzcFFlT1p1T2N3dUM4MmxBNDk3OXNta1p4NzFhTm1JeGU5S0lGU3lreU44TnVRU3MKaGJiaFJYQnRwZ1pZanhuMExocnQ3TGlDZ3V5eUJUMjd2UlR0WmlTYlFOYzljQlVvb0pkclJ3ZElPc2hFS1NoNwpzbit3R2o1bnFaaHZUeEk5Z3NudU5iRGUzQkF1TW12Yms0MGFDK0JDR2UrdzB0RXdtNVNvazFyRTNlL1VoMkl1CldHVkFiN0VRM3dwSGt2M2NPcjN2MTNkRVcyOVdkS3NBeE1ZUnc5dXRvS1puSFNpa3J4bXAxNzVYNllIOGd0YS8KMkg1T3l3RUNnWUVBNTNFMm1PeG1YTUNYaWJTSFljdExIOUxYTW5JQzBBZHdiallnVXVjaU1rZG5kdEkraExpNgpTTlZQVisybG1DbGxZdTNrZXcySjZ1R1owYTYrYU41amEveHUvdytieHIvNmhSaVQzSG9Hcmx0TjJVd2d3YmphCnJtN1FocEQwaldpRDRkZVIrdVlEbVlkYk1WRDBSaDlzTmVuWHdrcDlzT2FFcE9NY3VzK2tMbUVDZ1lFQThGNG0KY28vckdrUnlCaWd6TUV6Slo4TkQ3WTBrWVBPMU80NFU3K2JZaVN0VmlWS2hWdGp1VmNZVXdBRzc4dVhCUlF3RgpScTRXYnV0cGtFaWVWSzlWbmZCUURtV3ZhV3VxWjg4QndwbGlPQlErOTdFWDZLQld6T1IxWWFxd0pIVEkwSWQ3ClBmMHY3Ums4YXUybVpBMUJMc2hRL09GMlNxWTFVYytVelVrcmV5TUNnWUFyMjMxUUgwUUtnWWgxMU5ydXdqcGIKTG5ZUEhpSEFVQmlUR2Zpb0hScVMwb3Nkcmh1Z3hPeXdEcFA1Z3BRbHNIcUE4N21mUStLRnV2aU9Eb0lRbDB2WgowNzBvNGtsUHNXT0V3ektKemluajhuTmZJUmozL05LYnlXNEVnZ1dGb20rVFpXbEpWVHNMWmVYM0EzTTJzbytyCjY4TXlFekdjU3lLSnFHdnlUcFM3SVFLQmdRRGNzY1ZoV0l6SGdHS2xEcEg1WGZkcWd4bkNhZDRsK24zRFliQU4KbVFubDM5allqZnErNzh6ZENsTVEvRWFpUFp2WGxyTGRjNGY3YmNCdURvNzVPRWRIRFZlajhHOC9QdkNtQWFZZgpFNC9mNTQ3dEF6ZnRpaEpJYTlidXhyYVZzbmlUSm1IY3g3UVNZU0pkRnppNEVvZHZ1ZExLYlFTY2c4RGZEZFlWCktvSjJ1d0tCZ1FDTHhsL2JzUm5vbnkybE42bFl1QzgxYzc4bGZIL3dKcGF2a0dNeldjSnZCOUd0YU8xR3BuelEKLytNWk00R01HVVh0cG1KM0FNeUJXcW9EaGtGR01GeCtaMi9sd1Y0N0tFaXBtU1VrcDVaaFhXNTFRMFk3VHZMUwpSWnV4V2VEQXpnaXZ2cEhVVmprUU9xeEdSZEI2ekR2aHhHTjFkZVFQbTNsR0E3cUVrS1lOdnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-control-plane-kube-scheduler-client.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lJSnVoY3B3MGpiVmt3RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRJek1Ea3lOVEl4TXpRek9Wb1hEVEkwTURreU5ESXhNelEwTUZvd01ERVhNQlVHQTFVRUNoTU9jM2x6CmRHVnRPbTFoYzNSbGNuTXhGVEFUQmdOVkJBTVRESE41YzNSbGJUcGhaRzFwYmpDQ0FTSXdEUVlKS29aSWh2Y04KQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU5sUFFZUEthSkhtLzBUVnlHUXJ3TGRWWnVEUkpVZTV5cHJNRGZQSApFUkJNN2VnQUl1ZDNpMmlidERMNzJJd3ArOEQ3ZEQ4dmNDa2p3UE41YURqTjdORUxubUhCZFIrRi9QN2dxMUlZCkpib3NpNVhSWGlObG5IcFdsWGMwZmNNV1ZDV3M2VWk3KzhvZ0t0MHRYS21uZWJ3enk3NzRSMVlGNHVmRndTaWMKMDFZTFgydi9OQk9HQk5nNGw3aE4wRXRIaUU0c29lSXlWSnU3angxVEJnOE56eTR0ZTFaQy9TYnViKzBWTGNzMwpGWW9Xc3BvZE4vZ0owMFIxUUdDbGpFS0FsUk1CY0lVQXFiblpld3NuWXZLaVZGUS9UeFVwMitsSmdtU2xEUU1LCnVsQnVreHRPN0RtR29PdXZCUWJLRGtRWmZnRXVaN1Qza3c3WkpTbVl5TGtGOGtNQ0F3RUFBYU4xTUhNd0RnWUQKVlIwUEFRSC9CQVFEQWdXZ01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpIUVlEVlIwT0JCWUVGTUNLUHVoYjFZRS8wSFVIZW82V0pQcjdBZWMzTUI4R0ExVWRJd1FZTUJhQUZOMXVGdUJFCjRKWmxxQlM2TnZqSmpoT3VDSVlPTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFEWDdlTGhTelJ6K3NvWG8wamMKdVJnc241WHhTRlNvY0F1VURpeHAxZ3VKTU5zdmlucHdFVnFXMmZqTWh4NFg0NlZyQXdxNkxTUW5MTzJsVUpDUwpEWE95RmZJK0NsNFErbkFpaEJSMlNVQjRkd091b1l2elVhei9YN2dLMDB2QUdhM2FpbUVmR2FVZ2tENFJPR2J3Ck9QMHVGNTkza0JnbkZyWmx2UmJ2SWEzN1JZMTlnWHZrWFB4MTRsTjdIVm9tdHg3V3FNZkJhdERINGNBMGJWNXkKbFhCd3NXWGJPNHZtYUl4MGpvaXJVU0pLVWNFbVU0MkNqUkxPY0dLSEZ2cUlKMUpJZllRTXRpbDI3L1hNOElhVgpKNWtHYm5qVWhBOW9nTTRmSEUyVUNPTkwyTi92U2RISVJ3Y01XcVlpT1NQQ0Rya3M1aU1YazRKT2RGaWVCOStQCjhCdmsKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-control-plane-signer.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBOE9JUFc1azUwYjNrelQrWmVXbWg1ZzFpM2xsQ05LWUswNGI1T3Y3UXlpMzBXdCtHClpPRkVnU3I1NFRmWWg1bmIrTml6RFp6cWFOMlZnK2VrNURTRUxhbmRGQXVWOWN4dU1qZXU0aWVVOGlLc05iWHUKZHIzV09aazV1d2VnMFRjRmhidzhkak5BYVFGVXV6dHlJVEtNdDJWUFVIMEk1allUL0ExOFFFK3lJdEo4MUhETgpOWFMxaVBSUS9tNkMrcVN0dEd3MnhzeUhuUjNxMjBWeGR2cTlUOEV3cTE0SG5LTy95SmlBYVZmY2x3QUk3V2twCkVqZGVUZ1cvVkd0VGNSbndzQlFEZEtGbmhxU01ERlVNck9MVjZ0Z2pJeWU5clJpSHlwbjBqQjgyM0gySFA4dWYKNW5FcDBUcjFPdTNQQmdHWW85Y3NGb0xzQUdOekpHV0ViWXl1M3dJREFRQUJBb0lCQUI5LzBEWlFNU2xtUlpjNQphOTVlbTljemhPeENpOC9LcnJ1K2VMVG9RWEZPMVJkVkI0UUZtU215N3Y0dWlWZ2lISXZMK280YktPUVJwYzJiCjZ3b1VlL3hrckE1RS9aVW82SGdVby8vYTRUVlFwMmhXcEJwTzlNYVBiT2N5Tml0bG9Jaytka0dXcmlPTkV3RncKNHBuSXZISDNBNG9vNzVMN0cxM29mWWtEWXUzK2kyOXNlQ0EzaHYvSUlsYlF2VDkyVkFnNEtFTVZaV0QvWitabwpiTkZPNW5MN0JkRm9UODQrRlhOaGdOaFlHeFRHTGtSTDAxNlE2R3pmRElrWTZzaGtGZkYyS00xelplUndCR1FpCnQ2SWRZRXdVZElEYU1WUVRvNXdtY1gwNDA3aXkvYkprcHQranV2dXZheDFPeE4xQVRjbWovblVPazR5b0VBYisKMWF3RVJGRUNnWUVBLzNYalRGcUR0K29rY3JVN1V4TUtOd1dPenlvaXRJaGx6TkRsbHdkVnVwQzZHNE5tNXNIRwpmMTVrMzJOQXZMa0EvN2YxcTBHeHFYM2NCK01JNk5WUU1FTnZXandaV0FHeHFGdERhVUNoSVpnVTZENjN6VWdvCnVuR2c1cnVHQnZ4Y1dYT3FDRG10UTJ6cTF4Mzg0MTdUVk9lNUVqK25ZdmM4eDU2a1dtQi9kb1VDZ1lFQThXUksKZkIxeUxkcVV4MUR2TW9jQzJhbE5scGZHVHVyQmg2d1cvVldMa1R6TmxmTWwvWmIveXRzbDBsRUtMV2NSdzZkQwpaSGpBU094Z28yeXVXbzdxMXViQlk4QkRJdkRaRGpsdUFpYWdKVzcvckQ3OHY2SzkvRS9qNm1XbUFPNXlXN0xaCmNjbjJMMnBsRUVwb3dxc21ESGxVdzF2K2xpUjNIN0VLN1dMWVJ4TUNnWUVBbTFkb2ZJbWVCenhPSmFLbkRJRkwKZU9IY1VZVmh6VDRVQ1ZRT0NLVGhNSzNKUGVuTnJReXdVOHRtczZCN1FVZU9uL0dSWmk1d2hveU9QQTJHNFc2MQpjR1BSVnFHdEY2TVFFVHhONWJielJLWmlNRWZUSlBWNExzZmgrK3lVTjdORnhPOWN1ZHU0eklOeTJwVFZycjErCjdPWnIxL2oxSkcwTGZLZXZjWFcwakxFQ2dZRUExZWREUWJ4dUkwZmdNc2I3VDFEb0s2eWsvbDg3OFU2QmRCSUEKeFRoNjFwYUVydTJwcW8rVjExSmVyNEgwZk1zcXFLK2NXNS9NOUZIU1NMN1R1WmVQYmlOSkYzV1ZpRzdZU0l5SAplUXgxT1BhbFJTTURvV1U2NlV4NThJbG1rc2k1T1p6QXB0NktjdlhhM0phelFsMmE5ODdFVitFN05oeldHcFV0CjA3R1ZhVlVDZ1lFQTQ3LzhSM215d0JkdFZJVzBtWElEQ0RsMkZxYVdDbDRNdmVvNEx5ekhRU0F0NjVVeXdOOWgKUlRFd1VJcmJ1MlJMblptMm1mOWI5akZOZjN3ZGJFNmwxVlFEYXRpeUdrdnRuWGZmRlZKWTNzZmdoRVMweTlYYQpkeGVJVTZRR2lQTDB3YTNMSzJ3eU5VOHNWR0J2TmhXU2x4cEtxTSt5dGVMdnZZS3RSdmcyUFBJPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kube-control-plane-signer.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURORENDQWh5Z0F3SUJBZ0lJSHVIUnU4eDN5eDR3RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRJek1Ea3lOVEl4TXpRek9Wb1hEVEkwTURreU5ESXhNelF6T1Zvd09ERVNNQkFHQTFVRUN4TUpiM0JsCmJuTm9hV1owTVNJd0lBWURWUVFERXhscmRXSmxMV052Ym5SeWIyd3RjR3hoYm1VdGMybG5ibVZ5TUlJQklqQU4KQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBOE9JUFc1azUwYjNrelQrWmVXbWg1ZzFpM2xsQwpOS1lLMDRiNU92N1F5aTMwV3QrR1pPRkVnU3I1NFRmWWg1bmIrTml6RFp6cWFOMlZnK2VrNURTRUxhbmRGQXVWCjljeHVNamV1NGllVThpS3NOYlh1ZHIzV09aazV1d2VnMFRjRmhidzhkak5BYVFGVXV6dHlJVEtNdDJWUFVIMEkKNWpZVC9BMThRRSt5SXRKODFIRE5OWFMxaVBSUS9tNkMrcVN0dEd3MnhzeUhuUjNxMjBWeGR2cTlUOEV3cTE0SApuS08veUppQWFWZmNsd0FJN1drcEVqZGVUZ1cvVkd0VGNSbndzQlFEZEtGbmhxU01ERlVNck9MVjZ0Z2pJeWU5CnJSaUh5cG4wakI4MjNIMkhQOHVmNW5FcDBUcjFPdTNQQmdHWW85Y3NGb0xzQUdOekpHV0ViWXl1M3dJREFRQUIKbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVQozVzRXNEVUZ2xtV29GTG8yK01tT0U2NEloZzR3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUxHS1FPamhJWDMyCktiMzEzTzlZYTRHR2llTmRrWTR5YWhERXJPQzdlcTNqQnNVdWN3dW9EQks3KzkyRDg4dXBiVVZGTTRTcjVIaGIKcW5aY0U0bVpSZzIxLzMxSTl3NTlZSHFsN0ZTNHl6RkY4TUo0M1Q5VjZoKy9SRGRZWU9DSWFMRmdkTXJMSG9YSgptTzBxZWI0dGtYdlBkRkJoSUZNdFpOZEZWMHZmMENQeGpnYUVZQitjUVVuMjh3YUZvdktNSnJheEtYS1loV3I4CmZtSkxLT3RScms2MXh6b3NmM2lkM3dkTjJBMEdINDJ1eG5EMjdTYjQ5ZlFNQWNZVUtKZkdIQjFBRDJ2RjByeXAKLy9TZDlvL3lNK1M3ZmpIS1VJblNSNEx1T3M4MkRwRkYwU1Q5NHJFTHhhcG0xYzZnZHlHQk1ldVVjTndhT056ZQo0ZENkWEJQTWVuMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kubelet-bootstrap-kubeconfig-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lJS0ozUnE2Tjc5Rk13RFFZSktvWklodmNOQVFFTEJRQXdRakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Td3dLZ1lEVlFRREV5TnJkV0psYkdWMExXSnZiM1J6ZEhKaGNDMXJkV0psWTI5dQpabWxuTFhOcFoyNWxjakFlRncweU16QTVNalV5TVRNME16WmFGdzB6TXpBNU1qSXlNVE0wTXpaYU1FSXhFakFRCkJnTlZCQXNUQ1c5d1pXNXphR2xtZERFc01Db0dBMVVFQXhNamEzVmlaV3hsZEMxaWIyOTBjM1J5WVhBdGEzVmkKWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEWApINGhzYUUvVXRvQW55VHJ1cTYvYVlwVzZnSS9mN1Nod1JodjdGa0lYa0NhcHR5Yk1uVERqZEFray9GZ0VTbUkzCjRWMUJaZCtXdlJxYVI0eXo0SldaSWgyd1paUEV4RnozajEzU1pubklJYW9YMFZwZC9hYTlsQytSZitKM2t3K0IKRk9RaHVySHJqL0hqT0NPRGVkV1RLVGY5NEdIK3l4d05RcWExQkJKRnpQZnBxOHZ2d0M3SFU3Um9pcXVockpHZwpQWVdkYlprOWhPL1RqUk4xQk5KVmlFVVk4eEVzUHU4QVVHYUFVNkk5ZVpmbGhiS3RnNTBWcE9HR0lBUGZ0UEE4CmxHaEpuQjFoSG15NnQyWlFEYU9uQW91SXZHODN4VENEbmNwWnBuQ3N6WEl5MmEva0FVRVFLVmFDekh5dVJsR0MKTllJUkRIWkErdXJybEZDSkVvMGRBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQgpBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlR0Sk5UY3JNMHVTWDh5WDNJenpkK1RPK0hGMlRBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFGQ2ZhRkczelFDS1FET2VmaUVSSGNIKzZsMVdJNndFdWIzRDFUTEQrd1QyYXd4RlYKMG8vZlNFQXpHbEI5YkIrRmZKSWhubC82VlAwanhtNS9aa2JiZ3FUNFp6WkNTdG5haWk0TTFKMGQ0YTZWaXRVdgpWYW5HNnkyQ3dTNngzQ0pXZVByZ1RhM0UzWXpMZWNmUUdxcFlXVUt0ME5aUFJLNVpXWWNQbXowNDBBNmwrV2lVCi9VMnFzaS9PQS9GTmlCODRqVzlOdVpCSU42dElEcldLWGNrRDNxRk1aNDdsdnVKc2J2b2p2WDNjbU8wV2JnK3kKVkc0THo0THRxczIwRmtLYzhvM1dldmcya0JBY2RwditIbjhNZ2xpWHBGZVB5N3JqT3FBZUhIeTUzdlZUT2xTdApURENweWZ4c2NvRXRSZzFIb3UwTU1ycUlYY2hlTTI3VHo5M0pEZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kubelet-client-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lJVE0rU2pwLzV2NXd3RFFZSktvWklodmNOQVFFTEJRQXdMVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SY3dGUVlEVlFRREV3NXJkV0psYkdWMExYTnBaMjVsY2pBZUZ3MHlNekE1TWpVeQpNVE0wTXpsYUZ3MHlNekE1TWpZeU1UTTBNemxhTUMweEVqQVFCZ05WQkFzVENXOXdaVzV6YUdsbWRERVhNQlVHCkExVUVBeE1PYTNWaVpXeGxkQzF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRREM2R2ljcmtXOCtNVXVEOU9WQlM4czgwRjhOd3QvWkl4bHFxNVp2YlNDL0dNYUZFeGJRTUYvZzF3dQp3VGlab3cyYURBMmt1aFUvajdibTdTaVFnTXRWd1V3dm00QVB3RnZXNlJWcSs3MENPWUFwWHV4eGN2VkpubnVjCjljRTJPTzhmcUdqRkhUYWZoKzB0cjB5L0VQMkl0SFNwdkt5Ukx5M2Nuc0ZFTnJwb29TZlJ0ZDlxazZ3ODYyWGwKWUdJcUVOKzlLaEc1aWhib0U4TlN0WlFTb1ZuWm92b2xCd0RnTHlNNnVHSEd2ek1odUZYQVdhTHh2ajBKMS8rNwpyWW9WRHh2bldFYXMxR3lVaytHVWNuVkkwY3BoYi9adGZBRUhHRlhMSTQzUS9TUFlkcDRIRVVjeVYzOU91eEF2Ci95Um1IYTF4MG4vRmxKbTEwd0FQK2hoMk9SbTFBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlR2YVY1eFd6YklXVEF4SkJPeng5ZThyS2p3SWpBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFuN29wYW1pVVVwaHZwZUwwM0RvLzZ2SlN2WVB1VnNGcUNaUkN3dXZtCnAwODEyK3M4VXYwQUdLZldkOXU5N01tNlIwRG5HanFYMkRVT3dBY1QyUXZjb0lPMDNzZmx4MlNFdG1BT3UyRWgKV2ZxQlBkZEgzSW1XZW5hWUhvWjE5L0Vka1JYN096OVpjai9kdEZ2YjYvNVY2MnNGR1pKcW1WeVFqRjVVOFhIagpOeFRQYVdJZmhMRjN5T0phdWlJdFoxWi9qSHk4RlB2Y3ZseGNpNm5mSk41QTZFMW9SR1lHZThWSm52NmxCeklVCjQ2ZlRKNndVV2twSGNiRy9WRjFKaWpwZC9wWVo2NGVnbDlybjNpaDh3N0xqZjJzcGo0K2hsTWcwYWZISlg5U3AKbS81cHU5bldMSytyNmFWRnNiTmNKYUg5S213WTZlbnFCWnpnbnU1WWRwVTIzZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kubelet-client.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcTJTbURwRFR0M2I0czlJSVFqZHdnbmc4YnJPb1FpMzJjczNOZno0S1MyR0ZwdGlhCllUckx6dnZTZEhCbVJ0VUNXNTlMSU5uK3RZNTEyWStkdHBnYW9QRXpWREZ5eXluakdValJoSmh2eWdyQXd5Y3QKNUd4akpsOFZqb1BqOXhzUWo1aUE2Z2ZLZytueUxHbDhZT2ErZkZVeGNIbmdIZWhTd0lVSVlPN2YrWkdWdFB5Zgoyam4rWUFnb01rc0ZJdVpyNlplTEdUNlJCSTM5U0VvSE44eFF2c1F3N2VEN0kvMjFVakVzK05nRnJLa1hQUmFaCitmSWh4VTd1RmhQd09zUG0vdVdOcVNiME5XdFl1NjdxYWR6bG5CZi94ZkRmaVNsaEZnQzJrb1ZRcTBJZGhUdFkKcVpEcWtMR1FIYXdxaVpTSUEyZG9mQ1pPMThUS01GTGpaU25uN3dJREFRQUJBb0lCQUdxTE1yOHpRS2w0QjdxaApBZ2xIdFdVbG9VdWYyeVRvdFo5QVdGS1ZHb2twb28vSmJvNnFvaStWVTRxV3BMMjdoSys0SWxmVnJBVG8vbEcwCmVYSWNzOUVBbjh2aXdWMlNPRjVyYWZOblgzYlZvR2F3WUZMekhkK29sQm4zMnlxdFpHb2ZmMlA4VytRTTlrS3QKZ0dnc2lKVjUwRFgvVFZiS0tVY01hOXoySWIxZHdtd0YreTdaK3RtK2FxQ3MvNVlZRnltL3R5R0U4N0l6Vk9OWQpYNTVlSG93YzhHRlBKYTR0YVEwcnJtZ2c2a2FwOXJITzNKalZnZlFVb0xuZVhCeDRnUmJlK0pZMkhack9GbHhwClhwbGpkdlZxWGRhMmovbWdia2ZHanBZazAxakMrSlloL1BXblZHZlBRUFJMb3pRVkw0d21wUnJxK1QvVHpjei8KdHg0aWI0RUNnWUVBMnFEd1dvakwrSVI3ZTNWUVREUUd6SzJMS2ErZ09wZzFBTUlkb2x1T2EvdU9pM05qTGNDYwp1YVVLaWkycGMxSE81bHM0UlIxa2cvYWl5M1NwcGxESnRSekkzVjFSNEtEWUNRYVlZTldmRVo4S2tuRTltQThZCmlXQzRCQlh0ZlhEQ0pEa3RGbFJzZWFMK1hjZTB5SENVK3dyY0xWMmdvWGsreUYvN1NxOXZkWkVDZ1lFQXlMQzIKUFJmOUxtQ0JkbE9kcFZWZ1I3cGlTVk5Tdjc2RklSUW5NcEsyQWc1UThKNDJFc2NSNmNvR3hITmRUc1QrOUhXTgpUbWRjVHlaZ21YcHZ3WGFoQVkxMC9jZXVQbnJqcjQ1N2ZGMnBFN00vYk44a01hSWc0UnQ2UmhNMHFIMHhrYnZqCjZZN1p1aG9YTGNvSk8zRVlEME1uNmlaSjFHbFRMSU5laUhZR3hYOENnWUJUK2Q5NGx2VHA1MUZhOFl1L1NYaVgKSTgzQlhGRktVRzZEZFF4VzhaMzZBaTBWaVdPK0RpN2s2K3pwZUhLTzlneG4xUC8vSkRRWXNDS0Z6YkRnVGtXOApDR3RyQTg1UVh0ZThWOGt0NEwveHo4b0t4KzVsdXQ2czNmYXdzdzkrMEZIeUFmZzhqSDhDRmNab2xTM3VrN2ZWCjJhMEt5OXpJU1Q4QlRrVEN3aklvMFFLQmdFMWVHcE5JMlRqMHlWUUZmaVBMMnhjcjJsSXNSaDFYWkZsUlBKODUKZ2VNZkE4TVBLd2RvS1JhNDVJejljSDQ2WVpONmNlUkU0b2c4NGthb3RjYWVaZ21FTUJMWjFPbVBWSkZNVzN5aApXdG9XWXlBa2tmNTBZenFFN2tsdmhBQmtheVNraTROeHA2d2YvTW1STnFmc3ZIcTl4L2h6bEVqSDVlR21MMTVxCktjZ2ZBb0dBRmVGN2RhVjdreUNZYUM1TUxPK0taQkM3YXlFeGR4cjdlUjllNWpYUzNJMlhDeHQ0eFcrclBVS2MKZGsyQ3RnYkZ0bFhFTnFUbkVtM0M3WEpCNFdqVGdWUThJKzBPN3gyWERicXYzcDl4VnllNU9zdUhqZWQrZDdOOAp6VDBJV2pOSndVWFpyYnJ2czNYZG9YaS90ZExxV0t0aStkSmxncjlKMnJIMlAzVWlYOWM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kubelet-client.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ4RENDQXRpZ0F3SUJBZ0lJSTQ1c0xEWG93SG93RFFZSktvWklodmNOQVFFTEJRQXdRakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Td3dLZ1lEVlFRREV5TnJkV0psYkdWMExXSnZiM1J6ZEhKaGNDMXJkV0psWTI5dQpabWxuTFhOcFoyNWxjakFlRncweU16QTVNalV5TVRNME16WmFGdzB6TXpBNU1qSXlNVE0wTXpaYU1JRzJNV0F3CkhRWURWUVFLRXhaemVYTjBaVzA2YzJWeWRtbGpaV0ZqWTI5MWJuUnpNRDhHQTFVRUNoTTRjM2x6ZEdWdE9uTmwKY25acFkyVmhZMk52ZFc1MGN6cHZjR1Z1YzJocFpuUXRiV0ZqYUdsdVpTMWpiMjVtYVdjdGIzQmxjbUYwYjNJeApVakJRQmdOVkJBTVRTWE41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwdmNHVnVjMmhwWm5RdGJXRmphR2x1ClpTMWpiMjVtYVdjdGIzQmxjbUYwYjNJNmJtOWtaUzFpYjI5MGMzUnlZWEJ3WlhJd2dnRWlNQTBHQ1NxR1NJYjMKRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDclpLWU9rTk8zZHZpejBnaENOM0NDZUR4dXM2aENMZlp5emMxLwpQZ3BMWVlXbTJKcGhPc3ZPKzlKMGNHWkcxUUpibjBzZzJmNjFqblhaajUyMm1CcWc4VE5VTVhMTEtlTVpTTkdFCm1HL0tDc0RESnkza2JHTW1YeFdPZytQM0d4Q1BtSURxQjhxRDZmSXNhWHhnNXI1OFZURndlZUFkNkZMQWhRaGcKN3QvNWtaVzAvSi9hT2Y1Z0NDZ3lTd1VpNW12cGw0c1pQcEVFamYxSVNnYzN6RkMreEREdDRQc2ovYlZTTVN6NAoyQVdzcVJjOUZwbjU4aUhGVHU0V0UvQTZ3K2IrNVkycEp2UTFhMWk3cnVwcDNPV2NGLy9GOE4rSktXRVdBTGFTCmhWQ3JRaDJGTzFpcGtPcVFzWkFkckNxSmxJZ0RaMmg4Sms3WHhNb3dVdU5sS2VmdkFnTUJBQUdqZFRCek1BNEcKQTFVZER3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQjBHQTFVZERnUVdCQlNzVUJvSUtUOFNvY0pQdGdKL2ZKcEtveUppbHpBZkJnTlZIU01FR0RBV2dCVHRKTlRjCnJNMHVTWDh5WDNJenpkK1RPK0hGMlRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUNhWitEVHhkRVhIK2VkL3gKclhlTmYva1JUTFNhMVRVZkVweFJSd3NhUThuVS9SdG9ydnk1a2VpUDU3ZmlXR1BjVkpCS2ttQWI2Mk9Zalh3SApzU3FibGk1a2g0azJOYUQrYThuanRzYjFsN29jMHdYaUtQdVdScFJ3NUp6N3hzdk9Zck41NWwyeTFTMjBmUjVhCmpnZ082SlJtSG5hNGxKbjYyamJhczdxUGR0MkJUalhTQyt1VHlVSDB6TGo1ZC9zREtkWDhPR1Y5UHgwd1JXeSsKUmVKVDhGVzY2alNOUVE0MWE2QmpZdmJJcXhxNlFaQ1J4ZnNpdVFxL1ZSZnY2MG9mUzcwdWh1cXhQY0tOTlhyMAo2OUQxeU92K2VFTGhaRk5OTTdQd2dhZXlkQ1lwWjNLY1Jya29DckZEdHc3TmJkUXJ5czhsSCtnSnVRYWFMdC81CkNBL0FIZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kubelet-signer.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd3Vob25LNUZ2UGpGTGcvVGxRVXZMUE5CZkRjTGYyU01aYXF1V2IyMGd2eGpHaFJNClcwREJmNE5jTHNFNG1hTU5tZ3dOcExvVlA0KzI1dTBva0lETFZjRk1MNXVBRDhCYjF1a1ZhdnU5QWptQUtWN3MKY1hMMVNaNTduUFhCTmpqdkg2aG94UjAybjRmdExhOU12eEQ5aUxSMHFieXNrUzh0M0o3QlJEYTZhS0VuMGJYZgphcE9zUE90bDVXQmlLaERmdlNvUnVZb1c2QlBEVXJXVUVxRloyYUw2SlFjQTRDOGpPcmhoeHI4ekliaFZ3Rm1pCjhiNDlDZGYvdTYyS0ZROGI1MWhHck5Sc2xKUGhsSEoxU05IS1lXLzJiWHdCQnhoVnl5T04wUDBqMkhhZUJ4RkgKTWxkL1Ryc1FMLzhrWmgydGNkSi94WlNadGRNQUQvb1lkamtadFFJREFRQUJBb0lCQUNJZGFjb2Eyc3dEd3dlWAo3NUhDMFlvTm5lV3ZBTTB3ZlQ2Q1RIZ2FzMURGK2xhalBPWXdCRzVjUUxOU1VLVGJuRkxkVHpvSTlCVW5BMzJSCi95cWowSE5YSFEyc0t4TVd1VHg1bWEwYkdPOGR2MmYrWEdaVEY4bmwrbjd6cVBqanFEOGpUQXRNWExZNXBYTDgKbnZOR2R3b0pnKzM5dnpxK1JrbTZZOXVidEs4QlQ1RUkwcnlhV09Fak0yQ2VSZm9QR3JSa0xFWS9ydVA4TVBVUApzM3ord2NPZHlhMDFDcFN6U0dRSUJGZ1hlZDNXRzVlQ01mbjFZMEo3d0x3TktYYlhmc1F2eWtGaWU5NmYvTTByCm1sM2ZoUXh1L1UrajZMbWcrMFpnTURQNkszM3dtWUtiVHhHQWVRNlpNMUVCMWU0ZnVrbUZmRXdpQ3k3T3FQbjcKQXpKRU5GVUNnWUVBOXEzK0hCVzJySlVwUS9DS0xkam9EZzVBdXI3eU1EUkpGaVRHOXlkb0FCQVlNSlFsQSt6NApFKzlkL3MrcXpDMFN5em5qa2VDTDFNbGNFaVpxY2xKVjUxclZ0S0JHUDZ2VGkvS0NFVHNMbUVielJSNjQ0bFR6CnVGVTYyamd5ajZ3VXVCM1E5cGhVbnBvMFZxamVmaitCQzZNMTdDVWJTK3VZRHl1Q0pZcTJpa3NDZ1lFQXlrV24KVEUzODIxV2hJdXVKektzMUU1TWhIaVpuSXBZc3ptZHR2ZEl6ZHVGb3YwY2hnZVlwbjI4TktTOENydXZtSGd6VwpaaUwvYzhyd2ZGUHhMV2gvQXNucUZ3SzkzSXJ1NXAraG55T1VvWTVzZnYyaWFza01CaE5OTHNpblBZTndoekZMCmhucTdtMHdaUFJyb2hkWWswdzR5d0xkTDhzaXhvTjhGL2x6SWEvOENnWUVBd3A2L3ozU3FMVHQ1MVNwZ09vL1oKZGMxMDhHRmFQd0hoYitFUVFVc0wySkRhSk9tYzBwNFJrOWpVdGdjdDMrem4yUU1STXJTUVhnK0gzcUlFZGJIVQpLTFlYeVd4eVFDWFd2NkZUVVRqZWl3UGZSdmRZTXVtSGFEV0dPMGovU3k4Zklhd1VnNW5ubVVKY2JNckt6NXhXCnVkSEk1MGpYWW15OENhdndBS0tTSmtVQ2dZQjFMS1oreUlyYlVKNlpDUk41c2hCOE4zWXU3aFkrN2ZvazA3dTYKQStQMlVSd0orcDNKajFpN1dHeXFWK1paQ0tUMDhZRGVDQll0c1BsaFBJdHhQNkNjTC9YZ3dLRFYrdEhzWGJzVgo0bG0rd1MvTzNRVlNrUWJiR2lGVEliL29IWlY1YTdBUnhsV1o0QnFhMEZTMCsxbTN2ZmpldFJCVkk3ZnF0bWZWCmMxQlRad0tCZ1FDdi9LSG1xNjU3K1BCc2pPUWgzV3lpUHplVE11YkxVRURJNFhPOFVvTUVYc0duNUtJVThQenUKTWpaM1EyMTc3VHVLYitYN21Mc0R5ckZqTHEvdUJTaXRzT3E2cWNDR1ZXQUMyc0FiWXFySnBYY1owNTlmTTgyZgpNYWhFZWU1bldnaTF4UXJsMjl3bjJFOUJyeGNQdWlLKy9HWWYwUkE2dFVyWlA3em5ST2poU3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kubelet-signer.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lJVE0rU2pwLzV2NXd3RFFZSktvWklodmNOQVFFTEJRQXdMVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SY3dGUVlEVlFRREV3NXJkV0psYkdWMExYTnBaMjVsY2pBZUZ3MHlNekE1TWpVeQpNVE0wTXpsYUZ3MHlNekE1TWpZeU1UTTBNemxhTUMweEVqQVFCZ05WQkFzVENXOXdaVzV6YUdsbWRERVhNQlVHCkExVUVBeE1PYTNWaVpXeGxkQzF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRREM2R2ljcmtXOCtNVXVEOU9WQlM4czgwRjhOd3QvWkl4bHFxNVp2YlNDL0dNYUZFeGJRTUYvZzF3dQp3VGlab3cyYURBMmt1aFUvajdibTdTaVFnTXRWd1V3dm00QVB3RnZXNlJWcSs3MENPWUFwWHV4eGN2VkpubnVjCjljRTJPTzhmcUdqRkhUYWZoKzB0cjB5L0VQMkl0SFNwdkt5Ukx5M2Nuc0ZFTnJwb29TZlJ0ZDlxazZ3ODYyWGwKWUdJcUVOKzlLaEc1aWhib0U4TlN0WlFTb1ZuWm92b2xCd0RnTHlNNnVHSEd2ek1odUZYQVdhTHh2ajBKMS8rNwpyWW9WRHh2bldFYXMxR3lVaytHVWNuVkkwY3BoYi9adGZBRUhHRlhMSTQzUS9TUFlkcDRIRVVjeVYzOU91eEF2Ci95Um1IYTF4MG4vRmxKbTEwd0FQK2hoMk9SbTFBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlR2YVY1eFd6YklXVEF4SkJPeng5ZThyS2p3SWpBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFuN29wYW1pVVVwaHZwZUwwM0RvLzZ2SlN2WVB1VnNGcUNaUkN3dXZtCnAwODEyK3M4VXYwQUdLZldkOXU5N01tNlIwRG5HanFYMkRVT3dBY1QyUXZjb0lPMDNzZmx4MlNFdG1BT3UyRWgKV2ZxQlBkZEgzSW1XZW5hWUhvWjE5L0Vka1JYN096OVpjai9kdEZ2YjYvNVY2MnNGR1pKcW1WeVFqRjVVOFhIagpOeFRQYVdJZmhMRjN5T0phdWlJdFoxWi9qSHk4RlB2Y3ZseGNpNm5mSk41QTZFMW9SR1lHZThWSm52NmxCeklVCjQ2ZlRKNndVV2twSGNiRy9WRjFKaWpwZC9wWVo2NGVnbDlybjNpaDh3N0xqZjJzcGo0K2hsTWcwYWZISlg5U3AKbS81cHU5bldMSytyNmFWRnNiTmNKYUg5S213WTZlbnFCWnpnbnU1WWRwVTIzZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/kubelet-serving-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lJVE0rU2pwLzV2NXd3RFFZSktvWklodmNOQVFFTEJRQXdMVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SY3dGUVlEVlFRREV3NXJkV0psYkdWMExYTnBaMjVsY2pBZUZ3MHlNekE1TWpVeQpNVE0wTXpsYUZ3MHlNekE1TWpZeU1UTTBNemxhTUMweEVqQVFCZ05WQkFzVENXOXdaVzV6YUdsbWRERVhNQlVHCkExVUVBeE1PYTNWaVpXeGxkQzF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRREM2R2ljcmtXOCtNVXVEOU9WQlM4czgwRjhOd3QvWkl4bHFxNVp2YlNDL0dNYUZFeGJRTUYvZzF3dQp3VGlab3cyYURBMmt1aFUvajdibTdTaVFnTXRWd1V3dm00QVB3RnZXNlJWcSs3MENPWUFwWHV4eGN2VkpubnVjCjljRTJPTzhmcUdqRkhUYWZoKzB0cjB5L0VQMkl0SFNwdkt5Ukx5M2Nuc0ZFTnJwb29TZlJ0ZDlxazZ3ODYyWGwKWUdJcUVOKzlLaEc1aWhib0U4TlN0WlFTb1ZuWm92b2xCd0RnTHlNNnVHSEd2ek1odUZYQVdhTHh2ajBKMS8rNwpyWW9WRHh2bldFYXMxR3lVaytHVWNuVkkwY3BoYi9adGZBRUhHRlhMSTQzUS9TUFlkcDRIRVVjeVYzOU91eEF2Ci95Um1IYTF4MG4vRmxKbTEwd0FQK2hoMk9SbTFBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlR2YVY1eFd6YklXVEF4SkJPeng5ZThyS2p3SWpBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFuN29wYW1pVVVwaHZwZUwwM0RvLzZ2SlN2WVB1VnNGcUNaUkN3dXZtCnAwODEyK3M4VXYwQUdLZldkOXU5N01tNlIwRG5HanFYMkRVT3dBY1QyUXZjb0lPMDNzZmx4MlNFdG1BT3UyRWgKV2ZxQlBkZEgzSW1XZW5hWUhvWjE5L0Vka1JYN096OVpjai9kdEZ2YjYvNVY2MnNGR1pKcW1WeVFqRjVVOFhIagpOeFRQYVdJZmhMRjN5T0phdWlJdFoxWi9qSHk4RlB2Y3ZseGNpNm5mSk41QTZFMW9SR1lHZThWSm52NmxCeklVCjQ2ZlRKNndVV2twSGNiRy9WRjFKaWpwZC9wWVo2NGVnbDlybjNpaDh3N0xqZjJzcGo0K2hsTWcwYWZISlg5U3AKbS81cHU5bldMSytyNmFWRnNiTmNKYUg5S213WTZlbnFCWnpnbnU1WWRwVTIzZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/machine-config-server.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd2ZTdnZQZzFJUGhYbWMwT0UrVjdCdHZENzNVQ2wvOStrSS9KOWFrU05LVUhqeVo5Cnp4aFRWQ0pMZ3J4cVNrZC9ZS2JQZTluTVRPbXRCZnFtNzE1dEFsYUxZWFY2cjFPZnVRZ1VabWtZM3BWdTQ4aEMKNHpXRWJmazBMdUlVMlovbnVxVVk2ZzZVcUV5RXlnQ3NaQVpHeEdqRmhucGY2Wm1jeXZicUFyS2ZpS3dacUZTcQpKd09DUnRES2NNcG5xRkJYUWN3Mzl2L2pZcllLWFJlaENjcjQzeHZNSWYwSVFyMElCL2piSkJjQ0RPa2o5dXV5CkIvYzR6VmdvRHF4dURab0JrdTZFUmN4Ty95Wk5paDJJYktCRktUTnkyVzQ2anJyaExHMVY4cVJkZjZFenljb04KaThsLzlyS1FJc2Y2VkFkRXZHVnNmM2VMeW5IenE0ZkxWSHIybndJREFRQUJBb0lCQUFXb2xkZjFoZGRJWjRYZApMYVAyOWZmbFFYb2k5OGhuYzlIVDRCaUNyajFLODBXQjRmbkF3KzJZY291RjQ3UDNFZ2hIMVpYUGJONXhrdEt4CjFWejJiRWU5THFQUlFac0wzWVVRYjBmdG1RUWxaKzdOVU9aQUVYVUQ2RG5WN3JYS3JJQU5nUVNUR0ZNd3FFOGMKWmVzbEk3dG5NeHdSUmVzU3lEaERxK0FZUmY4K3VTQkF6VXVFdSt6dFBMUkdicVlvNC9iZXgzWmk3Y2ZqMmltdwpUMlBqRU16VjlMOXdNMXpwRFZjQ215R3Z1STBBZkV2ZXl4VnNldmFidkQ3NVIrWmJ0aWluRUdrMHdVSGh0WU1vCm0wTDA2YWFXb1BZTE5OUG11QXV1Ri9kblZmNE94L1lEMG1OMTd5TWZDMDVFTGp3LzZHNFhkZUZQTmVWMDcwYTUKQWJ0WEVjRUNnWUVBM0wwQldYZXNaUVFwM1hRd3RwOFpIQnRXTDlXNmNaam1nbktLdUg0TkFaRkUzbzNOK1N2Ywo5Qlc2V3pmVjQzU0pzcXVFbXZmb3NBRGNoM2pVMWw2STdqUC8vN3B6SzBqRkM1S0IxUmxxVXlFSEpKckw2bjNnCmFoK2paNVV3MHdyMVZPd1R2WWo3ejErSzRCc1l3TUFLMktlOFgyV3pRYWg0U1d5UVdFaFhRZ1VDZ1lFQTRQQnMKUjRtVVBqNDJQUjUwNGJGeDI5b0xKRnZjL0toakVtdlRkVjkvTm9PUUJYNFpRdVB3Nmluek85M3lvS1FFT1FNNQpLK3V5WFlvL1F3akl2MTB0WkRFK3RjZTEvM24vM2JOT3ltbXVYYjlNZi9aUGM0aFlWSFBkeTFwVTA2UTdxczlICjdxSmJ6VjZnNzVZMnA5akpjOWl4RnFOQ3lnc2FQSUJFZ29oSWcxTUNnWUVBenEzOXZIcU1KVTFmc2FXZ0V1NG0Kd2FWcTdvRU5BRjRzdnNsbXo5WGVjYkJHTHFmUnl0TmlIL3pVTDZLNUZ5Ni8yMVl6WkRKcFlacDg0aSttQVU0awpvZng0WDBhQm5XNldhUDUxcUVVU3crRXg0Zms2bzBYWFFTWjhobmt2YlB0ZXVIUVBDN0ZlTFU0RkowN1h2MnBRCi9Za1luSzRKeUpsb2Z6OHliQ2JYNU0wQ2dZRUFoK25ka3pBWENiRHZkdWlqT1FmTncwaXhlTXVrOEdrU1M3d3AKTGYrQXowQ1pVaWhLUFRlYmh2SElEWUZqTEJ0T2plQmJ1Q1VYUmh2VmM3eW9CN0RXVDNiTjdHcDZscDV4c3RTNApJK2ZOT3NudkFGYWsxU3NxTEFWQ202KytGNDlobWlqYXp0NzlWMDc1TVNyelpXSEEvNldNQXlDc3A0WWoyVENyCnRLK0NHUThDZ1lCRzAwekV1emI2b3lNU3gyc2U5K2xQc3diMUpxaDk5SUdjMHpxU1dOU1BJMXRHVlJwT1IzTFUKWS9DVldRbVdKWjUzTnljVFc2d09UMEpFUjJBMFZBZEdjUDVJbnE1aXNFY2FyZVIrS2tNbldlRDM2Y0VBM1RMawpaOGQ4NGwyK05hMVNkOEVYRjJjTDcxQzUrdGpSRDZpQlI2RXZnTlJzRkxpM0FoZ29UUHNCcXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/machine-config-server.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhekNDQWxPZ0F3SUJBZ0lJQXlZdzEzWlVaeDR3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEl6TURreU5USXhNelF6TlZvWApEVE16TURreU1qSXhNelF6TlZvd0p6RWxNQ01HQTFVRUF4TWNjM2x6ZEdWdE9tMWhZMmhwYm1VdFkyOXVabWxuCkxYTmxjblpsY2pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTUgwcjd6NE5TRDQKVjVuTkRoUGxld2Jidys5MUFwZi9mcENQeWZXcEVqU2xCNDhtZmM4WVUxUWlTNEs4YWtwSGYyQ216M3ZaekV6cApyUVg2cHU5ZWJRSldpMkYxZXE5VG43a0lGR1pwR042VmJ1UElRdU0xaEczNU5DN2lGTm1mNTdxbEdPb09sS2hNCmhNb0FyR1FHUnNSb3hZWjZYK21abk1yMjZnS3luNGlzR2FoVXFpY0Rna2JReW5ES1o2aFFWMEhNTi9iLzQySzIKQ2wwWG9RbksrTjhiekNIOUNFSzlDQWY0MnlRWEFnenBJL2Jyc2dmM09NMVlLQTZzYmcyYUFaTHVoRVhNVHY4bQpUWW9kaUd5Z1JTa3pjdGx1T282NjRTeHRWZktrWFgraE04bktEWXZKZi9heWtDTEgrbFFIUkx4bGJIOTNpOHB4Cjg2dUh5MVI2OXA4Q0F3RUFBYU9CbXpDQm1EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBVEFNQmdOVkhSTUIKQWY4RUFqQUFNQjBHQTFVZERnUVdCQlNRcEowOTI0am5lVW5NOXVUTVFKWjQ5bktLV0RBZkJnTlZIU01FR0RBVwpnQlI3Y3JmN2E1c2VYVkhSN1h4U2xQeW03WHNuOURBekJnTlZIUkVFTERBcWdpaGhjR2t0YVc1MExtVmtaaTFrClpXMXZMbk5oYm1SaWIzZ3hPRGd3TG05d1pXNTBiR011WTI5dE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQk4KU1RpQVFRdXhLcDVsd2lTNVNuZE5QdVpIVDlyaFZUdWVHbnBtUDUzQU5WWUhmTVB3VndyMEZGNEdzTzUxYjhUVgpnQlczV1FMV0l2dERUNU9JbnZCVXBNdXM5amNUNXg4ZUh5NmZiN0xDMkhjOTRkWUwrSGFWTGs3eUtSdE5rRGlYCjNlNTNJL0ZpbjY0c3ZLbThrQ1c4VTBLZy83MWx6Ym9jSk5qVGpaY0Fka2dMZlJVaUNNbUtLOUpxT00yVjNJRkwKUjgzNmZza3A0RXZPUTJWVGs3QTJpMWFjT3pNaDRmVXMzS1piL2doOE1qTjljL0VEVEFQVVpOdTE0MzdxNnpsTApidjlPZi9PVXpLWmdNNXJnVGV5Sm9jcFNuWjFEalpnTWVubzJIOENkSzN3MXdTcHA4WDliZk9vOFdCdGtHUjlXCm42akZRWEgweTZoU05pc1AxM2hwCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/service-account.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdFpzQjlKSmtlQ21lTjdHMUpBc29PRWp0NWY3ZHlYU1BiL28vWE5md2xxY2xWOWJICmh1RnlMSUk4RjNPa2pDUkl4YXIxY25NL3A5eHpjdlkrazhNOWhZZGY5azlLeTFZQzF6NHEwOTd4R0FNSmJZNmMKVURBRGtPTHg0QVk2YStDSmJtVm9iRTJMODBWMHpyMThBV0o4R0doc1I2T2NoeWZSaVo5L2VHWDFzcy94WEE2egpJWW5rMTl4eUp5Q1NoRTBZUkp3WWdqb1RDdklzTzRxR1Zub1E0ZnI3dU95b01uMm91NVdMYy9qclpUN2FWdmdZCkJadCtEalJ6b0dzcjZSVmFHdk5jODdtYkhzU3FpR0RuTnJIdWpTMlMxZys4RGhaTWJTU3RzbDRyenExRVZqOS8KcW1HZzErV3g1V0I0UGdDVG1xeUFUeEo2ekFaQ0NWd1VMUUgxNlFJREFRQUJBb0lCQUVBR1d3VWZpMTQxeGZyNgpvdE1IUC9HLy9HZEdtR2lLdUhzUTdiL012WnhQWjBIMWpiaUd5TnJhTzFkRlJQREhaZ1NTUmlCSWMxdTV3OVgyCjdJN3BtVW4zTlNUQVJhMDBNS0l6MzZOOGlPRWZTUGFmL1luanM0NGtCSVFuamZjMFhSOVhqeDRIcE54cVUwa0QKMHJFbVNIdk9iTVpBNzFGUy8zT1drTGtnc1NPTnhmZ3l4OFNLNU9LOFNnS2J4a2c0WGZIN2ZCV2tYMm5HNzFCbwp2TVdsWHkzSXBuMW1VOXpmcEo0dDF5eFBienRlMmZOYmhzRDJDQ3RyOHFSR21IdlRvSExQWGdqSzBDY0pEMkd1CkRYYmJxeVBLK3IxTWtJSEZyeEtTb3grMWJ4SEdPZ2plcXc5V1JnZ2NobHNGVXQyaVozZmpQbkR4YkNTY1BDRDEKQllyZ1NVVUNnWUVBMzFKNnRkOHNuNkZ2L0w2MjNLV2VBUXF0VUZyNW81WUZXdGRWMWhkcTJodE9CdDJLem9ONwo3eGsyNzJkbE9rVGVGbUthbGtCTG9CemNBbUp5QWVjQ3pzSnVLbDVuUXd0NkpGaVNMUWFjN1ByTWVKMFRZZTN6CjFLUHpKL3RsVXFOVUYvRkJ2T1k1OXdFbFdCMGRQdThKYzdEc0k3NVZTditOdnJIUXJlMldVWE1DZ1lFQTBDM1kKWCtDZklxWEdOVS9pY0E1R214c2Rhb3lnbGZKTkF5QUZFNG9yREdxRDZlWC9yZzljMUU0dzIyRkE1YkVEY29iQwpFUUYwcnhIb2Fjcy85NDZOZTdxNzhlTGgzNEdPTWY1cmVPMndxc0dMZjhjR3JqMXpKek1GTk01SitqcXpwSHpxCmU0NVRSOTNXR0dUZWFOZHIrNVE2cmZTMnl1MW9MeXFNTGpmU1ZETUNnWUVBMEdCbWpaTmJVT3ZTMGJPbWJzVysKWTl4eGtUd0NHWWpmSUQ4eklad2lJTGMvbkJwVjdaSTBMd3FJL3VPc1NhMSt5TVppMWZYU1d1anl4T3JVMUQrWQptQkpGdHhUMUoxTHJPa1RHeUdxV1BHMWNJdUwxOWZlUS80V25XbFF4MitUNGo0cVd1MHJiSlVZVmNWMWhMNXJkCloremF1aE5jQktubHVkeXpDY2RaN2s4Q2dZQnZVaVNqV0hVZ1RPOUpzTmNRUHNJSXpSNFV6UEJPWG94S0FJUlcKWjRzUGo2SE1vSjN4a090OTUvWCtTZW92S1ZJRG13WUptL0t1YjNBTnFvOGhMUXlCUG1Da1AwT3poZzdvc3ZqNwphSGNSU0gvMUt4TnFkeGV0dlgycU9DbWM4bWovcTRDajQzNnJMbmYvQVdsaFBOalVaZlplOFQ0U0U1T2pyU2ZhCnl5VGd1d0tCZ1FDdW9abGhTK1NuMHJzb1RCQm5hdmk0WGczVEpMV2Z6SkpWZmlMSHBGNlJheXpnMlV0bFBKclAKUDl5dWMvdUQ1bnZRbEpML2MrNjlUSk55VXBud0duZytiNTVxZHlwYTU1ZjUvL3pkMk1Tb1NKajhNY1I5T3dYWgpsSXBGSjFXcHpmaE9QQmxyU1JsbUhSUGY2cmNwSW1OYVA0cGhabTB1eEk1Zk5Bb3lLaGRIdnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/service-account.pub",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdFpzQjlKSmtlQ21lTjdHMUpBc28KT0VqdDVmN2R5WFNQYi9vL1hOZndscWNsVjliSGh1RnlMSUk4RjNPa2pDUkl4YXIxY25NL3A5eHpjdlkrazhNOQpoWWRmOWs5S3kxWUMxejRxMDk3eEdBTUpiWTZjVURBRGtPTHg0QVk2YStDSmJtVm9iRTJMODBWMHpyMThBV0o4CkdHaHNSNk9jaHlmUmlaOS9lR1gxc3MveFhBNnpJWW5rMTl4eUp5Q1NoRTBZUkp3WWdqb1RDdklzTzRxR1Zub1EKNGZyN3VPeW9NbjJvdTVXTGMvanJaVDdhVnZnWUJadCtEalJ6b0dzcjZSVmFHdk5jODdtYkhzU3FpR0RuTnJIdQpqUzJTMWcrOERoWk1iU1N0c2w0cnpxMUVWajkvcW1HZzErV3g1V0I0UGdDVG1xeUFUeEo2ekFaQ0NWd1VMUUgxCjZRSURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/journal-gatewayd.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBelo5WVdmQkdZVnhjOEZhZGE4TU9reEswbXJldTh3L3IwYjg5YVM5aTcxQnpkK2JWCm9NdGN1djY5OUJUSkJoVyt3c3F0b2J1bzVXTnN2allYUEpWSVVNT1ZsbmYreFhsL0dDWi96eXlVWGlBMUxhMmsKOC9mNlF3b1BTOHZvUForU3hHY2JDNHJtc3ZYc2E3NzlwVDllUDhERGdpQm9COXF6U0g5MXc1WWZaTXY1SFQ0ago0VDZUa3NUbEhud1lsaDdWUWNvbzViYWJrY0w3Y1MvcEpsWG9NeTVsbXBsZkIzYkhuNmo0YURFY0x1MjhCVmliCnhJWjkyR0t3QU9TdVlyeDFucnhDT21CbmdoZU54NFBHeGhPWEdaRWpqNXQxTGFLM2dTeUYrSnl4bFVYcmZ2cUgKai9BTE16OTVLb1hocUpwbStOaTNJNE5HRDhtQzFIejJRMGZrZHdJREFRQUJBb0lCQVFDRVk5Z3E4RDBnYXF1YwpRdWhRZmVKZ1oyYkpSd0xwbEpLdEZZaWd0TlhxWjg0d29QdGk4QXpnaVN3Y2YxVi9DWGt0U2ZuSmJGNHVjM21NCmJwOC9ibzZGRWFpNm5MLzR2V1ZMVTE1dk1iREZlYzlEZmMzN0Z1cVhSMTdaMm92SlFYanA0OGpTQWJqUCtPOGoKNEhESGVLbGlPdWFtWGQ4ZFQzNm5hd21UeUpDbUFGYTZienQ2Qi8rb2U4K3hLTEtCVmpLcG42Q2xabTkrZVpaZQoyNHB0eTlwMjhRM0Vld1NLSlk0UjhzTTlNM0YzUk1ISnpEV1A4SXRjcFJPQWlXeTJwQVZBeXNTZFlRWjVxeEVsCnB0K0pNejRkbytGUHNlZjI0VHlXOWxwa2I5cldvdmlENUtCNmVxM1c2UGs4RmMzeE82RWdGVENJeGx3NHh2cHkKR3liZ2l4REJBb0dCQVBDRzdTTExXMEFVRk4zeWxwd2wyZVhETGlkUlhXUGZZV3dNSnhPcWRIWjl3eXJHdUVpKwpVVENYU01CNlhSNExBaWEzRThlMm9KQmNwQXpQRldUWVJKZS9WWW04OVRaSk9MbEVZWHlEQjNRYngxY010N1ZPCmg0dW1FVmlzckNnTDdSUFN5aExUclZyWkhVU2xoS3hYaExCdktsVFFORmZ4OVR2VlFBdEx5cFpKQW9HQkFOcloKbVU5MloyRjRXMkdXU0o4blBsV3YyK09tczFGd2RxVEZsWWUvRUdhTmhwTS85bnduakRGSUFDOFloZUlTQlg2bQpBajNjVG5QeGlaWmZGbTYrTGFIbStQOXlva2ZsWjRtTGdaVUh2cHNEbWJUbXdZaTdBMFZWOUtmbmg4MWZ0NHBLCk1IcGU5TS9YaURPUkVsUTNJaE5FTm9XcjZwbjJHNXJWMmhITUE2Uy9Bb0dBWWdScUVKclVaY21KTTJWUGNQU1AKMW16eW12MHlWS2ZNV0s2ZklnbDlpbWYzcDYveG0xdExWTVRoMWVaSG1oMmNVOUNaay9KZGZsYnlWM0h3WXZjcgpCTGZwRU1kYkdqTStsV2xEWE8wOGxWbFlvNlhBRzNlVUR4bXV5ZmNiOVBuZk5BdmJZMDYxdjJibzRYZWVHR2xWCjNseCs0SzgwRlg2NWxCZDBFT1ppK1ZrQ2dZQlFHcDJYREV2Q3pYOEZOVERYc0ZHTW81WGt1YnVnNzMwOXltUjEKRDJZOVkwZ0MxY0t1cHZzVmZya3lnOU5kY0NNNnZDRE42N2w3anNsQmxRUnMvSWRQWDI5OGNNVWRjOFoxL2U0cwpVbTFkNSs5MjI0K3pNR0IrSEh3MGlQYVlJWlRZdFZjUk0zaUFLdS9ia0JvWllTVEQwSS8wVlh6RlplT3N4T0hRCjZjL2JtUUtCZ0FyUmZUcVhJSlZuREFTTWlsWERDSWFZMlNCL2F4UmVTVENwaS9oWlU1a1BmODBjaFU5ZjR0REYKaXc0V3h4TjgzNS95ajdadmQ1dUlGVVZRQ1Z5b3hTYnl4dkpobmZudDFVTmkrOFo2M2t5Q2FRV3Q2MHg3SXd5OApJQm5kdFEwLzRtZ0Z6KzVrdGxrN0k2Z3Jwc0d6c1NuOS93Vk8vU0NDeEZrdWpDemVDRU5QCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/journal-gatewayd.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtpZ0F3SUJBZ0lJQ3gxTzVEc3IvaWd3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEl6TURreU5USXhNelF6TlZvWApEVE16TURreU1qSXhNelF6T0Zvd09URWNNQm9HQTFVRUNoTVRUM0JsYmxOb2FXWjBJRUp2YjNSemRISmhjREVaCk1CY0dBMVVFQXhNUWFtOTFjbTVoYkMxbllYUmxkMkY1WkRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU0yZldGbndSbUZjWFBCV25XdkREcE1TdEpxM3J2TVA2OUcvUFdrdll1OVFjM2ZtMWFETApYTHIrdmZRVXlRWVZ2c0xLcmFHN3FPVmpiTDQyRnp5VlNGRERsWlozL3NWNWZ4Z21mODhzbEY0Z05TMnRwUFAzCitrTUtEMHZMNkQyZmtzUm5Hd3VLNXJMMTdHdSsvYVUvWGovQXc0SWdhQWZhczBoL2RjT1dIMlRMK1IwK0krRSsKazVMRTVSNThHSlllMVVIS0tPVzJtNUhDKzNFdjZTWlY2RE11WlpxWlh3ZDJ4NStvK0dneEhDN3R2QVZZbThTRwpmZGhpc0FEa3JtSzhkWjY4UWpwZ1o0SVhqY2VEeHNZVGx4bVJJNCtiZFMyaXQ0RXNoZmljc1pWRjYzNzZoNC93CkN6TS9lU3FGNGFpYVp2all0eU9EUmcvSmd0Ujg5a05INUhjQ0F3RUFBYU4vTUgwd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQjBHQTFVZERnUVdCQlFmbFRYUFRSeFVsNWRZYThYUkV6V3RsNmZZNWpBZkJnTlZIU01FR0RBV2dCUjdjcmY3CmE1c2VYVkhSN1h4U2xQeW03WHNuOURBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVhNUkMxNlBmUVRRMndETnYKVW1XRXErZHVSYm9pdzAvZGlzUUM2VWZjcmc4cVd3RS9xaUZQL21vTklsRmdJaTJqbUJ4ZUo2elE2Z0hwakJ6MQppYVlsWndRZ3EvaFY4Y0Z3UGE1bmxwQjhuUHJqekRTcVlEMFBKQVF2Y3paSHduRG5Eb0VnOWd2cEFmOHRCV2lCCnZzRTduNFNrbW5aQzJZQzIxQ3pROS9BbGNMSG9yY0tsRFU3NXVHV04vaDZMYStqeTd1UkxER1JzWkhMcVpma1YKWXFybytxM1A1elBnM0FIUndIcDd6RSsrdldSdHdUc3NVQnBjdE9GTmZPS1ZwTUJFYzFnYk01RHNjdWphWUFaTQprLzE2czFRc3ZmL0h2YlRvNTFMTnZVYU9HcGVZS0xGMDFqV0NRazA1SU5sb0ZDRXZKaWpkWldpYWw4OCtjSTB4ClhQLzNDUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "group": {},
                        "overwrite": true,
                        "path": "/opt/openshift/tls/root-ca.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lJWVBCSFFjbGdzR1l3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEl6TURreU5USXhNelF6TlZvWApEVE16TURreU1qSXhNelF6TlZvd0pqRVNNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5CmIyOTBMV05oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3Wm9jZkVobUd2SXgKTTFOZkJVakZEZWFIN0JkQ3piSnFqQ3F4c1lCQnBOSHUyMzhlcjhzR3ZHdC9QajhtTUJzaUpmVmZhclMzNHdXKwpRU1VLNGVrUlFZNUVQY09kUzloZjE2MzMxYjNvQy9KbHU5dnNucXdNdzI2MDAzVmF4Z3N1dnhNSTltZ2hEVHRXCnJYYndSejkvWWFxa0xYdUhFd0lJMVlzWVJlNXMxSEF6aitrcTRGbmRzOERKYktPcFJMS2d4L2x1cmZOdnNSVHoKL1ljMDc1dm5SYnhtRXBqWUdRWXA0eTBIUUZmTlcwcndFRzY2SlljWkxhZUUyWXdnWFZ0MEdkVHkxMGdnK2VyVwpMR3hFMWFQR3QydXJjMktEVVh4TldFcTNQZVBOSXlOTWVzdlY4YklxT2IwL2tNbHZXNGFvMFo5bGY5SWIrMVlICk41Vkg4cXBVNHdJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWUzSzMrMnViSGwxUjBlMThVcFQ4cHUxN0ovUXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUxjZ3hqV1g0bWRjNWJRZ3QzejU2dnJQNHluWm90RU8vdmdPYnhtelNuTUMwVE1wdDZHZFltQ3N2bE92ClVEdXBkY1VmeUZDZ1Y0ZlBXQnBUYTNpaEVaYnhKVktjRFk1NEoxZmNjUkQxNDE5ZGFKQVVBRkpXY1ZiQTdQUjIKVUgvVkVONHk3L1gxamVCbUIxUGVwOXBIZUNOb1dtVGdiSjFvcVpCcWgzWkdqT2Rla3lXUDQrWmIxRnNJcWJxegpGbjBGUmw5WTBQdFo1V3pvNnNBbGQ3YUU3Q3lTKzE5QVYzTzkyRVRuYnN5bWNVSDdCMThOSzBkUnd5aHhKSTMzCnhDSmxZanczUEZvMU9WSWU0Q1pYSjFmLzFFNld4QVk1cElETERNRk5XREJldDB6bFc1azlwdkZSdEZVSnA5N04KVlBqTlExc3paR2lIbHIyRjBNblB2bkFPL0NFPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 420
                    }
                ]
            },
            "systemd": {
                "units": [
                    {
                        "contents": "[Unit]\nDescription=Approve CSRs during bootstrap phase\nWants=bootkube.service\nAfter=bootkube.service\n\n[Service]\nExecStart=/usr/local/bin/approve-csr.sh /opt/openshift/auth/kubeconfig-loopback\n\nRestart=on-failure\nRestartSec=5s\n\n[Install]\nWantedBy=multi-user.target\n",
                        "enabled": true,
                        "name": "approve-csr.service"
                    },
                    {
                        "contents": "[Unit]\nDescription=Bootstrap a Kubernetes cluster\nRequires=crio-configure.service\nWants=kubelet.service\nAfter=kubelet.service crio-configure.service\nConditionPathExists=!/opt/openshift/.bootkube.done\n\n[Service]\nWorkingDirectory=/opt/openshift\nExecStart=/usr/local/bin/bootkube.sh\n\nRestart=on-failure\nRestartSec=5s\n",
                        "name": "bootkube.service"
                    },
                    {
                        "contents": "# In RHEL8 the service uses DynamicUser=yes; we need to work both ways, so hence\n# we hack this by adding the user if it doesn't exist and chown the file, rather\n# than doing it in Ignition.\n# https://github.com/openshift/installer/pull/1445\n[Unit]\nDescription=Change ownership of journal-gatewayd.key\nBefore=systemd-journal-gatewayd.service\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\nExecStart=/bin/sh -c \". /usr/local/bin/bootstrap-service-record.sh; if ! getent passwd systemd-journal-gateway \u0026\u003e/dev/null; then useradd -r systemd-journal-gateway; fi \u0026\u0026 chown systemd-journal-gateway: /opt/openshift/tls/journal-gatewayd.{crt,key}\"\n\n[Install]\nWantedBy=multi-user.target\n",
                        "enabled": true,
                        "name": "chown-gatewayd-key.service"
                    },
                    {
                        "contents": "[Unit]\nDescription=Configure CRI-O to use the pause image\nAfter=release-image.service\nRequires=release-image.service\nBefore=crio.service\n\n[Service]\nType=oneshot\nExecStart=/usr/local/bin/crio-configure.sh\nRemainAfterExit=true\n\n[Install]\nRequiredBy=crio.service\n",
                        "name": "crio-configure.service"
                    },
                    {
                        "contents": "[Unit]\nDescription=Kubernetes Kubelet\nWants=rpc-statd.service crio.service release-image.service\nAfter=crio.service release-image.service\n\n[Service]\nType=notify\nNotifyAccess=all\nExecStartPre=/bin/mkdir --parents /etc/kubernetes/manifests\nExecStartPre=/bin/mkdir --parents /etc/kubernetes/kubelet-plugins/volume/exec\nExecStartPre=/usr/local/bin/kubelet-pause-image.sh\nEnvironment=KUBELET_RUNTIME_REQUEST_TIMEOUT=10m\nEnvironmentFile=-/etc/kubernetes/kubelet-env\nEnvironmentFile=-/etc/kubernetes/kubelet-pause-image-override\n\nExecStart=/usr/local/bin/kubelet.sh\n\nRestart=always\nRestartSec=10\n\n[Install]\nWantedBy=multi-user.target\n",
                        "enabled": true,
                        "name": "kubelet.service"
                    },
                    {
                        "contents": "[Unit]\nDescription=Report the completion of the cluster bootstrap process\n# Workaround for https://github.com/systemd/systemd/issues/1312\nWants=bootkube.service\nAfter=bootkube.service\n\n[Service]\nExecStart=/usr/local/bin/report-progress.sh /opt/openshift/auth/kubeconfig\n\nRestart=on-failure\nRestartSec=5s\n\n[Install]\nWantedBy=multi-user.target\n",
                        "enabled": true,
                        "name": "progress.service"
                    },
                    {
                        "contents": "",
                        "name": "release-image-pivot.service"
                    },
                    {
                        "contents": "[Unit]\nDescription=Download the OpenShift Release Image\nWants=network-online.target\nAfter=network-online.target\n\n[Service]\nType=oneshot\nExecStart=/usr/local/bin/release-image-download.sh\nRemainAfterExit=true\n",
                        "name": "release-image.service"
                    },
                    {
                        "dropins": [
                            {
                                "contents": "[Service]\nExecStart=\nExecStart=/usr/lib/systemd/systemd-journal-gatewayd \\\n  --key=/opt/openshift/tls/journal-gatewayd.key \\\n  --cert=/opt/openshift/tls/journal-gatewayd.crt \\\n  --trust=/opt/openshift/tls/root-ca.crt\n",
                                "name": "certs.conf"
                            }
                        ],
                        "name": "systemd-journal-gatewayd.service"
                    },
                    {
                        "contents": "",
                        "enabled": true,
                        "name": "systemd-journal-gatewayd.socket"
                    },
                    {
                        "dropins": [
                            {
                                "contents": "[Unit]\nConditionPathExists=/enoent\n",
                                "name": "okd-machine-os-disabled.conf"
                            }
                        ],
                        "name": "zincati.service"
                    }
                ]
            }
        },
        "File": {
            "Filename": "bootstrap.ign",
            "Data": ""
        }
    },
    "*bootstrap.CVOIgnore": {
        "FileList": [
            {
                "Filename": "manifests/cvo-overrides.yaml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBDbHVzdGVyVmVyc2lvbgptZXRhZGF0YToKICBuYW1lOiB2ZXJzaW9uCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY2x1c3Rlci12ZXJzaW9uCnNwZWM6CiAgY2hhbm5lbDogc3RhYmxlLTQuMTMKICBjbHVzdGVySUQ6IDY0MmY5ODYyLThiYjYtNDliNi04YTQ0LTJmODc1MjdjM2Y2NwogIG92ZXJyaWRlczoKICAtIGdyb3VwOiAiIgogICAga2luZDogQ29uZmlnTWFwCiAgICBuYW1lOiBjbHVzdGVyLWNvbmZpZy12MQogICAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQogICAgdW5tYW5hZ2VkOiB0cnVlCiAgLSBncm91cDogY29uZmlnLm9wZW5zaGlmdC5pbwogICAga2luZDogRE5TCiAgICBuYW1lOiBjbHVzdGVyCiAgICBuYW1lc3BhY2U6ICIiCiAgICB1bm1hbmFnZWQ6IHRydWUKICAtIGdyb3VwOiBjb25maWcub3BlbnNoaWZ0LmlvCiAgICBraW5kOiBJbmZyYXN0cnVjdHVyZQogICAgbmFtZTogY2x1c3RlcgogICAgbmFtZXNwYWNlOiAiIgogICAgdW5tYW5hZ2VkOiB0cnVlCiAgLSBncm91cDogY29uZmlnLm9wZW5zaGlmdC5pbwogICAga2luZDogSW5ncmVzcwogICAgbmFtZTogY2x1c3RlcgogICAgbmFtZXNwYWNlOiAiIgogICAgdW5tYW5hZ2VkOiB0cnVlCiAgLSBncm91cDogYXBpZXh0ZW5zaW9ucy5rOHMuaW8KICAgIGtpbmQ6IEN1c3RvbVJlc291cmNlRGVmaW5pdGlvbgogICAgbmFtZTogbmV0d29ya3MuY29uZmlnLm9wZW5zaGlmdC5pbwogICAgbmFtZXNwYWNlOiAiIgogICAgdW5tYW5hZ2VkOiB0cnVlCiAgLSBncm91cDogY29uZmlnLm9wZW5zaGlmdC5pbwogICAga2luZDogTmV0d29yawogICAgbmFtZTogY2x1c3RlcgogICAgbmFtZXNwYWNlOiAiIgogICAgdW5tYW5hZ2VkOiB0cnVlCiAgLSBncm91cDogY29uZmlnLm9wZW5zaGlmdC5pbwogICAga2luZDogUHJveHkKICAgIG5hbWU6IGNsdXN0ZXIKICAgIG5hbWVzcGFjZTogIiIKICAgIHVubWFuYWdlZDogdHJ1ZQogIC0gZ3JvdXA6IGNvbmZpZy5vcGVuc2hpZnQuaW8KICAgIGtpbmQ6IFNjaGVkdWxlcgogICAgbmFtZTogY2x1c3RlcgogICAgbmFtZXNwYWNlOiAiIgogICAgdW5tYW5hZ2VkOiB0cnVlCiAgLSBncm91cDogIiIKICAgIGtpbmQ6IFNlY3JldAogICAgbmFtZToga3ViZS1jbG91ZC1jZmcKICAgIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICAgIHVubWFuYWdlZDogdHJ1ZQogIC0gZ3JvdXA6ICIiCiAgICBraW5kOiBDb25maWdNYXAKICAgIG5hbWU6IHJvb3QtY2EKICAgIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICAgIHVubWFuYWdlZDogdHJ1ZQogIC0gZ3JvdXA6ICIiCiAgICBraW5kOiBTZWNyZXQKICAgIG5hbWU6IG1hY2hpbmUtY29uZmlnLXNlcnZlci10bHMKICAgIG5hbWVzcGFjZTogb3BlbnNoaWZ0LW1hY2hpbmUtY29uZmlnLW9wZXJhdG9yCiAgICB1bm1hbmFnZWQ6IHRydWUKICAtIGdyb3VwOiAiIgogICAga2luZDogU2VjcmV0CiAgICBuYW1lOiBwdWxsLXNlY3JldAogICAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY29uZmlnCiAgICB1bm1hbmFnZWQ6IHRydWUKICAtIGdyb3VwOiAiIgogICAga2luZDogU2VjcmV0CiAgICBuYW1lOiBhd3MtY3JlZHMKICAgIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICAgIHVubWFuYWdlZDogdHJ1ZQogIC0gZ3JvdXA6ICIiCiAgICBraW5kOiBTZWNyZXQKICAgIG5hbWU6IGt1YmVhZG1pbgogICAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQogICAgdW5tYW5hZ2VkOiB0cnVlCiAgLSBncm91cDogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pbwogICAga2luZDogUm9sZQogICAgbmFtZTogYXdzLWNyZWRzLXNlY3JldC1yZWFkZXIKICAgIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICAgIHVubWFuYWdlZDogdHJ1ZQogIC0gZ3JvdXA6ICIiCiAgICBraW5kOiBDb25maWdNYXAKICAgIG5hbWU6IG9wZW5zaGlmdC1pbnN0YWxsLW1hbmlmZXN0cwogICAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY29uZmlnCiAgICB1bm1hbmFnZWQ6IHRydWUK"
            },
            {
                "Filename": "original_cvo_overrides.patch",
                "Data": "eyJzcGVjIjp7Im92ZXJyaWRlcyI6bnVsbH19"
            }
        ]
    },
    "*cluster.Cluster": {
        "FileList": [
            {
                "Filename": "terraform.cluster.tfstate",
                "Data": ""
            },
            {
                "Filename": "cluster.tfvars.json",
                "Data": "eyJhbWlfaWQiOiJhbWktMGVkM2YyNzNiMmU3NGY4MTQiLCJjb250cm9sX3BsYW5lX2lwcyI6WyIxMC4wLjE1My4yMDkiLCIxMC4wLjE2MS45OCIsIjEwLjAuMTk0LjEwMSJdLCJsYl90YXJnZXRfZ3JvdXBfYXJucyI6WyJhcm46YXdzOmVsYXN0aWNsb2FkYmFsYW5jaW5nOnVzLWVhc3QtMjo1OTAyMzQwNzA4Nzk6dGFyZ2V0Z3JvdXAvZWRmLWRlbW8tOGdwNnotYWludC82ZDQ4MzM1ZTdlYWZkZDA4IiwiYXJuOmF3czplbGFzdGljbG9hZGJhbGFuY2luZzp1cy1lYXN0LTI6NTkwMjM0MDcwODc5OnRhcmdldGdyb3VwL2VkZi1kZW1vLThncDZ6LXNpbnQvMDQyZjVjYTNjOGJkN2MxOCIsImFybjphd3M6ZWxhc3RpY2xvYWRiYWxhbmNpbmc6dXMtZWFzdC0yOjU5MDIzNDA3MDg3OTp0YXJnZXRncm91cC9lZGYtZGVtby04Z3A2ei1hZXh0LzQwNGIzZTQwM2ZlNTJlNTMiXSwibGJfdGFyZ2V0X2dyb3VwX2FybnNfbGVuZ3RoIjoiMyIsIm1hc3Rlcl9zZ19pZCI6InNnLTAxMDA0ZGZlOTZhOTYxYjRmIiwicHJpdmF0ZV9zdWJuZXRfaWRzIjpbInN1Ym5ldC0wMTk0MWRlM2Y5NTk4NDQ1YiIsInN1Ym5ldC0wNTYzOTdiYmQyYjAwZWFhMSIsInN1Ym5ldC0wMzE0ZDhkMGIzMGM2OWVmNiJdLCJwdWJsaWNfc3VibmV0X2lkcyI6WyJzdWJuZXQtMDFlZmY1NDc0ZDkwOTlkZDAiLCJzdWJuZXQtMDBiOTRmODRlYjU2N2YwNTIiLCJzdWJuZXQtMGE4MThjMmQzY2UyMGVkODgiXSwidnBjX2lkIjoidnBjLTAyODRjOTdhMzQzOTI1YmVhIn0="
            },
            {
                "Filename": "terraform.bootstrap.tfstate",
                "Data": ""
            },
            {
                "Filename": "bootstrap.tfvars.json",
                "Data": "eyJib290c3RyYXBfaXAiOiIzLjE0NS4xMS4xNTkifQ=="
            }
        ]
    },
    "*cluster.Metadata": {
        "File": {
            "Filename": "metadata.json",
            "Data": "eyJjbHVzdGVyTmFtZSI6ImVkZi1kZW1vIiwiY2x1c3RlcklEIjoiNjQyZjk4NjItOGJiNi00OWI2LThhNDQtMmY4NzUyN2MzZjY3IiwiaW5mcmFJRCI6ImVkZi1kZW1vLThncDZ6IiwiYXdzIjp7InJlZ2lvbiI6InVzLWVhc3QtMiIsImlkZW50aWZpZXIiOlt7Imt1YmVybmV0ZXMuaW8vY2x1c3Rlci9lZGYtZGVtby04Z3A2eiI6Im93bmVkIn0seyJvcGVuc2hpZnRDbHVzdGVySUQiOiI2NDJmOTg2Mi04YmI2LTQ5YjYtOGE0NC0yZjg3NTI3YzNmNjcifV0sImNsdXN0ZXJEb21haW4iOiJlZGYtZGVtby5zYW5kYm94MTg4MC5vcGVudGxjLmNvbSJ9fQ=="
        }
    },
    "*cluster.TerraformVariables": {
        "FileList": [
            {
                "Filename": "terraform.tfvars.json",
                "Data": ""
            },
            {
                "Filename": "terraform.platform.auto.tfvars.json",
                "Data": "ewogICJhd3NfYW1pIjogImFtaS0wZWQzZjI3M2IyZTc0ZjgxNCIsCiAgImF3c19hbWlfcmVnaW9uIjogInVzLWVhc3QtMiIsCiAgImF3c19leHRyYV90YWdzIjogewogICAgImt1YmVybmV0ZXMuaW8vY2x1c3Rlci9lZGYtZGVtby04Z3A2eiI6ICJvd25lZCIKICB9LAogICJhd3NfYm9vdHN0cmFwX2luc3RhbmNlX3R5cGUiOiAibTZpLnhsYXJnZSIsCiAgImF3c19tYXN0ZXJfaW5zdGFuY2VfdHlwZSI6ICJtNmkueGxhcmdlIiwKICAiYXdzX21hc3Rlcl9hdmFpbGFiaWxpdHlfem9uZXMiOiBbCiAgICAidXMtZWFzdC0yYSIsCiAgICAidXMtZWFzdC0yYiIsCiAgICAidXMtZWFzdC0yYyIKICBdLAogICJhd3Nfd29ya2VyX2F2YWlsYWJpbGl0eV96b25lcyI6IFsKICAgICJ1cy1lYXN0LTJhIiwKICAgICJ1cy1lYXN0LTJiIiwKICAgICJ1cy1lYXN0LTJjIgogIF0sCiAgImF3c19tYXN0ZXJfcm9vdF92b2x1bWVfaW9wcyI6IDAsCiAgImF3c19tYXN0ZXJfcm9vdF92b2x1bWVfc2l6ZSI6IDEyMCwKICAiYXdzX21hc3Rlcl9yb290X3ZvbHVtZV90eXBlIjogImdwMyIsCiAgImF3c19tYXN0ZXJfcm9vdF92b2x1bWVfZW5jcnlwdGVkIjogdHJ1ZSwKICAiYXdzX3JlZ2lvbiI6ICJ1cy1lYXN0LTIiLAogICJhd3NfcHVibGlzaF9zdHJhdGVneSI6ICJFeHRlcm5hbCIsCiAgImF3c19pZ25pdGlvbl9idWNrZXQiOiAiZWRmLWRlbW8tOGdwNnotYm9vdHN0cmFwIiwKICAiYXdzX2Jvb3RzdHJhcF9zdHViX2lnbml0aW9uIjogIntcImlnbml0aW9uXCI6e1wiY29uZmlnXCI6e1wicmVwbGFjZVwiOntcInNvdXJjZVwiOlwiaHR0cHM6Ly9lZGYtZGVtby04Z3A2ei1ib290c3RyYXAuczMudXMtZWFzdC0yLmFtYXpvbmF3cy5jb20vYm9vdHN0cmFwLmlnbj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NlxcdTAwMjZYLUFtei1DcmVkZW50aWFsPUFLSUFZUzNGUkY1UDI0NUpGQVZaJTJGMjAyMzA5MjUlMkZ1cy1lYXN0LTIlMkZzMyUyRmF3czRfcmVxdWVzdFxcdTAwMjZYLUFtei1EYXRlPTIwMjMwOTI1VDIxMzQ0MFpcXHUwMDI2WC1BbXotRXhwaXJlcz0zNjAwXFx1MDAyNlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdFxcdTAwMjZYLUFtei1TaWduYXR1cmU9ZmUwMGE2MTIxYzg1ODNjN2M3ZmI4OGVjY2U5MTVmNmI5ODIxNzQ5YWJmZmE2OTg3MTFmMzIxMWJmNThjMjYxMVwifX0sXCJ2ZXJzaW9uXCI6XCIzLjIuMFwifX0iCn0="
            }
        ]
    },
    "*installconfig.ClusterID": {
        "UUID": "642f9862-8bb6-49b6-8a44-2f87527c3f67",
        "InfraID": "edf-demo-8gp6z"
    },
    "*installconfig.InstallConfig": {
        "config": {
            "apiVersion": "v1",
            "metadata": {
                "name": "edf-demo",
                "creationTimestamp": null
            },
            "additionalTrustBundlePolicy": "Proxyonly",
            "sshKey": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCTMl1LDqVCao2GwvnvVp1vkC0qusn1wJgsPHTtO5pT3ae9B6JoEuGP09isvBYluyJTC//CZVQ0aHjt3teV3BEFGdZTYMit22TKGzXpfqaurGyxMyVUtqp4eFQdDNAzbRvlHgeR3uF42NNz7xT9tm9VjzzUJKpf/OR5d/Utg6RwnFDT/PJLfa+nm1d7QHcEPiJeH61H6E/odKOQOF+4GZiUVUQHDtOQEUcVuVECxga2JNxzQs0zRAGRMTzQAr4xMeD6c6rDrEOD7EOKknPNQP9dgoCaVj5dv/ymj+sZ2c4xZ48EhzfQp89C3P0Buncy0C4v+HDbOedBDq/BSmZuRHJo7YmYG46IJ/HymHG3KWkgyqwd7cgD95E/2k1Sb/fSqgmgil6ka34v2B833p1PZF0/8E8XZkDBXj+FNenBct4LyfdDqtg3JxxWqYBLq1F12x12iTQBSRtIGqayPNUBMvBTr/7WuoI3H5vvdqk58z8r2j3DObipvrkx5rNr77A+U4c= feven@localhost.localdomain\n",
            "baseDomain": "sandbox1880.opentlc.com",
            "networking": {
                "networkType": "OVNKubernetes",
                "machineNetwork": [
                    {
                        "cidr": "10.0.0.0/16"
                    }
                ],
                "clusterNetwork": [
                    {
                        "cidr": "10.128.0.0/14",
                        "hostPrefix": 23
                    }
                ],
                "serviceNetwork": [
                    "172.30.0.0/16"
                ]
            },
            "controlPlane": {
                "name": "master",
                "replicas": 3,
                "platform": {},
                "hyperthreading": "Enabled",
                "architecture": "amd64"
            },
            "compute": [
                {
                    "name": "worker",
                    "replicas": 3,
                    "platform": {},
                    "hyperthreading": "Enabled",
                    "architecture": "amd64"
                }
            ],
            "platform": {
                "aws": {
                    "region": "us-east-2"
                }
            },
            "pullSecret": "{\"auths\":{\"cloud.openshift.com\":{\"auth\":\"b3BlbnNoaWZ0LXJlbGVhc2UtZGV2K29jbV9hY2Nlc3NfZTAwMjFlZjZiOGYyNGM5OWI2OTE2NDljOWEwZjg4MDg6U0FTUExRMDNLUEhRWUQ5STZUM0c0VFVXSzExU084NVhUWDI2WTlRT1pWQkQxQ0JKWUM5UDBSWk5QOFFLWlMzUQ==\",\"email\":\"feven@redhat.com\"},\"registry.hcp.numspot.cloud:8443\": {\"auth\": \"cXVheTpZa1FOMnc3KmZwOWoyK2E5\",\"email\": \"dmartini@redhat.com\"},\"quay.io\":{\"auth\":\"b3BlbnNoaWZ0LXJlbGVhc2UtZGV2K29jbV9hY2Nlc3NfZTAwMjFlZjZiOGYyNGM5OWI2OTE2NDljOWEwZjg4MDg6U0FTUExRMDNLUEhRWUQ5STZUM0c0VFVXSzExU084NVhUWDI2WTlRT1pWQkQxQ0JKWUM5UDBSWk5QOFFLWlMzUQ==\",\"email\":\"feven@redhat.com\"},\"registry.connect.redhat.com\":{\"auth\":\"fHVoYy1wb29sLWQ0YmZkMjBiLTRiYjEtNGI0OS05M2ZkLThiMmJhN2Y4ZTE5NjpleUpoYkdjaU9pSlNVelV4TWlKOS5leUp6ZFdJaU9pSmxNR1psWVdWaE1qWTFPRGswTUdWbU9XVXdORGd5TnpBeU0ySmtNVEE1TVNKOS5VQllRLVlFZUU2RHptLVd0ZDlWRzdrMkZVZjdTcVRsV3NkbWVOdTZyRVQtQjdBQV9PUHdtN1BnZm1sMkRKaGI3bFlZTXhObGZ5Z0tiemlyMnhRazEwcjA4SUxzUDdvWXVNQmFveVIyZWxNRFJ5VzZWcG5UeFFsTE16NC15dmZPNXM1a1JFckE2TndfSnZkRS1GZ21UUW00eTBiM0hCOVFJWXJERGhOWVVCdVhwaVE5MnR6LWxMMTM2VG9sdzVQZmc4dGNCSzNfQnJrd3VNRmozWnMwX0ZsX2N1am1SU0UzY3c1eno1Q3FSTklJVVg3cVlta084NHJFbDhNbHZrWXR3Z1puWGsxWGljZm9uU3dpOXhEU1ZLcmR2Q2lwX3pZNVBQeFA5WGw0RUVJZWtVRjA4dU15NVFfamtPYnpkSHh5ZVFFek11clZzOUlMMVdlVnlOZmVhTXRROWtrVmp3UzJKT2ZlOF96MklVdjU2d1Q0eVlTbDVacUxMamdlblZDME0tSUdhTjE0WFJNS0lKbzNMVVFBbnpQMWowR1hRYW5wc0dNci1HSVNVY3JvaHZOWWtoUDdYZjV4X2lDcHNsMlRhRVIwWXdHWHdSREZyb3p3NWQ5eEV0RU96ZXNXbEYtRUV6TmJNZ05HUVRxOU5ldXg2QzJwbGlMUk1QTWJtVnJNbG0xUmMwRld2SU1LUlM5QUowVFVsYXZLemhZS0p0MVM3OHBrZEtkQVdRS2o4RzBadVd2dXduLWU4Q0FfcEhxUG5jMC1icVc3T2V2WVdNMDVReUVnTVFaQXFIVGNvU1p6cHkyY1RqRldQbGFuMEkybk5NaHIzUUlGZkJ6T0lCQ1pIcnB0elE5ZkxPcFVNV0lWOWhCdHdmQ0Jfamt2LVpiWmFRTTEzNVRGTDV4bw==\",\"email\":\"feven@redhat.com\"},\"registry.redhat.io\":{\"auth\":\"fHVoYy1wb29sLWQ0YmZkMjBiLTRiYjEtNGI0OS05M2ZkLThiMmJhN2Y4ZTE5NjpleUpoYkdjaU9pSlNVelV4TWlKOS5leUp6ZFdJaU9pSmxNR1psWVdWaE1qWTFPRGswTUdWbU9XVXdORGd5TnpBeU0ySmtNVEE1TVNKOS5VQllRLVlFZUU2RHptLVd0ZDlWRzdrMkZVZjdTcVRsV3NkbWVOdTZyRVQtQjdBQV9PUHdtN1BnZm1sMkRKaGI3bFlZTXhObGZ5Z0tiemlyMnhRazEwcjA4SUxzUDdvWXVNQmFveVIyZWxNRFJ5VzZWcG5UeFFsTE16NC15dmZPNXM1a1JFckE2TndfSnZkRS1GZ21UUW00eTBiM0hCOVFJWXJERGhOWVVCdVhwaVE5MnR6LWxMMTM2VG9sdzVQZmc4dGNCSzNfQnJrd3VNRmozWnMwX0ZsX2N1am1SU0UzY3c1eno1Q3FSTklJVVg3cVlta084NHJFbDhNbHZrWXR3Z1puWGsxWGljZm9uU3dpOXhEU1ZLcmR2Q2lwX3pZNVBQeFA5WGw0RUVJZWtVRjA4dU15NVFfamtPYnpkSHh5ZVFFek11clZzOUlMMVdlVnlOZmVhTXRROWtrVmp3UzJKT2ZlOF96MklVdjU2d1Q0eVlTbDVacUxMamdlblZDME0tSUdhTjE0WFJNS0lKbzNMVVFBbnpQMWowR1hRYW5wc0dNci1HSVNVY3JvaHZOWWtoUDdYZjV4X2lDcHNsMlRhRVIwWXdHWHdSREZyb3p3NWQ5eEV0RU96ZXNXbEYtRUV6TmJNZ05HUVRxOU5ldXg2QzJwbGlMUk1QTWJtVnJNbG0xUmMwRld2SU1LUlM5QUowVFVsYXZLemhZS0p0MVM3OHBrZEtkQVdRS2o4RzBadVd2dXduLWU4Q0FfcEhxUG5jMC1icVc3T2V2WVdNMDVReUVnTVFaQXFIVGNvU1p6cHkyY1RqRldQbGFuMEkybk5NaHIzUUlGZkJ6T0lCQ1pIcnB0elE5ZkxPcFVNV0lWOWhCdHdmQ0Jfamt2LVpiWmFRTTEzNVRGTDV4bw==\",\"email\":\"feven@redhat.com\"}}}",
            "publish": "External"
        },
        "file": {
            "Filename": "install-config.yaml",
            "Data": "YWRkaXRpb25hbFRydXN0QnVuZGxlUG9saWN5OiBQcm94eW9ubHkKYXBpVmVyc2lvbjogdjEKYmFzZURvbWFpbjogc2FuZGJveDE4ODAub3BlbnRsYy5jb20KY29tcHV0ZToKLSBhcmNoaXRlY3R1cmU6IGFtZDY0CiAgaHlwZXJ0aHJlYWRpbmc6IEVuYWJsZWQKICBuYW1lOiB3b3JrZXIKICBwbGF0Zm9ybToge30KICByZXBsaWNhczogMwpjb250cm9sUGxhbmU6CiAgYXJjaGl0ZWN0dXJlOiBhbWQ2NAogIGh5cGVydGhyZWFkaW5nOiBFbmFibGVkCiAgbmFtZTogbWFzdGVyCiAgcGxhdGZvcm06IHt9CiAgcmVwbGljYXM6IDMKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBuYW1lOiBlZGYtZGVtbwpuZXR3b3JraW5nOgogIGNsdXN0ZXJOZXR3b3JrOgogIC0gY2lkcjogMTAuMTI4LjAuMC8xNAogICAgaG9zdFByZWZpeDogMjMKICBtYWNoaW5lTmV0d29yazoKICAtIGNpZHI6IDEwLjAuMC4wLzE2CiAgbmV0d29ya1R5cGU6IE9WTkt1YmVybmV0ZXMKICBzZXJ2aWNlTmV0d29yazoKICAtIDE3Mi4zMC4wLjAvMTYKcGxhdGZvcm06CiAgYXdzOgogICAgcmVnaW9uOiB1cy1lYXN0LTIKcHVibGlzaDogRXh0ZXJuYWwKcHVsbFNlY3JldDogJ3siYXV0aHMiOnsiY2xvdWQub3BlbnNoaWZ0LmNvbSI6eyJhdXRoIjoiYjNCbGJuTm9hV1owTFhKbGJHVmhjMlV0WkdWMksyOWpiVjloWTJObGMzTmZaVEF3TWpGbFpqWmlPR1l5TkdNNU9XSTJPVEUyTkRsak9XRXdaamc0TURnNlUwRlRVRXhSTUROTFVFaFJXVVE1U1RaVU0wYzBWRlZYU3pFeFUwODROVmhVV0RJMldUbFJUMXBXUWtReFEwSktXVU01VURCU1drNVFPRkZMV2xNelVRPT0iLCJlbWFpbCI6ImZldmVuQHJlZGhhdC5jb20ifSwicmVnaXN0cnkuaGNwLm51bXNwb3QuY2xvdWQ6ODQ0MyI6CiAgeyJhdXRoIjogImNYVmhlVHBaYTFGT01uYzNLbVp3T1dveUsyRTUiLCJlbWFpbCI6ICJkbWFydGluaUByZWRoYXQuY29tIn0sInF1YXkuaW8iOnsiYXV0aCI6ImIzQmxibk5vYVdaMExYSmxiR1ZoYzJVdFpHVjJLMjlqYlY5aFkyTmxjM05mWlRBd01qRmxaalppT0dZeU5HTTVPV0kyT1RFMk5EbGpPV0V3WmpnNE1EZzZVMEZUVUV4Uk1ETkxVRWhSV1VRNVNUWlVNMGMwVkZWWFN6RXhVMDg0TlZoVVdESTJXVGxSVDFwV1FrUXhRMEpLV1VNNVVEQlNXazVRT0ZGTFdsTXpVUT09IiwiZW1haWwiOiJmZXZlbkByZWRoYXQuY29tIn0sInJlZ2lzdHJ5LmNvbm5lY3QucmVkaGF0LmNvbSI6eyJhdXRoIjoiZkhWb1l5MXdiMjlzTFdRMFltWmtNakJpTFRSaVlqRXROR0kwT1MwNU0yWmtMVGhpTW1KaE4yWTRaVEU1TmpwbGVVcG9Za2RqYVU5cFNsTlZlbFY0VFdsS09TNWxlVXA2WkZkSmFVOXBTbXhOUjFwc1dWZFdhRTFxV1RGUFJHc3dUVWRXYlU5WFZYZE9SR2Q1VG5wQmVVMHlTbXROVkVFMVRWTktPUzVWUWxsUkxWbEZaVVUyUkhwdExWZDBaRGxXUnpkck1rWlZaamRUY1ZSc1YzTmtiV1ZPZFRaeVJWUXRRamRCUVY5UFVIZHROMUJuWm0xc01rUkthR0kzYkZsWlRYaE9iR1o1WjB0aWVtbHlNbmhSYXpFd2NqQTRTVXh6VURkdldYVk5RbUZ2ZVZJeVpXeE5SRko1VnpaV2NHNVVlRkZzVEUxNk5DMTVkbVpQTlhNMWExSkZja0UyVG5kZlNuWmtSUzFHWjIxVVVXMDBlVEJpTTBoQ09WRkpXWEpFUkdoT1dWVkNkVmh3YVZFNU1uUjZMV3hNTVRNMlZHOXNkelZRWm1jNGRHTkNTek5mUW5KcmQzVk5SbW96V25Nd1gwWnNYMk4xYW0xU1UwVXpZM2MxZW5vMVEzRlNUa2xKVlZnM2NWbHRhMDg0TkhKRmJEaE5iSFpyV1hSM1oxcHVXR3N4V0dsalptOXVVM2RwT1hoRVUxWkxjbVIyUTJsd1gzcFpOVkJRZUZBNVdHdzBSVVZKWld0VlJqQTRkVTE1TlZGZmFtdFBZbnBrU0hoNVpWRkZlazExY2xaek9VbE1NVmRsVm5sT1ptVmhUWFJST1d0clZtcDNVekpLVDJabE9GOTZNa2xWZGpVMmQxUTBlVmxUYkRWYWNVeE1hbWRsYmxaRE1FMHRTVWRoVGpFMFdGSk5TMGxLYnpOTVZWRkJibnBRTVdvd1IxaFJZVzV3YzBkTmNpMUhTVk5WWTNKdmFIWk9XV3RvVURkWVpqVjRYMmxEY0hOc01sUmhSVkl3V1hkSFdIZFNSRVp5YjNwM05XUTVlRVYwUlU5NlpYTlhiRVl0UlVWNlRtSk5aMDVIVVZSeE9VNWxkWGcyUXpKd2JHbE1VazFRVFdKdFZuSk5iRzB4VW1Nd1JsZDJTVTFMVWxNNVFVb3dWRlZzWVhaTGVtaFpTMHAwTVZNM09IQnJaRXRrUVZkUlMybzRSekJhZFZkMmRYZHVMV1U0UTBGZmNFaHhVRzVqTUMxaWNWYzNUMlYyV1ZkTk1EVlJlVVZuVFZGYVFYRklWR052VTFwNmNIa3lZMVJxUmxkUWJHRnVNRWt5Yms1TmFISXpVVWxHWmtKNlQwbENRMXBJY25CMGVsRTVaa3hQY0ZWTlYwbFdPV2hDZEhkbVEwSmZhbXQyTFZwaVdtRlJUVEV6TlZSR1REVjRidz09IiwiZW1haWwiOiJmZXZlbkByZWRoYXQuY29tIn0sInJlZ2lzdHJ5LnJlZGhhdC5pbyI6eyJhdXRoIjoiZkhWb1l5MXdiMjlzTFdRMFltWmtNakJpTFRSaVlqRXROR0kwT1MwNU0yWmtMVGhpTW1KaE4yWTRaVEU1TmpwbGVVcG9Za2RqYVU5cFNsTlZlbFY0VFdsS09TNWxlVXA2WkZkSmFVOXBTbXhOUjFwc1dWZFdhRTFxV1RGUFJHc3dUVWRXYlU5WFZYZE9SR2Q1VG5wQmVVMHlTbXROVkVFMVRWTktPUzVWUWxsUkxWbEZaVVUyUkhwdExWZDBaRGxXUnpkck1rWlZaamRUY1ZSc1YzTmtiV1ZPZFRaeVJWUXRRamRCUVY5UFVIZHROMUJuWm0xc01rUkthR0kzYkZsWlRYaE9iR1o1WjB0aWVtbHlNbmhSYXpFd2NqQTRTVXh6VURkdldYVk5RbUZ2ZVZJeVpXeE5SRko1VnpaV2NHNVVlRkZzVEUxNk5DMTVkbVpQTlhNMWExSkZja0UyVG5kZlNuWmtSUzFHWjIxVVVXMDBlVEJpTTBoQ09WRkpXWEpFUkdoT1dWVkNkVmh3YVZFNU1uUjZMV3hNTVRNMlZHOXNkelZRWm1jNGRHTkNTek5mUW5KcmQzVk5SbW96V25Nd1gwWnNYMk4xYW0xU1UwVXpZM2MxZW5vMVEzRlNUa2xKVlZnM2NWbHRhMDg0TkhKRmJEaE5iSFpyV1hSM1oxcHVXR3N4V0dsalptOXVVM2RwT1hoRVUxWkxjbVIyUTJsd1gzcFpOVkJRZUZBNVdHdzBSVVZKWld0VlJqQTRkVTE1TlZGZmFtdFBZbnBrU0hoNVpWRkZlazExY2xaek9VbE1NVmRsVm5sT1ptVmhUWFJST1d0clZtcDNVekpLVDJabE9GOTZNa2xWZGpVMmQxUTBlVmxUYkRWYWNVeE1hbWRsYmxaRE1FMHRTVWRoVGpFMFdGSk5TMGxLYnpOTVZWRkJibnBRTVdvd1IxaFJZVzV3YzBkTmNpMUhTVk5WWTNKdmFIWk9XV3RvVURkWVpqVjRYMmxEY0hOc01sUmhSVkl3V1hkSFdIZFNSRVp5YjNwM05XUTVlRVYwUlU5NlpYTlhiRVl0UlVWNlRtSk5aMDVIVVZSeE9VNWxkWGcyUXpKd2JHbE1VazFRVFdKdFZuSk5iRzB4VW1Nd1JsZDJTVTFMVWxNNVFVb3dWRlZzWVhaTGVtaFpTMHAwTVZNM09IQnJaRXRrUVZkUlMybzRSekJhZFZkMmRYZHVMV1U0UTBGZmNFaHhVRzVqTUMxaWNWYzNUMlYyV1ZkTk1EVlJlVVZuVFZGYVFYRklWR052VTFwNmNIa3lZMVJxUmxkUWJHRnVNRWt5Yms1TmFISXpVVWxHWmtKNlQwbENRMXBJY25CMGVsRTVaa3hQY0ZWTlYwbFdPV2hDZEhkbVEwSmZhbXQyTFZwaVdtRlJUVEV6TlZSR1REVjRidz09IiwiZW1haWwiOiJmZXZlbkByZWRoYXQuY29tIn19fScKc3NoS2V5OiB8CiAgc3NoLXJzYSBBQUFBQjNOemFDMXljMkVBQUFBREFRQUJBQUFCZ1FDVE1sMUxEcVZDYW8yR3d2bnZWcDF2a0MwcXVzbjF3SmdzUEhUdE81cFQzYWU5QjZKb0V1R1AwOWlzdkJZbHV5SlRDLy9DWlZRMGFIanQzdGVWM0JFRkdkWlRZTWl0MjJUS0d6WHBmcWF1ckd5eE15VlV0cXA0ZUZRZEROQXpiUnZsSGdlUjN1RjQyTk56N3hUOXRtOVZqenpVSktwZi9PUjVkL1V0ZzZSd25GRFQvUEpMZmErbm0xZDdRSGNFUGlKZUg2MUg2RS9vZEtPUU9GKzRHWmlVVlVRSER0T1FFVWNWdVZFQ3hnYTJKTnh6UXMwelJBR1JNVHpRQXI0eE1lRDZjNnJEckVPRDdFT0trblBOUVA5ZGdvQ2FWajVkdi95bWorc1oyYzR4WjQ4RWh6ZlFwODlDM1AwQnVuY3kwQzR2K0hEYk9lZEJEcS9CU21adVJISm83WW1ZRzQ2SUovSHltSEczS1drZ3lxd2Q3Y2dEOTVFLzJrMVNiL2ZTcWdtZ2lsNmthMzR2MkI4MzNwMVBaRjAvOEU4WFprREJYaitGTmVuQmN0NEx5ZmREcXRnM0p4eFdxWUJMcTFGMTJ4MTJpVFFCU1J0SUdxYXlQTlVCTXZCVHIvN1d1b0kzSDV2dmRxazU4ejhyMmozRE9iaXB2cmt4NXJOcjc3QStVNGM9IGZldmVuQGxvY2FsaG9zdC5sb2NhbGRvbWFpbgo="
        },
        "aws": {
            "region": "us-east-2"
        }
    },
    "*installconfig.PlatformCredsCheck": {},
    "*installconfig.PlatformPermsCheck": {},
    "*installconfig.PlatformProvisionCheck": {},
    "*installconfig.baseDomain": {
        "BaseDomain": "sandbox1880.opentlc.com"
    },
    "*installconfig.clusterName": {
        "ClusterName": "edf-demo"
    },
    "*installconfig.networking": {},
    "*installconfig.platform": {
        "aws": {
            "region": "us-east-2"
        }
    },
    "*installconfig.pullSecret": {
        "PullSecret": "{\"auths\":{\"cloud.openshift.com\":{\"auth\":\"b3BlbnNoaWZ0LXJlbGVhc2UtZGV2K29jbV9hY2Nlc3NfZTAwMjFlZjZiOGYyNGM5OWI2OTE2NDljOWEwZjg4MDg6U0FTUExRMDNLUEhRWUQ5STZUM0c0VFVXSzExU084NVhUWDI2WTlRT1pWQkQxQ0JKWUM5UDBSWk5QOFFLWlMzUQ==\",\"email\":\"feven@redhat.com\"},\"registry.hcp.numspot.cloud:8443\": {\"auth\": \"cXVheTpZa1FOMnc3KmZwOWoyK2E5\",\"email\": \"dmartini@redhat.com\"},\"quay.io\":{\"auth\":\"b3BlbnNoaWZ0LXJlbGVhc2UtZGV2K29jbV9hY2Nlc3NfZTAwMjFlZjZiOGYyNGM5OWI2OTE2NDljOWEwZjg4MDg6U0FTUExRMDNLUEhRWUQ5STZUM0c0VFVXSzExU084NVhUWDI2WTlRT1pWQkQxQ0JKWUM5UDBSWk5QOFFLWlMzUQ==\",\"email\":\"feven@redhat.com\"},\"registry.connect.redhat.com\":{\"auth\":\"fHVoYy1wb29sLWQ0YmZkMjBiLTRiYjEtNGI0OS05M2ZkLThiMmJhN2Y4ZTE5NjpleUpoYkdjaU9pSlNVelV4TWlKOS5leUp6ZFdJaU9pSmxNR1psWVdWaE1qWTFPRGswTUdWbU9XVXdORGd5TnpBeU0ySmtNVEE1TVNKOS5VQllRLVlFZUU2RHptLVd0ZDlWRzdrMkZVZjdTcVRsV3NkbWVOdTZyRVQtQjdBQV9PUHdtN1BnZm1sMkRKaGI3bFlZTXhObGZ5Z0tiemlyMnhRazEwcjA4SUxzUDdvWXVNQmFveVIyZWxNRFJ5VzZWcG5UeFFsTE16NC15dmZPNXM1a1JFckE2TndfSnZkRS1GZ21UUW00eTBiM0hCOVFJWXJERGhOWVVCdVhwaVE5MnR6LWxMMTM2VG9sdzVQZmc4dGNCSzNfQnJrd3VNRmozWnMwX0ZsX2N1am1SU0UzY3c1eno1Q3FSTklJVVg3cVlta084NHJFbDhNbHZrWXR3Z1puWGsxWGljZm9uU3dpOXhEU1ZLcmR2Q2lwX3pZNVBQeFA5WGw0RUVJZWtVRjA4dU15NVFfamtPYnpkSHh5ZVFFek11clZzOUlMMVdlVnlOZmVhTXRROWtrVmp3UzJKT2ZlOF96MklVdjU2d1Q0eVlTbDVacUxMamdlblZDME0tSUdhTjE0WFJNS0lKbzNMVVFBbnpQMWowR1hRYW5wc0dNci1HSVNVY3JvaHZOWWtoUDdYZjV4X2lDcHNsMlRhRVIwWXdHWHdSREZyb3p3NWQ5eEV0RU96ZXNXbEYtRUV6TmJNZ05HUVRxOU5ldXg2QzJwbGlMUk1QTWJtVnJNbG0xUmMwRld2SU1LUlM5QUowVFVsYXZLemhZS0p0MVM3OHBrZEtkQVdRS2o4RzBadVd2dXduLWU4Q0FfcEhxUG5jMC1icVc3T2V2WVdNMDVReUVnTVFaQXFIVGNvU1p6cHkyY1RqRldQbGFuMEkybk5NaHIzUUlGZkJ6T0lCQ1pIcnB0elE5ZkxPcFVNV0lWOWhCdHdmQ0Jfamt2LVpiWmFRTTEzNVRGTDV4bw==\",\"email\":\"feven@redhat.com\"},\"registry.redhat.io\":{\"auth\":\"fHVoYy1wb29sLWQ0YmZkMjBiLTRiYjEtNGI0OS05M2ZkLThiMmJhN2Y4ZTE5NjpleUpoYkdjaU9pSlNVelV4TWlKOS5leUp6ZFdJaU9pSmxNR1psWVdWaE1qWTFPRGswTUdWbU9XVXdORGd5TnpBeU0ySmtNVEE1TVNKOS5VQllRLVlFZUU2RHptLVd0ZDlWRzdrMkZVZjdTcVRsV3NkbWVOdTZyRVQtQjdBQV9PUHdtN1BnZm1sMkRKaGI3bFlZTXhObGZ5Z0tiemlyMnhRazEwcjA4SUxzUDdvWXVNQmFveVIyZWxNRFJ5VzZWcG5UeFFsTE16NC15dmZPNXM1a1JFckE2TndfSnZkRS1GZ21UUW00eTBiM0hCOVFJWXJERGhOWVVCdVhwaVE5MnR6LWxMMTM2VG9sdzVQZmc4dGNCSzNfQnJrd3VNRmozWnMwX0ZsX2N1am1SU0UzY3c1eno1Q3FSTklJVVg3cVlta084NHJFbDhNbHZrWXR3Z1puWGsxWGljZm9uU3dpOXhEU1ZLcmR2Q2lwX3pZNVBQeFA5WGw0RUVJZWtVRjA4dU15NVFfamtPYnpkSHh5ZVFFek11clZzOUlMMVdlVnlOZmVhTXRROWtrVmp3UzJKT2ZlOF96MklVdjU2d1Q0eVlTbDVacUxMamdlblZDME0tSUdhTjE0WFJNS0lKbzNMVVFBbnpQMWowR1hRYW5wc0dNci1HSVNVY3JvaHZOWWtoUDdYZjV4X2lDcHNsMlRhRVIwWXdHWHdSREZyb3p3NWQ5eEV0RU96ZXNXbEYtRUV6TmJNZ05HUVRxOU5ldXg2QzJwbGlMUk1QTWJtVnJNbG0xUmMwRld2SU1LUlM5QUowVFVsYXZLemhZS0p0MVM3OHBrZEtkQVdRS2o4RzBadVd2dXduLWU4Q0FfcEhxUG5jMC1icVc3T2V2WVdNMDVReUVnTVFaQXFIVGNvU1p6cHkyY1RqRldQbGFuMEkybk5NaHIzUUlGZkJ6T0lCQ1pIcnB0elE5ZkxPcFVNV0lWOWhCdHdmQ0Jfamt2LVpiWmFRTTEzNVRGTDV4bw==\",\"email\":\"feven@redhat.com\"}}}"
    },
    "*installconfig.sshPublicKey": {
        "Key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCTMl1LDqVCao2GwvnvVp1vkC0qusn1wJgsPHTtO5pT3ae9B6JoEuGP09isvBYluyJTC//CZVQ0aHjt3teV3BEFGdZTYMit22TKGzXpfqaurGyxMyVUtqp4eFQdDNAzbRvlHgeR3uF42NNz7xT9tm9VjzzUJKpf/OR5d/Utg6RwnFDT/PJLfa+nm1d7QHcEPiJeH61H6E/odKOQOF+4GZiUVUQHDtOQEUcVuVECxga2JNxzQs0zRAGRMTzQAr4xMeD6c6rDrEOD7EOKknPNQP9dgoCaVj5dv/ymj+sZ2c4xZ48EhzfQp89C3P0Buncy0C4v+HDbOedBDq/BSmZuRHJo7YmYG46IJ/HymHG3KWkgyqwd7cgD95E/2k1Sb/fSqgmgil6ka34v2B833p1PZF0/8E8XZkDBXj+FNenBct4LyfdDqtg3JxxWqYBLq1F12x12iTQBSRtIGqayPNUBMvBTr/7WuoI3H5vvdqk58z8r2j3DObipvrkx5rNr77A+U4c= feven@localhost.localdomain\n"
    },
    "*kubeconfig.AdminClient": {
        "Config": {
            "preferences": {},
            "clusters": [
                {
                    "name": "edf-demo",
                    "cluster": {
                        "server": "https://api.edf-demo.sandbox1880.opentlc.com:6443",
                        "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJUlVZVGpXSEFkL1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURreU5USXhNelF6TmxvWERUTXpNRGt5TWpJeE16UXpObG93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZmdWZTYU5EVWIyQgpsSHpxTkxiQXUrTHc4VjNCYkdObTdOSTdWR3M0TTBTajFhUjUwR2JYalFuajBqV2diamV0Q0ZjRUM1VTRNeUU3ClVJVTZTb1RHVm1UZlhpY2NoZjFCM3BWQXF5QXg3YzlGb083TXNYNWpHMFRxUGhZUi93TWFEM0VUNjZJVld0aWcKa2FqNGdIcGVNb0o0WkhMbVZCcFdJNklvb014NVgyYlFrTzBMZXZHd0tQU1doK0FYTVhlU2h2ZUlUY3VUaWg2bgp3WXd3eTUzYW52clRCWjdxMkNablpwQ0NKZjZ2YzVZUWR2UXRCMkNGVjJPcDU0ZFdJc3NYdVA2ZFpQY0dHckNkCnFaUHo4ZU12M01BR0kvQU9DL1dDWklmbHR4WkZGem5nSmR0UmZ0RnZPZ1A5RWNGa014ZnA5ZG1ZZEk0bTRIUXoKcXlqd1IrQ01md0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVd0docUpnZ2NJbVNWZUk0a0FCdnZ6SVcvUXFFd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBS2dFYzk0TVl4TTRXazF1WFlENXhGL0xiS255eTBwWUk1UlBVWm95bk1Lcjl3MHVmYXhIL2dMaGFjdmkKck1NdTV3bXVOcnJDdGdBbUwyOTZhZVFLZ1NTUTRrQlZZOGJJL0dpaXdRQU9Gb3JEcWxTeUZMVXJ1aWhHcm5JdgpoOXozeWpCVEVOWk1LcWNYVGdvWE5TL2xUZzE1NWJTZm43TG92c0FENDN5bk1xUFBMeEwySDNkZVc0bkpjM0YyClArWEhjRzI1MzJzSlBKRW9lUW5hTE1BRlB5WWFNeEFxdk9Rb0cyVW0rcjVoTVJGYXRKcjYzOXpFM04vUjRScm4KdWRDbGl4NWtKYUdSak1rdUFnVGEwRnB0UHV6aUpIQW4rNWlSRHN5SnN5QXFLcmNjQ0lueklZSkVMOG5PY0hIWgpNa2ZVUzYvbVRsMUFVM01MQ2RxWTBBYmJXcHc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJTkxWVFBEbERCQXN3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRGt5TlRJeE16UXpObG9YRFRNek1Ea3lNakl4TXpRek5sb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBcUFzaEF2bmcwN1ptRnlLaGZ5cS9GWHJrTzM4dVF6a04zQlNoWnBEa2NTVzlIOGxxemh4cjcvWXZkR3FnCisrckdQQ2Zra1dQTTZLNC9SZXVDZDhadEJUR3J0cGVEbXVPSHNpd0lPK0ZTN29ibFAwZWJMNFVmNkVqd2VwcWkKaCtOOE03UkRZaWVRMWhDcGt5K1NRUk9TbkFhVnZ1Y2xaZW4ram5VK2lMUzBGOXl3UUtoblRXci9QOEFwTnZTaApxNGo5NEpZYmpadUdrdG82K0wzclVzcHBMdi9TWFNQK1ZpdlFBRmYvRFZnV0Zad0p4OGY1SlF4bEttYnBpbjlXCmtpTnFZMHYvaFAyNHpIKzdWOTM5SmZMRXdNZVB3TWRrYXFsZGp2YkdUQlNwN0lKczNML2hzVVkyTkNUNHJVSnUKRUpnekF4dW01N0ZXeGYydnBQcFVBVmdBWlFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVVlJd25XUzJTc2FrWlk0R2E1UXNFZlFWQ2FWVXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUppb0d5dVB2bzlnTVUxenlVQm41bXpGaVUzVytPQ2RHeGJ3M1JjenFMckYKN0FKd2V3Q01PdHl1UDlkWDNlMEtuUkxIRXhra0F4ZzQwRGxmcTRkWWJZZGhaSFVRbm10dGsrRnhLTHMzU3VuWgovd2xUZGR3Y1BpUXl3WlJ0VUhCdGxGaUtkYzEydUtvd3hJemd5eWpZTGxTYktyNHpxanpnMkxoL0xicXRpWnVyCjdwNFlGL29aaWdFRllGQzBRTTVpZHl3SS91OEJ1Y1ZJdmRVeFNycTJJZnVDeDJkU0ZZUW0vZlVoVmlpWFBoTkMKdjduY2JPTGQ3OWtqMHVXeThJV1RRRWNKSVN3UW13V2xyZU1hcVovcGRrY1VVaEpYS29KaUdManV6aUFDZXJZRgowSXRJWmh2c3FXbk4vci9OSUZ3amttWlFDN3ZQcjZqV00rZTJiTzJib0hJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETWpDQ0FocWdBd0lCQWdJSU1RdlRMWU5sZWJBd0RRWUpLb1pJaHZjTkFRRUxCUUF3TnpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU0V3SHdZRFZRUURFeGhyZFdKbExXRndhWE5sY25abGNpMXNZaTF6YVdkdVpYSXcKSGhjTk1qTXdPVEkxTWpFek5ETTJXaGNOTXpNd09USXlNakV6TkRNMldqQTNNUkl3RUFZRFZRUUxFd2x2Y0dWdQpjMmhwWm5ReElUQWZCZ05WQkFNVEdHdDFZbVV0WVhCcGMyVnlkbVZ5TFd4aUxYTnBaMjVsY2pDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUthQXVOemFZOFZjYTJDSG5NOG52aHcvRXpRZG1xUngKSzNYaSt6TFJiSmVLMWZKNDVxbDl2VXlQYzNDL045V1RmNE1IaVhmMldZWkxDb2ZhVGtKZWJLNUlhazdqQW9yLwpaamI5RzZ2Q3lTbWw5MzJtVjliZ0FOVElXN2M1TkdidEN3Sys2WHlsUHZ5T3ZqbjNEVFhlc08xdkE0VS9reldPCmg3N05KdVNkckZtZU5PZ1JzZllXSnhDMEcvbHprK0M3OGZhQmsySDA3d3BqOFlmU0Z0ZGdUR1ZNNFRVSGxNMWsKV0JCU2g3VWNuL0w5Q2ZhMU55QTNiV1o2Rk05eWFPaWtnZnVhNTJRSUo2cSs2dEVZMVVuc1p3WVJqREp0QVpaRgpQSTZ0OFcrQnZWY2NxWU8rNmRjeWVjempiWWt0aXBHcEQxRWZTZ0dHOHNWMlc0N1FaQ1JPQnhrQ0F3RUFBYU5DCk1FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZOWUwKaXRVZlZnYnpFcUpRQmU1OU1LZmhtbFFPTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCQVpndWptWURNVm1OSQoyT242RjR6elVDNzhtZTRaQkNycnd5Ull2RkZPSk83ZXc2MDRQUENZUi8zT0pZWmR3ayt2NWxKM09BSDlqNGtqCldueUxjaVZHamhvMDYzcmNtWFdvSVNSSHptWnlXSmllc21hZ0dXN2NFOWRhZTZwR2pkdDdBQU1mQWFTRWxrdUYKSEdWcEFKVnhxOW8rZnBPZndFajNqUUlMWHMvTVhNUFNxTCt2cW5yN0pGSlBhQjNabUhMWjFwWFBoUDRpMnNlbApEUkY2VVBMRnFZOFpJaGZVcVFwK2tsK3BxM3RMRDZENUtuZE8wUmNxKzNoUXhhUHpNKzl5MElCOWlmSlB6a1NxClQ3Tll4Ky9WaUVETURHZG44ckZibFV0TnRnTmtXby9jTjV2dU1URHQ1cUVrS2dOOXJyUVhjT1BsTXFzdjhzRUUKWXlCaldzUkgKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
                    }
                }
            ],
            "users": [
                {
                    "name": "admin",
                    "user": {
                        "client-certificate-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaekNDQWsrZ0F3SUJBZ0lJSTJzV3F5OVJCSTR3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB5TXpBNU1qVXlNVE0wTXpWYUZ3MHpNekE1TWpJeU1UTTBNelphTURBeEZ6QVZCZ05WQkFvVERuTjVjM1JsCmJUcHRZWE4wWlhKek1SVXdFd1lEVlFRREV3eHplWE4wWlcwNllXUnRhVzR3Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURjbmZvTDY2eHlBeFRxeWswN09YUXVIeHd4Z0loOEE4NmtMVUs4MjJxbAo3dnhBKzdQQTVyUTJqMWJscjJ6Y0QvSWU2SWZyeUtQbytrN2FuU2VnR1Z1VnZLU2dVRzh4THY4YlRobTAyc0o1CmhQdEFZRjUvVXN4UE1mVU9PcTdncndrSXI5UUt0bkNlZ1dMeTNqQWRWOFRsQmJ6U3NPK3M2VWk5NDh4U1haczAKWFd2N1g3R2VnckMxdGZad1JVaWZZdlhuT3orWDA1YlZpcGQva2h1ZStHdnN0V0xiRmhNdTFvVFFkZnhMVVI5bwowK0FwMkdVTXZCKzRoRHpnWW1pNG0yRkFrTG9yUUx5YmhsLzd1czU4TmRKL2dxS2V4REQ4Q2laamhic0FqTGwzCk0vV1BTeFROQVBYdlVuclJkanBJZXYvT3dFZHlsRmRsbm0wM3BnNmdPWjc3QWdNQkFBR2pmekI5TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVnSVN5TDUyN25EWGdQNVdBS1VxSVhIVUJEQjB3SHdZRFZSMGpCQmd3CkZvQVU4NTUzRjF5VXNSRGs4Ti8zcHdPYmhwNjBPZHN3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUlYOUFZZFgKNmdKWnBZdkZ6M2dCaDJlRGFrNnN1OVVGZnQ0ZTdyY2FzUHJ6TWtPaXlRdHc5a0pjeU1uZlIzUkxDazRKZzczeQo0eHowSmNwVU5iTzB1UFZrUUM1TldrMTVSWXJGbTBhdEQ4azNzck1tQkVycFhDM1EzUVBrcDllUm0xZGg5OFdWClNDVDdlY0pMMFhIRjRZZkkyMEVxeEpralB2VElaRFBIblYwMkVhbyt0cmZUTDJIWUFRSGZRZUwwbnJ4MG9WMzIKbVJTQ3MyQWFodFdUMUxPUWRnenFQYmNBZXZtUlJSa1FwSitqRG50Y1B0V1R6LzBobWZOT3FaYWFpTGpMN3BQNQo1SGltYzMrcE1qWUpMekdwbWQzMXBZWWkwSUF4WlJKWC91dHBQZHZnVE5KVExrU0plbTlBYkVuUGRXTDlxbjJMClZ0aWZkUUVFRWFIS1Rodz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                        "client-key-data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBM0ozNkMrdXNjZ01VNnNwTk96bDBMaDhjTVlDSWZBUE9wQzFDdk50cXBlNzhRUHV6CndPYTBObzlXNWE5czNBL3lIdWlINjhpajZQcE8ycDBub0JsYmxieWtvRkJ2TVM3L0cwNFp0TnJDZVlUN1FHQmUKZjFMTVR6SDFEanF1NEs4SkNLL1VDclp3bm9GaTh0NHdIVmZFNVFXODByRHZyT2xJdmVQTVVsMmJORjFyKzEreApub0t3dGJYMmNFVkluMkwxNXpzL2w5T1cxWXFYZjVJYm52aHI3TFZpMnhZVEx0YUUwSFg4UzFFZmFOUGdLZGhsCkRMd2Z1SVE4NEdKb3VKdGhRSkM2SzBDOG00WmYrN3JPZkRYU2Y0S2luc1F3L0FvbVk0VzdBSXk1ZHpQMWowc1UKelFEMTcxSjYwWFk2U0hyL3pzQkhjcFJYWlo1dE42WU9vRG1lK3dJREFRQUJBb0lCQUZuc2hwUS9UcjMySlp1QwpOREswdTNkbE5OKzBqVzFITy81TmVJdDBRQ2M4bjFONWhRNVd1eFFXSHd4bUVkQXRLN3FQZTMrTys4aWw1bWhUCmNHaGdqYVVlREZoUUVOS1NYbWRwMFM2WGtIZHB6ZU95cERIdnRObCsrbXovWEhLMnhjN2xwRjl0ZDhBVDZ4b2wKbUtVTk5uTkhnR3k4dENUZHZjbXd4WUs1SnQ4VGh4RFo0cGZLYzhWMGV2YmNGRWhPbjdQTXJ6NDFtcm1ZNFJtZwpXRlg2djkxNGxTUlNuMTg5ZFE1eXNkbFdWRkkyTTNIdEU5T21LZmJMeGx1MnU0VUl2eHNoblVSS0VoVVM1NngyCnZLY29YeHhPa1MzeFRGNTlJOHYrSWp1M29NQ0J4L3hzWHA0R3pzOEUxTVNTWEFEenVhY3dlbFgySG5FUHpsUW0KeHVsUkFhRUNnWUVBM2JVTGpkSEhmUjhIOElVS3k3NnNOUEdlNExNUGF2d1JJanh0M1M3NG1tUnJxa0VkajN6VwpFTWE0SWFucFo2ejlUVGwydjFwMkRZQ1MwMEpVdkJOdEo3Z09tRExIa21UcFg1N0pJYzgvaTZ0V2NBNEpka2hsClFCZGVyWTAvMVFyakhZcGkzR2JVL3FsOWVEanVGZTBBOUk1d0hxLys2YTQ1MUV0VzQvci9QVXNDZ1lFQS9yM0UKTkFsNnk4aGJnYWZpeDVYNzIvT2ZsS2cvdUc5d1FGa0drdjl6blphb29QTmQwcXhLcnR5TytxRUZKWXRObDhjQgpUdWNSaDRUajVnaUllNWNlaHA5MEc4THljcjBkbnprREd3SitRSkx1cXZKTmNCUUhVVjczSDhHS1IxbkpQQlluCld1TEN3dkNWQVVkdnNIdHBPcHpxYjcvVU5JcFcyZUVpVU45Y2h4RUNnWUJBSWpVYmEwbTN5aGd6M1dpSUU3b2cKL3B3bEIrYzMzWDdmVm5lNWVmTDBSb1JXbGN1RlRHbG9KUFB5MlFIcHVjTDBhZUVON1k4a3pNS3NWZzNJOGgycgpWYlR6RmcxaExjdk1tMVEzY1lwQ1R1Z01OaU5La2hxbjlacXZ2YUp2Y0Z6T21NK01UanJqQ0FpQmxJWmExVnBuClpDVE8yNzV6dnJCLzF1Tmx3NSsrRFFLQmdRQ2N2UjV2OWpVOEZiZFgrM2lwM1RydWh1UDFqK0JGRnl3Mks1REQKK2JHbGtRR0lwclZmM3VyRTFLaVV4V1pwUjJFaXRpdXo1TEVBZFYvVU5nUGtKNE44eWJlakxUd0lKUnlJejRkOQpvdmNUdkZSbGtsamJVVGQvZGJNUU13Rm1EWFNvSitsbkhvYy9jcy83elh5SFZpZlZESitpeXFGREFxdVZ1OVJsCmRrbDBRUUtCZ0ZJTndZZUJnR01aNFNvNzNpOEovVzJrMlZIUjc5Q1J6S0hhMmVaMU9PZlRJQUU3TDBSVHJlbWwKM0VHbmFwUmdGU2V5aXNnVU5LeE9Uakg1MUI3N2UrVWx3KzVBR2lqV3M3cUlTYktwb2kyU3paZHN2dG5temx1YwpMNUFtNW5FTGVGRVBwMUNvUUlVM215VlBnZC9zckhZTUhvUW40UjNJZlI4YmZjc2ZLbTZuCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
                    }
                }
            ],
            "contexts": [
                {
                    "name": "admin",
                    "context": {
                        "cluster": "edf-demo",
                        "user": "admin"
                    }
                }
            ],
            "current-context": "admin"
        },
        "File": {
            "Filename": "auth/kubeconfig",
            "Data": ""
        }
    },
    "*kubeconfig.AdminInternalClient": {
        "Config": {
            "preferences": {},
            "clusters": [
                {
                    "name": "edf-demo",
                    "cluster": {
                        "server": "https://api-int.edf-demo.sandbox1880.opentlc.com:6443",
                        "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJUlVZVGpXSEFkL1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURreU5USXhNelF6TmxvWERUTXpNRGt5TWpJeE16UXpObG93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZmdWZTYU5EVWIyQgpsSHpxTkxiQXUrTHc4VjNCYkdObTdOSTdWR3M0TTBTajFhUjUwR2JYalFuajBqV2diamV0Q0ZjRUM1VTRNeUU3ClVJVTZTb1RHVm1UZlhpY2NoZjFCM3BWQXF5QXg3YzlGb083TXNYNWpHMFRxUGhZUi93TWFEM0VUNjZJVld0aWcKa2FqNGdIcGVNb0o0WkhMbVZCcFdJNklvb014NVgyYlFrTzBMZXZHd0tQU1doK0FYTVhlU2h2ZUlUY3VUaWg2bgp3WXd3eTUzYW52clRCWjdxMkNablpwQ0NKZjZ2YzVZUWR2UXRCMkNGVjJPcDU0ZFdJc3NYdVA2ZFpQY0dHckNkCnFaUHo4ZU12M01BR0kvQU9DL1dDWklmbHR4WkZGem5nSmR0UmZ0RnZPZ1A5RWNGa014ZnA5ZG1ZZEk0bTRIUXoKcXlqd1IrQ01md0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVd0docUpnZ2NJbVNWZUk0a0FCdnZ6SVcvUXFFd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBS2dFYzk0TVl4TTRXazF1WFlENXhGL0xiS255eTBwWUk1UlBVWm95bk1Lcjl3MHVmYXhIL2dMaGFjdmkKck1NdTV3bXVOcnJDdGdBbUwyOTZhZVFLZ1NTUTRrQlZZOGJJL0dpaXdRQU9Gb3JEcWxTeUZMVXJ1aWhHcm5JdgpoOXozeWpCVEVOWk1LcWNYVGdvWE5TL2xUZzE1NWJTZm43TG92c0FENDN5bk1xUFBMeEwySDNkZVc0bkpjM0YyClArWEhjRzI1MzJzSlBKRW9lUW5hTE1BRlB5WWFNeEFxdk9Rb0cyVW0rcjVoTVJGYXRKcjYzOXpFM04vUjRScm4KdWRDbGl4NWtKYUdSak1rdUFnVGEwRnB0UHV6aUpIQW4rNWlSRHN5SnN5QXFLcmNjQ0lueklZSkVMOG5PY0hIWgpNa2ZVUzYvbVRsMUFVM01MQ2RxWTBBYmJXcHc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJTkxWVFBEbERCQXN3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRGt5TlRJeE16UXpObG9YRFRNek1Ea3lNakl4TXpRek5sb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBcUFzaEF2bmcwN1ptRnlLaGZ5cS9GWHJrTzM4dVF6a04zQlNoWnBEa2NTVzlIOGxxemh4cjcvWXZkR3FnCisrckdQQ2Zra1dQTTZLNC9SZXVDZDhadEJUR3J0cGVEbXVPSHNpd0lPK0ZTN29ibFAwZWJMNFVmNkVqd2VwcWkKaCtOOE03UkRZaWVRMWhDcGt5K1NRUk9TbkFhVnZ1Y2xaZW4ram5VK2lMUzBGOXl3UUtoblRXci9QOEFwTnZTaApxNGo5NEpZYmpadUdrdG82K0wzclVzcHBMdi9TWFNQK1ZpdlFBRmYvRFZnV0Zad0p4OGY1SlF4bEttYnBpbjlXCmtpTnFZMHYvaFAyNHpIKzdWOTM5SmZMRXdNZVB3TWRrYXFsZGp2YkdUQlNwN0lKczNML2hzVVkyTkNUNHJVSnUKRUpnekF4dW01N0ZXeGYydnBQcFVBVmdBWlFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVVlJd25XUzJTc2FrWlk0R2E1UXNFZlFWQ2FWVXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUppb0d5dVB2bzlnTVUxenlVQm41bXpGaVUzVytPQ2RHeGJ3M1JjenFMckYKN0FKd2V3Q01PdHl1UDlkWDNlMEtuUkxIRXhra0F4ZzQwRGxmcTRkWWJZZGhaSFVRbm10dGsrRnhLTHMzU3VuWgovd2xUZGR3Y1BpUXl3WlJ0VUhCdGxGaUtkYzEydUtvd3hJemd5eWpZTGxTYktyNHpxanpnMkxoL0xicXRpWnVyCjdwNFlGL29aaWdFRllGQzBRTTVpZHl3SS91OEJ1Y1ZJdmRVeFNycTJJZnVDeDJkU0ZZUW0vZlVoVmlpWFBoTkMKdjduY2JPTGQ3OWtqMHVXeThJV1RRRWNKSVN3UW13V2xyZU1hcVovcGRrY1VVaEpYS29KaUdManV6aUFDZXJZRgowSXRJWmh2c3FXbk4vci9OSUZ3amttWlFDN3ZQcjZqV00rZTJiTzJib0hJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETWpDQ0FocWdBd0lCQWdJSU1RdlRMWU5sZWJBd0RRWUpLb1pJaHZjTkFRRUxCUUF3TnpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU0V3SHdZRFZRUURFeGhyZFdKbExXRndhWE5sY25abGNpMXNZaTF6YVdkdVpYSXcKSGhjTk1qTXdPVEkxTWpFek5ETTJXaGNOTXpNd09USXlNakV6TkRNMldqQTNNUkl3RUFZRFZRUUxFd2x2Y0dWdQpjMmhwWm5ReElUQWZCZ05WQkFNVEdHdDFZbVV0WVhCcGMyVnlkbVZ5TFd4aUxYTnBaMjVsY2pDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUthQXVOemFZOFZjYTJDSG5NOG52aHcvRXpRZG1xUngKSzNYaSt6TFJiSmVLMWZKNDVxbDl2VXlQYzNDL045V1RmNE1IaVhmMldZWkxDb2ZhVGtKZWJLNUlhazdqQW9yLwpaamI5RzZ2Q3lTbWw5MzJtVjliZ0FOVElXN2M1TkdidEN3Sys2WHlsUHZ5T3ZqbjNEVFhlc08xdkE0VS9reldPCmg3N05KdVNkckZtZU5PZ1JzZllXSnhDMEcvbHprK0M3OGZhQmsySDA3d3BqOFlmU0Z0ZGdUR1ZNNFRVSGxNMWsKV0JCU2g3VWNuL0w5Q2ZhMU55QTNiV1o2Rk05eWFPaWtnZnVhNTJRSUo2cSs2dEVZMVVuc1p3WVJqREp0QVpaRgpQSTZ0OFcrQnZWY2NxWU8rNmRjeWVjempiWWt0aXBHcEQxRWZTZ0dHOHNWMlc0N1FaQ1JPQnhrQ0F3RUFBYU5DCk1FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZOWUwKaXRVZlZnYnpFcUpRQmU1OU1LZmhtbFFPTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCQVpndWptWURNVm1OSQoyT242RjR6elVDNzhtZTRaQkNycnd5Ull2RkZPSk83ZXc2MDRQUENZUi8zT0pZWmR3ayt2NWxKM09BSDlqNGtqCldueUxjaVZHamhvMDYzcmNtWFdvSVNSSHptWnlXSmllc21hZ0dXN2NFOWRhZTZwR2pkdDdBQU1mQWFTRWxrdUYKSEdWcEFKVnhxOW8rZnBPZndFajNqUUlMWHMvTVhNUFNxTCt2cW5yN0pGSlBhQjNabUhMWjFwWFBoUDRpMnNlbApEUkY2VVBMRnFZOFpJaGZVcVFwK2tsK3BxM3RMRDZENUtuZE8wUmNxKzNoUXhhUHpNKzl5MElCOWlmSlB6a1NxClQ3Tll4Ky9WaUVETURHZG44ckZibFV0TnRnTmtXby9jTjV2dU1URHQ1cUVrS2dOOXJyUVhjT1BsTXFzdjhzRUUKWXlCaldzUkgKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
                    }
                }
            ],
            "users": [
                {
                    "name": "admin",
                    "user": {
                        "client-certificate-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaekNDQWsrZ0F3SUJBZ0lJSTJzV3F5OVJCSTR3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB5TXpBNU1qVXlNVE0wTXpWYUZ3MHpNekE1TWpJeU1UTTBNelphTURBeEZ6QVZCZ05WQkFvVERuTjVjM1JsCmJUcHRZWE4wWlhKek1SVXdFd1lEVlFRREV3eHplWE4wWlcwNllXUnRhVzR3Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURjbmZvTDY2eHlBeFRxeWswN09YUXVIeHd4Z0loOEE4NmtMVUs4MjJxbAo3dnhBKzdQQTVyUTJqMWJscjJ6Y0QvSWU2SWZyeUtQbytrN2FuU2VnR1Z1VnZLU2dVRzh4THY4YlRobTAyc0o1CmhQdEFZRjUvVXN4UE1mVU9PcTdncndrSXI5UUt0bkNlZ1dMeTNqQWRWOFRsQmJ6U3NPK3M2VWk5NDh4U1haczAKWFd2N1g3R2VnckMxdGZad1JVaWZZdlhuT3orWDA1YlZpcGQva2h1ZStHdnN0V0xiRmhNdTFvVFFkZnhMVVI5bwowK0FwMkdVTXZCKzRoRHpnWW1pNG0yRkFrTG9yUUx5YmhsLzd1czU4TmRKL2dxS2V4REQ4Q2laamhic0FqTGwzCk0vV1BTeFROQVBYdlVuclJkanBJZXYvT3dFZHlsRmRsbm0wM3BnNmdPWjc3QWdNQkFBR2pmekI5TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVnSVN5TDUyN25EWGdQNVdBS1VxSVhIVUJEQjB3SHdZRFZSMGpCQmd3CkZvQVU4NTUzRjF5VXNSRGs4Ti8zcHdPYmhwNjBPZHN3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUlYOUFZZFgKNmdKWnBZdkZ6M2dCaDJlRGFrNnN1OVVGZnQ0ZTdyY2FzUHJ6TWtPaXlRdHc5a0pjeU1uZlIzUkxDazRKZzczeQo0eHowSmNwVU5iTzB1UFZrUUM1TldrMTVSWXJGbTBhdEQ4azNzck1tQkVycFhDM1EzUVBrcDllUm0xZGg5OFdWClNDVDdlY0pMMFhIRjRZZkkyMEVxeEpralB2VElaRFBIblYwMkVhbyt0cmZUTDJIWUFRSGZRZUwwbnJ4MG9WMzIKbVJTQ3MyQWFodFdUMUxPUWRnenFQYmNBZXZtUlJSa1FwSitqRG50Y1B0V1R6LzBobWZOT3FaYWFpTGpMN3BQNQo1SGltYzMrcE1qWUpMekdwbWQzMXBZWWkwSUF4WlJKWC91dHBQZHZnVE5KVExrU0plbTlBYkVuUGRXTDlxbjJMClZ0aWZkUUVFRWFIS1Rodz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                        "client-key-data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBM0ozNkMrdXNjZ01VNnNwTk96bDBMaDhjTVlDSWZBUE9wQzFDdk50cXBlNzhRUHV6CndPYTBObzlXNWE5czNBL3lIdWlINjhpajZQcE8ycDBub0JsYmxieWtvRkJ2TVM3L0cwNFp0TnJDZVlUN1FHQmUKZjFMTVR6SDFEanF1NEs4SkNLL1VDclp3bm9GaTh0NHdIVmZFNVFXODByRHZyT2xJdmVQTVVsMmJORjFyKzEreApub0t3dGJYMmNFVkluMkwxNXpzL2w5T1cxWXFYZjVJYm52aHI3TFZpMnhZVEx0YUUwSFg4UzFFZmFOUGdLZGhsCkRMd2Z1SVE4NEdKb3VKdGhRSkM2SzBDOG00WmYrN3JPZkRYU2Y0S2luc1F3L0FvbVk0VzdBSXk1ZHpQMWowc1UKelFEMTcxSjYwWFk2U0hyL3pzQkhjcFJYWlo1dE42WU9vRG1lK3dJREFRQUJBb0lCQUZuc2hwUS9UcjMySlp1QwpOREswdTNkbE5OKzBqVzFITy81TmVJdDBRQ2M4bjFONWhRNVd1eFFXSHd4bUVkQXRLN3FQZTMrTys4aWw1bWhUCmNHaGdqYVVlREZoUUVOS1NYbWRwMFM2WGtIZHB6ZU95cERIdnRObCsrbXovWEhLMnhjN2xwRjl0ZDhBVDZ4b2wKbUtVTk5uTkhnR3k4dENUZHZjbXd4WUs1SnQ4VGh4RFo0cGZLYzhWMGV2YmNGRWhPbjdQTXJ6NDFtcm1ZNFJtZwpXRlg2djkxNGxTUlNuMTg5ZFE1eXNkbFdWRkkyTTNIdEU5T21LZmJMeGx1MnU0VUl2eHNoblVSS0VoVVM1NngyCnZLY29YeHhPa1MzeFRGNTlJOHYrSWp1M29NQ0J4L3hzWHA0R3pzOEUxTVNTWEFEenVhY3dlbFgySG5FUHpsUW0KeHVsUkFhRUNnWUVBM2JVTGpkSEhmUjhIOElVS3k3NnNOUEdlNExNUGF2d1JJanh0M1M3NG1tUnJxa0VkajN6VwpFTWE0SWFucFo2ejlUVGwydjFwMkRZQ1MwMEpVdkJOdEo3Z09tRExIa21UcFg1N0pJYzgvaTZ0V2NBNEpka2hsClFCZGVyWTAvMVFyakhZcGkzR2JVL3FsOWVEanVGZTBBOUk1d0hxLys2YTQ1MUV0VzQvci9QVXNDZ1lFQS9yM0UKTkFsNnk4aGJnYWZpeDVYNzIvT2ZsS2cvdUc5d1FGa0drdjl6blphb29QTmQwcXhLcnR5TytxRUZKWXRObDhjQgpUdWNSaDRUajVnaUllNWNlaHA5MEc4THljcjBkbnprREd3SitRSkx1cXZKTmNCUUhVVjczSDhHS1IxbkpQQlluCld1TEN3dkNWQVVkdnNIdHBPcHpxYjcvVU5JcFcyZUVpVU45Y2h4RUNnWUJBSWpVYmEwbTN5aGd6M1dpSUU3b2cKL3B3bEIrYzMzWDdmVm5lNWVmTDBSb1JXbGN1RlRHbG9KUFB5MlFIcHVjTDBhZUVON1k4a3pNS3NWZzNJOGgycgpWYlR6RmcxaExjdk1tMVEzY1lwQ1R1Z01OaU5La2hxbjlacXZ2YUp2Y0Z6T21NK01UanJqQ0FpQmxJWmExVnBuClpDVE8yNzV6dnJCLzF1Tmx3NSsrRFFLQmdRQ2N2UjV2OWpVOEZiZFgrM2lwM1RydWh1UDFqK0JGRnl3Mks1REQKK2JHbGtRR0lwclZmM3VyRTFLaVV4V1pwUjJFaXRpdXo1TEVBZFYvVU5nUGtKNE44eWJlakxUd0lKUnlJejRkOQpvdmNUdkZSbGtsamJVVGQvZGJNUU13Rm1EWFNvSitsbkhvYy9jcy83elh5SFZpZlZESitpeXFGREFxdVZ1OVJsCmRrbDBRUUtCZ0ZJTndZZUJnR01aNFNvNzNpOEovVzJrMlZIUjc5Q1J6S0hhMmVaMU9PZlRJQUU3TDBSVHJlbWwKM0VHbmFwUmdGU2V5aXNnVU5LeE9Uakg1MUI3N2UrVWx3KzVBR2lqV3M3cUlTYktwb2kyU3paZHN2dG5temx1YwpMNUFtNW5FTGVGRVBwMUNvUUlVM215VlBnZC9zckhZTUhvUW40UjNJZlI4YmZjc2ZLbTZuCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
                    }
                }
            ],
            "contexts": [
                {
                    "name": "admin",
                    "context": {
                        "cluster": "edf-demo",
                        "user": "admin"
                    }
                }
            ],
            "current-context": "admin"
        },
        "File": {
            "Filename": "auth/kubeconfig",
            "Data": "Y2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSUlJFTkRRV2xwWjBGM1NVSkJaMGxKVWxWWlZHcFhTRUZrTDFsM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZFFha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFUWjNkS1oxbEVWbEZSUkVWNE9YSmtWMHBzVEZkR2QyRllUbXhqYmxwc1kya3hjMkl5VG1oaVIyaDJZek5SZEFwak1teHVZbTFXZVUxQ05GaEVWRWw2VFVScmVVNVVTWGhOZWxGNlRteHZXRVJVVFhwTlJHdDVUV3BKZUUxNlVYcE9iRzkzVUdwRlUwMUNRVWRCTVZWRkNrTjRUVXBpTTBKc1ltNU9iMkZYV2pCTlUyZDNTbWRaUkZaUlVVUkZlRGx5WkZkS2JFeFhSbmRoV0U1c1kyNWFiR05wTVhOaU1rNW9Za2RvZG1NelVYUUtZekpzYm1KdFZubE5TVWxDU1dwQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSUlVaQlFVOURRVkU0UVUxSlNVSkRaMHREUVZGRlFYWm1kV1pUWVU1RVZXSXlRZ3BzU0hweFRreGlRWFVyVEhjNFZqTkNZa2RPYlRkT1NUZFdSM00wVFRCVGFqRmhValV3UjJKWWFsRnVhakJxVjJkaWFtVjBRMFpqUlVNMVZUUk5lVVUzQ2xWSlZUWlRiMVJIVm0xVVpsaHBZMk5vWmpGQ00zQldRWEY1UVhnM1l6bEdiMDgzVFhOWU5XcEhNRlJ4VUdoWlVpOTNUV0ZFTTBWVU5qWkpWbGQwYVdjS2EyRnFOR2RJY0dWTmIwbzBXa2hNYlZaQ2NGZEpOa2x2YjAxNE5WZ3lZbEZyVHpCTVpYWkhkMHRRVTFkb0swRllUVmhsVTJoMlpVbFVZM1ZVYVdnMmJncDNXWGQzZVRVellXNTJjbFJDV2pkeE1rTmFibHB3UTBOS1pqWjJZelZaVVdSMlVYUkNNa05HVmpKUGNEVTBaRmRKYzNOWWRWQTJaRnBRWTBkSGNrTmtDbkZhVUhvNFpVMTJNMDFCUjBrdlFVOURMMWREV2tsbWJIUjRXa1pHZW01blNtUjBVbVowUm5aUFoxQTVSV05HYTAxNFpuQTVaRzFaWkVrMGJUUklVWG9LY1hscWQxSXJRMDFtZDBsRVFWRkJRbTh3U1hkUlJFRlBRbWRPVmtoUk9FSkJaamhGUWtGTlEwRnhVWGRFZDFsRVZsSXdWRUZSU0M5Q1FWVjNRWGRGUWdvdmVrRmtRbWRPVmtoUk5FVkdaMUZWZDBkb2NVcG5aMk5KYlZOV1pVazBhMEZDZG5aNlNWY3ZVWEZGZDBSUldVcExiMXBKYUhaalRrRlJSVXhDVVVGRUNtZG5SVUpCUzJkRll6azBUVmw0VFRSWGF6RjFXRmxFTlhoR0wweGlTMjU1ZVRCd1dVazFVbEJWV205NWJrMUxjamwzTUhWbVlYaElMMmRNYUdGamRta0tjazFOZFRWM2JYVk9jbkpEZEdkQmJVd3lPVFpoWlZGTFoxTlRVVFJyUWxaWk9HSkpMMGRwYVhkUlFVOUdiM0pFY1d4VGVVWk1WWEoxYVdoSGNtNUpkZ3BvT1hvemVXcENWRVZPV2sxTGNXTllWR2R2V0U1VEwyeFVaekUxTldKVFptNDNURzkyYzBGRU5ETjViazF4VUZCTWVFd3lTRE5rWlZjMGJrcGpNMFl5Q2xBcldFaGpSekkxTXpKelNsQktSVzlsVVc1aFRFMUJSbEI1V1dGTmVFRnhkazlSYjBjeVZXMHJjalZvVFZKR1lYUktjall6T1hwRk0wNHZValJTY200S2RXUkRiR2w0Tld0S1lVZFNhazFyZFVGblZHRXdSbkIwVUhWNmFVcElRVzRyTldsU1JITjVTbk41UVhGTGNtTmpRMGx1ZWtsWlNrVk1PRzVQWTBoSVdncE5hMlpWVXpZdmJWUnNNVUZWTTAxTVEyUnhXVEJCWW1KWGNIYzlDaTB0TFMwdFJVNUVJRU5GVWxSSlJrbERRVlJGTFMwdExTMEtMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSVVJFTkRRV3BUWjBGM1NVSkJaMGxKVGt4V1ZGQkViRVJDUVhOM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZFNSRVZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFUTkhkTVFWbEVWbEZSUkVWNVZuSmtWMHBzVEZkR2QyRllUbXhqYmxwc1kya3hlbHBZU2pKaFYwNXNURmMxYkFwa1NHUjJZMjF6ZEdNeWJHNWliVlo1VFVJMFdFUlVTWHBOUkd0NVRsUkplRTE2VVhwT2JHOVlSRlJOZWsxRWEzbE5ha2w0VFhwUmVrNXNiM2RTUkVWVENrMUNRVWRCTVZWRlEzaE5TbUl6UW14aWJrNXZZVmRhTUUxVE5IZE1RVmxFVmxGUlJFVjVWbkprVjBwc1RGZEdkMkZZVG14amJscHNZMmt4ZWxwWVNqSUtZVmRPYkV4WE5XeGtTR1IyWTIxemRHTXliRzVpYlZaNVRVbEpRa2xxUVU1Q1oydHhhR3RwUnpsM01FSkJVVVZHUVVGUFEwRlJPRUZOU1VsQ1EyZExRd3BCVVVWQmNVRnphRUYyYm1jd04xcHRSbmxMYUdaNWNTOUdXSEpyVHpNNGRWRjZhMDR6UWxOb1duQkVhMk5UVnpsSU9HeHhlbWg0Y2pjdldYWmtSM0ZuQ2lzcmNrZFFRMlpyYTFkUVRUWkxOQzlTWlhWRFpEaGFkRUpVUjNKMGNHVkViWFZQU0hOcGQwbFBLMFpUTjI5aWJGQXdaV0pNTkZWbU5rVnFkMlZ3Y1drS2FDdE9PRTAzVWtSWmFXVlJNV2hEY0d0NUsxTlJVazlUYmtGaFZuWjFZMnhhWlc0cmFtNVZLMmxNVXpCR09YbDNVVXRvYmxSWGNpOVFPRUZ3VG5aVGFBcHhOR281TkVwWlltcGFkVWRyZEc4Mkswd3pjbFZ6Y0hCTWRpOVRXRk5RSzFacGRsRkJSbVl2UkZablYwWmFkMHA0T0dZMVNsRjRiRXR0WW5CcGJqbFhDbXRwVG5GWk1IWXZhRkF5TkhwSUt6ZFdPVE01U21aTVJYZE5aVkIzVFdScllYRnNaR3AyWWtkVVFsTndOMGxLY3pOTUwyaHpWVmt5VGtOVU5ISlZTblVLUlVwbmVrRjRkVzAxTjBaWGVHWXlkbkJRY0ZWQlZtZEJXbEZKUkVGUlFVSnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSVUpCVFVOQmNWRjNSSGRaUkFwV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVmxKZDI1WFV6SlRjMkZyV2xrMFIyRTFVWE5GWmxGV1EyRldWWGRFVVZsS0NrdHZXa2xvZG1OT1FWRkZURUpSUVVSblowVkNRVXBwYjBkNWRWQjJiemxuVFZVeGVubFZRbTQxYlhwR2FWVXpWeXRQUTJSSGVHSjNNMUpqZW5GTWNrWUtOMEZLZDJWM1EwMVBkSGwxVURsa1dETmxNRXR1VWt4SVJYaHJhMEY0WnpRd1JHeG1jVFJrV1dKWlpHaGFTRlZSYm0xMGRHc3JSbmhMVEhNelUzVnVXZ292ZDJ4VVpHUjNZMUJwVVhsM1dsSjBWVWhDZEd4R2FVdGtZekV5ZFV0dmQzaEplbWQ1ZVdwWlRHeFRZa3R5TkhweGFucG5Na3hvTDB4aWNYUnBXblZ5Q2pkd05GbEdMMjlhYVdkRlJsbEdRekJSVFRWcFpIbDNTUzkxT0VKMVkxWkpkbVJWZUZOeWNUSkpablZEZURKa1UwWlpVVzB2WmxWb1ZtbHBXRkJvVGtNS2RqZHVZMkpQVEdRM09XdHFNSFZYZVRoSlYxUlJSV05LU1ZOM1VXMTNWMnh5WlUxaGNWb3ZjR1JyWTFWVmFFcFlTMjlLYVVkTWFuVjZhVUZEWlhKWlJnb3dTWFJKV21oMmMzRlhiazR2Y2k5T1NVWjNhbXR0V2xGRE4zWlFjalpxVjAwclpUSmlUekppYjBoSlBRb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENpMHRMUzB0UWtWSFNVNGdRMFZTVkVsR1NVTkJWRVV0TFMwdExRcE5TVWxFVFdwRFEwRm9jV2RCZDBsQ1FXZEpTVTFSZGxSTVdVNXNaV0pCZDBSUldVcExiMXBKYUhaalRrRlJSVXhDVVVGM1RucEZVMDFDUVVkQk1WVkZDa040VFVwaU0wSnNZbTVPYjJGWFdqQk5VMFYzU0hkWlJGWlJVVVJGZUdoeVpGZEtiRXhYUm5kaFdFNXNZMjVhYkdOcE1YTlphVEY2WVZka2RWcFlTWGNLU0doalRrMXFUWGRQVkVreFRXcEZlazVFVFRKWGFHTk9UWHBOZDA5VVNYbE5ha1Y2VGtSTk1sZHFRVE5OVWtsM1JVRlpSRlpSVVV4RmQyeDJZMGRXZFFwak1taHdXbTVSZUVsVVFXWkNaMDVXUWtGTlZFZEhkREZaYlZWMFdWaENjR015Vm5sa2JWWjVURmQ0YVV4WVRuQmFNalZzWTJwRFEwRlRTWGRFVVZsS0NrdHZXa2xvZG1OT1FWRkZRa0pSUVVSblowVlFRVVJEUTBGUmIwTm5aMFZDUVV0aFFYVk9lbUZaT0ZaallUSkRTRzVOT0c1MmFIY3ZSWHBSWkcxeFVuZ0tTek5ZYVN0NlRGSmlTbVZMTVdaS05EVnhiRGwyVlhsUVl6TkRMMDQ1VjFSbU5FMUlhVmhtTWxkWldreERiMlpoVkd0S1pXSkxOVWxoYXpkcVFXOXlMd3BhYW1JNVJ6WjJRM2xUYld3NU16SnRWamxpWjBGT1ZFbFhOMk0xVGtkaWRFTjNTeXMyV0hsc1VIWjVUM1pxYmpORVZGaGxjMDh4ZGtFMFZTOXJlbGRQQ21nM04wNUtkVk5rY2tadFpVNVBaMUp6WmxsWFNuaERNRWN2YkhwckswTTNPR1poUW1zeVNEQTNkM0JxT0ZsbVUwWjBaR2RVUjFaTk5GUlZTR3hOTVdzS1YwSkNVMmczVldOdUwwdzVRMlpoTVU1NVFUTmlWMW8yUmswNWVXRlBhV3RuWm5WaE5USlJTVW8yY1NzMmRFVlpNVlZ1YzFwM1dWSnFSRXAwUVZwYVJncFFTVFowT0ZjclFuWldZMk54V1U4ck5tUmplV1ZqZW1waVdXdDBhWEJIY0VReFJXWlRaMGRIT0hOV01sYzBOMUZhUTFKUFFuaHJRMEYzUlVGQllVNURDazFGUVhkRVoxbEVWbEl3VUVGUlNDOUNRVkZFUVdkTGEwMUJPRWRCTVZWa1JYZEZRaTkzVVVaTlFVMUNRV1k0ZDBoUldVUldVakJQUWtKWlJVWk9XVXdLYVhSVlpsWm5ZbnBGY1VwUlFtVTFPVTFMWm1odGJGRlBUVUV3UjBOVGNVZFRTV0l6UkZGRlFrTjNWVUZCTkVsQ1FWRkNRVnBuZFdwdFdVUk5WbTFPU1FveVQyNDJSalI2ZWxWRE56aHRaVFJhUWtOeWNuZDVVbGwyUmtaUFNrODNaWGMyTURSUVVFTlpVaTh6VDBwWldtUjNheXQyTld4S00wOUJTRGxxTkd0cUNsZHVlVXhqYVZaSGFtaHZNRFl6Y21OdFdGZHZTVk5TU0hwdFdubFhTbWxsYzIxaFowZFhOMk5GT1dSaFpUWndSMnBrZERkQlFVMW1RV0ZUUld4cmRVWUtTRWRXY0VGS1ZuaHhPVzhyWm5CUFpuZEZhak5xVVVsTVdITXZUVmhOVUZOeFRDdDJjVzV5TjBwR1NsQmhRak5hYlVoTVdqRndXRkJvVURScE1uTmxiQXBFVWtZMlZWQk1SbkZaT0ZwSmFHWlZjVkZ3SzJ0c0szQnhNM1JNUkRaRU5VdHVaRTh3VW1OeEt6Tm9VWGhoVUhwTkt6bDVNRWxDT1dsbVNsQjZhMU54Q2xRM1RsbDRLeTlXYVVWRVRVUkhaRzQ0Y2taaWJGVjBUblJuVG10WGJ5OWpUalYyZFUxVVJIUTFjVVZyUzJkT09YSnlVVmhqVDFCc1RYRnpkamh6UlVVS1dYbENhbGR6VWtnS0xTMHRMUzFGVGtRZ1EwVlNWRWxHU1VOQlZFVXRMUzB0TFFvPQogICAgc2VydmVyOiBodHRwczovL2FwaS1pbnQuZWRmLWRlbW8uc2FuZGJveDE4ODAub3BlbnRsYy5jb206NjQ0MwogIG5hbWU6IGVkZi1kZW1vCmNvbnRleHRzOgotIGNvbnRleHQ6CiAgICBjbHVzdGVyOiBlZGYtZGVtbwogICAgdXNlcjogYWRtaW4KICBuYW1lOiBhZG1pbgpjdXJyZW50LWNvbnRleHQ6IGFkbWluCnByZWZlcmVuY2VzOiB7fQp1c2VyczoKLSBuYW1lOiBhZG1pbgogIHVzZXI6CiAgICBjbGllbnQtY2VydGlmaWNhdGUtZGF0YTogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUmFla05EUVdzclowRjNTVUpCWjBsSlNUSnpWM0Y1T1ZKQ1NUUjNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRWGRPYWtWVFRVSkJSMEV4VlVVS1EzaE5TbUl6UW14aWJrNXZZVmRhTUUxVFFYZElaMWxFVmxGUlJFVjRaR2hhUnpGd1lta3hjbVJYU214Wk1qbDFXbTFzYmt4WVRuQmFNalZzWTJwQlpRcEdkekI1VFhwQk5VMXFWWGxOVkUwd1RYcFdZVVozTUhwTmVrRTFUV3BKZVUxVVRUQk5lbHBoVFVSQmVFWjZRVlpDWjA1V1FrRnZWRVJ1VGpWak0xSnNDbUpVY0hSWldFNHdXbGhLZWsxU1ZYZEZkMWxFVmxGUlJFVjNlSHBsV0U0d1dsY3dObGxYVW5SaFZ6UjNaMmRGYVUxQk1FZERVM0ZIVTBsaU0wUlJSVUlLUVZGVlFVRTBTVUpFZDBGM1oyZEZTMEZ2U1VKQlVVUmpibVp2VERZMmVIbEJlRlJ4ZVdzd04wOVlVWFZJZUhkNFowbG9PRUU0Tm10TVZVczRNakp4YkFvM2RuaEJLemRRUVRWeVVUSnFNV0pzY2pKNlkwUXZTV1UyU1daeWVVdFFieXRyTjJGdVUyVm5SMVoxVm5aTFUyZFZSemg0VEhZNFlsUm9iVEF5YzBvMUNtaFFkRUZaUmpVdlZYTjRVRTFtVlU5UGNUZG5jbmRyU1hJNVVVdDBia05sWjFkTWVUTnFRV1JXT0ZSc1FtSjZVM05QSzNNMlZXazVORGg0VTFoYWN6QUtXRmQyTjFnM1IyVm5ja014ZEdaYWQxSlZhV1paZGxodVQzb3JXREExWWxacGNHUXZhMmgxWlN0SGRuTjBWMHhpUm1oTmRURnZWRkZrWm5oTVZWSTVid293SzBGd01rZFZUWFpDS3pSb1JIcG5XVzFwTkcweVJrRnJURzl5VVV4NVltaHNMemQxY3pVNFRtUktMMmR4UzJWNFJFUTRRMmxhYW1oaWMwRnFUR3d6Q2swdlYxQlRlRlJPUVZCWWRsVnVjbEprYW5CSlpYWXZUM2RGWkhsc1JtUnNibTB3TTNCbk5tZFBXamMzUVdkTlFrRkJSMnBtZWtJNVRVRTBSMEV4VldRS1JIZEZRaTkzVVVWQmQwbEdiMFJCWkVKblRsWklVMVZGUm1wQlZVSm5aM0pDWjBWR1FsRmpSRUZSV1VsTGQxbENRbEZWU0VGM1NYZEVRVmxFVmxJd1ZBcEJVVWd2UWtGSmQwRkVRV1JDWjA1V1NGRTBSVVpuVVZWblNWTjVURFV5TjI1RVdHZFFOVmRCUzFWeFNWaElWVUpFUWpCM1NIZFpSRlpTTUdwQ1FtZDNDa1p2UVZVNE5UVXpSakY1VlhOU1JHczRUaTh6Y0hkUFltaHdOakJQWkhOM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFVUm5aMFZDUVVsWU9VRlpaRmdLTm1kS1duQlpka1o2TTJkQ2FESmxSR0ZyTm5OMU9WVkdablEwWlRkeVkyRnpVSEo2VFd0UGFYbFJkSGM1YTBwamVVMXVabEl6VWt4RGF6UktaemN6ZVFvMGVIb3dTbU53VlU1aVR6QjFVRlpyVVVNMVRsZHJNVFZTV1hKR2JUQmhkRVE0YXpOemNrMXRRa1Z5Y0ZoRE0xRXpVVkJyY0RsbFVtMHhaR2c1T0ZkV0NsTkRWRGRsWTBwTU1GaElSalJaWmtreU1FVnhlRXByYWxCMlZFbGFSRkJJYmxZd01rVmhieXQwY21aVVRESklXVUZSU0daUlpVd3dibko0TUc5V016SUtiVkpUUTNNeVFXRm9kRmRVTVV4UFVXUm5lbkZRWW1OQlpYWnRVbEpTYTFGd1NpdHFSRzUwWTFCMFYxUjZMekJvYldaT1QzRmFZV0ZwVEdwTU4zQlFOUW8xU0dsdFl6TXJjRTFxV1VwTWVrZHdiV1F6TVhCWldXa3dTVUY0V2xKS1dDOTFkSEJRWkhablZFNUtWRXhyVTBwbGJUbEJZa1Z1VUdSWFREbHhiakpNQ2xaMGFXWmtVVVZGUldGSVMxUm9kejBLTFMwdExTMUZUa1FnUTBWU1ZFbEdTVU5CVkVVdExTMHRMUW89CiAgICBjbGllbnQta2V5LWRhdGE6IExTMHRMUzFDUlVkSlRpQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUXBOU1VsRmIzZEpRa0ZCUzBOQlVVVkJNMG96TmtNcmRYTmpaMDFWTm5Od1RrOTZiREJNYURoalRWbERTV1pCVUU5d1F6RkRkazUwY1hCbE56aFJVSFY2Q25kUFlUQk9iemxYTldFNWN6TkJMM2xJZFdsSU5qaHBhalpRY0U4eWNEQnViMEpzWW14aWVXdHZSa0oyVFZNM0wwY3dORnAwVG5KRFpWbFVOMUZIUW1VS1pqRk1UVlI2U0RGRWFuRjFORXM0U2tOTEwxVkRjbHAzYm05R2FUaDBOSGRJVm1aRk5WRlhPREJ5UkhaeVQyeEpkbVZRVFZWc01tSk9SakZ5S3pFcmVBcHViMHQzZEdKWU1tTkZWa2x1TWt3eE5YcHpMMnc1VDFjeFdYRllaalZKWW01MmFISTNURlpwTW5oWlZFeDBZVVV3U0ZnNFV6RkZabUZPVUdkTFpHaHNDa1JNZDJaMVNWRTRORWRLYjNWS2RHaFJTa00yU3pCRE9HMDBXbVlyTjNKUFprUllVMlkwUzJsdWMxRjNMMEZ2YlZrMFZ6ZEJTWGsxWkhwUU1Xb3djMVVLZWxGRU1UY3hTall3V0ZrMlUwaHlMM3B6UWtoamNGSllXbG8xZEU0MldVOXZSRzFsSzNkSlJFRlJRVUpCYjBsQ1FVWnVjMmh3VVM5VWNqTXlTbHAxUXdwT1JFc3dkVE5rYkU1T0t6QnFWekZJVHk4MVRtVkpkREJSUTJNNGJqRk9OV2hSTlZkMWVGRlhTSGQ0YlVWa1FYUkxOM0ZRWlRNclR5czRhV3cxYldoVUNtTkhhR2RxWVZWbFJFWm9VVVZPUzFOWWJXUndNRk0yV0d0SVpIQjZaVTk1Y0VSSWRuUk9iQ3NyYlhvdldFaExNbmhqTjJ4d1JqbDBaRGhCVkRaNGIyd0tiVXRWVGs1dVRraG5SM2s0ZEVOVVpIWmpiWGQ0V1VzMVNuUTRWR2g0UkZvMGNHWkxZemhXTUdWMlltTkdSV2hQYmpkUVRYSjZOREZ0Y20xWk5GSnRad3BYUmxnMmRqa3hOR3hUVWxOdU1UZzVaRkUxZVhOa2JGZFdSa2t5VFROSWRFVTVUMjFMWm1KTWVHeDFNblUwVlVsMmVITm9ibFZTUzBWb1ZWTTFObmd5Q25aTFkyOVllSGhQYTFNemVGUkdOVGxKT0hZclNXcDFNMjlOUTBKNEwzaHpXSEEwUjNwek9FVXhUVk5UV0VGRWVuVmhZM2RsYkZneVNHNUZVSHBzVVcwS2VIVnNVa0ZoUlVObldVVkJNMkpWVEdwa1NFaG1VamhJT0VsVlMzazNObk5PVUVkbE5FeE5VR0YyZDFKSmFuaDBNMU0zTkcxdFVuSnhhMFZrYWpONlZ3cEZUV0UwU1dGdWNGbzJlamxVVkd3eWRqRndNa1JaUTFNd01FcFZka0pPZEVvM1owOXRSRXhJYTIxVWNGZzFOMHBKWXpndmFUWjBWMk5CTkVwa2EyaHNDbEZDWkdWeVdUQXZNVkZ5YWtoWmNHa3pSMkpWTDNGc09XVkVhblZHWlRCQk9VazFkMGh4THlzMllUUTFNVVYwVnpRdmNpOVFWWE5EWjFsRlFTOXlNMFVLVGtGc05uazRhR0puWVdacGVEVllOekl2VDJac1MyY3ZkVWM1ZDFGR2EwZHJkamw2YmxwaGIyOVFUbVF3Y1hoTGNuUjVUeXR4UlVaS1dYUk9iRGhqUWdwVWRXTlNhRFJVYWpWbmFVbGxOV05sYUhBNU1FYzRUSGxqY2pCa2JucHJSRWQzU2l0UlNreDFjWFpLVG1OQ1VVaFZWamN6U0RoSFMxSXhia3BRUWxsdUNsZDFURU4zZGtOV1FWVmtkbk5JZEhCUGNIcHhZamN2VlU1SmNGY3laVVZwVlU0NVkyaDRSVU5uV1VKQlNXcFZZbUV3YlRONWFHZDZNMWRwU1VVM2IyY0tMM0IzYkVJcll6TXpXRGRtVm01bE5XVm1UREJTYjFKWGJHTjFSbFJIYkc5S1VGQjVNbEZJY0hWalREQmhaVVZPTjFrNGEzcE5TM05XWnpOSk9HZ3ljZ3BXWWxSNlJtY3hhRXhqZGsxdE1WRXpZMWx3UTFSMVowMU9hVTVMYTJoeGJqbGFjWFoyWVVwMlkwWjZUMjFOSzAxVWFuSnFRMEZwUW14SldtRXhWbkJ1Q2xwRFZFOHlOelY2ZG5KQ0x6RjFUbXgzTlNzclJGRkxRbWRSUTJOMlVqVjJPV3BWT0VaaVpGZ3JNMmx3TTFSeWRXaDFVREZxSzBKR1JubDNNa3MxUkVRS0sySkhiR3RSUjBsd2NsWm1NM1Z5UlRGTGFWVjRWMXB3VWpKRmFYUnBkWG8xVEVWQlpGWXZWVTVuVUd0S05FNDRlV0psYWt4VWQwbEtVbmxKZWpSa09RcHZkbU5VZGtaU2JHdHNhbUpWVkdRdlpHSk5VVTEzUm0xRVdGTnZTaXRzYmtodll5OWpjeTgzZWxoNVNGWnBabFpFU2l0cGVYRkdSRUZ4ZFZaMU9WSnNDbVJyYkRCUlVVdENaMFpKVG5kWlpVSm5SMDFhTkZOdk56TnBPRW92VnpKck1sWklVamM1UTFKNlMwaGhNbVZhTVU5UFpsUkpRVVUzVERCU1ZISmxiV3dLTTBWSGJtRndVbWRHVTJWNWFYTm5WVTVMZUU5VWFrZzFNVUkzTjJVclZXeDNLelZCUjJscVYzTTNjVWxUWWt0d2Iya3lVM3BhWkhOMmRHNXRlbXgxWXdwTU5VRnROVzVGVEdWR1JWQndNVU52VVVsVk0yMTVWbEJuWkM5emNraFpUVWh2VVc0MFVqTkpabEk0WW1aamMyWkxiVFp1Q2kwdExTMHRSVTVFSUZKVFFTQlFVa2xXUVZSRklFdEZXUzB0TFMwdENnPT0K"
        }
    },
    "*kubeconfig.Kubelet": {
        "Config": {
            "preferences": {},
            "clusters": [
                {
                    "name": "edf-demo",
                    "cluster": {
                        "server": "https://api-int.edf-demo.sandbox1880.opentlc.com:6443",
                        "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJUlVZVGpXSEFkL1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURreU5USXhNelF6TmxvWERUTXpNRGt5TWpJeE16UXpObG93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZmdWZTYU5EVWIyQgpsSHpxTkxiQXUrTHc4VjNCYkdObTdOSTdWR3M0TTBTajFhUjUwR2JYalFuajBqV2diamV0Q0ZjRUM1VTRNeUU3ClVJVTZTb1RHVm1UZlhpY2NoZjFCM3BWQXF5QXg3YzlGb083TXNYNWpHMFRxUGhZUi93TWFEM0VUNjZJVld0aWcKa2FqNGdIcGVNb0o0WkhMbVZCcFdJNklvb014NVgyYlFrTzBMZXZHd0tQU1doK0FYTVhlU2h2ZUlUY3VUaWg2bgp3WXd3eTUzYW52clRCWjdxMkNablpwQ0NKZjZ2YzVZUWR2UXRCMkNGVjJPcDU0ZFdJc3NYdVA2ZFpQY0dHckNkCnFaUHo4ZU12M01BR0kvQU9DL1dDWklmbHR4WkZGem5nSmR0UmZ0RnZPZ1A5RWNGa014ZnA5ZG1ZZEk0bTRIUXoKcXlqd1IrQ01md0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVd0docUpnZ2NJbVNWZUk0a0FCdnZ6SVcvUXFFd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBS2dFYzk0TVl4TTRXazF1WFlENXhGL0xiS255eTBwWUk1UlBVWm95bk1Lcjl3MHVmYXhIL2dMaGFjdmkKck1NdTV3bXVOcnJDdGdBbUwyOTZhZVFLZ1NTUTRrQlZZOGJJL0dpaXdRQU9Gb3JEcWxTeUZMVXJ1aWhHcm5JdgpoOXozeWpCVEVOWk1LcWNYVGdvWE5TL2xUZzE1NWJTZm43TG92c0FENDN5bk1xUFBMeEwySDNkZVc0bkpjM0YyClArWEhjRzI1MzJzSlBKRW9lUW5hTE1BRlB5WWFNeEFxdk9Rb0cyVW0rcjVoTVJGYXRKcjYzOXpFM04vUjRScm4KdWRDbGl4NWtKYUdSak1rdUFnVGEwRnB0UHV6aUpIQW4rNWlSRHN5SnN5QXFLcmNjQ0lueklZSkVMOG5PY0hIWgpNa2ZVUzYvbVRsMUFVM01MQ2RxWTBBYmJXcHc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJTkxWVFBEbERCQXN3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRGt5TlRJeE16UXpObG9YRFRNek1Ea3lNakl4TXpRek5sb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBcUFzaEF2bmcwN1ptRnlLaGZ5cS9GWHJrTzM4dVF6a04zQlNoWnBEa2NTVzlIOGxxemh4cjcvWXZkR3FnCisrckdQQ2Zra1dQTTZLNC9SZXVDZDhadEJUR3J0cGVEbXVPSHNpd0lPK0ZTN29ibFAwZWJMNFVmNkVqd2VwcWkKaCtOOE03UkRZaWVRMWhDcGt5K1NRUk9TbkFhVnZ1Y2xaZW4ram5VK2lMUzBGOXl3UUtoblRXci9QOEFwTnZTaApxNGo5NEpZYmpadUdrdG82K0wzclVzcHBMdi9TWFNQK1ZpdlFBRmYvRFZnV0Zad0p4OGY1SlF4bEttYnBpbjlXCmtpTnFZMHYvaFAyNHpIKzdWOTM5SmZMRXdNZVB3TWRrYXFsZGp2YkdUQlNwN0lKczNML2hzVVkyTkNUNHJVSnUKRUpnekF4dW01N0ZXeGYydnBQcFVBVmdBWlFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVVlJd25XUzJTc2FrWlk0R2E1UXNFZlFWQ2FWVXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUppb0d5dVB2bzlnTVUxenlVQm41bXpGaVUzVytPQ2RHeGJ3M1JjenFMckYKN0FKd2V3Q01PdHl1UDlkWDNlMEtuUkxIRXhra0F4ZzQwRGxmcTRkWWJZZGhaSFVRbm10dGsrRnhLTHMzU3VuWgovd2xUZGR3Y1BpUXl3WlJ0VUhCdGxGaUtkYzEydUtvd3hJemd5eWpZTGxTYktyNHpxanpnMkxoL0xicXRpWnVyCjdwNFlGL29aaWdFRllGQzBRTTVpZHl3SS91OEJ1Y1ZJdmRVeFNycTJJZnVDeDJkU0ZZUW0vZlVoVmlpWFBoTkMKdjduY2JPTGQ3OWtqMHVXeThJV1RRRWNKSVN3UW13V2xyZU1hcVovcGRrY1VVaEpYS29KaUdManV6aUFDZXJZRgowSXRJWmh2c3FXbk4vci9OSUZ3amttWlFDN3ZQcjZqV00rZTJiTzJib0hJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETWpDQ0FocWdBd0lCQWdJSU1RdlRMWU5sZWJBd0RRWUpLb1pJaHZjTkFRRUxCUUF3TnpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU0V3SHdZRFZRUURFeGhyZFdKbExXRndhWE5sY25abGNpMXNZaTF6YVdkdVpYSXcKSGhjTk1qTXdPVEkxTWpFek5ETTJXaGNOTXpNd09USXlNakV6TkRNMldqQTNNUkl3RUFZRFZRUUxFd2x2Y0dWdQpjMmhwWm5ReElUQWZCZ05WQkFNVEdHdDFZbVV0WVhCcGMyVnlkbVZ5TFd4aUxYTnBaMjVsY2pDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUthQXVOemFZOFZjYTJDSG5NOG52aHcvRXpRZG1xUngKSzNYaSt6TFJiSmVLMWZKNDVxbDl2VXlQYzNDL045V1RmNE1IaVhmMldZWkxDb2ZhVGtKZWJLNUlhazdqQW9yLwpaamI5RzZ2Q3lTbWw5MzJtVjliZ0FOVElXN2M1TkdidEN3Sys2WHlsUHZ5T3ZqbjNEVFhlc08xdkE0VS9reldPCmg3N05KdVNkckZtZU5PZ1JzZllXSnhDMEcvbHprK0M3OGZhQmsySDA3d3BqOFlmU0Z0ZGdUR1ZNNFRVSGxNMWsKV0JCU2g3VWNuL0w5Q2ZhMU55QTNiV1o2Rk05eWFPaWtnZnVhNTJRSUo2cSs2dEVZMVVuc1p3WVJqREp0QVpaRgpQSTZ0OFcrQnZWY2NxWU8rNmRjeWVjempiWWt0aXBHcEQxRWZTZ0dHOHNWMlc0N1FaQ1JPQnhrQ0F3RUFBYU5DCk1FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZOWUwKaXRVZlZnYnpFcUpRQmU1OU1LZmhtbFFPTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCQVpndWptWURNVm1OSQoyT242RjR6elVDNzhtZTRaQkNycnd5Ull2RkZPSk83ZXc2MDRQUENZUi8zT0pZWmR3ayt2NWxKM09BSDlqNGtqCldueUxjaVZHamhvMDYzcmNtWFdvSVNSSHptWnlXSmllc21hZ0dXN2NFOWRhZTZwR2pkdDdBQU1mQWFTRWxrdUYKSEdWcEFKVnhxOW8rZnBPZndFajNqUUlMWHMvTVhNUFNxTCt2cW5yN0pGSlBhQjNabUhMWjFwWFBoUDRpMnNlbApEUkY2VVBMRnFZOFpJaGZVcVFwK2tsK3BxM3RMRDZENUtuZE8wUmNxKzNoUXhhUHpNKzl5MElCOWlmSlB6a1NxClQ3Tll4Ky9WaUVETURHZG44ckZibFV0TnRnTmtXby9jTjV2dU1URHQ1cUVrS2dOOXJyUVhjT1BsTXFzdjhzRUUKWXlCaldzUkgKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
                    }
                }
            ],
            "users": [
                {
                    "name": "kubelet",
                    "user": {
                        "client-certificate-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ4RENDQXRpZ0F3SUJBZ0lJSTQ1c0xEWG93SG93RFFZSktvWklodmNOQVFFTEJRQXdRakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Td3dLZ1lEVlFRREV5TnJkV0psYkdWMExXSnZiM1J6ZEhKaGNDMXJkV0psWTI5dQpabWxuTFhOcFoyNWxjakFlRncweU16QTVNalV5TVRNME16WmFGdzB6TXpBNU1qSXlNVE0wTXpaYU1JRzJNV0F3CkhRWURWUVFLRXhaemVYTjBaVzA2YzJWeWRtbGpaV0ZqWTI5MWJuUnpNRDhHQTFVRUNoTTRjM2x6ZEdWdE9uTmwKY25acFkyVmhZMk52ZFc1MGN6cHZjR1Z1YzJocFpuUXRiV0ZqYUdsdVpTMWpiMjVtYVdjdGIzQmxjbUYwYjNJeApVakJRQmdOVkJBTVRTWE41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwdmNHVnVjMmhwWm5RdGJXRmphR2x1ClpTMWpiMjVtYVdjdGIzQmxjbUYwYjNJNmJtOWtaUzFpYjI5MGMzUnlZWEJ3WlhJd2dnRWlNQTBHQ1NxR1NJYjMKRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDclpLWU9rTk8zZHZpejBnaENOM0NDZUR4dXM2aENMZlp5emMxLwpQZ3BMWVlXbTJKcGhPc3ZPKzlKMGNHWkcxUUpibjBzZzJmNjFqblhaajUyMm1CcWc4VE5VTVhMTEtlTVpTTkdFCm1HL0tDc0RESnkza2JHTW1YeFdPZytQM0d4Q1BtSURxQjhxRDZmSXNhWHhnNXI1OFZURndlZUFkNkZMQWhRaGcKN3QvNWtaVzAvSi9hT2Y1Z0NDZ3lTd1VpNW12cGw0c1pQcEVFamYxSVNnYzN6RkMreEREdDRQc2ovYlZTTVN6NAoyQVdzcVJjOUZwbjU4aUhGVHU0V0UvQTZ3K2IrNVkycEp2UTFhMWk3cnVwcDNPV2NGLy9GOE4rSktXRVdBTGFTCmhWQ3JRaDJGTzFpcGtPcVFzWkFkckNxSmxJZ0RaMmg4Sms3WHhNb3dVdU5sS2VmdkFnTUJBQUdqZFRCek1BNEcKQTFVZER3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQjBHQTFVZERnUVdCQlNzVUJvSUtUOFNvY0pQdGdKL2ZKcEtveUppbHpBZkJnTlZIU01FR0RBV2dCVHRKTlRjCnJNMHVTWDh5WDNJenpkK1RPK0hGMlRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUNhWitEVHhkRVhIK2VkL3gKclhlTmYva1JUTFNhMVRVZkVweFJSd3NhUThuVS9SdG9ydnk1a2VpUDU3ZmlXR1BjVkpCS2ttQWI2Mk9Zalh3SApzU3FibGk1a2g0azJOYUQrYThuanRzYjFsN29jMHdYaUtQdVdScFJ3NUp6N3hzdk9Zck41NWwyeTFTMjBmUjVhCmpnZ082SlJtSG5hNGxKbjYyamJhczdxUGR0MkJUalhTQyt1VHlVSDB6TGo1ZC9zREtkWDhPR1Y5UHgwd1JXeSsKUmVKVDhGVzY2alNOUVE0MWE2QmpZdmJJcXhxNlFaQ1J4ZnNpdVFxL1ZSZnY2MG9mUzcwdWh1cXhQY0tOTlhyMAo2OUQxeU92K2VFTGhaRk5OTTdQd2dhZXlkQ1lwWjNLY1Jya29DckZEdHc3TmJkUXJ5czhsSCtnSnVRYWFMdC81CkNBL0FIZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                        "client-key-data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcTJTbURwRFR0M2I0czlJSVFqZHdnbmc4YnJPb1FpMzJjczNOZno0S1MyR0ZwdGlhCllUckx6dnZTZEhCbVJ0VUNXNTlMSU5uK3RZNTEyWStkdHBnYW9QRXpWREZ5eXluakdValJoSmh2eWdyQXd5Y3QKNUd4akpsOFZqb1BqOXhzUWo1aUE2Z2ZLZytueUxHbDhZT2ErZkZVeGNIbmdIZWhTd0lVSVlPN2YrWkdWdFB5Zgoyam4rWUFnb01rc0ZJdVpyNlplTEdUNlJCSTM5U0VvSE44eFF2c1F3N2VEN0kvMjFVakVzK05nRnJLa1hQUmFaCitmSWh4VTd1RmhQd09zUG0vdVdOcVNiME5XdFl1NjdxYWR6bG5CZi94ZkRmaVNsaEZnQzJrb1ZRcTBJZGhUdFkKcVpEcWtMR1FIYXdxaVpTSUEyZG9mQ1pPMThUS01GTGpaU25uN3dJREFRQUJBb0lCQUdxTE1yOHpRS2w0QjdxaApBZ2xIdFdVbG9VdWYyeVRvdFo5QVdGS1ZHb2twb28vSmJvNnFvaStWVTRxV3BMMjdoSys0SWxmVnJBVG8vbEcwCmVYSWNzOUVBbjh2aXdWMlNPRjVyYWZOblgzYlZvR2F3WUZMekhkK29sQm4zMnlxdFpHb2ZmMlA4VytRTTlrS3QKZ0dnc2lKVjUwRFgvVFZiS0tVY01hOXoySWIxZHdtd0YreTdaK3RtK2FxQ3MvNVlZRnltL3R5R0U4N0l6Vk9OWQpYNTVlSG93YzhHRlBKYTR0YVEwcnJtZ2c2a2FwOXJITzNKalZnZlFVb0xuZVhCeDRnUmJlK0pZMkhack9GbHhwClhwbGpkdlZxWGRhMmovbWdia2ZHanBZazAxakMrSlloL1BXblZHZlBRUFJMb3pRVkw0d21wUnJxK1QvVHpjei8KdHg0aWI0RUNnWUVBMnFEd1dvakwrSVI3ZTNWUVREUUd6SzJMS2ErZ09wZzFBTUlkb2x1T2EvdU9pM05qTGNDYwp1YVVLaWkycGMxSE81bHM0UlIxa2cvYWl5M1NwcGxESnRSekkzVjFSNEtEWUNRYVlZTldmRVo4S2tuRTltQThZCmlXQzRCQlh0ZlhEQ0pEa3RGbFJzZWFMK1hjZTB5SENVK3dyY0xWMmdvWGsreUYvN1NxOXZkWkVDZ1lFQXlMQzIKUFJmOUxtQ0JkbE9kcFZWZ1I3cGlTVk5Tdjc2RklSUW5NcEsyQWc1UThKNDJFc2NSNmNvR3hITmRUc1QrOUhXTgpUbWRjVHlaZ21YcHZ3WGFoQVkxMC9jZXVQbnJqcjQ1N2ZGMnBFN00vYk44a01hSWc0UnQ2UmhNMHFIMHhrYnZqCjZZN1p1aG9YTGNvSk8zRVlEME1uNmlaSjFHbFRMSU5laUhZR3hYOENnWUJUK2Q5NGx2VHA1MUZhOFl1L1NYaVgKSTgzQlhGRktVRzZEZFF4VzhaMzZBaTBWaVdPK0RpN2s2K3pwZUhLTzlneG4xUC8vSkRRWXNDS0Z6YkRnVGtXOApDR3RyQTg1UVh0ZThWOGt0NEwveHo4b0t4KzVsdXQ2czNmYXdzdzkrMEZIeUFmZzhqSDhDRmNab2xTM3VrN2ZWCjJhMEt5OXpJU1Q4QlRrVEN3aklvMFFLQmdFMWVHcE5JMlRqMHlWUUZmaVBMMnhjcjJsSXNSaDFYWkZsUlBKODUKZ2VNZkE4TVBLd2RvS1JhNDVJejljSDQ2WVpONmNlUkU0b2c4NGthb3RjYWVaZ21FTUJMWjFPbVBWSkZNVzN5aApXdG9XWXlBa2tmNTBZenFFN2tsdmhBQmtheVNraTROeHA2d2YvTW1STnFmc3ZIcTl4L2h6bEVqSDVlR21MMTVxCktjZ2ZBb0dBRmVGN2RhVjdreUNZYUM1TUxPK0taQkM3YXlFeGR4cjdlUjllNWpYUzNJMlhDeHQ0eFcrclBVS2MKZGsyQ3RnYkZ0bFhFTnFUbkVtM0M3WEpCNFdqVGdWUThJKzBPN3gyWERicXYzcDl4VnllNU9zdUhqZWQrZDdOOAp6VDBJV2pOSndVWFpyYnJ2czNYZG9YaS90ZExxV0t0aStkSmxncjlKMnJIMlAzVWlYOWM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
                    }
                }
            ],
            "contexts": [
                {
                    "name": "kubelet",
                    "context": {
                        "cluster": "edf-demo",
                        "user": "kubelet"
                    }
                }
            ],
            "current-context": "kubelet"
        },
        "File": {
            "Filename": "auth/kubeconfig-kubelet",
            "Data": ""
        }
    },
    "*kubeconfig.LoopbackClient": {
        "Config": {
            "preferences": {},
            "clusters": [
                {
                    "name": "edf-demo",
                    "cluster": {
                        "server": "https://localhost:6443",
                        "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJUlVZVGpXSEFkL1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURreU5USXhNelF6TmxvWERUTXpNRGt5TWpJeE16UXpObG93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZmdWZTYU5EVWIyQgpsSHpxTkxiQXUrTHc4VjNCYkdObTdOSTdWR3M0TTBTajFhUjUwR2JYalFuajBqV2diamV0Q0ZjRUM1VTRNeUU3ClVJVTZTb1RHVm1UZlhpY2NoZjFCM3BWQXF5QXg3YzlGb083TXNYNWpHMFRxUGhZUi93TWFEM0VUNjZJVld0aWcKa2FqNGdIcGVNb0o0WkhMbVZCcFdJNklvb014NVgyYlFrTzBMZXZHd0tQU1doK0FYTVhlU2h2ZUlUY3VUaWg2bgp3WXd3eTUzYW52clRCWjdxMkNablpwQ0NKZjZ2YzVZUWR2UXRCMkNGVjJPcDU0ZFdJc3NYdVA2ZFpQY0dHckNkCnFaUHo4ZU12M01BR0kvQU9DL1dDWklmbHR4WkZGem5nSmR0UmZ0RnZPZ1A5RWNGa014ZnA5ZG1ZZEk0bTRIUXoKcXlqd1IrQ01md0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVd0docUpnZ2NJbVNWZUk0a0FCdnZ6SVcvUXFFd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBS2dFYzk0TVl4TTRXazF1WFlENXhGL0xiS255eTBwWUk1UlBVWm95bk1Lcjl3MHVmYXhIL2dMaGFjdmkKck1NdTV3bXVOcnJDdGdBbUwyOTZhZVFLZ1NTUTRrQlZZOGJJL0dpaXdRQU9Gb3JEcWxTeUZMVXJ1aWhHcm5JdgpoOXozeWpCVEVOWk1LcWNYVGdvWE5TL2xUZzE1NWJTZm43TG92c0FENDN5bk1xUFBMeEwySDNkZVc0bkpjM0YyClArWEhjRzI1MzJzSlBKRW9lUW5hTE1BRlB5WWFNeEFxdk9Rb0cyVW0rcjVoTVJGYXRKcjYzOXpFM04vUjRScm4KdWRDbGl4NWtKYUdSak1rdUFnVGEwRnB0UHV6aUpIQW4rNWlSRHN5SnN5QXFLcmNjQ0lueklZSkVMOG5PY0hIWgpNa2ZVUzYvbVRsMUFVM01MQ2RxWTBBYmJXcHc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
                    }
                }
            ],
            "users": [
                {
                    "name": "loopback",
                    "user": {
                        "client-certificate-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaekNDQWsrZ0F3SUJBZ0lJSTJzV3F5OVJCSTR3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB5TXpBNU1qVXlNVE0wTXpWYUZ3MHpNekE1TWpJeU1UTTBNelphTURBeEZ6QVZCZ05WQkFvVERuTjVjM1JsCmJUcHRZWE4wWlhKek1SVXdFd1lEVlFRREV3eHplWE4wWlcwNllXUnRhVzR3Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURjbmZvTDY2eHlBeFRxeWswN09YUXVIeHd4Z0loOEE4NmtMVUs4MjJxbAo3dnhBKzdQQTVyUTJqMWJscjJ6Y0QvSWU2SWZyeUtQbytrN2FuU2VnR1Z1VnZLU2dVRzh4THY4YlRobTAyc0o1CmhQdEFZRjUvVXN4UE1mVU9PcTdncndrSXI5UUt0bkNlZ1dMeTNqQWRWOFRsQmJ6U3NPK3M2VWk5NDh4U1haczAKWFd2N1g3R2VnckMxdGZad1JVaWZZdlhuT3orWDA1YlZpcGQva2h1ZStHdnN0V0xiRmhNdTFvVFFkZnhMVVI5bwowK0FwMkdVTXZCKzRoRHpnWW1pNG0yRkFrTG9yUUx5YmhsLzd1czU4TmRKL2dxS2V4REQ4Q2laamhic0FqTGwzCk0vV1BTeFROQVBYdlVuclJkanBJZXYvT3dFZHlsRmRsbm0wM3BnNmdPWjc3QWdNQkFBR2pmekI5TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVnSVN5TDUyN25EWGdQNVdBS1VxSVhIVUJEQjB3SHdZRFZSMGpCQmd3CkZvQVU4NTUzRjF5VXNSRGs4Ti8zcHdPYmhwNjBPZHN3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUlYOUFZZFgKNmdKWnBZdkZ6M2dCaDJlRGFrNnN1OVVGZnQ0ZTdyY2FzUHJ6TWtPaXlRdHc5a0pjeU1uZlIzUkxDazRKZzczeQo0eHowSmNwVU5iTzB1UFZrUUM1TldrMTVSWXJGbTBhdEQ4azNzck1tQkVycFhDM1EzUVBrcDllUm0xZGg5OFdWClNDVDdlY0pMMFhIRjRZZkkyMEVxeEpralB2VElaRFBIblYwMkVhbyt0cmZUTDJIWUFRSGZRZUwwbnJ4MG9WMzIKbVJTQ3MyQWFodFdUMUxPUWRnenFQYmNBZXZtUlJSa1FwSitqRG50Y1B0V1R6LzBobWZOT3FaYWFpTGpMN3BQNQo1SGltYzMrcE1qWUpMekdwbWQzMXBZWWkwSUF4WlJKWC91dHBQZHZnVE5KVExrU0plbTlBYkVuUGRXTDlxbjJMClZ0aWZkUUVFRWFIS1Rodz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                        "client-key-data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBM0ozNkMrdXNjZ01VNnNwTk96bDBMaDhjTVlDSWZBUE9wQzFDdk50cXBlNzhRUHV6CndPYTBObzlXNWE5czNBL3lIdWlINjhpajZQcE8ycDBub0JsYmxieWtvRkJ2TVM3L0cwNFp0TnJDZVlUN1FHQmUKZjFMTVR6SDFEanF1NEs4SkNLL1VDclp3bm9GaTh0NHdIVmZFNVFXODByRHZyT2xJdmVQTVVsMmJORjFyKzEreApub0t3dGJYMmNFVkluMkwxNXpzL2w5T1cxWXFYZjVJYm52aHI3TFZpMnhZVEx0YUUwSFg4UzFFZmFOUGdLZGhsCkRMd2Z1SVE4NEdKb3VKdGhRSkM2SzBDOG00WmYrN3JPZkRYU2Y0S2luc1F3L0FvbVk0VzdBSXk1ZHpQMWowc1UKelFEMTcxSjYwWFk2U0hyL3pzQkhjcFJYWlo1dE42WU9vRG1lK3dJREFRQUJBb0lCQUZuc2hwUS9UcjMySlp1QwpOREswdTNkbE5OKzBqVzFITy81TmVJdDBRQ2M4bjFONWhRNVd1eFFXSHd4bUVkQXRLN3FQZTMrTys4aWw1bWhUCmNHaGdqYVVlREZoUUVOS1NYbWRwMFM2WGtIZHB6ZU95cERIdnRObCsrbXovWEhLMnhjN2xwRjl0ZDhBVDZ4b2wKbUtVTk5uTkhnR3k4dENUZHZjbXd4WUs1SnQ4VGh4RFo0cGZLYzhWMGV2YmNGRWhPbjdQTXJ6NDFtcm1ZNFJtZwpXRlg2djkxNGxTUlNuMTg5ZFE1eXNkbFdWRkkyTTNIdEU5T21LZmJMeGx1MnU0VUl2eHNoblVSS0VoVVM1NngyCnZLY29YeHhPa1MzeFRGNTlJOHYrSWp1M29NQ0J4L3hzWHA0R3pzOEUxTVNTWEFEenVhY3dlbFgySG5FUHpsUW0KeHVsUkFhRUNnWUVBM2JVTGpkSEhmUjhIOElVS3k3NnNOUEdlNExNUGF2d1JJanh0M1M3NG1tUnJxa0VkajN6VwpFTWE0SWFucFo2ejlUVGwydjFwMkRZQ1MwMEpVdkJOdEo3Z09tRExIa21UcFg1N0pJYzgvaTZ0V2NBNEpka2hsClFCZGVyWTAvMVFyakhZcGkzR2JVL3FsOWVEanVGZTBBOUk1d0hxLys2YTQ1MUV0VzQvci9QVXNDZ1lFQS9yM0UKTkFsNnk4aGJnYWZpeDVYNzIvT2ZsS2cvdUc5d1FGa0drdjl6blphb29QTmQwcXhLcnR5TytxRUZKWXRObDhjQgpUdWNSaDRUajVnaUllNWNlaHA5MEc4THljcjBkbnprREd3SitRSkx1cXZKTmNCUUhVVjczSDhHS1IxbkpQQlluCld1TEN3dkNWQVVkdnNIdHBPcHpxYjcvVU5JcFcyZUVpVU45Y2h4RUNnWUJBSWpVYmEwbTN5aGd6M1dpSUU3b2cKL3B3bEIrYzMzWDdmVm5lNWVmTDBSb1JXbGN1RlRHbG9KUFB5MlFIcHVjTDBhZUVON1k4a3pNS3NWZzNJOGgycgpWYlR6RmcxaExjdk1tMVEzY1lwQ1R1Z01OaU5La2hxbjlacXZ2YUp2Y0Z6T21NK01UanJqQ0FpQmxJWmExVnBuClpDVE8yNzV6dnJCLzF1Tmx3NSsrRFFLQmdRQ2N2UjV2OWpVOEZiZFgrM2lwM1RydWh1UDFqK0JGRnl3Mks1REQKK2JHbGtRR0lwclZmM3VyRTFLaVV4V1pwUjJFaXRpdXo1TEVBZFYvVU5nUGtKNE44eWJlakxUd0lKUnlJejRkOQpvdmNUdkZSbGtsamJVVGQvZGJNUU13Rm1EWFNvSitsbkhvYy9jcy83elh5SFZpZlZESitpeXFGREFxdVZ1OVJsCmRrbDBRUUtCZ0ZJTndZZUJnR01aNFNvNzNpOEovVzJrMlZIUjc5Q1J6S0hhMmVaMU9PZlRJQUU3TDBSVHJlbWwKM0VHbmFwUmdGU2V5aXNnVU5LeE9Uakg1MUI3N2UrVWx3KzVBR2lqV3M3cUlTYktwb2kyU3paZHN2dG5temx1YwpMNUFtNW5FTGVGRVBwMUNvUUlVM215VlBnZC9zckhZTUhvUW40UjNJZlI4YmZjc2ZLbTZuCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
                    }
                }
            ],
            "contexts": [
                {
                    "name": "loopback",
                    "context": {
                        "cluster": "edf-demo",
                        "user": "loopback"
                    }
                }
            ],
            "current-context": "loopback"
        },
        "File": {
            "Filename": "auth/kubeconfig-loopback",
            "Data": "Y2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSUlJFTkRRV2xwWjBGM1NVSkJaMGxKVWxWWlZHcFhTRUZrTDFsM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZFFha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFUWjNkS1oxbEVWbEZSUkVWNE9YSmtWMHBzVEZkR2QyRllUbXhqYmxwc1kya3hjMkl5VG1oaVIyaDJZek5SZEFwak1teHVZbTFXZVUxQ05GaEVWRWw2VFVScmVVNVVTWGhOZWxGNlRteHZXRVJVVFhwTlJHdDVUV3BKZUUxNlVYcE9iRzkzVUdwRlUwMUNRVWRCTVZWRkNrTjRUVXBpTTBKc1ltNU9iMkZYV2pCTlUyZDNTbWRaUkZaUlVVUkZlRGx5WkZkS2JFeFhSbmRoV0U1c1kyNWFiR05wTVhOaU1rNW9Za2RvZG1NelVYUUtZekpzYm1KdFZubE5TVWxDU1dwQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSUlVaQlFVOURRVkU0UVUxSlNVSkRaMHREUVZGRlFYWm1kV1pUWVU1RVZXSXlRZ3BzU0hweFRreGlRWFVyVEhjNFZqTkNZa2RPYlRkT1NUZFdSM00wVFRCVGFqRmhValV3UjJKWWFsRnVhakJxVjJkaWFtVjBRMFpqUlVNMVZUUk5lVVUzQ2xWSlZUWlRiMVJIVm0xVVpsaHBZMk5vWmpGQ00zQldRWEY1UVhnM1l6bEdiMDgzVFhOWU5XcEhNRlJ4VUdoWlVpOTNUV0ZFTTBWVU5qWkpWbGQwYVdjS2EyRnFOR2RJY0dWTmIwbzBXa2hNYlZaQ2NGZEpOa2x2YjAxNE5WZ3lZbEZyVHpCTVpYWkhkMHRRVTFkb0swRllUVmhsVTJoMlpVbFVZM1ZVYVdnMmJncDNXWGQzZVRVellXNTJjbFJDV2pkeE1rTmFibHB3UTBOS1pqWjJZelZaVVdSMlVYUkNNa05HVmpKUGNEVTBaRmRKYzNOWWRWQTJaRnBRWTBkSGNrTmtDbkZhVUhvNFpVMTJNMDFCUjBrdlFVOURMMWREV2tsbWJIUjRXa1pHZW01blNtUjBVbVowUm5aUFoxQTVSV05HYTAxNFpuQTVaRzFaWkVrMGJUUklVWG9LY1hscWQxSXJRMDFtZDBsRVFWRkJRbTh3U1hkUlJFRlBRbWRPVmtoUk9FSkJaamhGUWtGTlEwRnhVWGRFZDFsRVZsSXdWRUZSU0M5Q1FWVjNRWGRGUWdvdmVrRmtRbWRPVmtoUk5FVkdaMUZWZDBkb2NVcG5aMk5KYlZOV1pVazBhMEZDZG5aNlNWY3ZVWEZGZDBSUldVcExiMXBKYUhaalRrRlJSVXhDVVVGRUNtZG5SVUpCUzJkRll6azBUVmw0VFRSWGF6RjFXRmxFTlhoR0wweGlTMjU1ZVRCd1dVazFVbEJWV205NWJrMUxjamwzTUhWbVlYaElMMmRNYUdGamRta0tjazFOZFRWM2JYVk9jbkpEZEdkQmJVd3lPVFpoWlZGTFoxTlRVVFJyUWxaWk9HSkpMMGRwYVhkUlFVOUdiM0pFY1d4VGVVWk1WWEoxYVdoSGNtNUpkZ3BvT1hvemVXcENWRVZPV2sxTGNXTllWR2R2V0U1VEwyeFVaekUxTldKVFptNDNURzkyYzBGRU5ETjViazF4VUZCTWVFd3lTRE5rWlZjMGJrcGpNMFl5Q2xBcldFaGpSekkxTXpKelNsQktSVzlsVVc1aFRFMUJSbEI1V1dGTmVFRnhkazlSYjBjeVZXMHJjalZvVFZKR1lYUktjall6T1hwRk0wNHZValJTY200S2RXUkRiR2w0Tld0S1lVZFNhazFyZFVGblZHRXdSbkIwVUhWNmFVcElRVzRyTldsU1JITjVTbk41UVhGTGNtTmpRMGx1ZWtsWlNrVk1PRzVQWTBoSVdncE5hMlpWVXpZdmJWUnNNVUZWTTAxTVEyUnhXVEJCWW1KWGNIYzlDaTB0TFMwdFJVNUVJRU5GVWxSSlJrbERRVlJGTFMwdExTMEsKICAgIHNlcnZlcjogaHR0cHM6Ly9sb2NhbGhvc3Q6NjQ0MwogIG5hbWU6IGVkZi1kZW1vCmNvbnRleHRzOgotIGNvbnRleHQ6CiAgICBjbHVzdGVyOiBlZGYtZGVtbwogICAgdXNlcjogbG9vcGJhY2sKICBuYW1lOiBsb29wYmFjawpjdXJyZW50LWNvbnRleHQ6IGxvb3BiYWNrCnByZWZlcmVuY2VzOiB7fQp1c2VyczoKLSBuYW1lOiBsb29wYmFjawogIHVzZXI6CiAgICBjbGllbnQtY2VydGlmaWNhdGUtZGF0YTogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUmFla05EUVdzclowRjNTVUpCWjBsSlNUSnpWM0Y1T1ZKQ1NUUjNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRWGRPYWtWVFRVSkJSMEV4VlVVS1EzaE5TbUl6UW14aWJrNXZZVmRhTUUxVFFYZElaMWxFVmxGUlJFVjRaR2hhUnpGd1lta3hjbVJYU214Wk1qbDFXbTFzYmt4WVRuQmFNalZzWTJwQlpRcEdkekI1VFhwQk5VMXFWWGxOVkUwd1RYcFdZVVozTUhwTmVrRTFUV3BKZVUxVVRUQk5lbHBoVFVSQmVFWjZRVlpDWjA1V1FrRnZWRVJ1VGpWak0xSnNDbUpVY0hSWldFNHdXbGhLZWsxU1ZYZEZkMWxFVmxGUlJFVjNlSHBsV0U0d1dsY3dObGxYVW5SaFZ6UjNaMmRGYVUxQk1FZERVM0ZIVTBsaU0wUlJSVUlLUVZGVlFVRTBTVUpFZDBGM1oyZEZTMEZ2U1VKQlVVUmpibVp2VERZMmVIbEJlRlJ4ZVdzd04wOVlVWFZJZUhkNFowbG9PRUU0Tm10TVZVczRNakp4YkFvM2RuaEJLemRRUVRWeVVUSnFNV0pzY2pKNlkwUXZTV1UyU1daeWVVdFFieXRyTjJGdVUyVm5SMVoxVm5aTFUyZFZSemg0VEhZNFlsUm9iVEF5YzBvMUNtaFFkRUZaUmpVdlZYTjRVRTFtVlU5UGNUZG5jbmRyU1hJNVVVdDBia05sWjFkTWVUTnFRV1JXT0ZSc1FtSjZVM05QSzNNMlZXazVORGg0VTFoYWN6QUtXRmQyTjFnM1IyVm5ja014ZEdaYWQxSlZhV1paZGxodVQzb3JXREExWWxacGNHUXZhMmgxWlN0SGRuTjBWMHhpUm1oTmRURnZWRkZrWm5oTVZWSTVid293SzBGd01rZFZUWFpDS3pSb1JIcG5XVzFwTkcweVJrRnJURzl5VVV4NVltaHNMemQxY3pVNFRtUktMMmR4UzJWNFJFUTRRMmxhYW1oaWMwRnFUR3d6Q2swdlYxQlRlRlJPUVZCWWRsVnVjbEprYW5CSlpYWXZUM2RGWkhsc1JtUnNibTB3TTNCbk5tZFBXamMzUVdkTlFrRkJSMnBtZWtJNVRVRTBSMEV4VldRS1JIZEZRaTkzVVVWQmQwbEdiMFJCWkVKblRsWklVMVZGUm1wQlZVSm5aM0pDWjBWR1FsRmpSRUZSV1VsTGQxbENRbEZWU0VGM1NYZEVRVmxFVmxJd1ZBcEJVVWd2UWtGSmQwRkVRV1JDWjA1V1NGRTBSVVpuVVZWblNWTjVURFV5TjI1RVdHZFFOVmRCUzFWeFNWaElWVUpFUWpCM1NIZFpSRlpTTUdwQ1FtZDNDa1p2UVZVNE5UVXpSakY1VlhOU1JHczRUaTh6Y0hkUFltaHdOakJQWkhOM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFVUm5aMFZDUVVsWU9VRlpaRmdLTm1kS1duQlpka1o2TTJkQ2FESmxSR0ZyTm5OMU9WVkdablEwWlRkeVkyRnpVSEo2VFd0UGFYbFJkSGM1YTBwamVVMXVabEl6VWt4RGF6UktaemN6ZVFvMGVIb3dTbU53VlU1aVR6QjFVRlpyVVVNMVRsZHJNVFZTV1hKR2JUQmhkRVE0YXpOemNrMXRRa1Z5Y0ZoRE0xRXpVVkJyY0RsbFVtMHhaR2c1T0ZkV0NsTkRWRGRsWTBwTU1GaElSalJaWmtreU1FVnhlRXByYWxCMlZFbGFSRkJJYmxZd01rVmhieXQwY21aVVRESklXVUZSU0daUlpVd3dibko0TUc5V016SUtiVkpUUTNNeVFXRm9kRmRVTVV4UFVXUm5lbkZRWW1OQlpYWnRVbEpTYTFGd1NpdHFSRzUwWTFCMFYxUjZMekJvYldaT1QzRmFZV0ZwVEdwTU4zQlFOUW8xU0dsdFl6TXJjRTFxV1VwTWVrZHdiV1F6TVhCWldXa3dTVUY0V2xKS1dDOTFkSEJRWkhablZFNUtWRXhyVTBwbGJUbEJZa1Z1VUdSWFREbHhiakpNQ2xaMGFXWmtVVVZGUldGSVMxUm9kejBLTFMwdExTMUZUa1FnUTBWU1ZFbEdTVU5CVkVVdExTMHRMUW89CiAgICBjbGllbnQta2V5LWRhdGE6IExTMHRMUzFDUlVkSlRpQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUXBOU1VsRmIzZEpRa0ZCUzBOQlVVVkJNMG96TmtNcmRYTmpaMDFWTm5Od1RrOTZiREJNYURoalRWbERTV1pCVUU5d1F6RkRkazUwY1hCbE56aFJVSFY2Q25kUFlUQk9iemxYTldFNWN6TkJMM2xJZFdsSU5qaHBhalpRY0U4eWNEQnViMEpzWW14aWVXdHZSa0oyVFZNM0wwY3dORnAwVG5KRFpWbFVOMUZIUW1VS1pqRk1UVlI2U0RGRWFuRjFORXM0U2tOTEwxVkRjbHAzYm05R2FUaDBOSGRJVm1aRk5WRlhPREJ5UkhaeVQyeEpkbVZRVFZWc01tSk9SakZ5S3pFcmVBcHViMHQzZEdKWU1tTkZWa2x1TWt3eE5YcHpMMnc1VDFjeFdYRllaalZKWW01MmFISTNURlpwTW5oWlZFeDBZVVV3U0ZnNFV6RkZabUZPVUdkTFpHaHNDa1JNZDJaMVNWRTRORWRLYjNWS2RHaFJTa00yU3pCRE9HMDBXbVlyTjNKUFprUllVMlkwUzJsdWMxRjNMMEZ2YlZrMFZ6ZEJTWGsxWkhwUU1Xb3djMVVLZWxGRU1UY3hTall3V0ZrMlUwaHlMM3B6UWtoamNGSllXbG8xZEU0MldVOXZSRzFsSzNkSlJFRlJRVUpCYjBsQ1FVWnVjMmh3VVM5VWNqTXlTbHAxUXdwT1JFc3dkVE5rYkU1T0t6QnFWekZJVHk4MVRtVkpkREJSUTJNNGJqRk9OV2hSTlZkMWVGRlhTSGQ0YlVWa1FYUkxOM0ZRWlRNclR5czRhV3cxYldoVUNtTkhhR2RxWVZWbFJFWm9VVVZPUzFOWWJXUndNRk0yV0d0SVpIQjZaVTk1Y0VSSWRuUk9iQ3NyYlhvdldFaExNbmhqTjJ4d1JqbDBaRGhCVkRaNGIyd0tiVXRWVGs1dVRraG5SM2s0ZEVOVVpIWmpiWGQ0V1VzMVNuUTRWR2g0UkZvMGNHWkxZemhXTUdWMlltTkdSV2hQYmpkUVRYSjZOREZ0Y20xWk5GSnRad3BYUmxnMmRqa3hOR3hUVWxOdU1UZzVaRkUxZVhOa2JGZFdSa2t5VFROSWRFVTVUMjFMWm1KTWVHeDFNblUwVlVsMmVITm9ibFZTUzBWb1ZWTTFObmd5Q25aTFkyOVllSGhQYTFNemVGUkdOVGxKT0hZclNXcDFNMjlOUTBKNEwzaHpXSEEwUjNwek9FVXhUVk5UV0VGRWVuVmhZM2RsYkZneVNHNUZVSHBzVVcwS2VIVnNVa0ZoUlVObldVVkJNMkpWVEdwa1NFaG1VamhJT0VsVlMzazNObk5PVUVkbE5FeE5VR0YyZDFKSmFuaDBNMU0zTkcxdFVuSnhhMFZrYWpONlZ3cEZUV0UwU1dGdWNGbzJlamxVVkd3eWRqRndNa1JaUTFNd01FcFZka0pPZEVvM1owOXRSRXhJYTIxVWNGZzFOMHBKWXpndmFUWjBWMk5CTkVwa2EyaHNDbEZDWkdWeVdUQXZNVkZ5YWtoWmNHa3pSMkpWTDNGc09XVkVhblZHWlRCQk9VazFkMGh4THlzMllUUTFNVVYwVnpRdmNpOVFWWE5EWjFsRlFTOXlNMFVLVGtGc05uazRhR0puWVdacGVEVllOekl2VDJac1MyY3ZkVWM1ZDFGR2EwZHJkamw2YmxwaGIyOVFUbVF3Y1hoTGNuUjVUeXR4UlVaS1dYUk9iRGhqUWdwVWRXTlNhRFJVYWpWbmFVbGxOV05sYUhBNU1FYzRUSGxqY2pCa2JucHJSRWQzU2l0UlNreDFjWFpLVG1OQ1VVaFZWamN6U0RoSFMxSXhia3BRUWxsdUNsZDFURU4zZGtOV1FWVmtkbk5JZEhCUGNIcHhZamN2VlU1SmNGY3laVVZwVlU0NVkyaDRSVU5uV1VKQlNXcFZZbUV3YlRONWFHZDZNMWRwU1VVM2IyY0tMM0IzYkVJcll6TXpXRGRtVm01bE5XVm1UREJTYjFKWGJHTjFSbFJIYkc5S1VGQjVNbEZJY0hWalREQmhaVVZPTjFrNGEzcE5TM05XWnpOSk9HZ3ljZ3BXWWxSNlJtY3hhRXhqZGsxdE1WRXpZMWx3UTFSMVowMU9hVTVMYTJoeGJqbGFjWFoyWVVwMlkwWjZUMjFOSzAxVWFuSnFRMEZwUW14SldtRXhWbkJ1Q2xwRFZFOHlOelY2ZG5KQ0x6RjFUbXgzTlNzclJGRkxRbWRSUTJOMlVqVjJPV3BWT0VaaVpGZ3JNMmx3TTFSeWRXaDFVREZxSzBKR1JubDNNa3MxUkVRS0sySkhiR3RSUjBsd2NsWm1NM1Z5UlRGTGFWVjRWMXB3VWpKRmFYUnBkWG8xVEVWQlpGWXZWVTVuVUd0S05FNDRlV0psYWt4VWQwbEtVbmxKZWpSa09RcHZkbU5VZGtaU2JHdHNhbUpWVkdRdlpHSk5VVTEzUm0xRVdGTnZTaXRzYmtodll5OWpjeTgzZWxoNVNGWnBabFpFU2l0cGVYRkdSRUZ4ZFZaMU9WSnNDbVJyYkRCUlVVdENaMFpKVG5kWlpVSm5SMDFhTkZOdk56TnBPRW92VnpKck1sWklVamM1UTFKNlMwaGhNbVZhTVU5UFpsUkpRVVUzVERCU1ZISmxiV3dLTTBWSGJtRndVbWRHVTJWNWFYTm5WVTVMZUU5VWFrZzFNVUkzTjJVclZXeDNLelZCUjJscVYzTTNjVWxUWWt0d2Iya3lVM3BhWkhOMmRHNXRlbXgxWXdwTU5VRnROVzVGVEdWR1JWQndNVU52VVVsVk0yMTVWbEJuWkM5emNraFpUVWh2VVc0MFVqTkpabEk0WW1aamMyWkxiVFp1Q2kwdExTMHRSVTVFSUZKVFFTQlFVa2xXUVZSRklFdEZXUzB0TFMwdENnPT0K"
        }
    },
    "*machine.Master": {
        "Config": {
            "ignition": {
                "config": {
                    "merge": [
                        {
                            "source": "https://api-int.edf-demo.sandbox1880.opentlc.com:22623/config/master",
                            "verification": {}
                        }
                    ],
                    "replace": {
                        "verification": {}
                    }
                },
                "proxy": {},
                "security": {
                    "tls": {
                        "certificateAuthorities": [
                            {
                                "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lJWVBCSFFjbGdzR1l3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEl6TURreU5USXhNelF6TlZvWApEVE16TURreU1qSXhNelF6TlZvd0pqRVNNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5CmIyOTBMV05oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3Wm9jZkVobUd2SXgKTTFOZkJVakZEZWFIN0JkQ3piSnFqQ3F4c1lCQnBOSHUyMzhlcjhzR3ZHdC9QajhtTUJzaUpmVmZhclMzNHdXKwpRU1VLNGVrUlFZNUVQY09kUzloZjE2MzMxYjNvQy9KbHU5dnNucXdNdzI2MDAzVmF4Z3N1dnhNSTltZ2hEVHRXCnJYYndSejkvWWFxa0xYdUhFd0lJMVlzWVJlNXMxSEF6aitrcTRGbmRzOERKYktPcFJMS2d4L2x1cmZOdnNSVHoKL1ljMDc1dm5SYnhtRXBqWUdRWXA0eTBIUUZmTlcwcndFRzY2SlljWkxhZUUyWXdnWFZ0MEdkVHkxMGdnK2VyVwpMR3hFMWFQR3QydXJjMktEVVh4TldFcTNQZVBOSXlOTWVzdlY4YklxT2IwL2tNbHZXNGFvMFo5bGY5SWIrMVlICk41Vkg4cXBVNHdJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWUzSzMrMnViSGwxUjBlMThVcFQ4cHUxN0ovUXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUxjZ3hqV1g0bWRjNWJRZ3QzejU2dnJQNHluWm90RU8vdmdPYnhtelNuTUMwVE1wdDZHZFltQ3N2bE92ClVEdXBkY1VmeUZDZ1Y0ZlBXQnBUYTNpaEVaYnhKVktjRFk1NEoxZmNjUkQxNDE5ZGFKQVVBRkpXY1ZiQTdQUjIKVUgvVkVONHk3L1gxamVCbUIxUGVwOXBIZUNOb1dtVGdiSjFvcVpCcWgzWkdqT2Rla3lXUDQrWmIxRnNJcWJxegpGbjBGUmw5WTBQdFo1V3pvNnNBbGQ3YUU3Q3lTKzE5QVYzTzkyRVRuYnN5bWNVSDdCMThOSzBkUnd5aHhKSTMzCnhDSmxZanczUEZvMU9WSWU0Q1pYSjFmLzFFNld4QVk1cElETERNRk5XREJldDB6bFc1azlwdkZSdEZVSnA5N04KVlBqTlExc3paR2lIbHIyRjBNblB2bkFPL0NFPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                "verification": {}
                            }
                        ]
                    }
                },
                "timeouts": {},
                "version": "3.2.0"
            },
            "passwd": {},
            "storage": {},
            "systemd": {}
        },
        "File": {
            "Filename": "master.ign",
            "Data": "eyJpZ25pdGlvbiI6eyJjb25maWciOnsibWVyZ2UiOlt7InNvdXJjZSI6Imh0dHBzOi8vYXBpLWludC5lZGYtZGVtby5zYW5kYm94MTg4MC5vcGVudGxjLmNvbToyMjYyMy9jb25maWcvbWFzdGVyIn1dfSwic2VjdXJpdHkiOnsidGxzIjp7ImNlcnRpZmljYXRlQXV0aG9yaXRpZXMiOlt7InNvdXJjZSI6ImRhdGE6dGV4dC9wbGFpbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSRlJFTkRRV1pwWjBGM1NVSkJaMGxKV1ZCQ1NGRmpiR2R6UjFsM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEtha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFTUVhkRVoxbEVWbEZSUkVWM1pIbGlNamt3VEZkT2FFMUNORmhFVkVsNlRVUnJlVTVVU1hoTmVsRjZUbFp2V0FwRVZFMTZUVVJyZVUxcVNYaE5lbEY2VGxadmQwcHFSVk5OUWtGSFFURlZSVU40VFVwaU0wSnNZbTVPYjJGWFdqQk5Va0YzUkdkWlJGWlJVVVJGZDJSNUNtSXlPVEJNVjA1b1RVbEpRa2xxUVU1Q1oydHhhR3RwUnpsM01FSkJVVVZHUVVGUFEwRlJPRUZOU1VsQ1EyZExRMEZSUlVGM1dtOWpaa1ZvYlVkMlNYZ0tUVEZPWmtKVmFrWkVaV0ZJTjBKa1EzcGlTbkZxUTNGNGMxbENRbkJPU0hVeU16aGxjamh6UjNaSGRDOVFhamh0VFVKemFVcG1WbVpoY2xNek5IZFhLd3BSVTFWTE5HVnJVbEZaTlVWUVkwOWtVemxvWmpFMk16TXhZak52UXk5S2JIVTVkbk51Y1hkTmR6STJNREF6Vm1GNFozTjFkbmhOU1RsdFoyaEVWSFJYQ25KWVluZFNlamt2V1dGeGEweFlkVWhGZDBsSk1WbHpXVkpsTlhNeFNFRjZhaXRyY1RSR2JtUnpPRVJLWWt0UGNGSk1TMmQ0TDJ4MWNtWk9kbk5TVkhvS0wxbGpNRGMxZG01U1luaHRSWEJxV1VkUldYQTBlVEJJVVVabVRsY3djbmRGUnpZMlNsbGpXa3hoWlVVeVdYZG5XRlowTUVka1ZIa3hNR2RuSzJWeVZ3cE1SM2hGTVdGUVIzUXlkWEpqTWt0RVZWaDRUbGRGY1ROUVpWQk9TWGxPVFdWemRsWTRZa2x4VDJJd0wydE5iSFpYTkdGdk1GbzViR1k1U1dJck1WbElDazQxVmtnNGNYQlZOSGRKUkVGUlFVSnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSVUpCVFVOQmNWRjNSSGRaUkZaU01GUkJVVWd2UWtGVmQwRjNSVUlLTDNwQlpFSm5UbFpJVVRSRlJtZFJWV1V6U3pNck1uVmlTR3d4VWpCbE1UaFZjRlE0Y0hVeE4wb3ZVWGRFVVZsS1MyOWFTV2gyWTA1QlVVVk1RbEZCUkFwblowVkNRVXhqWjNocVYxZzBiV1JqTldKUlozUXplalUyZG5KUU5IbHVXbTkwUlU4dmRtZFBZbmh0ZWxOdVRVTXdWRTF3ZERaSFpGbHRRM04yYkU5MkNsVkVkWEJrWTFWbWVVWkRaMVkwWmxCWFFuQlVZVE5wYUVWYVluaEtWa3RqUkZrMU5Fb3habU5qVWtReE5ERTVaR0ZLUVZWQlJrcFhZMVppUVRkUVVqSUtWVWd2VmtWT05IazNMMWd4YW1WQ2JVSXhVR1Z3T1hCSVpVTk9iMWR0VkdkaVNqRnZjVnBDY1dneldrZHFUMlJsYTNsWFVEUXJXbUl4Um5OSmNXSnhlZ3BHYmpCR1VtdzVXVEJRZEZvMVYzcHZObk5CYkdRM1lVVTNRM2xUS3pFNVFWWXpUemt5UlZSdVluTjViV05WU0RkQ01UaE9TekJrVW5kNWFIaEtTVE16Q25oRFNteFphbmN6VUVadk1VOVdTV1UwUTFwWVNqRm1MekZGTmxkNFFWazFjRWxFVEVSTlJrNVhSRUpsZERCNmJGYzFhemx3ZGtaU2RFWlZTbkE1TjA0S1ZsQnFUbEV4YzNwYVIybEliSEl5UmpCTmJsQjJia0ZQTDBORlBRb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENnPT0ifV19fSwidmVyc2lvbiI6IjMuMi4wIn19"
        }
    },
    "*machine.MasterIgnitionCustomizations": {
        "File": null
    },
    "*machine.Worker": {
        "Config": {
            "ignition": {
                "config": {
                    "merge": [
                        {
                            "source": "https://api-int.edf-demo.sandbox1880.opentlc.com:22623/config/worker",
                            "verification": {}
                        }
                    ],
                    "replace": {
                        "verification": {}
                    }
                },
                "proxy": {},
                "security": {
                    "tls": {
                        "certificateAuthorities": [
                            {
                                "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lJWVBCSFFjbGdzR1l3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEl6TURreU5USXhNelF6TlZvWApEVE16TURreU1qSXhNelF6TlZvd0pqRVNNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5CmIyOTBMV05oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3Wm9jZkVobUd2SXgKTTFOZkJVakZEZWFIN0JkQ3piSnFqQ3F4c1lCQnBOSHUyMzhlcjhzR3ZHdC9QajhtTUJzaUpmVmZhclMzNHdXKwpRU1VLNGVrUlFZNUVQY09kUzloZjE2MzMxYjNvQy9KbHU5dnNucXdNdzI2MDAzVmF4Z3N1dnhNSTltZ2hEVHRXCnJYYndSejkvWWFxa0xYdUhFd0lJMVlzWVJlNXMxSEF6aitrcTRGbmRzOERKYktPcFJMS2d4L2x1cmZOdnNSVHoKL1ljMDc1dm5SYnhtRXBqWUdRWXA0eTBIUUZmTlcwcndFRzY2SlljWkxhZUUyWXdnWFZ0MEdkVHkxMGdnK2VyVwpMR3hFMWFQR3QydXJjMktEVVh4TldFcTNQZVBOSXlOTWVzdlY4YklxT2IwL2tNbHZXNGFvMFo5bGY5SWIrMVlICk41Vkg4cXBVNHdJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWUzSzMrMnViSGwxUjBlMThVcFQ4cHUxN0ovUXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUxjZ3hqV1g0bWRjNWJRZ3QzejU2dnJQNHluWm90RU8vdmdPYnhtelNuTUMwVE1wdDZHZFltQ3N2bE92ClVEdXBkY1VmeUZDZ1Y0ZlBXQnBUYTNpaEVaYnhKVktjRFk1NEoxZmNjUkQxNDE5ZGFKQVVBRkpXY1ZiQTdQUjIKVUgvVkVONHk3L1gxamVCbUIxUGVwOXBIZUNOb1dtVGdiSjFvcVpCcWgzWkdqT2Rla3lXUDQrWmIxRnNJcWJxegpGbjBGUmw5WTBQdFo1V3pvNnNBbGQ3YUU3Q3lTKzE5QVYzTzkyRVRuYnN5bWNVSDdCMThOSzBkUnd5aHhKSTMzCnhDSmxZanczUEZvMU9WSWU0Q1pYSjFmLzFFNld4QVk1cElETERNRk5XREJldDB6bFc1azlwdkZSdEZVSnA5N04KVlBqTlExc3paR2lIbHIyRjBNblB2bkFPL0NFPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                "verification": {}
                            }
                        ]
                    }
                },
                "timeouts": {},
                "version": "3.2.0"
            },
            "passwd": {},
            "storage": {},
            "systemd": {}
        },
        "File": {
            "Filename": "worker.ign",
            "Data": "eyJpZ25pdGlvbiI6eyJjb25maWciOnsibWVyZ2UiOlt7InNvdXJjZSI6Imh0dHBzOi8vYXBpLWludC5lZGYtZGVtby5zYW5kYm94MTg4MC5vcGVudGxjLmNvbToyMjYyMy9jb25maWcvd29ya2VyIn1dfSwic2VjdXJpdHkiOnsidGxzIjp7ImNlcnRpZmljYXRlQXV0aG9yaXRpZXMiOlt7InNvdXJjZSI6ImRhdGE6dGV4dC9wbGFpbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSRlJFTkRRV1pwWjBGM1NVSkJaMGxKV1ZCQ1NGRmpiR2R6UjFsM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEtha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFTUVhkRVoxbEVWbEZSUkVWM1pIbGlNamt3VEZkT2FFMUNORmhFVkVsNlRVUnJlVTVVU1hoTmVsRjZUbFp2V0FwRVZFMTZUVVJyZVUxcVNYaE5lbEY2VGxadmQwcHFSVk5OUWtGSFFURlZSVU40VFVwaU0wSnNZbTVPYjJGWFdqQk5Va0YzUkdkWlJGWlJVVVJGZDJSNUNtSXlPVEJNVjA1b1RVbEpRa2xxUVU1Q1oydHhhR3RwUnpsM01FSkJVVVZHUVVGUFEwRlJPRUZOU1VsQ1EyZExRMEZSUlVGM1dtOWpaa1ZvYlVkMlNYZ0tUVEZPWmtKVmFrWkVaV0ZJTjBKa1EzcGlTbkZxUTNGNGMxbENRbkJPU0hVeU16aGxjamh6UjNaSGRDOVFhamh0VFVKemFVcG1WbVpoY2xNek5IZFhLd3BSVTFWTE5HVnJVbEZaTlVWUVkwOWtVemxvWmpFMk16TXhZak52UXk5S2JIVTVkbk51Y1hkTmR6STJNREF6Vm1GNFozTjFkbmhOU1RsdFoyaEVWSFJYQ25KWVluZFNlamt2V1dGeGEweFlkVWhGZDBsSk1WbHpXVkpsTlhNeFNFRjZhaXRyY1RSR2JtUnpPRVJLWWt0UGNGSk1TMmQ0TDJ4MWNtWk9kbk5TVkhvS0wxbGpNRGMxZG01U1luaHRSWEJxV1VkUldYQTBlVEJJVVVabVRsY3djbmRGUnpZMlNsbGpXa3hoWlVVeVdYZG5XRlowTUVka1ZIa3hNR2RuSzJWeVZ3cE1SM2hGTVdGUVIzUXlkWEpqTWt0RVZWaDRUbGRGY1ROUVpWQk9TWGxPVFdWemRsWTRZa2x4VDJJd0wydE5iSFpYTkdGdk1GbzViR1k1U1dJck1WbElDazQxVmtnNGNYQlZOSGRKUkVGUlFVSnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSVUpCVFVOQmNWRjNSSGRaUkZaU01GUkJVVWd2UWtGVmQwRjNSVUlLTDNwQlpFSm5UbFpJVVRSRlJtZFJWV1V6U3pNck1uVmlTR3d4VWpCbE1UaFZjRlE0Y0hVeE4wb3ZVWGRFVVZsS1MyOWFTV2gyWTA1QlVVVk1RbEZCUkFwblowVkNRVXhqWjNocVYxZzBiV1JqTldKUlozUXplalUyZG5KUU5IbHVXbTkwUlU4dmRtZFBZbmh0ZWxOdVRVTXdWRTF3ZERaSFpGbHRRM04yYkU5MkNsVkVkWEJrWTFWbWVVWkRaMVkwWmxCWFFuQlVZVE5wYUVWYVluaEtWa3RqUkZrMU5Fb3habU5qVWtReE5ERTVaR0ZLUVZWQlJrcFhZMVppUVRkUVVqSUtWVWd2VmtWT05IazNMMWd4YW1WQ2JVSXhVR1Z3T1hCSVpVTk9iMWR0VkdkaVNqRnZjVnBDY1dneldrZHFUMlJsYTNsWFVEUXJXbUl4Um5OSmNXSnhlZ3BHYmpCR1VtdzVXVEJRZEZvMVYzcHZObk5CYkdRM1lVVTNRM2xUS3pFNVFWWXpUemt5UlZSdVluTjViV05WU0RkQ01UaE9TekJrVW5kNWFIaEtTVE16Q25oRFNteFphbmN6VUVadk1VOVdTV1UwUTFwWVNqRm1MekZGTmxkNFFWazFjRWxFVEVSTlJrNVhSRUpsZERCNmJGYzFhemx3ZGtaU2RFWlZTbkE1TjA0S1ZsQnFUbEV4YzNwYVIybEliSEl5UmpCTmJsQjJia0ZQTDBORlBRb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENnPT0ifV19fSwidmVyc2lvbiI6IjMuMi4wIn19"
        }
    },
    "*machine.WorkerIgnitionCustomizations": {
        "File": null
    },
    "*machines.Master": {
        "UserDataFile": {
            "Filename": "openshift/99_openshift-cluster-api_master-user-data-secret.yaml",
            "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IG1hc3Rlci11c2VyLWRhdGEKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1tYWNoaW5lLWFwaQp0eXBlOiBPcGFxdWUKZGF0YToKICBkaXNhYmxlVGVtcGxhdGluZzogImRISjFaUW89IgogIHVzZXJEYXRhOiBleUpwWjI1cGRHbHZiaUk2ZXlKamIyNW1hV2NpT25zaWJXVnlaMlVpT2x0N0luTnZkWEpqWlNJNkltaDBkSEJ6T2k4dllYQnBMV2x1ZEM1bFpHWXRaR1Z0Ynk1ellXNWtZbTk0TVRnNE1DNXZjR1Z1ZEd4akxtTnZiVG95TWpZeU15OWpiMjVtYVdjdmJXRnpkR1Z5SW4xZGZTd2ljMlZqZFhKcGRIa2lPbnNpZEd4eklqcDdJbU5sY25ScFptbGpZWFJsUVhWMGFHOXlhWFJwWlhNaU9sdDdJbk52ZFhKalpTSTZJbVJoZEdFNmRHVjRkQzl3YkdGcGJqdGphR0Z5YzJWMFBYVjBaaTA0TzJKaGMyVTJOQ3hNVXpCMFRGTXhRMUpWWkVwVWFVSkVVbFpLVlZOVldrcFJNRVpWVWxNd2RFeFRNSFJEYXpGS1UxVlNSbEpGVGtSUlYxcHdXakJHTTFOVlNrSmFNR3hLVjFaQ1ExTkdSbXBpUjJSNlVqRnNNMUpHUmxwVGEzUjJWMnRzYjJSdFRrOVJWa1pHVkVWS1VsRllaRXRoYTFaVVZGVktRbEl3UlhoV1ZWVkxVVE5vVGxOdFNYcFJiWGhwWW1zMWRsbFdaR0ZOUlRGVFVWaGtSVm94YkVWV2JFWlNVa1ZXTTFwSWJHbE5hbXQzVkVaa1QyRkZNVU5PUm1oRlZrVnNObFJWVW5KbFZUVlZVMWhvVG1Wc1JqWlViRnAyVjBGd1JWWkZNVFpVVlZKeVpWVXhjVk5ZYUU1bGJFWTJWR3hhZG1Rd2NIRlNWazVPVVd0R1NGRlVSbFpTVlU0MFZGVndhVTB3U25OWmJUVlBZakpHV0ZkcVFrNVZhMFl6VWtka1dsSkdXbEpWVlZKR1pESlNOVU50U1hsUFZFSk5WakExYjFSVmJFcFJhMnh4VVZVMVExb3lkSGhoUjNSd1VucHNNMDFGU2tKVlZWWkhVVlZHVUZFd1JsSlBSVVpPVTFWc1ExRXlaRXhSTUVaU1VsVkdNMWR0T1dwYWExWnZZbFZrTWxOWVowdFVWRVpQV210S1ZtRnJXa1ZhVjBaSlRqQkthMUV6Y0dsVGJrWnhVVE5HTkdNeGJFTlJia0pQVTBoVmVVMTZhR3hqYW1oNlVqTmFTR1JET1ZGaGFtaDBWRlZLZW1GVmNHMVdiVnBvWTJ4TmVrNUlaRmhMZDNCU1ZURldURTVIVm5KVmJFWmFUbFZXVVZrd09XdFZlbXh2V21wRk1rMTZUWGhaYWs1MlVYazVTMkpJVlRWa2JrNTFZMWhrVG1SNlNUSk5SRUY2Vm0xR05Gb3pUakZrYm1oT1UxUnNkRm95YUVWV1NGSllRMjVLV1ZsdVpGTmxhbXQyVjFkR2VHRXdlRmxrVldoR1pEQnNTazFXYkhwWFZrcHNUbGhOZUZORlJqWmhhWFJ5WTFSU1IySnRVbnBQUlZKTFdXdDBVR05HU2sxVE1tUTBUREo0TVdOdFdrOWtiazVUVmtodlMwd3hiR3BOUkdNeFpHMDFVMWx1YUhSU1dFSnhWMVZrVWxkWVFUQmxWRUpKVlZWYWJWUnNZM2RqYm1SR1VucFpNbE5zYkdwWGEzaG9XbFZWZVZkWVpHNVhSbG93VFVWa2ExWklhM2hOUjJSdVN6SldlVlozY0UxU00yaEdUVmRHVVZJelVYbGtXRXBxVFd0MFJWWldhRFJVYkdSR1kxUk9VVnBXUWs5VFdHeFBWRmRXZW1Sc1dUUlphMng0VkRKSmQwd3lkRTVpU0ZwWVRrZEdkazFHYnpWaVIxazFVMWRKY2sxV2JFbERhelF4Vm10bk5HTllRbFpPU0dSS1VrVkdVbEZWU25aTlJXd3pWVlZTUWxRd1NtNVViRnBKVlZSb1ExRlhXVFJTVlVwQ1ZGVk9RbU5XUmpOU1NHUmFVa1phVTAxR1VrSlZWV2QyVVd0R1ZtUXdSak5TVlVsTFRETndRbHBGU201VWJGcEpWVlJTUmxKdFpGSldWMVY2VTNwTmNrMXVWbWxUUjNkNFZXcENiRTFVYUZaalJsRTBZMGhWZUU0d2IzWlZXR1JGVlZac1MxTXlPV0ZUVjJneVdUQTFRbFZWVmsxUmJFWkNVa0Z3Ymxvd1ZrTlJWWGhxV2pOb2NWWXhaekJpVjFKcVRsZEtVbG96VVhwbGFsVXlaRzVLVVU1SWJIVlhiVGt3VWxVNGRtUnRaRkJaYm1oMFpXeE9kVlJWVFhkV1JURjNaRVJhU0ZwR2JIUlJNMDR5WWtVNU1rTnNWa1ZrV0VKcldURldiV1ZWV2tSYU1Wa3dXbXhDV0ZGdVFsVlpWRTV3WVVWV1lWbHVhRXRXYTNScVVrWnJNVTVGYjNoYWJVNXFWV3RSZUU1RVJUVmFSMFpMVVZaV1FsSnJjRmhaTVZwcFVWUmtVVlZxU1V0V1ZXZDJWbXRXVDA1SWF6Tk1NV2Q0WVcxV1EySlZTWGhWUjFaM1QxaENTVnBWVGs5aU1XUjBWa2RrYVZOcVJuWmpWbkJEWTFkbmVsZHJaSEZVTWxKc1lUTnNXRlZFVVhKWGJVbDRVbTVPU21OWFNuaGxaM0JIWW1wQ1IxVnRkelZYVkVKUlpFWnZNVll6Y0haT2JrNUNZa2RSTTFsVlZUTlJNMnhVUzNwRk5WRldXWHBVZW10NVVsWlNkVmx1VGpWaVYwNVdVMFJrUTAxVWFFOVRla0pyVlc1a05XRklhRXRUVkUxNlEyNW9SRk50ZUZwaGJtTjZWVVZhZGsxVk9WZFRWMVV3VVRGd1dWTnFSbTFNZWtaR1RteGtORkZXYXpGalJXeEZWRVZTVGxKck5WaFNSVXBzWkVSQ05tSkdZekZoZW14M1pHdGFVMlJGV2xaVGJrRTFUakEwUzFac1FuRlViRVY0WXpOd1lWSXliRWxpU0VsNVVtcENUbUpzUWpKaWEwWlFUREJPUmxCUmIzUk1VekIwVEZWV1QxSkRRa1JTVmtwVlUxVmFTbEV3UmxWU1V6QjBURk13ZEVOblBUMGlmVjE5ZlN3aWRtVnljMmx2YmlJNklqTXVNaTR3SW4xOQo="
        },
        "MachineConfigFiles": [
            {
                "Filename": "openshift/99_openshift-machineconfig_99-master-ssh.yaml",
                "Data": "YXBpVmVyc2lvbjogbWFjaGluZWNvbmZpZ3VyYXRpb24ub3BlbnNoaWZ0LmlvL3YxCmtpbmQ6IE1hY2hpbmVDb25maWcKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBsYWJlbHM6CiAgICBtYWNoaW5lY29uZmlndXJhdGlvbi5vcGVuc2hpZnQuaW8vcm9sZTogbWFzdGVyCiAgbmFtZTogOTktbWFzdGVyLXNzaApzcGVjOgogIGNvbmZpZzoKICAgIGlnbml0aW9uOgogICAgICB2ZXJzaW9uOiAzLjIuMAogICAgcGFzc3dkOgogICAgICB1c2VyczoKICAgICAgLSBuYW1lOiBjb3JlCiAgICAgICAgc3NoQXV0aG9yaXplZEtleXM6CiAgICAgICAgLSB8CiAgICAgICAgICBzc2gtcnNhIEFBQUFCM056YUMxeWMyRUFBQUFEQVFBQkFBQUJnUUNUTWwxTERxVkNhbzJHd3ZudlZwMXZrQzBxdXNuMXdKZ3NQSFR0TzVwVDNhZTlCNkpvRXVHUDA5aXN2QllsdXlKVEMvL0NaVlEwYUhqdDN0ZVYzQkVGR2RaVFlNaXQyMlRLR3pYcGZxYXVyR3l4TXlWVXRxcDRlRlFkRE5BemJSdmxIZ2VSM3VGNDJOTno3eFQ5dG05Vmp6elVKS3BmL09SNWQvVXRnNlJ3bkZEVC9QSkxmYStubTFkN1FIY0VQaUplSDYxSDZFL29kS09RT0YrNEdaaVVWVVFIRHRPUUVVY1Z1VkVDeGdhMkpOeHpRczB6UkFHUk1UelFBcjR4TWVENmM2ckRyRU9EN0VPS2tuUE5RUDlkZ29DYVZqNWR2L3ltaitzWjJjNHhaNDhFaHpmUXA4OUMzUDBCdW5jeTBDNHYrSERiT2VkQkRxL0JTbVp1UkhKbzdZbVlHNDZJSi9IeW1IRzNLV2tneXF3ZDdjZ0Q5NUUvMmsxU2IvZlNxZ21naWw2a2EzNHYyQjgzM3AxUFpGMC84RThYWmtEQlhqK0ZOZW5CY3Q0THlmZERxdGczSnh4V3FZQkxxMUYxMngxMmlUUUJTUnRJR3FheVBOVUJNdkJUci83V3VvSTNINXZ2ZHFrNTh6OHIyajNET2JpcHZya3g1ck5yNzdBK1U0Yz0gZmV2ZW5AbG9jYWxob3N0LmxvY2FsZG9tYWluCiAgZXh0ZW5zaW9uczogbnVsbAogIGZpcHM6IGZhbHNlCiAga2VybmVsQXJndW1lbnRzOiBudWxsCiAga2VybmVsVHlwZTogIiIKICBvc0ltYWdlVVJMOiAiIgo="
            }
        ],
        "MachineFiles": [
            {
                "Filename": "openshift/99_openshift-cluster-api_master-machines-0.yaml",
                "Data": "YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogZWRmLWRlbW8tOGdwNnoKICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtcm9sZTogbWFzdGVyCiAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXR5cGU6IG1hc3RlcgogIG5hbWU6IGVkZi1kZW1vLThncDZ6LW1hc3Rlci0wCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtbWFjaGluZS1hcGkKc3BlYzoKICBsaWZlY3ljbGVIb29rczoge30KICBtZXRhZGF0YToge30KICBwcm92aWRlclNwZWM6CiAgICB2YWx1ZToKICAgICAgYW1pOgogICAgICAgIGlkOiBhbWktMGVkM2YyNzNiMmU3NGY4MTQKICAgICAgYXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQogICAgICBibG9ja0RldmljZXM6CiAgICAgIC0gZWJzOgogICAgICAgICAgZW5jcnlwdGVkOiB0cnVlCiAgICAgICAgICBpb3BzOiAwCiAgICAgICAgICBrbXNLZXk6CiAgICAgICAgICAgIGFybjogIiIKICAgICAgICAgIHZvbHVtZVNpemU6IDEyMAogICAgICAgICAgdm9sdW1lVHlwZTogZ3AzCiAgICAgIGNyZWRlbnRpYWxzU2VjcmV0OgogICAgICAgIG5hbWU6IGF3cy1jbG91ZC1jcmVkZW50aWFscwogICAgICBkZXZpY2VJbmRleDogMAogICAgICBpYW1JbnN0YW5jZVByb2ZpbGU6CiAgICAgICAgaWQ6IGVkZi1kZW1vLThncDZ6LW1hc3Rlci1wcm9maWxlCiAgICAgIGluc3RhbmNlVHlwZTogbTZpLnhsYXJnZQogICAgICBraW5kOiBBV1NNYWNoaW5lUHJvdmlkZXJDb25maWcKICAgICAgbG9hZEJhbGFuY2VyczoKICAgICAgLSBuYW1lOiBlZGYtZGVtby04Z3A2ei1pbnQKICAgICAgICB0eXBlOiBuZXR3b3JrCiAgICAgIC0gbmFtZTogZWRmLWRlbW8tOGdwNnotZXh0CiAgICAgICAgdHlwZTogbmV0d29yawogICAgICBtZXRhZGF0YToKICAgICAgICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogICAgICBtZXRhZGF0YVNlcnZpY2VPcHRpb25zOiB7fQogICAgICBwbGFjZW1lbnQ6CiAgICAgICAgYXZhaWxhYmlsaXR5Wm9uZTogdXMtZWFzdC0yYQogICAgICAgIHJlZ2lvbjogdXMtZWFzdC0yCiAgICAgIHNlY3VyaXR5R3JvdXBzOgogICAgICAtIGZpbHRlcnM6CiAgICAgICAgLSBuYW1lOiB0YWc6TmFtZQogICAgICAgICAgdmFsdWVzOgogICAgICAgICAgLSBlZGYtZGVtby04Z3A2ei1tYXN0ZXItc2cKICAgICAgc3VibmV0OgogICAgICAgIGZpbHRlcnM6CiAgICAgICAgLSBuYW1lOiB0YWc6TmFtZQogICAgICAgICAgdmFsdWVzOgogICAgICAgICAgLSBlZGYtZGVtby04Z3A2ei1wcml2YXRlLXVzLWVhc3QtMmEKICAgICAgdGFnczoKICAgICAgLSBuYW1lOiBrdWJlcm5ldGVzLmlvL2NsdXN0ZXIvZWRmLWRlbW8tOGdwNnoKICAgICAgICB2YWx1ZTogb3duZWQKICAgICAgdXNlckRhdGFTZWNyZXQ6CiAgICAgICAgbmFtZTogbWFzdGVyLXVzZXItZGF0YQpzdGF0dXM6IHt9Cg=="
            },
            {
                "Filename": "openshift/99_openshift-cluster-api_master-machines-1.yaml",
                "Data": "YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogZWRmLWRlbW8tOGdwNnoKICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtcm9sZTogbWFzdGVyCiAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXR5cGU6IG1hc3RlcgogIG5hbWU6IGVkZi1kZW1vLThncDZ6LW1hc3Rlci0xCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtbWFjaGluZS1hcGkKc3BlYzoKICBsaWZlY3ljbGVIb29rczoge30KICBtZXRhZGF0YToge30KICBwcm92aWRlclNwZWM6CiAgICB2YWx1ZToKICAgICAgYW1pOgogICAgICAgIGlkOiBhbWktMGVkM2YyNzNiMmU3NGY4MTQKICAgICAgYXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQogICAgICBibG9ja0RldmljZXM6CiAgICAgIC0gZWJzOgogICAgICAgICAgZW5jcnlwdGVkOiB0cnVlCiAgICAgICAgICBpb3BzOiAwCiAgICAgICAgICBrbXNLZXk6CiAgICAgICAgICAgIGFybjogIiIKICAgICAgICAgIHZvbHVtZVNpemU6IDEyMAogICAgICAgICAgdm9sdW1lVHlwZTogZ3AzCiAgICAgIGNyZWRlbnRpYWxzU2VjcmV0OgogICAgICAgIG5hbWU6IGF3cy1jbG91ZC1jcmVkZW50aWFscwogICAgICBkZXZpY2VJbmRleDogMAogICAgICBpYW1JbnN0YW5jZVByb2ZpbGU6CiAgICAgICAgaWQ6IGVkZi1kZW1vLThncDZ6LW1hc3Rlci1wcm9maWxlCiAgICAgIGluc3RhbmNlVHlwZTogbTZpLnhsYXJnZQogICAgICBraW5kOiBBV1NNYWNoaW5lUHJvdmlkZXJDb25maWcKICAgICAgbG9hZEJhbGFuY2VyczoKICAgICAgLSBuYW1lOiBlZGYtZGVtby04Z3A2ei1pbnQKICAgICAgICB0eXBlOiBuZXR3b3JrCiAgICAgIC0gbmFtZTogZWRmLWRlbW8tOGdwNnotZXh0CiAgICAgICAgdHlwZTogbmV0d29yawogICAgICBtZXRhZGF0YToKICAgICAgICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogICAgICBtZXRhZGF0YVNlcnZpY2VPcHRpb25zOiB7fQogICAgICBwbGFjZW1lbnQ6CiAgICAgICAgYXZhaWxhYmlsaXR5Wm9uZTogdXMtZWFzdC0yYgogICAgICAgIHJlZ2lvbjogdXMtZWFzdC0yCiAgICAgIHNlY3VyaXR5R3JvdXBzOgogICAgICAtIGZpbHRlcnM6CiAgICAgICAgLSBuYW1lOiB0YWc6TmFtZQogICAgICAgICAgdmFsdWVzOgogICAgICAgICAgLSBlZGYtZGVtby04Z3A2ei1tYXN0ZXItc2cKICAgICAgc3VibmV0OgogICAgICAgIGZpbHRlcnM6CiAgICAgICAgLSBuYW1lOiB0YWc6TmFtZQogICAgICAgICAgdmFsdWVzOgogICAgICAgICAgLSBlZGYtZGVtby04Z3A2ei1wcml2YXRlLXVzLWVhc3QtMmIKICAgICAgdGFnczoKICAgICAgLSBuYW1lOiBrdWJlcm5ldGVzLmlvL2NsdXN0ZXIvZWRmLWRlbW8tOGdwNnoKICAgICAgICB2YWx1ZTogb3duZWQKICAgICAgdXNlckRhdGFTZWNyZXQ6CiAgICAgICAgbmFtZTogbWFzdGVyLXVzZXItZGF0YQpzdGF0dXM6IHt9Cg=="
            },
            {
                "Filename": "openshift/99_openshift-cluster-api_master-machines-2.yaml",
                "Data": "YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogZWRmLWRlbW8tOGdwNnoKICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtcm9sZTogbWFzdGVyCiAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXR5cGU6IG1hc3RlcgogIG5hbWU6IGVkZi1kZW1vLThncDZ6LW1hc3Rlci0yCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtbWFjaGluZS1hcGkKc3BlYzoKICBsaWZlY3ljbGVIb29rczoge30KICBtZXRhZGF0YToge30KICBwcm92aWRlclNwZWM6CiAgICB2YWx1ZToKICAgICAgYW1pOgogICAgICAgIGlkOiBhbWktMGVkM2YyNzNiMmU3NGY4MTQKICAgICAgYXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQogICAgICBibG9ja0RldmljZXM6CiAgICAgIC0gZWJzOgogICAgICAgICAgZW5jcnlwdGVkOiB0cnVlCiAgICAgICAgICBpb3BzOiAwCiAgICAgICAgICBrbXNLZXk6CiAgICAgICAgICAgIGFybjogIiIKICAgICAgICAgIHZvbHVtZVNpemU6IDEyMAogICAgICAgICAgdm9sdW1lVHlwZTogZ3AzCiAgICAgIGNyZWRlbnRpYWxzU2VjcmV0OgogICAgICAgIG5hbWU6IGF3cy1jbG91ZC1jcmVkZW50aWFscwogICAgICBkZXZpY2VJbmRleDogMAogICAgICBpYW1JbnN0YW5jZVByb2ZpbGU6CiAgICAgICAgaWQ6IGVkZi1kZW1vLThncDZ6LW1hc3Rlci1wcm9maWxlCiAgICAgIGluc3RhbmNlVHlwZTogbTZpLnhsYXJnZQogICAgICBraW5kOiBBV1NNYWNoaW5lUHJvdmlkZXJDb25maWcKICAgICAgbG9hZEJhbGFuY2VyczoKICAgICAgLSBuYW1lOiBlZGYtZGVtby04Z3A2ei1pbnQKICAgICAgICB0eXBlOiBuZXR3b3JrCiAgICAgIC0gbmFtZTogZWRmLWRlbW8tOGdwNnotZXh0CiAgICAgICAgdHlwZTogbmV0d29yawogICAgICBtZXRhZGF0YToKICAgICAgICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogICAgICBtZXRhZGF0YVNlcnZpY2VPcHRpb25zOiB7fQogICAgICBwbGFjZW1lbnQ6CiAgICAgICAgYXZhaWxhYmlsaXR5Wm9uZTogdXMtZWFzdC0yYwogICAgICAgIHJlZ2lvbjogdXMtZWFzdC0yCiAgICAgIHNlY3VyaXR5R3JvdXBzOgogICAgICAtIGZpbHRlcnM6CiAgICAgICAgLSBuYW1lOiB0YWc6TmFtZQogICAgICAgICAgdmFsdWVzOgogICAgICAgICAgLSBlZGYtZGVtby04Z3A2ei1tYXN0ZXItc2cKICAgICAgc3VibmV0OgogICAgICAgIGZpbHRlcnM6CiAgICAgICAgLSBuYW1lOiB0YWc6TmFtZQogICAgICAgICAgdmFsdWVzOgogICAgICAgICAgLSBlZGYtZGVtby04Z3A2ei1wcml2YXRlLXVzLWVhc3QtMmMKICAgICAgdGFnczoKICAgICAgLSBuYW1lOiBrdWJlcm5ldGVzLmlvL2NsdXN0ZXIvZWRmLWRlbW8tOGdwNnoKICAgICAgICB2YWx1ZTogb3duZWQKICAgICAgdXNlckRhdGFTZWNyZXQ6CiAgICAgICAgbmFtZTogbWFzdGVyLXVzZXItZGF0YQpzdGF0dXM6IHt9Cg=="
            }
        ],
        "ControlPlaneMachineSet": {
            "Filename": "openshift/99_openshift-machine-api_master-control-plane-machine-set.yaml",
            "Data": "YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjEKa2luZDogQ29udHJvbFBsYW5lTWFjaGluZVNldAptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIGxhYmVsczoKICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLWNsdXN0ZXI6IGVkZi1kZW1vLThncDZ6CiAgbmFtZTogY2x1c3RlcgogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LW1hY2hpbmUtYXBpCnNwZWM6CiAgcmVwbGljYXM6IDMKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiBlZGYtZGVtby04Z3A2egogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXJvbGU6IG1hc3RlcgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXR5cGU6IG1hc3RlcgogIHN0YXRlOiBBY3RpdmUKICBzdHJhdGVneToge30KICB0ZW1wbGF0ZToKICAgIG1hY2hpbmVUeXBlOiBtYWNoaW5lc192MWJldGExX21hY2hpbmVfb3BlbnNoaWZ0X2lvCiAgICBtYWNoaW5lc192MWJldGExX21hY2hpbmVfb3BlbnNoaWZ0X2lvOgogICAgICBmYWlsdXJlRG9tYWluczoKICAgICAgICBhd3M6CiAgICAgICAgLSBwbGFjZW1lbnQ6CiAgICAgICAgICAgIGF2YWlsYWJpbGl0eVpvbmU6IHVzLWVhc3QtMmEKICAgICAgICAgIHN1Ym5ldDoKICAgICAgICAgICAgZmlsdGVyczoKICAgICAgICAgICAgLSBuYW1lOiB0YWc6TmFtZQogICAgICAgICAgICAgIHZhbHVlczoKICAgICAgICAgICAgICAtIGVkZi1kZW1vLThncDZ6LXByaXZhdGUtdXMtZWFzdC0yYQogICAgICAgICAgICB0eXBlOiBGaWx0ZXJzCiAgICAgICAgLSBwbGFjZW1lbnQ6CiAgICAgICAgICAgIGF2YWlsYWJpbGl0eVpvbmU6IHVzLWVhc3QtMmIKICAgICAgICAgIHN1Ym5ldDoKICAgICAgICAgICAgZmlsdGVyczoKICAgICAgICAgICAgLSBuYW1lOiB0YWc6TmFtZQogICAgICAgICAgICAgIHZhbHVlczoKICAgICAgICAgICAgICAtIGVkZi1kZW1vLThncDZ6LXByaXZhdGUtdXMtZWFzdC0yYgogICAgICAgICAgICB0eXBlOiBGaWx0ZXJzCiAgICAgICAgLSBwbGFjZW1lbnQ6CiAgICAgICAgICAgIGF2YWlsYWJpbGl0eVpvbmU6IHVzLWVhc3QtMmMKICAgICAgICAgIHN1Ym5ldDoKICAgICAgICAgICAgZmlsdGVyczoKICAgICAgICAgICAgLSBuYW1lOiB0YWc6TmFtZQogICAgICAgICAgICAgIHZhbHVlczoKICAgICAgICAgICAgICAtIGVkZi1kZW1vLThncDZ6LXByaXZhdGUtdXMtZWFzdC0yYwogICAgICAgICAgICB0eXBlOiBGaWx0ZXJzCiAgICAgICAgcGxhdGZvcm06IEFXUwogICAgICBtZXRhZGF0YToKICAgICAgICBsYWJlbHM6CiAgICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiBlZGYtZGVtby04Z3A2egogICAgICAgICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktbWFjaGluZS1yb2xlOiBtYXN0ZXIKICAgICAgICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtdHlwZTogbWFzdGVyCiAgICAgIHNwZWM6CiAgICAgICAgbGlmZWN5Y2xlSG9va3M6IHt9CiAgICAgICAgbWV0YWRhdGE6IHt9CiAgICAgICAgcHJvdmlkZXJTcGVjOgogICAgICAgICAgdmFsdWU6CiAgICAgICAgICAgIGFtaToKICAgICAgICAgICAgICBpZDogYW1pLTBlZDNmMjczYjJlNzRmODE0CiAgICAgICAgICAgIGFwaVZlcnNpb246IG1hY2hpbmUub3BlbnNoaWZ0LmlvL3YxYmV0YTEKICAgICAgICAgICAgYmxvY2tEZXZpY2VzOgogICAgICAgICAgICAtIGViczoKICAgICAgICAgICAgICAgIGVuY3J5cHRlZDogdHJ1ZQogICAgICAgICAgICAgICAgaW9wczogMAogICAgICAgICAgICAgICAga21zS2V5OgogICAgICAgICAgICAgICAgICBhcm46ICIiCiAgICAgICAgICAgICAgICB2b2x1bWVTaXplOiAxMjAKICAgICAgICAgICAgICAgIHZvbHVtZVR5cGU6IGdwMwogICAgICAgICAgICBjcmVkZW50aWFsc1NlY3JldDoKICAgICAgICAgICAgICBuYW1lOiBhd3MtY2xvdWQtY3JlZGVudGlhbHMKICAgICAgICAgICAgZGV2aWNlSW5kZXg6IDAKICAgICAgICAgICAgaWFtSW5zdGFuY2VQcm9maWxlOgogICAgICAgICAgICAgIGlkOiBlZGYtZGVtby04Z3A2ei1tYXN0ZXItcHJvZmlsZQogICAgICAgICAgICBpbnN0YW5jZVR5cGU6IG02aS54bGFyZ2UKICAgICAgICAgICAga2luZDogQVdTTWFjaGluZVByb3ZpZGVyQ29uZmlnCiAgICAgICAgICAgIGxvYWRCYWxhbmNlcnM6CiAgICAgICAgICAgIC0gbmFtZTogZWRmLWRlbW8tOGdwNnotaW50CiAgICAgICAgICAgICAgdHlwZTogbmV0d29yawogICAgICAgICAgICAtIG5hbWU6IGVkZi1kZW1vLThncDZ6LWV4dAogICAgICAgICAgICAgIHR5cGU6IG5ldHdvcmsKICAgICAgICAgICAgbWV0YWRhdGE6CiAgICAgICAgICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgICAgICAgbWV0YWRhdGFTZXJ2aWNlT3B0aW9uczoge30KICAgICAgICAgICAgcGxhY2VtZW50OgogICAgICAgICAgICAgIHJlZ2lvbjogdXMtZWFzdC0yCiAgICAgICAgICAgIHNlY3VyaXR5R3JvdXBzOgogICAgICAgICAgICAtIGZpbHRlcnM6CiAgICAgICAgICAgICAgLSBuYW1lOiB0YWc6TmFtZQogICAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgICAgLSBlZGYtZGVtby04Z3A2ei1tYXN0ZXItc2cKICAgICAgICAgICAgc3VibmV0OiB7fQogICAgICAgICAgICB0YWdzOgogICAgICAgICAgICAtIG5hbWU6IGt1YmVybmV0ZXMuaW8vY2x1c3Rlci9lZGYtZGVtby04Z3A2egogICAgICAgICAgICAgIHZhbHVlOiBvd25lZAogICAgICAgICAgICB1c2VyRGF0YVNlY3JldDoKICAgICAgICAgICAgICBuYW1lOiBtYXN0ZXItdXNlci1kYXRhCnN0YXR1czoge30K"
        },
        "SecretFiles": null,
        "NetworkConfigSecretFiles": null,
        "HostFiles": null
    },
    "*machines.Worker": {
        "UserDataFile": {
            "Filename": "openshift/99_openshift-cluster-api_worker-user-data-secret.yaml",
            "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IHdvcmtlci11c2VyLWRhdGEKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1tYWNoaW5lLWFwaQp0eXBlOiBPcGFxdWUKZGF0YToKICBkaXNhYmxlVGVtcGxhdGluZzogImRISjFaUW89IgogIHVzZXJEYXRhOiBleUpwWjI1cGRHbHZiaUk2ZXlKamIyNW1hV2NpT25zaWJXVnlaMlVpT2x0N0luTnZkWEpqWlNJNkltaDBkSEJ6T2k4dllYQnBMV2x1ZEM1bFpHWXRaR1Z0Ynk1ellXNWtZbTk0TVRnNE1DNXZjR1Z1ZEd4akxtTnZiVG95TWpZeU15OWpiMjVtYVdjdmQyOXlhMlZ5SW4xZGZTd2ljMlZqZFhKcGRIa2lPbnNpZEd4eklqcDdJbU5sY25ScFptbGpZWFJsUVhWMGFHOXlhWFJwWlhNaU9sdDdJbk52ZFhKalpTSTZJbVJoZEdFNmRHVjRkQzl3YkdGcGJqdGphR0Z5YzJWMFBYVjBaaTA0TzJKaGMyVTJOQ3hNVXpCMFRGTXhRMUpWWkVwVWFVSkVVbFpLVlZOVldrcFJNRVpWVWxNd2RFeFRNSFJEYXpGS1UxVlNSbEpGVGtSUlYxcHdXakJHTTFOVlNrSmFNR3hLVjFaQ1ExTkdSbXBpUjJSNlVqRnNNMUpHUmxwVGEzUjJWMnRzYjJSdFRrOVJWa1pHVkVWS1VsRllaRXRoYTFaVVZGVktRbEl3UlhoV1ZWVkxVVE5vVGxOdFNYcFJiWGhwWW1zMWRsbFdaR0ZOUlRGVFVWaGtSVm94YkVWV2JFWlNVa1ZXTTFwSWJHbE5hbXQzVkVaa1QyRkZNVU5PUm1oRlZrVnNObFJWVW5KbFZUVlZVMWhvVG1Wc1JqWlViRnAyVjBGd1JWWkZNVFpVVlZKeVpWVXhjVk5ZYUU1bGJFWTJWR3hhZG1Rd2NIRlNWazVPVVd0R1NGRlVSbFpTVlU0MFZGVndhVTB3U25OWmJUVlBZakpHV0ZkcVFrNVZhMFl6VWtka1dsSkdXbEpWVlZKR1pESlNOVU50U1hsUFZFSk5WakExYjFSVmJFcFJhMnh4VVZVMVExb3lkSGhoUjNSd1VucHNNMDFGU2tKVlZWWkhVVlZHVUZFd1JsSlBSVVpPVTFWc1ExRXlaRXhSTUVaU1VsVkdNMWR0T1dwYWExWnZZbFZrTWxOWVowdFVWRVpQV210S1ZtRnJXa1ZhVjBaSlRqQkthMUV6Y0dsVGJrWnhVVE5HTkdNeGJFTlJia0pQVTBoVmVVMTZhR3hqYW1oNlVqTmFTR1JET1ZGaGFtaDBWRlZLZW1GVmNHMVdiVnBvWTJ4TmVrNUlaRmhMZDNCU1ZURldURTVIVm5KVmJFWmFUbFZXVVZrd09XdFZlbXh2V21wRk1rMTZUWGhaYWs1MlVYazVTMkpJVlRWa2JrNTFZMWhrVG1SNlNUSk5SRUY2Vm0xR05Gb3pUakZrYm1oT1UxUnNkRm95YUVWV1NGSllRMjVLV1ZsdVpGTmxhbXQyVjFkR2VHRXdlRmxrVldoR1pEQnNTazFXYkhwWFZrcHNUbGhOZUZORlJqWmhhWFJ5WTFSU1IySnRVbnBQUlZKTFdXdDBVR05HU2sxVE1tUTBUREo0TVdOdFdrOWtiazVUVmtodlMwd3hiR3BOUkdNeFpHMDFVMWx1YUhSU1dFSnhWMVZrVWxkWVFUQmxWRUpKVlZWYWJWUnNZM2RqYm1SR1VucFpNbE5zYkdwWGEzaG9XbFZWZVZkWVpHNVhSbG93VFVWa2ExWklhM2hOUjJSdVN6SldlVlozY0UxU00yaEdUVmRHVVZJelVYbGtXRXBxVFd0MFJWWldhRFJVYkdSR1kxUk9VVnBXUWs5VFdHeFBWRmRXZW1Sc1dUUlphMng0VkRKSmQwd3lkRTVpU0ZwWVRrZEdkazFHYnpWaVIxazFVMWRKY2sxV2JFbERhelF4Vm10bk5HTllRbFpPU0dSS1VrVkdVbEZWU25aTlJXd3pWVlZTUWxRd1NtNVViRnBKVlZSb1ExRlhXVFJTVlVwQ1ZGVk9RbU5XUmpOU1NHUmFVa1phVTAxR1VrSlZWV2QyVVd0R1ZtUXdSak5TVlVsTFRETndRbHBGU201VWJGcEpWVlJTUmxKdFpGSldWMVY2VTNwTmNrMXVWbWxUUjNkNFZXcENiRTFVYUZaalJsRTBZMGhWZUU0d2IzWlZXR1JGVlZac1MxTXlPV0ZUVjJneVdUQTFRbFZWVmsxUmJFWkNVa0Z3Ymxvd1ZrTlJWWGhxV2pOb2NWWXhaekJpVjFKcVRsZEtVbG96VVhwbGFsVXlaRzVLVVU1SWJIVlhiVGt3VWxVNGRtUnRaRkJaYm1oMFpXeE9kVlJWVFhkV1JURjNaRVJhU0ZwR2JIUlJNMDR5WWtVNU1rTnNWa1ZrV0VKcldURldiV1ZWV2tSYU1Wa3dXbXhDV0ZGdVFsVlpWRTV3WVVWV1lWbHVhRXRXYTNScVVrWnJNVTVGYjNoYWJVNXFWV3RSZUU1RVJUVmFSMFpMVVZaV1FsSnJjRmhaTVZwcFVWUmtVVlZxU1V0V1ZXZDJWbXRXVDA1SWF6Tk1NV2Q0WVcxV1EySlZTWGhWUjFaM1QxaENTVnBWVGs5aU1XUjBWa2RrYVZOcVJuWmpWbkJEWTFkbmVsZHJaSEZVTWxKc1lUTnNXRlZFVVhKWGJVbDRVbTVPU21OWFNuaGxaM0JIWW1wQ1IxVnRkelZYVkVKUlpFWnZNVll6Y0haT2JrNUNZa2RSTTFsVlZUTlJNMnhVUzNwRk5WRldXWHBVZW10NVVsWlNkVmx1VGpWaVYwNVdVMFJrUTAxVWFFOVRla0pyVlc1a05XRklhRXRUVkUxNlEyNW9SRk50ZUZwaGJtTjZWVVZhZGsxVk9WZFRWMVV3VVRGd1dWTnFSbTFNZWtaR1RteGtORkZXYXpGalJXeEZWRVZTVGxKck5WaFNSVXBzWkVSQ05tSkdZekZoZW14M1pHdGFVMlJGV2xaVGJrRTFUakEwUzFac1FuRlViRVY0WXpOd1lWSXliRWxpU0VsNVVtcENUbUpzUWpKaWEwWlFUREJPUmxCUmIzUk1VekIwVEZWV1QxSkRRa1JTVmtwVlUxVmFTbEV3UmxWU1V6QjBURk13ZEVOblBUMGlmVjE5ZlN3aWRtVnljMmx2YmlJNklqTXVNaTR3SW4xOQo="
        },
        "MachineConfigFiles": [
            {
                "Filename": "openshift/99_openshift-machineconfig_99-worker-ssh.yaml",
                "Data": "YXBpVmVyc2lvbjogbWFjaGluZWNvbmZpZ3VyYXRpb24ub3BlbnNoaWZ0LmlvL3YxCmtpbmQ6IE1hY2hpbmVDb25maWcKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBsYWJlbHM6CiAgICBtYWNoaW5lY29uZmlndXJhdGlvbi5vcGVuc2hpZnQuaW8vcm9sZTogd29ya2VyCiAgbmFtZTogOTktd29ya2VyLXNzaApzcGVjOgogIGNvbmZpZzoKICAgIGlnbml0aW9uOgogICAgICB2ZXJzaW9uOiAzLjIuMAogICAgcGFzc3dkOgogICAgICB1c2VyczoKICAgICAgLSBuYW1lOiBjb3JlCiAgICAgICAgc3NoQXV0aG9yaXplZEtleXM6CiAgICAgICAgLSB8CiAgICAgICAgICBzc2gtcnNhIEFBQUFCM056YUMxeWMyRUFBQUFEQVFBQkFBQUJnUUNUTWwxTERxVkNhbzJHd3ZudlZwMXZrQzBxdXNuMXdKZ3NQSFR0TzVwVDNhZTlCNkpvRXVHUDA5aXN2QllsdXlKVEMvL0NaVlEwYUhqdDN0ZVYzQkVGR2RaVFlNaXQyMlRLR3pYcGZxYXVyR3l4TXlWVXRxcDRlRlFkRE5BemJSdmxIZ2VSM3VGNDJOTno3eFQ5dG05Vmp6elVKS3BmL09SNWQvVXRnNlJ3bkZEVC9QSkxmYStubTFkN1FIY0VQaUplSDYxSDZFL29kS09RT0YrNEdaaVVWVVFIRHRPUUVVY1Z1VkVDeGdhMkpOeHpRczB6UkFHUk1UelFBcjR4TWVENmM2ckRyRU9EN0VPS2tuUE5RUDlkZ29DYVZqNWR2L3ltaitzWjJjNHhaNDhFaHpmUXA4OUMzUDBCdW5jeTBDNHYrSERiT2VkQkRxL0JTbVp1UkhKbzdZbVlHNDZJSi9IeW1IRzNLV2tneXF3ZDdjZ0Q5NUUvMmsxU2IvZlNxZ21naWw2a2EzNHYyQjgzM3AxUFpGMC84RThYWmtEQlhqK0ZOZW5CY3Q0THlmZERxdGczSnh4V3FZQkxxMUYxMngxMmlUUUJTUnRJR3FheVBOVUJNdkJUci83V3VvSTNINXZ2ZHFrNTh6OHIyajNET2JpcHZya3g1ck5yNzdBK1U0Yz0gZmV2ZW5AbG9jYWxob3N0LmxvY2FsZG9tYWluCiAgZXh0ZW5zaW9uczogbnVsbAogIGZpcHM6IGZhbHNlCiAga2VybmVsQXJndW1lbnRzOiBudWxsCiAga2VybmVsVHlwZTogIiIKICBvc0ltYWdlVVJMOiAiIgo="
            }
        ],
        "MachineSetFiles": [
            {
                "Filename": "openshift/99_openshift-cluster-api_worker-machineset-0.yaml",
                "Data": "YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lU2V0Cm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogZWRmLWRlbW8tOGdwNnoKICBuYW1lOiBlZGYtZGVtby04Z3A2ei13b3JrZXItdXMtZWFzdC0yYQogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LW1hY2hpbmUtYXBpCnNwZWM6CiAgcmVwbGljYXM6IDEKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiBlZGYtZGVtby04Z3A2egogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiBlZGYtZGVtby04Z3A2ei13b3JrZXItdXMtZWFzdC0yYQogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGxhYmVsczoKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiBlZGYtZGVtby04Z3A2egogICAgICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtcm9sZTogd29ya2VyCiAgICAgICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktbWFjaGluZS10eXBlOiB3b3JrZXIKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiBlZGYtZGVtby04Z3A2ei13b3JrZXItdXMtZWFzdC0yYQogICAgc3BlYzoKICAgICAgbGlmZWN5Y2xlSG9va3M6IHt9CiAgICAgIG1ldGFkYXRhOiB7fQogICAgICBwcm92aWRlclNwZWM6CiAgICAgICAgdmFsdWU6CiAgICAgICAgICBhbWk6CiAgICAgICAgICAgIGlkOiBhbWktMGVkM2YyNzNiMmU3NGY4MTQKICAgICAgICAgIGFwaVZlcnNpb246IG1hY2hpbmUub3BlbnNoaWZ0LmlvL3YxYmV0YTEKICAgICAgICAgIGJsb2NrRGV2aWNlczoKICAgICAgICAgIC0gZWJzOgogICAgICAgICAgICAgIGVuY3J5cHRlZDogdHJ1ZQogICAgICAgICAgICAgIGlvcHM6IDAKICAgICAgICAgICAgICBrbXNLZXk6CiAgICAgICAgICAgICAgICBhcm46ICIiCiAgICAgICAgICAgICAgdm9sdW1lU2l6ZTogMTIwCiAgICAgICAgICAgICAgdm9sdW1lVHlwZTogZ3AzCiAgICAgICAgICBjcmVkZW50aWFsc1NlY3JldDoKICAgICAgICAgICAgbmFtZTogYXdzLWNsb3VkLWNyZWRlbnRpYWxzCiAgICAgICAgICBkZXZpY2VJbmRleDogMAogICAgICAgICAgaWFtSW5zdGFuY2VQcm9maWxlOgogICAgICAgICAgICBpZDogZWRmLWRlbW8tOGdwNnotd29ya2VyLXByb2ZpbGUKICAgICAgICAgIGluc3RhbmNlVHlwZTogbTZpLnhsYXJnZQogICAgICAgICAga2luZDogQVdTTWFjaGluZVByb3ZpZGVyQ29uZmlnCiAgICAgICAgICBtZXRhZGF0YToKICAgICAgICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgICAgIG1ldGFkYXRhU2VydmljZU9wdGlvbnM6IHt9CiAgICAgICAgICBwbGFjZW1lbnQ6CiAgICAgICAgICAgIGF2YWlsYWJpbGl0eVpvbmU6IHVzLWVhc3QtMmEKICAgICAgICAgICAgcmVnaW9uOiB1cy1lYXN0LTIKICAgICAgICAgIHNlY3VyaXR5R3JvdXBzOgogICAgICAgICAgLSBmaWx0ZXJzOgogICAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgIC0gZWRmLWRlbW8tOGdwNnotd29ya2VyLXNnCiAgICAgICAgICBzdWJuZXQ6CiAgICAgICAgICAgIGZpbHRlcnM6CiAgICAgICAgICAgIC0gbmFtZTogdGFnOk5hbWUKICAgICAgICAgICAgICB2YWx1ZXM6CiAgICAgICAgICAgICAgLSBlZGYtZGVtby04Z3A2ei1wcml2YXRlLXVzLWVhc3QtMmEKICAgICAgICAgIHRhZ3M6CiAgICAgICAgICAtIG5hbWU6IGt1YmVybmV0ZXMuaW8vY2x1c3Rlci9lZGYtZGVtby04Z3A2egogICAgICAgICAgICB2YWx1ZTogb3duZWQKICAgICAgICAgIHVzZXJEYXRhU2VjcmV0OgogICAgICAgICAgICBuYW1lOiB3b3JrZXItdXNlci1kYXRhCnN0YXR1czoKICByZXBsaWNhczogMAo="
            },
            {
                "Filename": "openshift/99_openshift-cluster-api_worker-machineset-1.yaml",
                "Data": "YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lU2V0Cm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogZWRmLWRlbW8tOGdwNnoKICBuYW1lOiBlZGYtZGVtby04Z3A2ei13b3JrZXItdXMtZWFzdC0yYgogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LW1hY2hpbmUtYXBpCnNwZWM6CiAgcmVwbGljYXM6IDEKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiBlZGYtZGVtby04Z3A2egogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiBlZGYtZGVtby04Z3A2ei13b3JrZXItdXMtZWFzdC0yYgogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGxhYmVsczoKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiBlZGYtZGVtby04Z3A2egogICAgICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtcm9sZTogd29ya2VyCiAgICAgICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktbWFjaGluZS10eXBlOiB3b3JrZXIKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiBlZGYtZGVtby04Z3A2ei13b3JrZXItdXMtZWFzdC0yYgogICAgc3BlYzoKICAgICAgbGlmZWN5Y2xlSG9va3M6IHt9CiAgICAgIG1ldGFkYXRhOiB7fQogICAgICBwcm92aWRlclNwZWM6CiAgICAgICAgdmFsdWU6CiAgICAgICAgICBhbWk6CiAgICAgICAgICAgIGlkOiBhbWktMGVkM2YyNzNiMmU3NGY4MTQKICAgICAgICAgIGFwaVZlcnNpb246IG1hY2hpbmUub3BlbnNoaWZ0LmlvL3YxYmV0YTEKICAgICAgICAgIGJsb2NrRGV2aWNlczoKICAgICAgICAgIC0gZWJzOgogICAgICAgICAgICAgIGVuY3J5cHRlZDogdHJ1ZQogICAgICAgICAgICAgIGlvcHM6IDAKICAgICAgICAgICAgICBrbXNLZXk6CiAgICAgICAgICAgICAgICBhcm46ICIiCiAgICAgICAgICAgICAgdm9sdW1lU2l6ZTogMTIwCiAgICAgICAgICAgICAgdm9sdW1lVHlwZTogZ3AzCiAgICAgICAgICBjcmVkZW50aWFsc1NlY3JldDoKICAgICAgICAgICAgbmFtZTogYXdzLWNsb3VkLWNyZWRlbnRpYWxzCiAgICAgICAgICBkZXZpY2VJbmRleDogMAogICAgICAgICAgaWFtSW5zdGFuY2VQcm9maWxlOgogICAgICAgICAgICBpZDogZWRmLWRlbW8tOGdwNnotd29ya2VyLXByb2ZpbGUKICAgICAgICAgIGluc3RhbmNlVHlwZTogbTZpLnhsYXJnZQogICAgICAgICAga2luZDogQVdTTWFjaGluZVByb3ZpZGVyQ29uZmlnCiAgICAgICAgICBtZXRhZGF0YToKICAgICAgICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgICAgIG1ldGFkYXRhU2VydmljZU9wdGlvbnM6IHt9CiAgICAgICAgICBwbGFjZW1lbnQ6CiAgICAgICAgICAgIGF2YWlsYWJpbGl0eVpvbmU6IHVzLWVhc3QtMmIKICAgICAgICAgICAgcmVnaW9uOiB1cy1lYXN0LTIKICAgICAgICAgIHNlY3VyaXR5R3JvdXBzOgogICAgICAgICAgLSBmaWx0ZXJzOgogICAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgIC0gZWRmLWRlbW8tOGdwNnotd29ya2VyLXNnCiAgICAgICAgICBzdWJuZXQ6CiAgICAgICAgICAgIGZpbHRlcnM6CiAgICAgICAgICAgIC0gbmFtZTogdGFnOk5hbWUKICAgICAgICAgICAgICB2YWx1ZXM6CiAgICAgICAgICAgICAgLSBlZGYtZGVtby04Z3A2ei1wcml2YXRlLXVzLWVhc3QtMmIKICAgICAgICAgIHRhZ3M6CiAgICAgICAgICAtIG5hbWU6IGt1YmVybmV0ZXMuaW8vY2x1c3Rlci9lZGYtZGVtby04Z3A2egogICAgICAgICAgICB2YWx1ZTogb3duZWQKICAgICAgICAgIHVzZXJEYXRhU2VjcmV0OgogICAgICAgICAgICBuYW1lOiB3b3JrZXItdXNlci1kYXRhCnN0YXR1czoKICByZXBsaWNhczogMAo="
            },
            {
                "Filename": "openshift/99_openshift-cluster-api_worker-machineset-2.yaml",
                "Data": "YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lU2V0Cm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogZWRmLWRlbW8tOGdwNnoKICBuYW1lOiBlZGYtZGVtby04Z3A2ei13b3JrZXItdXMtZWFzdC0yYwogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LW1hY2hpbmUtYXBpCnNwZWM6CiAgcmVwbGljYXM6IDEKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiBlZGYtZGVtby04Z3A2egogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiBlZGYtZGVtby04Z3A2ei13b3JrZXItdXMtZWFzdC0yYwogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGxhYmVsczoKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiBlZGYtZGVtby04Z3A2egogICAgICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtcm9sZTogd29ya2VyCiAgICAgICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktbWFjaGluZS10eXBlOiB3b3JrZXIKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiBlZGYtZGVtby04Z3A2ei13b3JrZXItdXMtZWFzdC0yYwogICAgc3BlYzoKICAgICAgbGlmZWN5Y2xlSG9va3M6IHt9CiAgICAgIG1ldGFkYXRhOiB7fQogICAgICBwcm92aWRlclNwZWM6CiAgICAgICAgdmFsdWU6CiAgICAgICAgICBhbWk6CiAgICAgICAgICAgIGlkOiBhbWktMGVkM2YyNzNiMmU3NGY4MTQKICAgICAgICAgIGFwaVZlcnNpb246IG1hY2hpbmUub3BlbnNoaWZ0LmlvL3YxYmV0YTEKICAgICAgICAgIGJsb2NrRGV2aWNlczoKICAgICAgICAgIC0gZWJzOgogICAgICAgICAgICAgIGVuY3J5cHRlZDogdHJ1ZQogICAgICAgICAgICAgIGlvcHM6IDAKICAgICAgICAgICAgICBrbXNLZXk6CiAgICAgICAgICAgICAgICBhcm46ICIiCiAgICAgICAgICAgICAgdm9sdW1lU2l6ZTogMTIwCiAgICAgICAgICAgICAgdm9sdW1lVHlwZTogZ3AzCiAgICAgICAgICBjcmVkZW50aWFsc1NlY3JldDoKICAgICAgICAgICAgbmFtZTogYXdzLWNsb3VkLWNyZWRlbnRpYWxzCiAgICAgICAgICBkZXZpY2VJbmRleDogMAogICAgICAgICAgaWFtSW5zdGFuY2VQcm9maWxlOgogICAgICAgICAgICBpZDogZWRmLWRlbW8tOGdwNnotd29ya2VyLXByb2ZpbGUKICAgICAgICAgIGluc3RhbmNlVHlwZTogbTZpLnhsYXJnZQogICAgICAgICAga2luZDogQVdTTWFjaGluZVByb3ZpZGVyQ29uZmlnCiAgICAgICAgICBtZXRhZGF0YToKICAgICAgICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgICAgIG1ldGFkYXRhU2VydmljZU9wdGlvbnM6IHt9CiAgICAgICAgICBwbGFjZW1lbnQ6CiAgICAgICAgICAgIGF2YWlsYWJpbGl0eVpvbmU6IHVzLWVhc3QtMmMKICAgICAgICAgICAgcmVnaW9uOiB1cy1lYXN0LTIKICAgICAgICAgIHNlY3VyaXR5R3JvdXBzOgogICAgICAgICAgLSBmaWx0ZXJzOgogICAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgIC0gZWRmLWRlbW8tOGdwNnotd29ya2VyLXNnCiAgICAgICAgICBzdWJuZXQ6CiAgICAgICAgICAgIGZpbHRlcnM6CiAgICAgICAgICAgIC0gbmFtZTogdGFnOk5hbWUKICAgICAgICAgICAgICB2YWx1ZXM6CiAgICAgICAgICAgICAgLSBlZGYtZGVtby04Z3A2ei1wcml2YXRlLXVzLWVhc3QtMmMKICAgICAgICAgIHRhZ3M6CiAgICAgICAgICAtIG5hbWU6IGt1YmVybmV0ZXMuaW8vY2x1c3Rlci9lZGYtZGVtby04Z3A2egogICAgICAgICAgICB2YWx1ZTogb3duZWQKICAgICAgICAgIHVzZXJEYXRhU2VjcmV0OgogICAgICAgICAgICBuYW1lOiB3b3JrZXItdXNlci1kYXRhCnN0YXR1czoKICByZXBsaWNhczogMAo="
            }
        ]
    },
    "*manifests.AdditionalTrustBundleConfig": {
        "ConfigMap": null,
        "File": null
    },
    "*manifests.CloudProviderConfig": {
        "ConfigMap": null,
        "File": null
    },
    "*manifests.ClusterCSIDriverConfig": {
        "File": null
    },
    "*manifests.DNS": {
        "FileList": [
            {
                "Filename": "manifests/cluster-dns-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBETlMKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBuYW1lOiBjbHVzdGVyCnNwZWM6CiAgYmFzZURvbWFpbjogZWRmLWRlbW8uc2FuZGJveDE4ODAub3BlbnRsYy5jb20KICBwbGF0Zm9ybToKICAgIGF3czogbnVsbAogICAgdHlwZTogIiIKICBwcml2YXRlWm9uZToKICAgIHRhZ3M6CiAgICAgIE5hbWU6IGVkZi1kZW1vLThncDZ6LWludAogICAgICBrdWJlcm5ldGVzLmlvL2NsdXN0ZXIvZWRmLWRlbW8tOGdwNno6IG93bmVkCiAgcHVibGljWm9uZToKICAgIGlkOiBaWVA0ODFBSjZUQk43CnN0YXR1czoge30K"
            }
        ]
    },
    "*manifests.FeatureGate": {
        "FileList": null,
        "Config": {
            "metadata": {
                "creationTimestamp": null
            },
            "spec": {},
            "status": {}
        }
    },
    "*manifests.ImageContentSourcePolicy": {
        "FileList": []
    },
    "*manifests.Infrastructure": {
        "FileList": [
            {
                "Filename": "manifests/cluster-infrastructure-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBJbmZyYXN0cnVjdHVyZQptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIG5hbWU6IGNsdXN0ZXIKc3BlYzoKICBjbG91ZENvbmZpZzoKICAgIG5hbWU6ICIiCiAgcGxhdGZvcm1TcGVjOgogICAgYXdzOiB7fQogICAgdHlwZTogQVdTCnN0YXR1czoKICBhcGlTZXJ2ZXJJbnRlcm5hbFVSSTogaHR0cHM6Ly9hcGktaW50LmVkZi1kZW1vLnNhbmRib3gxODgwLm9wZW50bGMuY29tOjY0NDMKICBhcGlTZXJ2ZXJVUkw6IGh0dHBzOi8vYXBpLmVkZi1kZW1vLnNhbmRib3gxODgwLm9wZW50bGMuY29tOjY0NDMKICBjb250cm9sUGxhbmVUb3BvbG9neTogSGlnaGx5QXZhaWxhYmxlCiAgY3B1UGFydGl0aW9uaW5nOiBOb25lCiAgZXRjZERpc2NvdmVyeURvbWFpbjogIiIKICBpbmZyYXN0cnVjdHVyZU5hbWU6IGVkZi1kZW1vLThncDZ6CiAgaW5mcmFzdHJ1Y3R1cmVUb3BvbG9neTogSGlnaGx5QXZhaWxhYmxlCiAgcGxhdGZvcm06IEFXUwogIHBsYXRmb3JtU3RhdHVzOgogICAgYXdzOgogICAgICByZWdpb246IHVzLWVhc3QtMgogICAgdHlwZTogQVdTCg=="
            }
        ]
    },
    "*manifests.Ingress": {
        "FileList": [
            {
                "Filename": "manifests/cluster-ingress-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBJbmdyZXNzCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbmFtZTogY2x1c3RlcgpzcGVjOgogIGRvbWFpbjogYXBwcy5lZGYtZGVtby5zYW5kYm94MTg4MC5vcGVudGxjLmNvbQogIGxvYWRCYWxhbmNlcjoKICAgIHBsYXRmb3JtOgogICAgICBhd3M6CiAgICAgICAgdHlwZTogQ2xhc3NpYwogICAgICB0eXBlOiBBV1MKc3RhdHVzOgogIGRlZmF1bHRQbGFjZW1lbnQ6IFdvcmtlcnMK"
            }
        ]
    },
    "*manifests.Manifests": {
        "KubeSysConfig": {
            "kind": "ConfigMap",
            "apiVersion": "v1",
            "metadata": {
                "annotations": {
                    "kubernetes.io/description": "The install-config content used to create the cluster.  The cluster configuration may have evolved since installation, so check cluster configuration resources directly if you are interested in the current cluster state."
                },
                "name": "cluster-config-v1",
                "namespace": "kube-system"
            },
            "data": {
                "install-config": "additionalTrustBundlePolicy: Proxyonly\napiVersion: v1\nbaseDomain: sandbox1880.opentlc.com\ncompute:\n- architecture: amd64\n  hyperthreading: Enabled\n  name: worker\n  platform: {}\n  replicas: 3\ncontrolPlane:\n  architecture: amd64\n  hyperthreading: Enabled\n  name: master\n  platform: {}\n  replicas: 3\nmetadata:\n  creationTimestamp: null\n  name: edf-demo\nnetworking:\n  clusterNetwork:\n  - cidr: 10.128.0.0/14\n    hostPrefix: 23\n  machineNetwork:\n  - cidr: 10.0.0.0/16\n  networkType: OVNKubernetes\n  serviceNetwork:\n  - 172.30.0.0/16\nplatform:\n  aws:\n    region: us-east-2\npublish: External\npullSecret: \"\"\nsshKey: |\n  ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCTMl1LDqVCao2GwvnvVp1vkC0qusn1wJgsPHTtO5pT3ae9B6JoEuGP09isvBYluyJTC//CZVQ0aHjt3teV3BEFGdZTYMit22TKGzXpfqaurGyxMyVUtqp4eFQdDNAzbRvlHgeR3uF42NNz7xT9tm9VjzzUJKpf/OR5d/Utg6RwnFDT/PJLfa+nm1d7QHcEPiJeH61H6E/odKOQOF+4GZiUVUQHDtOQEUcVuVECxga2JNxzQs0zRAGRMTzQAr4xMeD6c6rDrEOD7EOKknPNQP9dgoCaVj5dv/ymj+sZ2c4xZ48EhzfQp89C3P0Buncy0C4v+HDbOedBDq/BSmZuRHJo7YmYG46IJ/HymHG3KWkgyqwd7cgD95E/2k1Sb/fSqgmgil6ka34v2B833p1PZF0/8E8XZkDBXj+FNenBct4LyfdDqtg3JxxWqYBLq1F12x12iTQBSRtIGqayPNUBMvBTr/7WuoI3H5vvdqk58z8r2j3DObipvrkx5rNr77A+U4c= feven@localhost.localdomain\n"
            }
        },
        "FileList": [
            {
                "Filename": "manifests/cluster-config.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKZGF0YToKICBpbnN0YWxsLWNvbmZpZzogfAogICAgYWRkaXRpb25hbFRydXN0QnVuZGxlUG9saWN5OiBQcm94eW9ubHkKICAgIGFwaVZlcnNpb246IHYxCiAgICBiYXNlRG9tYWluOiBzYW5kYm94MTg4MC5vcGVudGxjLmNvbQogICAgY29tcHV0ZToKICAgIC0gYXJjaGl0ZWN0dXJlOiBhbWQ2NAogICAgICBoeXBlcnRocmVhZGluZzogRW5hYmxlZAogICAgICBuYW1lOiB3b3JrZXIKICAgICAgcGxhdGZvcm06IHt9CiAgICAgIHJlcGxpY2FzOiAzCiAgICBjb250cm9sUGxhbmU6CiAgICAgIGFyY2hpdGVjdHVyZTogYW1kNjQKICAgICAgaHlwZXJ0aHJlYWRpbmc6IEVuYWJsZWQKICAgICAgbmFtZTogbWFzdGVyCiAgICAgIHBsYXRmb3JtOiB7fQogICAgICByZXBsaWNhczogMwogICAgbWV0YWRhdGE6CiAgICAgIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgICAgIG5hbWU6IGVkZi1kZW1vCiAgICBuZXR3b3JraW5nOgogICAgICBjbHVzdGVyTmV0d29yazoKICAgICAgLSBjaWRyOiAxMC4xMjguMC4wLzE0CiAgICAgICAgaG9zdFByZWZpeDogMjMKICAgICAgbWFjaGluZU5ldHdvcms6CiAgICAgIC0gY2lkcjogMTAuMC4wLjAvMTYKICAgICAgbmV0d29ya1R5cGU6IE9WTkt1YmVybmV0ZXMKICAgICAgc2VydmljZU5ldHdvcms6CiAgICAgIC0gMTcyLjMwLjAuMC8xNgogICAgcGxhdGZvcm06CiAgICAgIGF3czoKICAgICAgICByZWdpb246IHVzLWVhc3QtMgogICAgcHVibGlzaDogRXh0ZXJuYWwKICAgIHB1bGxTZWNyZXQ6ICIiCiAgICBzc2hLZXk6IHwKICAgICAgc3NoLXJzYSBBQUFBQjNOemFDMXljMkVBQUFBREFRQUJBQUFCZ1FDVE1sMUxEcVZDYW8yR3d2bnZWcDF2a0MwcXVzbjF3SmdzUEhUdE81cFQzYWU5QjZKb0V1R1AwOWlzdkJZbHV5SlRDLy9DWlZRMGFIanQzdGVWM0JFRkdkWlRZTWl0MjJUS0d6WHBmcWF1ckd5eE15VlV0cXA0ZUZRZEROQXpiUnZsSGdlUjN1RjQyTk56N3hUOXRtOVZqenpVSktwZi9PUjVkL1V0ZzZSd25GRFQvUEpMZmErbm0xZDdRSGNFUGlKZUg2MUg2RS9vZEtPUU9GKzRHWmlVVlVRSER0T1FFVWNWdVZFQ3hnYTJKTnh6UXMwelJBR1JNVHpRQXI0eE1lRDZjNnJEckVPRDdFT0trblBOUVA5ZGdvQ2FWajVkdi95bWorc1oyYzR4WjQ4RWh6ZlFwODlDM1AwQnVuY3kwQzR2K0hEYk9lZEJEcS9CU21adVJISm83WW1ZRzQ2SUovSHltSEczS1drZ3lxd2Q3Y2dEOTVFLzJrMVNiL2ZTcWdtZ2lsNmthMzR2MkI4MzNwMVBaRjAvOEU4WFprREJYaitGTmVuQmN0NEx5ZmREcXRnM0p4eFdxWUJMcTFGMTJ4MTJpVFFCU1J0SUdxYXlQTlVCTXZCVHIvN1d1b0kzSDV2dmRxazU4ejhyMmozRE9iaXB2cmt4NXJOcjc3QStVNGM9IGZldmVuQGxvY2FsaG9zdC5sb2NhbGRvbWFpbgpraW5kOiBDb25maWdNYXAKbWV0YWRhdGE6CiAgYW5ub3RhdGlvbnM6CiAgICBrdWJlcm5ldGVzLmlvL2Rlc2NyaXB0aW9uOiBUaGUgaW5zdGFsbC1jb25maWcgY29udGVudCB1c2VkIHRvIGNyZWF0ZSB0aGUgY2x1c3Rlci4gIFRoZQogICAgICBjbHVzdGVyIGNvbmZpZ3VyYXRpb24gbWF5IGhhdmUgZXZvbHZlZCBzaW5jZSBpbnN0YWxsYXRpb24sIHNvIGNoZWNrIGNsdXN0ZXIKICAgICAgY29uZmlndXJhdGlvbiByZXNvdXJjZXMgZGlyZWN0bHkgaWYgeW91IGFyZSBpbnRlcmVzdGVkIGluIHRoZSBjdXJyZW50IGNsdXN0ZXIKICAgICAgc3RhdGUuCiAgbmFtZTogY2x1c3Rlci1jb25maWctdjEKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCg=="
            },
            {
                "Filename": "manifests/cluster-dns-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBETlMKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBuYW1lOiBjbHVzdGVyCnNwZWM6CiAgYmFzZURvbWFpbjogZWRmLWRlbW8uc2FuZGJveDE4ODAub3BlbnRsYy5jb20KICBwbGF0Zm9ybToKICAgIGF3czogbnVsbAogICAgdHlwZTogIiIKICBwcml2YXRlWm9uZToKICAgIHRhZ3M6CiAgICAgIE5hbWU6IGVkZi1kZW1vLThncDZ6LWludAogICAgICBrdWJlcm5ldGVzLmlvL2NsdXN0ZXIvZWRmLWRlbW8tOGdwNno6IG93bmVkCiAgcHVibGljWm9uZToKICAgIGlkOiBaWVA0ODFBSjZUQk43CnN0YXR1czoge30K"
            },
            {
                "Filename": "manifests/cluster-infrastructure-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBJbmZyYXN0cnVjdHVyZQptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIG5hbWU6IGNsdXN0ZXIKc3BlYzoKICBjbG91ZENvbmZpZzoKICAgIG5hbWU6ICIiCiAgcGxhdGZvcm1TcGVjOgogICAgYXdzOiB7fQogICAgdHlwZTogQVdTCnN0YXR1czoKICBhcGlTZXJ2ZXJJbnRlcm5hbFVSSTogaHR0cHM6Ly9hcGktaW50LmVkZi1kZW1vLnNhbmRib3gxODgwLm9wZW50bGMuY29tOjY0NDMKICBhcGlTZXJ2ZXJVUkw6IGh0dHBzOi8vYXBpLmVkZi1kZW1vLnNhbmRib3gxODgwLm9wZW50bGMuY29tOjY0NDMKICBjb250cm9sUGxhbmVUb3BvbG9neTogSGlnaGx5QXZhaWxhYmxlCiAgY3B1UGFydGl0aW9uaW5nOiBOb25lCiAgZXRjZERpc2NvdmVyeURvbWFpbjogIiIKICBpbmZyYXN0cnVjdHVyZU5hbWU6IGVkZi1kZW1vLThncDZ6CiAgaW5mcmFzdHJ1Y3R1cmVUb3BvbG9neTogSGlnaGx5QXZhaWxhYmxlCiAgcGxhdGZvcm06IEFXUwogIHBsYXRmb3JtU3RhdHVzOgogICAgYXdzOgogICAgICByZWdpb246IHVzLWVhc3QtMgogICAgdHlwZTogQVdTCg=="
            },
            {
                "Filename": "manifests/cluster-ingress-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBJbmdyZXNzCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbmFtZTogY2x1c3RlcgpzcGVjOgogIGRvbWFpbjogYXBwcy5lZGYtZGVtby5zYW5kYm94MTg4MC5vcGVudGxjLmNvbQogIGxvYWRCYWxhbmNlcjoKICAgIHBsYXRmb3JtOgogICAgICBhd3M6CiAgICAgICAgdHlwZTogQ2xhc3NpYwogICAgICB0eXBlOiBBV1MKc3RhdHVzOgogIGRlZmF1bHRQbGFjZW1lbnQ6IFdvcmtlcnMK"
            },
            {
                "Filename": "manifests/cluster-network-01-crd.yml",
                "Data": ""
            },
            {
                "Filename": "manifests/cluster-network-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBOZXR3b3JrCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbmFtZTogY2x1c3RlcgpzcGVjOgogIGNsdXN0ZXJOZXR3b3JrOgogIC0gY2lkcjogMTAuMTI4LjAuMC8xNAogICAgaG9zdFByZWZpeDogMjMKICBleHRlcm5hbElQOgogICAgcG9saWN5OiB7fQogIG5ldHdvcmtUeXBlOiBPVk5LdWJlcm5ldGVzCiAgc2VydmljZU5ldHdvcms6CiAgLSAxNzIuMzAuMC4wLzE2CnN0YXR1czoge30K"
            },
            {
                "Filename": "manifests/cluster-proxy-01-config.yaml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBQcm94eQptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIG5hbWU6IGNsdXN0ZXIKc3BlYzoKICB0cnVzdGVkQ0E6CiAgICBuYW1lOiAiIgpzdGF0dXM6IHt9Cg=="
            },
            {
                "Filename": "manifests/cluster-scheduler-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBTY2hlZHVsZXIKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBuYW1lOiBjbHVzdGVyCnNwZWM6CiAgbWFzdGVyc1NjaGVkdWxhYmxlOiBmYWxzZQogIHBvbGljeToKICAgIG5hbWU6ICIiCnN0YXR1czoge30K"
            },
            {
                "Filename": "manifests/cvo-overrides.yaml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBDbHVzdGVyVmVyc2lvbgptZXRhZGF0YToKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jbHVzdGVyLXZlcnNpb24KICBuYW1lOiB2ZXJzaW9uCnNwZWM6CiAgY2hhbm5lbDogc3RhYmxlLTQuMTMKICBjbHVzdGVySUQ6IDY0MmY5ODYyLThiYjYtNDliNi04YTQ0LTJmODc1MjdjM2Y2Nwo="
            },
            {
                "Filename": "manifests/kube-cloud-config.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtY2xvdWQtY2ZnCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQp0eXBlOiBPcGFxdWUKZGF0YToKICBjb25maWc6ICIiCg=="
            },
            {
                "Filename": "manifests/kube-system-configmap-root-ca.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IHJvb3QtY2EKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCmRhdGE6CiAgY2EuY3J0OiB8CiAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgIE1JSURFRENDQWZpZ0F3SUJBZ0lJWVBCSFFjbGdzR1l3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKICAgIEN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5YjI5MExXTmhNQjRYRFRJek1Ea3lOVEl4TXpRek5Wb1gKICAgIERUTXpNRGt5TWpJeE16UXpOVm93SmpFU01CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHkKICAgIGIyOTBMV05oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3Wm9jZkVobUd2SXgKICAgIE0xTmZCVWpGRGVhSDdCZEN6YkpxakNxeHNZQkJwTkh1MjM4ZXI4c0d2R3QvUGo4bU1Cc2lKZlZmYXJTMzR3VysKICAgIFFTVUs0ZWtSUVk1RVBjT2RTOWhmMTYzMzFiM29DL0psdTl2c25xd013MjYwMDNWYXhnc3V2eE1JOW1naERUdFcKICAgIHJYYndSejkvWWFxa0xYdUhFd0lJMVlzWVJlNXMxSEF6aitrcTRGbmRzOERKYktPcFJMS2d4L2x1cmZOdnNSVHoKICAgIC9ZYzA3NXZuUmJ4bUVwallHUVlwNHkwSFFGZk5XMHJ3RUc2NkpZY1pMYWVFMll3Z1hWdDBHZFR5MTBnZytlclcKICAgIExHeEUxYVBHdDJ1cmMyS0RVWHhOV0VxM1BlUE5JeU5NZXN2VjhiSXFPYjAva01sdlc0YW8wWjlsZjlJYisxWUgKICAgIE41Vkg4cXBVNHdJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKICAgIC96QWRCZ05WSFE0RUZnUVVlM0szKzJ1YkhsMVIwZTE4VXBUOHB1MTdKL1F3RFFZSktvWklodmNOQVFFTEJRQUQKICAgIGdnRUJBTGNneGpXWDRtZGM1YlFndDN6NTZ2clA0eW5ab3RFTy92Z09ieG16U25NQzBUTXB0NkdkWW1Dc3ZsT3YKICAgIFVEdXBkY1VmeUZDZ1Y0ZlBXQnBUYTNpaEVaYnhKVktjRFk1NEoxZmNjUkQxNDE5ZGFKQVVBRkpXY1ZiQTdQUjIKICAgIFVIL1ZFTjR5Ny9YMWplQm1CMVBlcDlwSGVDTm9XbVRnYkoxb3FaQnFoM1pHak9kZWt5V1A0K1piMUZzSXFicXoKICAgIEZuMEZSbDlZMFB0WjVXem82c0FsZDdhRTdDeVMrMTlBVjNPOTJFVG5ic3ltY1VIN0IxOE5LMGRSd3loeEpJMzMKICAgIHhDSmxZanczUEZvMU9WSWU0Q1pYSjFmLzFFNld4QVk1cElETERNRk5XREJldDB6bFc1azlwdkZSdEZVSnA5N04KICAgIFZQak5RMXN6WkdpSGxyMkYwTW5Qdm5BTy9DRT0KICAgIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KICAgIAo="
            },
            {
                "Filename": "manifests/machine-config-server-tls-secret.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IG1hY2hpbmUtY29uZmlnLXNlcnZlci10bHMKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1tYWNoaW5lLWNvbmZpZy1vcGVyYXRvcgp0eXBlOiBPcGFxdWUKZGF0YToKICB0bHMuY3J0OiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSaGVrTkRRV3hQWjBGM1NVSkJaMGxKUVhsWmR6RXpXbFZhZURSM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEtha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFTUVhkRVoxbEVWbEZSUkVWM1pIbGlNamt3VEZkT2FFMUNORmhFVkVsNlRVUnJlVTVVU1hoTmVsRjZUbFp2V0FwRVZFMTZUVVJyZVUxcVNYaE5lbEY2VGxadmQwcDZSV3hOUTAxSFFURlZSVUY0VFdOak0yeDZaRWRXZEU5dE1XaFpNbWh3WW0xVmRGa3lPWFZhYld4dUNreFlUbXhqYmxwc1kycERRMEZUU1hkRVVWbEtTMjlhU1doMlkwNUJVVVZDUWxGQlJHZG5SVkJCUkVORFFWRnZRMmRuUlVKQlRVZ3djamQ2TkU1VFJEUUtWalZ1VGtSb1VHeGxkMkppZHlzNU1VRndaaTltY0VOUWVXWlhjRVZxVTJ4Q05EaHRabU00V1ZVeFVXbFRORXM0WVd0d1NHWXlRMjE2TTNaYWVrVjZjQXB5VVZnMmNIVTVaV0pSU2xkcE1rWXhaWEU1Vkc0M2EwbEdSMXB3UjA0MlZtSjFVRWxSZFUweGFFY3pOVTVETjJsR1RtMW1OVGR4YkVkUGIwOXNTMmhOQ21oTmIwRnlSMUZIVW5OU2IzaFpXalpZSzIxYWJrMXlNalpuUzNsdU5HbHpSMkZvVlhGcFkwUm5hMkpSZVc1RVMxbzJhRkZXTUVoTlRpOWlMelF5U3pJS1Eyd3dXRzlSYmtzclRqaGlla05JT1VORlN6bERRV1kwTW5sUldFRm5lbkJKTDJKeWMyZG1NMDlOTVZsTFFUWnpZbWN5WVVGYVRIVm9SVmhOVkhZNGJRcFVXVzlrYVVkNVoxSlRhM3BqZEd4MVQyODJOalJUZUhSV1prdHJXRmdyYUUwNGJrdEVXWFpLWmk5aGVXdERURWdyYkZGSVVreDRiR0pJT1ROcE9IQjRDamcyZFVoNU1WSTJPWEE0UTBGM1JVRkJZVTlDYlhwRFFtMUVRVlJDWjA1V1NGTlZSVVJFUVV0Q1oyZHlRbWRGUmtKUlkwUkJWRUZOUW1kT1ZraFNUVUlLUVdZNFJVRnFRVUZOUWpCSFFURlZaRVJuVVZkQ1FsTlJjRW93T1RJMGFtNWxWVzVOT1hWVVRWRktXalE1Ymt0TFYwUkJaa0puVGxaSVUwMUZSMFJCVndwblFsSTNZM0ptTjJFMWMyVllWa2hTTjFoNFUyeFFlVzAzV0hOdU9VUkJla0puVGxaSVVrVkZURVJCY1dkcGFHaGpSMnQwWVZjMU1FeHRWbXRhYVRGckNscFhNWFpNYms1b1ltMVNhV0l6WjNoUFJHZDNURzA1ZDFwWE5UQmlSMDExV1RJNWRFMUJNRWREVTNGSFUwbGlNMFJSUlVKRGQxVkJRVFJKUWtGUlFrNEtVMVJwUVZGUmRYaExjRFZzZDJsVE5WTnVaRTVRZFZwSVZEbHlhRlpVZFdWSGJuQnRVRFV6UVU1V1dVaG1UVkIzVm5keU1FWkdORWR6VHpVeFlqaFVWZ3BuUWxjelYxRk1WMGwyZEVSVU5VOUpiblpDVlhCTmRYTTVhbU5VTlhnNFpVaDVObVppTjB4RE1raGpPVFJrV1V3clNHRldUR3MzZVV0U2RFNXJSR2xZQ2pObE5UTkpMMFpwYmpZMGMzWkxiVGhyUTFjNFZUQkxaeTgzTVd4NlltOWpTazVxVkdwYVkwRmthMmRNWmxKVmFVTk5iVXRMT1VweFQwMHlWak5KUmt3S1VqZ3pObVp6YTNBMFJYWlBVVEpXVkdzM1FUSnBNV0ZqVDNwTmFEUm1WWE16UzFwaUwyZG9PRTFxVGpsakwwVkVWRUZRVlZwT2RURTBNemR4Tm5wc1RBcGlkamxQWmk5UFZYcExXbWROTlhKblZHVjVTbTlqY0ZOdVdqRkVhbHBuVFdWdWJ6SklPRU5rU3pOM01YZFRjSEE0V0RsaVprOXZPRmRDZEd0SFVqbFhDbTQyYWtaUldFZ3dlVFpvVTA1cGMxQXhNMmh3Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgdGxzLmtleTogTFMwdExTMUNSVWRKVGlCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRcE5TVWxGY0VGSlFrRkJTME5CVVVWQmQyWlRkblpRWnpGSlVHaFliV013VDBVclZqZENkSFpFTnpOVlEyd3ZPU3RyU1M5S09XRnJVMDVMVlVocWVWbzVDbnA0YUZSV1EwcE1aM0o0Y1ZOclpDOVpTMkpRWlRsdVRWUlBiWFJDWm5GdE56RTFkRUZzWVV4WldGWTJjakZQWm5WUloxVmFiV3RaTTNCV2RUUTRhRU1LTkhwWFJXSm1hekJNZFVsVk1sb3ZiblZ4VlZrMlp6WlZjVVY1UlhsblEzTmFRVnBIZUVkcVJtaHVjR1kyV20xamVYWmljVUZ5UzJacFMzZGFjVVpUY1FwS2QwOURVblJFUzJOTmNHNXhSa0pZVVdOM016bDJMMnBaY2xsTFdGSmxhRU5qY2pRemVIWk5TV1l3U1ZGeU1FbENMMnBpU2tKalEwUlBhMm81ZFhWNUNrSXZZelI2Vm1kdlJIRjRkVVJhYjBKcmRUWkZVbU40VHk5NVdrNXBhREpKWWt0Q1JrdFVUbmt5VnpRMmFuSnlhRXhITVZZNGNWSmtaalpGZW5samIwNEthVGhzTHpseVMxRkpjMlkyVmtGa1JYWkhWbk5tTTJWTWVXNUllbkUwWmt4V1NISXlibmRKUkVGUlFVSkJiMGxDUVVGWGIyeGtaakZvWkdSSldqUllaQXBNWVZBeU9XWm1iRkZZYjJrNU9HaHVZemxJVkRSQ2FVTnlhakZMT0RCWFFqUm1ia0YzS3pKWlkyOTFSalEzVURORloyaElNVnBZVUdKT05YaHJkRXQ0Q2pGV2VqSmlSV1U1VEhGUVVsRmFjMHd6V1ZWUllqQm1kRzFSVVd4YUt6ZE9WVTlhUVVWWVZVUTJSRzVXTjNKWVMzSkpRVTVuVVZOVVIwWk5kM0ZGT0dNS1dtVnpiRWszZEc1TmVIZFNVbVZ6VTNsRWFFUnhLMEZaVW1ZNEszVlRRa0Y2VlhWRmRTdDZkRkJNVWtkaWNWbHZOQzlpWlhneldtazNZMlpxTW1sdGR3cFVNbEJxUlUxNlZqbE1PWGROTVhwd1JGWmpRMjE1UjNaMVNUQkJaa1YyWlhsNFZuTmxkbUZpZGtRM05WSXJXbUowYVdsdVJVZHJNSGRWU0doMFdVMXZDbTB3VERBMllXRlhiMUJaVEU1T1VHMTFRWFYxUmk5a2JsWm1ORTk0TDFsRU1HMU9NVGQ1VFdaRE1EVkZUR3AzTHpaSE5GaGtaVVpRVG1WV01EY3dZVFVLUVdKMFdFVmpSVU5uV1VWQk0wd3dRbGRZWlhOYVVWRndNMWhSZDNSd09GcElRblJYVERsWE5tTmFhbTFuYmt0TGRVZzBUa0ZhUmtVemJ6Tk9LMU4yWXdvNVFsYzJWM3BtVmpRelUwcHpjWFZGYlhabWIzTkJSR05vTTJwVk1XdzJTVGRxVUM4dk4zQjZTekJxUmtNMVMwSXhVbXh4VlhsRlNFcEtja3cyYmpObkNtRm9LMnBhTlZWM01IZHlNVlpQZDFSMldXbzNlakVyU3pSQ2MxbDNUVUZMTWt0bE9GZ3lWM3BSWVdnMFUxZDVVVmRGYUZoUloxVkRaMWxGUVRSUVFuTUtValJ0VlZCcU5ESlFValV3TkdKR2VESTViMHhLUm5aakwwdG9ha1Z0ZGxSa1Zqa3ZUbTlQVVVKWU5GcFJkVkIzTm1sdWVrODVNM2x2UzFGRlQxRk5OUXBMSzNWNVdGbHZMMUYzYWtsMk1UQjBXa1JGSzNSalpURXZNMjR2TTJKT1QzbHRiWFZZWWpsTlppOWFVR00wYUZsV1NGQmtlVEZ3VlRBMlVUZHhjemxJQ2pkeFNtSjZWalpuTnpWWk1uQTVha3BqT1dsNFJuRk9RM2xuYzJGUVNVSkZaMjlvU1djeFRVTm5XVVZCZW5Fek9YWkljVTFLVlRGbWMyRlhaMFYxTkcwS2QyRldjVGR2UlU1QlJqUnpkbk5zYlhvNVdHVmpZa0pIVEhGbVVubDBUbWxJTDNwVlREWkxOVVo1Tmk4eU1WbDZXa1JLY0ZsYWNEZzBhU3R0UVZVMGF3cHZabmcwV0RCaFFtNVhObGRoVURVeGNVVlZVM2NyUlhnMFptczJiekJZV0ZGVFdqaG9ibXQyWWxCMFpYVklVVkJETjBabFRGVTBSa293TjFoMk1uQlJDaTlaYTFsdVN6UktlVXBzYjJaNk9IbGlRMkpZTlUwd1EyZFpSVUZvSzI1a2EzcEJXRU5pUkhaa2RXbHFUMUZtVG5jd2FYaGxUWFZyT0VkclUxTTNkM0FLVEdZclFYb3dRMXBWYVdoTFVGUmxZbWgyU0VsRVdVWnFURUowVDJwbFFtSjFRMVZZVW1oMlZtTTNlVzlDTjBSWFZETmlUamRIY0Rac2NEVjRjM1JUTkFwSksyWk9UM051ZGtGR1lXc3hVM054VEVGV1EyMDJLeXRHTkRsb2JXbHFZWHAwTnpsV01EYzFUVk55ZWxwWFNFRXZObGROUVhsRGMzQTBXV295VkVOeUNuUkxLME5IVVRoRFoxbENSekF3ZWtWMWVtSTJiM2xOVTNneWMyVTVLMnhRYzNkaU1VcHhhRGs1U1Vkak1IcHhVMWRPVTFCSk1YUkhWbEp3VDFJelRGVUtXUzlEVmxkUmJWZEtXalV6VG5salZGYzJkMDlVTUVwRlVqSkJNRlpCWkVkalVEVkpibkUxYVhORlkyRnlaVklyUzJ0TmJsZGxSRE0yWTBWQk0xUk1hd3BhT0dRNE5Hd3lLMDVoTVZOa09FVllSakpqVERjeFF6VXJkR3BTUkRacFFsSTJSWFpuVGxKelJreHBNMEZvWjI5VVVITkNjWGM5UFFvdExTMHRMVVZPUkNCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRbz0K"
            },
            {
                "Filename": "manifests/openshift-config-secret-pull-secret.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0CnR5cGU6IGt1YmVybmV0ZXMuaW8vZG9ja2VyY29uZmlnanNvbgptZXRhZGF0YToKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jb25maWcKICBuYW1lOiBwdWxsLXNlY3JldApkYXRhOgogIC5kb2NrZXJjb25maWdqc29uOiBleUpoZFhSb2N5STZleUpqYkc5MVpDNXZjR1Z1YzJocFpuUXVZMjl0SWpwN0ltRjFkR2dpT2lKaU0wSnNZbTVPYjJGWFdqQk1XRXBzWWtkV2FHTXlWWFJhUjFZeVN6STVhbUpXT1doWk1rNXNZek5PWmxwVVFYZE5ha1pzV21wYWFVOUhXWGxPUjAwMVQxZEpNazlVUlRKT1JHeHFUMWRGZDFwcVp6Uk5SR2MyVlRCR1ZGVkZlRkpOUkU1TVZVVm9VbGRWVVRWVFZGcFZUVEJqTUZaR1ZsaFRla1Y0VlRBNE5FNVdhRlZYUkVreVYxUnNVbFF4Y0ZkUmExRjRVVEJLUzFkVlRUVlZSRUpUVjJzMVVVOUdSa3hYYkUxNlZWRTlQU0lzSW1WdFlXbHNJam9pWm1WMlpXNUFjbVZrYUdGMExtTnZiU0o5TENKeVpXZHBjM1J5ZVM1b1kzQXViblZ0YzNCdmRDNWpiRzkxWkRvNE5EUXpJam9nZXlKaGRYUm9Jam9nSW1OWVZtaGxWSEJhWVRGR1QwMXVZek5MYlZwM1QxZHZlVXN5UlRVaUxDSmxiV0ZwYkNJNklDSmtiV0Z5ZEdsdWFVQnlaV1JvWVhRdVkyOXRJbjBzSW5GMVlYa3VhVzhpT25zaVlYVjBhQ0k2SW1JelFteGliazV2WVZkYU1FeFlTbXhpUjFab1l6SlZkRnBIVmpKTE1qbHFZbFk1YUZreVRteGpNMDVtV2xSQmQwMXFSbXhhYWxwcFQwZFplVTVIVFRWUFYwa3lUMVJGTWs1RWJHcFBWMFYzV21wbk5FMUVaelpWTUVaVVZVVjRVazFFVGt4VlJXaFNWMVZSTlZOVVdsVk5NR013VmtaV1dGTjZSWGhWTURnMFRsWm9WVmRFU1RKWFZHeFNWREZ3VjFGclVYaFJNRXBMVjFWTk5WVkVRbE5YYXpWUlQwWkdURmRzVFhwVlVUMDlJaXdpWlcxaGFXd2lPaUptWlhabGJrQnlaV1JvWVhRdVkyOXRJbjBzSW5KbFoybHpkSEo1TG1OdmJtNWxZM1F1Y21Wa2FHRjBMbU52YlNJNmV5SmhkWFJvSWpvaVpraFdiMWw1TVhkaU1qbHpURmRSTUZsdFdtdE5ha0pwVEZSU2FWbHFSWFJPUjBrd1QxTXdOVTB5V210TVZHaHBUVzFLYUU0eVdUUmFWRVUxVG1wd2JHVlZjRzlaYTJScVlWVTVjRk5zVGxabGJGWTBWRmRzUzA5VE5XeGxWWEEyV2taa1NtRlZPWEJUYlhoT1VqRndjMWRXWkZkaFJURnhWMVJHVUZKSGMzZFVWV1JYWWxVNVdGWllaRTlTUjJRMVZHNXdRbVZWTUhsVGJYUk9Wa1ZGTVZSV1RrdFBVelZXVVd4c1VreFdiRVphVlZVeVVraHdkRXhXWkRCYVJHeFhVbnBrY2sxcldsWmFhbVJVWTFaU2MxWXpUbXRpVjFaUFpGUmFlVkpXVVhSUmFtUkNVVlk1VUZWSVpIUk9NVUp1V20weGMwMXJVa3RoUjBrellrWnNXbFJZYUU5aVIxbzFXakIwYVdWdGJIbE5ibWhTWVhwRmQyTnFRVFJUVlhoNlZVUmtkbGRZVms1UmJVWjJaVlpKZVZwWGVFNVNSa28xVm5wYVYyTkhOVlZsUmtaelZFVXhOazVETVRWa2JWcFFUbGhOTVdFeFNrWmphMFV5Vkc1a1psTnVXbXRTVXpGSFdqSXhWVlZYTURCbFZFSnBUVEJvUTA5V1JrcFhXRXBGVWtkb1QxZFdWa05rVm1oM1lWWkZOVTF1VWpaTVYzaE5UVlJOTWxaSE9YTmtlbFpSV20xak5HUkhUa05UZWs1bVVXNUtjbVF6Vms1U2JXOTZWMjVOZDFnd1duTllNazR4WVcweFUxVXdWWHBaTTJNeFpXNXZNVkV6UmxOVWEyeEtWbFpuTTJOV2JIUmhNRGcwVGtoS1JtSkVhRTVpU0ZweVYxaFNNMW94Y0hWWFIzTjRWMGRzYWxwdE9YVlZNMlJ3VDFob1JWVXhXa3hqYlZJeVVUSnNkMWd6Y0ZwT1ZrSlJaVVpCTlZkSGR6QlNWVlpLV2xkMFZsSnFRVFJrVlRFMVRsWkdabUZ0ZEZCWmJuQnJVMGhvTlZwV1JrWmxhekV4WTJ4YWVrOVZiRTFOVm1Sc1ZtNXNUMXB0Vm1oVVdGSlNUMWQwY2xadGNETlZla3BMVkRKYWJFOUdPVFpOYTJ4V1pHcFZNbVF4VVRCbFZteFVZa1JXWVdOVmVFMWhiV1JzWW14YVJFMUZNSFJUVldSb1ZHcEZNRmRHU2s1VE1HeExZbnBPVFZaV1JrSmlibkJSVFZkdmQxSXhhRkpaVnpWM1l6QmtUbU5wTVVoVFZrNVdXVE5LZG1GSVdrOVhWM1J2VlVSa1dWcHFWalJZTW14RVkwaE9jMDFzVW1oU1ZrbDNWMWhrU0ZkSVpGTlNSVnA1WWpOd00wNVhVVFZsUlZZd1VsVTVObHBZVGxoaVJWbDBVbFZXTmxSdFNrNWFNRFZJVlZaU2VFOVZOV3hrV0djeVVYcEtkMkpIYkUxVmF6RlJWRmRLZEZadVNrNWlSekI0VlcxTmQxSnNaREpUVlRGTVZXeE5OVkZWYjNkV1JsWnpXVmhhVEdWdGFGcFRNSEF3VFZaTk0wOUlRbkphUlhSclVWWmtVbE15YnpSU2VrSmhaRlprTW1SWVpIVk1WMVUwVVRCR1ptTkZhSGhWUnpWcVRVTXhhV05XWXpOVU1sWXlWMVprVGsxRVZsSmxWVlp1VkZaR1lWRllSa2xXUjA1MlZURndObU5JYTNsWk1WSnhVbXhrVVdKSFJuVk5SV3Q1WW1zMVRtRklTWHBWVld4SFdtdEtObFF3YkVOUk1YQkpZMjVDTUdWc1JUVmFhM2hRWTBaV1RsWXdiRmRQVjJoRFpFaGtiVkV3U21aaGJYUXlURlp3YVZkdFJsSlVWRVY2VGxaU1IxUkVWalJpZHowOUlpd2laVzFoYVd3aU9pSm1aWFpsYmtCeVpXUm9ZWFF1WTI5dEluMHNJbkpsWjJsemRISjVMbkpsWkdoaGRDNXBieUk2ZXlKaGRYUm9Jam9pWmtoV2IxbDVNWGRpTWpselRGZFJNRmx0V210TmFrSnBURlJTYVZscVJYUk9SMGt3VDFNd05VMHlXbXRNVkdocFRXMUthRTR5V1RSYVZFVTFUbXB3YkdWVmNHOVphMlJxWVZVNWNGTnNUbFpsYkZZMFZGZHNTMDlUTld4bFZYQTJXa1prU21GVk9YQlRiWGhPVWpGd2MxZFdaRmRoUlRGeFYxUkdVRkpIYzNkVVZXUlhZbFU1V0ZaWVpFOVNSMlExVkc1d1FtVlZNSGxUYlhST1ZrVkZNVlJXVGt0UFV6VldVV3hzVWt4V2JFWmFWVlV5VWtod2RFeFdaREJhUkd4WFVucGtjazFyV2xaYWFtUlVZMVpTYzFZelRtdGlWMVpQWkZSYWVWSldVWFJSYW1SQ1VWWTVVRlZJWkhST01VSnVXbTB4YzAxclVrdGhSMGt6WWtac1dsUllhRTlpUjFvMVdqQjBhV1Z0YkhsTmJtaFNZWHBGZDJOcVFUUlRWWGg2VlVSa2RsZFlWazVSYlVaMlpWWkplVnBYZUU1U1JrbzFWbnBhVjJOSE5WVmxSa1p6VkVVeE5rNURNVFZrYlZwUVRsaE5NV0V4U2taamEwVXlWRzVrWmxOdVdtdFNVekZIV2pJeFZWVlhNREJsVkVKcFRUQm9RMDlXUmtwWFdFcEZVa2RvVDFkV1ZrTmtWbWgzWVZaRk5VMXVValpNVjNoTlRWUk5NbFpIT1hOa2VsWlJXbTFqTkdSSFRrTlRlazVtVVc1S2NtUXpWazVTYlc5NlYyNU5kMWd3V25OWU1rNHhZVzB4VTFVd1ZYcFpNMk14Wlc1dk1WRXpSbE5VYTJ4S1ZsWm5NMk5XYkhSaE1EZzBUa2hLUm1KRWFFNWlTRnB5VjFoU00xb3hjSFZYUjNONFYwZHNhbHB0T1hWVk0yUndUMWhvUlZVeFdreGpiVkl5VVRKc2QxZ3pjRnBPVmtKUlpVWkJOVmRIZHpCU1ZWWktXbGQwVmxKcVFUUmtWVEUxVGxaR1ptRnRkRkJaYm5CclUwaG9OVnBXUmtabGF6RXhZMnhhZWs5VmJFMU5WbVJzVm01c1QxcHRWbWhVV0ZKU1QxZDBjbFp0Y0ROVmVrcExWREphYkU5R09UWk5hMnhXWkdwVk1tUXhVVEJsVm14VVlrUldZV05WZUUxaGJXUnNZbXhhUkUxRk1IUlRWV1JvVkdwRk1GZEdTazVUTUd4TFlucE9UVlpXUmtKaWJuQlJUVmR2ZDFJeGFGSlpWelYzWXpCa1RtTnBNVWhUVms1V1dUTktkbUZJV2s5WFYzUnZWVVJrV1ZwcVZqUllNbXhFWTBoT2MwMXNVbWhTVmtsM1YxaGtTRmRJWkZOU1JWcDVZak53TTA1WFVUVmxSVll3VWxVNU5scFlUbGhpUlZsMFVsVldObFJ0U2s1YU1EVklWVlpTZUU5Vk5XeGtXR2N5VVhwS2QySkhiRTFWYXpGUlZGZEtkRlp1U2s1aVJ6QjRWVzFOZDFKc1pESlRWVEZNVld4Tk5WRlZiM2RXUmxaeldWaGFUR1Z0YUZwVE1IQXdUVlpOTTA5SVFuSmFSWFJyVVZaa1VsTXlielJTZWtKaFpGWmtNbVJZWkhWTVYxVTBVVEJHWm1ORmFIaFZSelZxVFVNeGFXTldZek5VTWxZeVYxWmtUazFFVmxKbFZWWnVWRlpHWVZGWVJrbFdSMDUyVlRGd05tTklhM2xaTVZKeFVteGtVV0pIUm5WTlJXdDVZbXMxVG1GSVNYcFZWV3hIV210S05sUXdiRU5STVhCSlkyNUNNR1ZzUlRWYWEzaFFZMFpXVGxZd2JGZFBWMmhEWkVoa2JWRXdTbVpoYlhReVRGWndhVmR0UmxKVVZFVjZUbFpTUjFSRVZqUmlkejA5SWl3aVpXMWhhV3dpT2lKbVpYWmxia0J5WldSb1lYUXVZMjl0SW4xOWZRPT0K"
            }
        ]
    },
    "*manifests.Networking": {
        "Config": {
            "kind": "Network",
            "apiVersion": "config.openshift.io/v1",
            "metadata": {
                "name": "cluster",
                "creationTimestamp": null
            },
            "spec": {
                "clusterNetwork": [
                    {
                        "cidr": "10.128.0.0/14",
                        "hostPrefix": 23
                    }
                ],
                "serviceNetwork": [
                    "172.30.0.0/16"
                ],
                "networkType": "OVNKubernetes",
                "externalIP": {
                    "policy": {}
                }
            },
            "status": {}
        },
        "FileList": [
            {
                "Filename": "manifests/cluster-network-01-crd.yml",
                "Data": "Ci0tLQphcGlWZXJzaW9uOiBhcGlleHRlbnNpb25zLms4cy5pby92MQpraW5kOiBDdXN0b21SZXNvdXJjZURlZmluaXRpb24KbWV0YWRhdGE6CiAgYW5ub3RhdGlvbnM6CiAgICBhcGktYXBwcm92ZWQub3BlbnNoaWZ0LmlvOiBodHRwczovL2dpdGh1Yi5jb20vb3BlbnNoaWZ0L2FwaS9wdWxsLzQ3MAogICAgaW5jbHVkZS5yZWxlYXNlLm9wZW5zaGlmdC5pby9pYm0tY2xvdWQtbWFuYWdlZDogInRydWUiCiAgICBpbmNsdWRlLnJlbGVhc2Uub3BlbnNoaWZ0LmlvL3NlbGYtbWFuYWdlZC1oaWdoLWF2YWlsYWJpbGl0eTogInRydWUiCiAgICBpbmNsdWRlLnJlbGVhc2Uub3BlbnNoaWZ0LmlvL3NpbmdsZS1ub2RlLWRldmVsb3BlcjogInRydWUiCiAgbmFtZTogbmV0d29ya3MuY29uZmlnLm9wZW5zaGlmdC5pbwpzcGVjOgogIGdyb3VwOiBjb25maWcub3BlbnNoaWZ0LmlvCiAgbmFtZXM6CiAgICBraW5kOiBOZXR3b3JrCiAgICBsaXN0S2luZDogTmV0d29ya0xpc3QKICAgIHBsdXJhbDogbmV0d29ya3MKICAgIHNpbmd1bGFyOiBuZXR3b3JrCiAgcHJlc2VydmVVbmtub3duRmllbGRzOiBmYWxzZQogIHNjb3BlOiBDbHVzdGVyCiAgdmVyc2lvbnM6CiAgICAtIG5hbWU6IHYxCiAgICAgIHNjaGVtYToKICAgICAgICBvcGVuQVBJVjNTY2hlbWE6CiAgICAgICAgICBkZXNjcmlwdGlvbjogIk5ldHdvcmsgaG9sZHMgY2x1c3Rlci13aWRlIGluZm9ybWF0aW9uIGFib3V0IE5ldHdvcmsuIFRoZSBjYW5vbmljYWwgbmFtZSBpcyBgY2x1c3RlcmAuIEl0IGlzIHVzZWQgdG8gY29uZmlndXJlIHRoZSBkZXNpcmVkIG5ldHdvcmsgY29uZmlndXJhdGlvbiwgc3VjaCBhczogSVAgYWRkcmVzcyBwb29scyBmb3Igc2VydmljZXMvcG9kIElQcywgbmV0d29yayBwbHVnaW4sIGV0Yy4gUGxlYXNlIHZpZXcgbmV0d29yay5zcGVjIGZvciBhbiBleHBsYW5hdGlvbiBvbiB3aGF0IGFwcGxpZXMgd2hlbiBjb25maWd1cmluZyB0aGlzIHJlc291cmNlLiBcbiBDb21wYXRpYmlsaXR5IGxldmVsIDE6IFN0YWJsZSB3aXRoaW4gYSBtYWpvciByZWxlYXNlIGZvciBhIG1pbmltdW0gb2YgMTIgbW9udGhzIG9yIDMgbWlub3IgcmVsZWFzZXMgKHdoaWNoZXZlciBpcyBsb25nZXIpLiIKICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgcmVxdWlyZWQ6CiAgICAgICAgICAgIC0gc3BlYwogICAgICAgICAgcHJvcGVydGllczoKICAgICAgICAgICAgYXBpVmVyc2lvbjoKICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogJ0FQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMnCiAgICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICAgIGtpbmQ6CiAgICAgICAgICAgICAgZGVzY3JpcHRpb246ICdLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcycKICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgbWV0YWRhdGE6CiAgICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICAgIHNwZWM6CiAgICAgICAgICAgICAgZGVzY3JpcHRpb246IHNwZWMgaG9sZHMgdXNlciBzZXR0YWJsZSB2YWx1ZXMgZm9yIGNvbmZpZ3VyYXRpb24uIEFzIGEgZ2VuZXJhbCBydWxlLCB0aGlzIFNIT1VMRCBOT1QgYmUgcmVhZCBkaXJlY3RseS4gSW5zdGVhZCwgeW91IHNob3VsZCBjb25zdW1lIHRoZSBOZXR3b3JrU3RhdHVzLCBhcyBpdCBpbmRpY2F0ZXMgdGhlIGN1cnJlbnRseSBkZXBsb3llZCBjb25maWd1cmF0aW9uLiBDdXJyZW50bHksIG1vc3Qgc3BlYyBmaWVsZHMgYXJlIGltbXV0YWJsZSBhZnRlciBpbnN0YWxsYXRpb24uIFBsZWFzZSB2aWV3IHRoZSBpbmRpdmlkdWFsIG9uZXMgZm9yIGZ1cnRoZXIgZGV0YWlscyBvbiBlYWNoLgogICAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICAgICAgICBjbHVzdGVyTmV0d29yazoKICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IElQIGFkZHJlc3MgcG9vbCB0byB1c2UgZm9yIHBvZCBJUHMuIFRoaXMgZmllbGQgaXMgaW1tdXRhYmxlIGFmdGVyIGluc3RhbGxhdGlvbi4KICAgICAgICAgICAgICAgICAgdHlwZTogYXJyYXkKICAgICAgICAgICAgICAgICAgaXRlbXM6CiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IENsdXN0ZXJOZXR3b3JrRW50cnkgaXMgYSBjb250aWd1b3VzIGJsb2NrIG9mIElQIGFkZHJlc3NlcyBmcm9tIHdoaWNoIHBvZCBJUHMgYXJlIGFsbG9jYXRlZC4KICAgICAgICAgICAgICAgICAgICB0eXBlOiBvYmplY3QKICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOgogICAgICAgICAgICAgICAgICAgICAgY2lkcjoKICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IFRoZSBjb21wbGV0ZSBibG9jayBmb3IgcG9kIElQcy4KICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgICBob3N0UHJlZml4OgogICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogVGhlIHNpemUgKHByZWZpeCkgb2YgYmxvY2sgdG8gYWxsb2NhdGUgdG8gZWFjaCBub2RlLiBJZiB0aGlzIGZpZWxkIGlzIG5vdCB1c2VkIGJ5IHRoZSBwbHVnaW4sIGl0IGNhbiBiZSBsZWZ0IHVuc2V0LgogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBpbnRlZ2VyCiAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1hdDogaW50MzIKICAgICAgICAgICAgICAgICAgICAgICAgbWluaW11bTogMAogICAgICAgICAgICAgICAgZXh0ZXJuYWxJUDoKICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IGV4dGVybmFsSVAgZGVmaW5lcyBjb25maWd1cmF0aW9uIGZvciBjb250cm9sbGVycyB0aGF0IGFmZmVjdCBTZXJ2aWNlLkV4dGVybmFsSVAuIElmIG5pbCwgdGhlbiBFeHRlcm5hbElQIGlzIG5vdCBhbGxvd2VkIHRvIGJlIHNldC4KICAgICAgICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICAgICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICAgICAgICAgICAgYXV0b0Fzc2lnbkNJRFJzOgogICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IGF1dG9Bc3NpZ25DSURScyBpcyBhIGxpc3Qgb2YgQ0lEUnMgZnJvbSB3aGljaCB0byBhdXRvbWF0aWNhbGx5IGFzc2lnbiBTZXJ2aWNlLkV4dGVybmFsSVAuIFRoZXNlIGFyZSBhc3NpZ25lZCB3aGVuIHRoZSBzZXJ2aWNlIGlzIG9mIHR5cGUgTG9hZEJhbGFuY2VyLiBJbiBnZW5lcmFsLCB0aGlzIGlzIG9ubHkgdXNlZnVsIGZvciBiYXJlLW1ldGFsIGNsdXN0ZXJzLiBJbiBPcGVuc2hpZnQgMy54LCB0aGlzIHdhcyBtaXNsZWFkaW5nbHkgY2FsbGVkICJJbmdyZXNzSVBzIi4gQXV0b21hdGljYWxseSBhc3NpZ25lZCBFeHRlcm5hbCBJUHMgYXJlIG5vdCBhZmZlY3RlZCBieSBhbnkgRXh0ZXJuYWxJUFBvbGljeSBydWxlcy4gQ3VycmVudGx5LCBvbmx5IG9uZSBlbnRyeSBtYXkgYmUgcHJvdmlkZWQuCiAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBhcnJheQogICAgICAgICAgICAgICAgICAgICAgaXRlbXM6CiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgICAgICAgICAgIHBvbGljeToKICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBwb2xpY3kgaXMgYSBzZXQgb2YgcmVzdHJpY3Rpb25zIGFwcGxpZWQgdG8gdGhlIEV4dGVybmFsSVAgZmllbGQuIElmIG5pbCBvciBlbXB0eSwgdGhlbiBFeHRlcm5hbElQIGlzIG5vdCBhbGxvd2VkIHRvIGJlIHNldC4KICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgICAgICAgICAgICAgcHJvcGVydGllczoKICAgICAgICAgICAgICAgICAgICAgICAgYWxsb3dlZENJRFJzOgogICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBhbGxvd2VkQ0lEUnMgaXMgdGhlIGxpc3Qgb2YgYWxsb3dlZCBDSURScy4KICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBhcnJheQogICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1zOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdGVkQ0lEUnM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IHJlamVjdGVkQ0lEUnMgaXMgdGhlIGxpc3Qgb2YgZGlzYWxsb3dlZCBDSURScy4gVGhlc2UgdGFrZSBwcmVjZWRlbmNlIG92ZXIgYWxsb3dlZENJRFJzLgogICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IGFycmF5CiAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbXM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgICAgIG5ldHdvcmtUeXBlOgogICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogJ05ldHdvcmtUeXBlIGlzIHRoZSBwbHVnaW4gdGhhdCBpcyB0byBiZSBkZXBsb3llZCAoZS5nLiBPcGVuU2hpZnRTRE4pLiBUaGlzIHNob3VsZCBtYXRjaCBhIHZhbHVlIHRoYXQgdGhlIGNsdXN0ZXItbmV0d29yay1vcGVyYXRvciB1bmRlcnN0YW5kcywgb3IgZWxzZSBubyBuZXR3b3JraW5nIHdpbGwgYmUgaW5zdGFsbGVkLiBDdXJyZW50bHkgc3VwcG9ydGVkIHZhbHVlcyBhcmU6IC0gT3BlblNoaWZ0U0ROIFRoaXMgZmllbGQgaXMgaW1tdXRhYmxlIGFmdGVyIGluc3RhbGxhdGlvbi4nCiAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgICAgICAgc2VydmljZU5ldHdvcms6CiAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBJUCBhZGRyZXNzIHBvb2wgZm9yIHNlcnZpY2VzLiBDdXJyZW50bHksIHdlIG9ubHkgc3VwcG9ydCBhIHNpbmdsZSBlbnRyeSBoZXJlLiBUaGlzIGZpZWxkIGlzIGltbXV0YWJsZSBhZnRlciBpbnN0YWxsYXRpb24uCiAgICAgICAgICAgICAgICAgIHR5cGU6IGFycmF5CiAgICAgICAgICAgICAgICAgIGl0ZW1zOgogICAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgICAgICAgc2VydmljZU5vZGVQb3J0UmFuZ2U6CiAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBUaGUgcG9ydCByYW5nZSBhbGxvd2VkIGZvciBTZXJ2aWNlcyBvZiB0eXBlIE5vZGVQb3J0LiBJZiBub3Qgc3BlY2lmaWVkLCB0aGUgZGVmYXVsdCBvZiAzMDAwMC0zMjc2NyB3aWxsIGJlIHVzZWQuIFN1Y2ggU2VydmljZXMgd2l0aG91dCBhIE5vZGVQb3J0IHNwZWNpZmllZCB3aWxsIGhhdmUgb25lIGF1dG9tYXRpY2FsbHkgYWxsb2NhdGVkIGZyb20gdGhpcyByYW5nZS4gVGhpcyBwYXJhbWV0ZXIgY2FuIGJlIHVwZGF0ZWQgYWZ0ZXIgdGhlIGNsdXN0ZXIgaXMgaW5zdGFsbGVkLgogICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgICAgICAgcGF0dGVybjogXihbMC05XXsxLDR9fFsxLTVdWzAtOV17NH18NlswLTRdWzAtOV17M318NjVbMC00XVswLTldezJ9fDY1NVswLTJdWzAtOV18NjU1M1swLTVdKS0oWzAtOV17MSw0fXxbMS01XVswLTldezR9fDZbMC00XVswLTldezN9fDY1WzAtNF1bMC05XXsyfXw2NTVbMC0yXVswLTldfDY1NTNbMC01XSkkCiAgICAgICAgICAgIHN0YXR1czoKICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogc3RhdHVzIGhvbGRzIG9ic2VydmVkIHZhbHVlcyBmcm9tIHRoZSBjbHVzdGVyLiBUaGV5IG1heSBub3QgYmUgb3ZlcnJpZGRlbi4KICAgICAgICAgICAgICB0eXBlOiBvYmplY3QKICAgICAgICAgICAgICBwcm9wZXJ0aWVzOgogICAgICAgICAgICAgICAgY2x1c3Rlck5ldHdvcms6CiAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBJUCBhZGRyZXNzIHBvb2wgdG8gdXNlIGZvciBwb2QgSVBzLgogICAgICAgICAgICAgICAgICB0eXBlOiBhcnJheQogICAgICAgICAgICAgICAgICBpdGVtczoKICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogQ2x1c3Rlck5ldHdvcmtFbnRyeSBpcyBhIGNvbnRpZ3VvdXMgYmxvY2sgb2YgSVAgYWRkcmVzc2VzIGZyb20gd2hpY2ggcG9kIElQcyBhcmUgYWxsb2NhdGVkLgogICAgICAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgICAgICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICAgICAgICAgICAgICBjaWRyOgogICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogVGhlIGNvbXBsZXRlIGJsb2NrIGZvciBwb2QgSVBzLgogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgICAgICAgICAgIGhvc3RQcmVmaXg6CiAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBUaGUgc2l6ZSAocHJlZml4KSBvZiBibG9jayB0byBhbGxvY2F0ZSB0byBlYWNoIG5vZGUuIElmIHRoaXMgZmllbGQgaXMgbm90IHVzZWQgYnkgdGhlIHBsdWdpbiwgaXQgY2FuIGJlIGxlZnQgdW5zZXQuCiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IGludGVnZXIKICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0OiBpbnQzMgogICAgICAgICAgICAgICAgICAgICAgICBtaW5pbXVtOiAwCiAgICAgICAgICAgICAgICBjbHVzdGVyTmV0d29ya01UVToKICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IENsdXN0ZXJOZXR3b3JrTVRVIGlzIHRoZSBNVFUgZm9yIGludGVyLXBvZCBuZXR3b3JraW5nLgogICAgICAgICAgICAgICAgICB0eXBlOiBpbnRlZ2VyCiAgICAgICAgICAgICAgICBtaWdyYXRpb246CiAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBNaWdyYXRpb24gY29udGFpbnMgdGhlIGNsdXN0ZXIgbmV0d29yayBtaWdyYXRpb24gY29uZmlndXJhdGlvbi4KICAgICAgICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICAgICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICAgICAgICAgICAgbXR1OgogICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IE1UVSBjb250YWlucyB0aGUgTVRVIG1pZ3JhdGlvbiBjb25maWd1cmF0aW9uLgogICAgICAgICAgICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOgogICAgICAgICAgICAgICAgICAgICAgICBtYWNoaW5lOgogICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBNYWNoaW5lIGNvbnRhaW5zIE1UVSBtaWdyYXRpb24gY29uZmlndXJhdGlvbiBmb3IgdGhlIG1hY2hpbmUncyB1cGxpbmsuCiAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvcGVydGllczoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZyb206CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBGcm9tIGlzIHRoZSBNVFUgdG8gbWlncmF0ZSBmcm9tLgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBpbnRlZ2VyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1hdDogaW50MzIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWluaW11bTogMAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdG86CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBUbyBpcyB0aGUgTVRVIHRvIG1pZ3JhdGUgdG8uCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IGludGVnZXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0OiBpbnQzMgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtaW5pbXVtOiAwCiAgICAgICAgICAgICAgICAgICAgICAgIG5ldHdvcms6CiAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IE5ldHdvcmsgY29udGFpbnMgTVRVIG1pZ3JhdGlvbiBjb25maWd1cmF0aW9uIGZvciB0aGUgZGVmYXVsdCBuZXR3b3JrLgogICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgICAgICAgICAgICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmcm9tOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogRnJvbSBpcyB0aGUgTVRVIHRvIG1pZ3JhdGUgZnJvbS4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogaW50ZWdlcgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3JtYXQ6IGludDMyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1pbmltdW06IDAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogVG8gaXMgdGhlIE1UVSB0byBtaWdyYXRlIHRvLgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBpbnRlZ2VyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1hdDogaW50MzIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWluaW11bTogMAogICAgICAgICAgICAgICAgICAgIG5ldHdvcmtUeXBlOgogICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246ICdOZXR3b3JrVHlwZSBpcyB0aGUgdGFyZ2V0IHBsdWdpbiB0aGF0IGlzIHRvIGJlIGRlcGxveWVkLiBDdXJyZW50bHkgc3VwcG9ydGVkIHZhbHVlcyBhcmU6IE9wZW5TaGlmdFNETiwgT1ZOS3ViZXJuZXRlcycKICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgICAgICAgICAgICAgZW51bToKICAgICAgICAgICAgICAgICAgICAgICAgLSBPcGVuU2hpZnRTRE4KICAgICAgICAgICAgICAgICAgICAgICAgLSBPVk5LdWJlcm5ldGVzCiAgICAgICAgICAgICAgICBuZXR3b3JrVHlwZToKICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IE5ldHdvcmtUeXBlIGlzIHRoZSBwbHVnaW4gdGhhdCBpcyBkZXBsb3llZCAoZS5nLiBPcGVuU2hpZnRTRE4pLgogICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgICAgIHNlcnZpY2VOZXR3b3JrOgogICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogSVAgYWRkcmVzcyBwb29sIGZvciBzZXJ2aWNlcy4gQ3VycmVudGx5LCB3ZSBvbmx5IHN1cHBvcnQgYSBzaW5nbGUgZW50cnkgaGVyZS4KICAgICAgICAgICAgICAgICAgdHlwZTogYXJyYXkKICAgICAgICAgICAgICAgICAgaXRlbXM6CiAgICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgIHNlcnZlZDogdHJ1ZQogICAgICBzdG9yYWdlOiB0cnVlCg=="
            },
            {
                "Filename": "manifests/cluster-network-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBOZXR3b3JrCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbmFtZTogY2x1c3RlcgpzcGVjOgogIGNsdXN0ZXJOZXR3b3JrOgogIC0gY2lkcjogMTAuMTI4LjAuMC8xNAogICAgaG9zdFByZWZpeDogMjMKICBleHRlcm5hbElQOgogICAgcG9saWN5OiB7fQogIG5ldHdvcmtUeXBlOiBPVk5LdWJlcm5ldGVzCiAgc2VydmljZU5ldHdvcms6CiAgLSAxNzIuMzAuMC4wLzE2CnN0YXR1czoge30K"
            }
        ]
    },
    "*manifests.Openshift": {
        "FileList": [
            {
                "Filename": "openshift/99_cloud-creds-secret.yaml",
                "Data": "a2luZDogU2VjcmV0CmFwaVZlcnNpb246IHYxCm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBuYW1lOiBhd3MtY3JlZHMKZGF0YToKICBhd3NfYWNjZXNzX2tleV9pZDogUVV0SlFWbFRNMFpTUmpWUU1qUTFTa1pCVmxvPQogIGF3c19zZWNyZXRfYWNjZXNzX2tleTogZEdweVRtNTJjR3hCUXl0RlFtTnRSRGhJZW5FeFRGQlNkVWx4UTNwWlQwazNhWEJNYkU5QlVRPT0K"
            },
            {
                "Filename": "openshift/99_kubeadmin-password-secret.yaml",
                "Data": "a2luZDogU2VjcmV0CmFwaVZlcnNpb246IHYxCm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBuYW1lOiBrdWJlYWRtaW4KZGF0YToKICBrdWJlYWRtaW46IEpESmhKREV3Skc1SVJ5OW9Wblo2U0ZSM2MxbFBjMGd6VW1aQk9HVnJZbkJTTG1odWVtcFFNemRpTG1OUlVsbDVWRk5hYW13NWJXVnhkREZMCg=="
            },
            {
                "Filename": "openshift/99_role-cloud-creds-secret-reader.yaml",
                "Data": "a2luZDogUm9sZQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBuYW1lOiBhd3MtY3JlZHMtc2VjcmV0LXJlYWRlcgpydWxlczoKLSBhcGlHcm91cHM6IFsiIl0KICByZXNvdXJjZXM6IFsic2VjcmV0cyJdCiAgcmVzb3VyY2VOYW1lczogWyJhd3MtY3JlZHMiXQogIHZlcmJzOiBbImdldCJdCg=="
            },
            {
                "Filename": "openshift/openshift-install-manifests.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKZGF0YToKICBpbnZva2VyOiB1c2VyCiAgdmVyc2lvbjogdjQuMTMuMApraW5kOiBDb25maWdNYXAKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBuYW1lOiBvcGVuc2hpZnQtaW5zdGFsbC1tYW5pZmVzdHMKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jb25maWcK"
            }
        ]
    },
    "*manifests.Proxy": {
        "FileList": [
            {
                "Filename": "manifests/cluster-proxy-01-config.yaml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBQcm94eQptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIG5hbWU6IGNsdXN0ZXIKc3BlYzoKICB0cnVzdGVkQ0E6CiAgICBuYW1lOiAiIgpzdGF0dXM6IHt9Cg=="
            }
        ],
        "Config": {
            "kind": "Proxy",
            "apiVersion": "config.openshift.io/v1",
            "metadata": {
                "name": "cluster",
                "creationTimestamp": null
            },
            "spec": {
                "trustedCA": {
                    "name": ""
                }
            },
            "status": {}
        }
    },
    "*manifests.Scheduler": {
        "FileList": [
            {
                "Filename": "manifests/cluster-scheduler-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBTY2hlZHVsZXIKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBuYW1lOiBjbHVzdGVyCnNwZWM6CiAgbWFzdGVyc1NjaGVkdWxhYmxlOiBmYWxzZQogIHBvbGljeToKICAgIG5hbWU6ICIiCnN0YXR1czoge30K"
            }
        ]
    },
    "*openshift.AzureCloudProviderSecret": {
        "FileList": [
            {
                "Filename": "templates/99_azure-cloud-provider-secret.yaml.template",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IGF6dXJlLWNsb3VkLXByb3ZpZGVyCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQpzdHJpbmdEYXRhOgogIGNsb3VkLWNvbmZpZzogfAogICAge3suQ2xvdWRDb25maWcgfCBpbmRlbnQgNH19Cg=="
            },
            {
                "Filename": "templates/99_azure-cloud-provider-secret-getter-rolebinding.yaml",
                "Data": "YXBpVmVyc2lvbjogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MQpraW5kOiBSb2xlQmluZGluZwptZXRhZGF0YToKICBuYW1lOiBzeXN0ZW06YXp1cmUtY2xvdWQtcHJvdmlkZXItc2VjcmV0LWdldHRlcgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Kcm9sZVJlZjoKICBhcGlHcm91cDogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pbwogIGtpbmQ6IFJvbGUKICBuYW1lOiBzeXN0ZW06YXp1cmUtY2xvdWQtcHJvdmlkZXItc2VjcmV0LWdldHRlcgpzdWJqZWN0czoKLSBraW5kOiBTZXJ2aWNlQWNjb3VudAogIG5hbWU6IGF6dXJlLWNsb3VkLXByb3ZpZGVyCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQo="
            },
            {
                "Filename": "templates/99_azure-cloud-provider-secret-getter-role.yaml",
                "Data": "YXBpVmVyc2lvbjogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MQpraW5kOiBSb2xlCm1ldGFkYXRhOgogIG5hbWU6IHN5c3RlbTphenVyZS1jbG91ZC1wcm92aWRlci1zZWNyZXQtZ2V0dGVyCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQpydWxlczoKLSBhcGlHcm91cHM6CiAgLSAiIgogIHJlc291cmNlTmFtZXM6CiAgLSBhenVyZS1jbG91ZC1wcm92aWRlcgogIHJlc291cmNlczoKICAtIHNlY3JldHMKICB2ZXJiczoKICAtIGdldAo="
            }
        ]
    },
    "*openshift.BaremetalConfig": {
        "FileList": [
            {
                "Filename": "templates/baremetal-provisioning-config.yaml.template",
                "Data": "YXBpVmVyc2lvbjogbWV0YWwzLmlvL3YxYWxwaGExCmtpbmQ6IFByb3Zpc2lvbmluZwptZXRhZGF0YToKICBuYW1lOiBwcm92aXNpb25pbmctY29uZmlndXJhdGlvbgpzcGVjOgogIHByb3Zpc2lvbmluZ0ludGVyZmFjZTogInt7LkJhcmVtZXRhbC5Qcm92aXNpb25pbmdOZXR3b3JrSW50ZXJmYWNlfX0iCiAgcHJvdmlzaW9uaW5nSVA6ICJ7ey5CYXJlbWV0YWwuQ2x1c3RlclByb3Zpc2lvbmluZ0lQfX0iCiAgcHJvdmlzaW9uaW5nTmV0d29ya0NJRFI6ICJ7ey5CYXJlbWV0YWwuUHJvdmlzaW9uaW5nTmV0d29ya0NJRFJ9fSIKICBwcm92aXNpb25pbmdOZXR3b3JrOiAie3suQmFyZW1ldGFsLlByb3Zpc2lvbmluZ05ldHdvcmt9fSIKICBwcm92aXNpb25pbmdESENQUmFuZ2U6ICJ7ey5CYXJlbWV0YWwuUHJvdmlzaW9uaW5nREhDUFJhbmdlfX0iCiAgcHJvdmlzaW9uaW5nT1NEb3dubG9hZFVSTDogInt7LlByb3Zpc2lvbmluZ09TRG93bmxvYWRVUkx9fSIKICB3YXRjaEFsbE5hbWVzcGFjZXM6IGZhbHNlCg=="
            }
        ]
    },
    "*openshift.CloudCredsSecret": {
        "FileList": [
            {
                "Filename": "templates/cloud-creds-secret.yaml.template",
                "Data": "a2luZDogU2VjcmV0CmFwaVZlcnNpb246IHYxCm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Ke3stIGlmIC5DbG91ZENyZWRzLkFXU319CiAgbmFtZTogYXdzLWNyZWRzCnt7LSBlbHNlIGlmIC5DbG91ZENyZWRzLkF6dXJlfX0KICBuYW1lOiBhenVyZS1jcmVkZW50aWFscwp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5HQ1B9fQogIG5hbWU6IGdjcC1jcmVkZW50aWFscwp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5JQk1DbG91ZH19CiAgbmFtZTogaWJtY2xvdWQtY3JlZGVudGlhbHMKe3stIGVsc2UgaWYgLkNsb3VkQ3JlZHMuT3BlblN0YWNrfX0KICBuYW1lOiBvcGVuc3RhY2stY3JlZGVudGlhbHMKe3stIGVsc2UgaWYgLkNsb3VkQ3JlZHMuVlNwaGVyZX19CiAgbmFtZTogdnNwaGVyZS1jcmVkcwp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5PdmlydH19CiAgbmFtZTogb3ZpcnQtY3JlZGVudGlhbHMKe3stIGVuZH19CmRhdGE6Cnt7LSBpZiAuQ2xvdWRDcmVkcy5BV1N9fQogIGF3c19hY2Nlc3Nfa2V5X2lkOiB7ey5DbG91ZENyZWRzLkFXUy5CYXNlNjRlbmNvZGVBY2Nlc3NLZXlJRH19CiAgYXdzX3NlY3JldF9hY2Nlc3Nfa2V5OiB7ey5DbG91ZENyZWRzLkFXUy5CYXNlNjRlbmNvZGVTZWNyZXRBY2Nlc3NLZXl9fQp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5BenVyZX19CiAgYXp1cmVfc3Vic2NyaXB0aW9uX2lkOiB7ey5DbG91ZENyZWRzLkF6dXJlLkJhc2U2NGVuY29kZVN1YnNjcmlwdGlvbklEfX0KICBhenVyZV9jbGllbnRfaWQ6IHt7LkNsb3VkQ3JlZHMuQXp1cmUuQmFzZTY0ZW5jb2RlQ2xpZW50SUR9fQogIGF6dXJlX2NsaWVudF9zZWNyZXQ6IHt7LkNsb3VkQ3JlZHMuQXp1cmUuQmFzZTY0ZW5jb2RlQ2xpZW50U2VjcmV0fX0KICBhenVyZV90ZW5hbnRfaWQ6IHt7LkNsb3VkQ3JlZHMuQXp1cmUuQmFzZTY0ZW5jb2RlVGVuYW50SUR9fQogIGF6dXJlX3Jlc291cmNlX3ByZWZpeDoge3suQ2xvdWRDcmVkcy5BenVyZS5CYXNlNjRlbmNvZGVSZXNvdXJjZVByZWZpeH19CiAgYXp1cmVfcmVzb3VyY2Vncm91cDoge3suQ2xvdWRDcmVkcy5BenVyZS5CYXNlNjRlbmNvZGVSZXNvdXJjZUdyb3VwfX0KICBhenVyZV9yZWdpb246IHt7LkNsb3VkQ3JlZHMuQXp1cmUuQmFzZTY0ZW5jb2RlUmVnaW9ufX0Ke3stIGVsc2UgaWYgLkNsb3VkQ3JlZHMuR0NQfX0KICBzZXJ2aWNlX2FjY291bnQuanNvbjoge3suQ2xvdWRDcmVkcy5HQ1AuQmFzZTY0ZW5jb2RlU2VydmljZUFjY291bnR9fQp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5JQk1DbG91ZH19CiAgaWJtY2xvdWRfYXBpX2tleToge3suQ2xvdWRDcmVkcy5JQk1DbG91ZC5CYXNlNjRlbmNvZGVBUElLZXl9fQp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5PcGVuU3RhY2t9fQogIGNsb3Vkcy55YW1sOiB7ey5DbG91ZENyZWRzLk9wZW5TdGFjay5CYXNlNjRlbmNvZGVDbG91ZENyZWRzfX0KICBjbG91ZHMuY29uZjoge3suQ2xvdWRDcmVkcy5PcGVuU3RhY2suQmFzZTY0ZW5jb2RlQ2xvdWRDcmVkc0lOSX19Cnt7LSBlbHNlIGlmIC5DbG91ZENyZWRzLlZTcGhlcmV9fQp7ey0gcmFuZ2UgLkNsb3VkQ3JlZHMuVlNwaGVyZX19CiAge3suVkNlbnRlcn19LnVzZXJuYW1lOiB7ey5CYXNlNjRlbmNvZGVVc2VybmFtZX19CiAge3suVkNlbnRlcn19LnBhc3N3b3JkOiB7ey5CYXNlNjRlbmNvZGVQYXNzd29yZH19Cnt7LSBlbmR9fQp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5PdmlydH19CiAgb3ZpcnRfdXJsOiB7ey5DbG91ZENyZWRzLk92aXJ0LkJhc2U2NGVuY29kZVVSTH19CiAgb3ZpcnRfdXNlcm5hbWU6IHt7LkNsb3VkQ3JlZHMuT3ZpcnQuQmFzZTY0ZW5jb2RlVXNlcm5hbWV9fQogIG92aXJ0X3Bhc3N3b3JkOiB7ey5DbG91ZENyZWRzLk92aXJ0LkJhc2U2NGVuY29kZVBhc3N3b3JkfX0KICBvdmlydF9pbnNlY3VyZToge3suQ2xvdWRDcmVkcy5PdmlydC5CYXNlNjRlbmNvZGVJbnNlY3VyZX19CiAgb3ZpcnRfY2FfYnVuZGxlOiB7ey5DbG91ZENyZWRzLk92aXJ0LkJhc2U2NGVuY29kZUNBQnVuZGxlfX0Ke3stIGVuZH19Cg=="
            }
        ]
    },
    "*openshift.KubeadminPasswordSecret": {
        "FileList": [
            {
                "Filename": "templates/kubeadmin-password-secret.yaml.template",
                "Data": "a2luZDogU2VjcmV0CmFwaVZlcnNpb246IHYxCm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBuYW1lOiBrdWJlYWRtaW4KZGF0YToKICBrdWJlYWRtaW46IHt7LkJhc2U2NEVuY29kZWRLdWJlYWRtaW5Qd0hhc2h9fQo="
            }
        ]
    },
    "*openshift.NetworkCRDs": {
        "FileList": [
            {
                "Filename": "templates/cluster-networkconfig-crd.yaml",
                "Data": ""
            }
        ]
    },
    "*openshift.RoleCloudCredsSecretReader": {
        "FileList": [
            {
                "Filename": "templates/role-cloud-creds-secret-reader.yaml.template",
                "Data": "a2luZDogUm9sZQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Ke3stIGlmIC5DbG91ZENyZWRzLkFXU319CiAgbmFtZTogYXdzLWNyZWRzLXNlY3JldC1yZWFkZXIKe3stIGVsc2UgaWYgLkNsb3VkQ3JlZHMuQXp1cmV9fQogIG5hbWU6IGF6dXJlLWNyZWRzLXNlY3JldC1yZWFkZXIKe3stIGVsc2UgaWYgLkNsb3VkQ3JlZHMuR0NQfX0KICBuYW1lOiBnY3AtY3JlZHMtc2VjcmV0LXJlYWRlcgp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5JQk1DbG91ZH19CiAgbmFtZTogaWJtY2xvdWQtY3JlZHMtc2VjcmV0LXJlYWRlcgp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5PcGVuU3RhY2t9fQogIG5hbWU6IG9wZW5zdGFjay1jcmVkcy1zZWNyZXQtcmVhZGVyCnt7LSBlbHNlIGlmIC5DbG91ZENyZWRzLlZTcGhlcmV9fQogIG5hbWU6IHZzcGhlcmUtY3JlZHMtc2VjcmV0LXJlYWRlcgp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5PdmlydH19CiAgbmFtZTogb3ZpcnQtY3JlZHMtc2VjcmV0LXJlYWRlcgp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5OdXRhbml4fX0KICBuYW1lOiBudXRhbml4LWNyZWRzLXNlY3JldC1yZWFkZXIKe3stIGVuZH19CnJ1bGVzOgotIGFwaUdyb3VwczogWyIiXQogIHJlc291cmNlczogWyJzZWNyZXRzIl0Ke3stIGlmIC5DbG91ZENyZWRzLkFXU319CiAgcmVzb3VyY2VOYW1lczogWyJhd3MtY3JlZHMiXQp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5BenVyZX19CiAgcmVzb3VyY2VOYW1lczogWyJhenVyZS1jcmVkZW50aWFscyJdCnt7LSBlbHNlIGlmIC5DbG91ZENyZWRzLkdDUH19CiAgcmVzb3VyY2VOYW1lczogWyJnY3AtY3JlZGVudGlhbHMiXQp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5JQk1DbG91ZH19CiAgcmVzb3VyY2VOYW1lczogWyJpYm1jbG91ZC1jcmVkZW50aWFscyJdCnt7LSBlbHNlIGlmIC5DbG91ZENyZWRzLk9wZW5TdGFja319CiAgcmVzb3VyY2VOYW1lczogWyJvcGVuc3RhY2stY3JlZGVudGlhbHMiXQp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5WU3BoZXJlfX0KICByZXNvdXJjZU5hbWVzOiBbInZzcGhlcmUtY3JlZHMiXQp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5PdmlydH19CiAgcmVzb3VyY2VOYW1lczogWyJvdmlydC1jcmVkZW50aWFscyJdCnt7LSBlbHNlIGlmIC5DbG91ZENyZWRzLk51dGFuaXh9fQogIHJlc291cmNlTmFtZXM6IFsibnV0YW5peC1jcmVkZW50aWFscyJdCnt7LSBlbmR9fQogIHZlcmJzOiBbImdldCJdCg=="
            }
        ]
    },
    "*openshiftinstall.Config": {
        "File": {
            "Filename": "openshift/openshift-install-manifests.yaml",
            "Data": "YXBpVmVyc2lvbjogdjEKZGF0YToKICBpbnZva2VyOiB1c2VyCiAgdmVyc2lvbjogdjQuMTMuMApraW5kOiBDb25maWdNYXAKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBuYW1lOiBvcGVuc2hpZnQtaW5zdGFsbC1tYW5pZmVzdHMKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jb25maWcK"
        }
    },
    "*password.KubeadminPassword": {
        "Password": "qBAt5-9jUyo-wpXZL-EonmK",
        "PasswordHash": "JDJhJDEwJG5IRy9oVnZ6SFR3c1lPc0gzUmZBOGVrYnBSLmhuempQMzdiLmNRUll5VFNaamw5bWVxdDFL",
        "File": {
            "Filename": "auth/kubeadmin-password",
            "Data": "cUJBdDUtOWpVeW8td3BYWkwtRW9ubUs="
        }
    },
    "*quota.PlatformQuotaCheck": {},
    "*releaseimage.Image": {
        "PullSpec": "quay.io/openshift-release-dev/ocp-release@sha256:73946971c03b43a0dc6f7b0946b26a177c2f3c9d37105441315b4e3359373a55",
        "Repository": "quay.io/openshift-release-dev/ocp-release"
    },
    "*rhcos.BootstrapImage": "ami-0ed3f273b2e74f814",
    "*rhcos.Image": "ami-0ed3f273b2e74f814",
    "*rhcos.Release": "",
    "*tls.APIServerProxyCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXekNDQWtPZ0F3SUJBZ0lJQlc3aG55RGY1MG93RFFZSktvWklodmNOQVFFTEJRQXdLREVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEV6QVJCZ05WQkFNVENtRm5aM0psWjJGMGIzSXdIaGNOTWpNd09USTFNakV6TkRNNApXaGNOTWpNd09USTJNakV6TkRNNFdqQThNUlF3RWdZRFZRUUtFd3RyZFdKbExXMWhjM1JsY2pFa01DSUdBMVVFCkF4TWJjM2x6ZEdWdE9tdDFZbVV0WVhCcGMyVnlkbVZ5TFhCeWIzaDVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUYKQUFPQ0FROEFNSUlCQ2dLQ0FRRUFveFN1UkpHZzZWanFxZzd5UkJ3UFBlSitHMGs3SzZkK2JtZFBtQjdGYjJmeApFT1Y3VXh2Q1Y2WlVlaDdkcmNrUHcraFE1bjRXOEd1TWg2Wnc3NTJ5bW84bTMxOXhjVW9aOEw0dTR2S3hsaWt5CnE1eE5QNTJocWtsb3FsR3VwbUtESHlja1lpSHErM3J6ZTg1WjdwMURoWmFTWkcrMExZTlJjRW01OXhicUMvMWQKdk9FeXZ1aVg1enRWTllTa2ZNZU5JRlNKV3IreG5YcmhiWEtRNGJNOXBWVmJpQjN4TGRwL0lNcmFSTElmaGlvLwpHRjJZdGM2UG5Rd3JEOWdpWlYyWmFHWGVza3UyMzNNRUplb29mcnJNUXM3WUhiRVM1YkRqb2xqU0svSHZqS3ZGCnRhUUFScjZRaHAxMmY0enBrWXYzOEJkK24vRHRtQk9YaXlvYXdKa094UUlEQVFBQm8zVXdjekFPQmdOVkhROEIKQWY4RUJBTUNCYUF3RXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVgpIUTRFRmdRVVZSd3NjcTdFQlhIUlgvck1ROGVhOEgrUlhtc3dId1lEVlIwakJCZ3dGb0FVOHhtVGFpUUhMZDh4CnUwem5aZDBoT2hFQmlVMHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRDlaenQxam9GaGJBZlRmZWpnZHV5Wk0KN3pFSy82Uk4yUmdKTllnSnVpUmJ5SVhVTDVzWUZuSklzTndvd1QzTXJrMVM2K25Uc0VJU05Mdjkrb1BOVHVTOAp0RlRDcGNKajdQSjJ2RFl1MlhpdDAyVW1MNXNTME4wOU1LN05TWkhhQWZ1dUM3Yjd3cUhXZGZrUzM5UkhPdDIwCmdGUGxUL0JoRVRXRndiaUYyS1pHZ2VsNEFHZm1kOUUxU05jeGc4TVdLT2IyaWxVYmJpZzdpWUZ3QUNBd2xMWFoKM0NmU0FPQmZDekVnaGMraGlQU3BLQVo1RjU5RGFoVEhOZEk4cEFEUmNLazUza1hNOUhocG9JTm4xY2pKckhtdwozWHBKOHZucmVCUmVyOXJDcDl0dDFvMlNZQ3BIaW5QUkMzSnFmUk1QcWs0RGlYdEdkQ2UydlJiaWJpOFVZVDQ9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBb3hTdVJKR2c2VmpxcWc3eVJCd1BQZUorRzBrN0s2ZCtibWRQbUI3RmIyZnhFT1Y3ClV4dkNWNlpVZWg3ZHJja1B3K2hRNW40VzhHdU1oNlp3NzUyeW1vOG0zMTl4Y1VvWjhMNHU0dkt4bGlreXE1eE4KUDUyaHFrbG9xbEd1cG1LREh5Y2tZaUhxKzNyemU4NVo3cDFEaFphU1pHKzBMWU5SY0VtNTl4YnFDLzFkdk9FeQp2dWlYNXp0Vk5ZU2tmTWVOSUZTSldyK3huWHJoYlhLUTRiTTlwVlZiaUIzeExkcC9JTXJhUkxJZmhpby9HRjJZCnRjNlBuUXdyRDlnaVpWMlphR1hlc2t1MjMzTUVKZW9vZnJyTVFzN1lIYkVTNWJEam9salNLL0h2akt2RnRhUUEKUnI2UWhwMTJmNHpwa1l2MzhCZCtuL0R0bUJPWGl5b2F3SmtPeFFJREFRQUJBb0lCQURHa0FPdjBYRVBMZ2hyagowOUR4clo0THpKRW51SEF3V3VibVlhOFBacy9qbHRpcTBlQlphYzNlWG9hUjBLNnVyakxYQzVFdHZuUE9lUWR0Cm5hRUNvclF6Y1FTN2U3K2RhOG9CU2lwZzc3ZWlzTDdXSkJtQ05ReXRyY055ZTdRLzltUE1PV0g1cXhxRHNZdjEKSXlEa0ZBS2M4OURJdzlLNnoxWmJ5dFN3eit0MzV0NjFOemFQQmVrbk5sU2lzcHY0TGlpVUI5VlJSMDkreGsyNApZczl3Ym9uYk84dlZZaExQbS90Z1VmZUhzZjN5TEl2L2hBdjdmSkZlcFp0Y1Uwa1h1MmdQdVgwckJlSzVYWnEyClV1VUpjcEtZRGdyemtsNkZUSFlZRStHREozSHpMWTNQUVd6NlZmd21QNWg1Q3JibGtFVEVoRnZUQzlDclVmdHUKTmk0cnI3MENnWUVBMElqTllTejVjeFpYNERPR0h2UjNQdlRKcHRlWFZWRytKZTcySU5LVngvTkFkMm4wQ0F5QQpWUWVnRlM1SFkxQ0hTbUVrTjhqaHhUU0pGanJkUVlkRHhPbDRoN1duVmRPT25oRDJWRko5VjFKUFFybTFGREFQCm5CdHdvNllEZmhLSmR2eGVRbEF4b05uWGZQS0FjYkRPWTZmeGRaUW9TZHg4ZHMrOHUvM3VBZ01DZ1lFQXlETlIKdGowL2U4U3JrSGpHQjJEVWdhVXVkVkJ3K1F6cmdxQTllVHlYVlJqSTZibVEwVVdSK2dPbjBnTVZGVGpOMlhHbwpPaU43bko5NHlqSmRWZWpVTGpMK2hBZjNnajk1L0ZCRUoyTnQ0VElkNnhtcGc5SjRLZURiZ05td3JnOGRLdjloClNuY3dWZlZUbVpxeHpYeGNBb2xObFl3Uk9lRVpRWk1EdGVQRDlaY0NnWUJaK094RDVSZXJaQlIrRXp6bTFpc3MKNm9pbWg1WXZwWmtZM01VczNDN3JtalJTVVZDTXVIZ1dON2dGNjNXNWorRVBZbUl4LzJZSm8rVVJ4a3Y0SGRoTAplVUFiclhDSlEwSGhTUWcrMFdocTZJUnlFWlhqSStsWVBTNllMT1NNM0lxYTM3LzdkSVkxRkVnNURKZ0dkWFpXCjRQcjQ4L2QrQnJkY3U3eCtqOHpFNlFLQmdCc2JwOUxQVkV0RUJCOFoyMmFnVytYNkllSk10QjlrK25iRGo4OWMKdnZrTTFCZWh3dFF6WVdMREgvUTE2cUxuQUNpVFZUNGFFK0RQVHlIQjFCV1A0enNtT0lSVU45VnhGdWx0VE8wdwpiMjV3eE5CU3R6dGNRbDBaVDErUkduVlhJcEh4NXBDWXR2ak1zVGM1VlI0SDJzV1ZKZVk4QXhFZFE3ZzNXZWRGCklnR2RBb0dBQVNSemFpeUY4NWpmWEU0dkhESURodlFieXVFWkJWY1o0UXlJQ1UxMUx3bGpnODYvZk42MmdaZFQKNmV3SUNkSkNRa3c0QVJSdVk5UzFKOE4yZiswMS9xR3ZDY21LbEVwclBWY1NQVFgyRy9FK1UreWZCVThRS0MrVAovYTJxb0QzNUxNL0doMUdXVnNGQ09nUUFiMTRNeUhuTGl0MHRrZEFOZHVPRXRWRDV1M3M9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/apiserver-proxy.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBb3hTdVJKR2c2VmpxcWc3eVJCd1BQZUorRzBrN0s2ZCtibWRQbUI3RmIyZnhFT1Y3ClV4dkNWNlpVZWg3ZHJja1B3K2hRNW40VzhHdU1oNlp3NzUyeW1vOG0zMTl4Y1VvWjhMNHU0dkt4bGlreXE1eE4KUDUyaHFrbG9xbEd1cG1LREh5Y2tZaUhxKzNyemU4NVo3cDFEaFphU1pHKzBMWU5SY0VtNTl4YnFDLzFkdk9FeQp2dWlYNXp0Vk5ZU2tmTWVOSUZTSldyK3huWHJoYlhLUTRiTTlwVlZiaUIzeExkcC9JTXJhUkxJZmhpby9HRjJZCnRjNlBuUXdyRDlnaVpWMlphR1hlc2t1MjMzTUVKZW9vZnJyTVFzN1lIYkVTNWJEam9salNLL0h2akt2RnRhUUEKUnI2UWhwMTJmNHpwa1l2MzhCZCtuL0R0bUJPWGl5b2F3SmtPeFFJREFRQUJBb0lCQURHa0FPdjBYRVBMZ2hyagowOUR4clo0THpKRW51SEF3V3VibVlhOFBacy9qbHRpcTBlQlphYzNlWG9hUjBLNnVyakxYQzVFdHZuUE9lUWR0Cm5hRUNvclF6Y1FTN2U3K2RhOG9CU2lwZzc3ZWlzTDdXSkJtQ05ReXRyY055ZTdRLzltUE1PV0g1cXhxRHNZdjEKSXlEa0ZBS2M4OURJdzlLNnoxWmJ5dFN3eit0MzV0NjFOemFQQmVrbk5sU2lzcHY0TGlpVUI5VlJSMDkreGsyNApZczl3Ym9uYk84dlZZaExQbS90Z1VmZUhzZjN5TEl2L2hBdjdmSkZlcFp0Y1Uwa1h1MmdQdVgwckJlSzVYWnEyClV1VUpjcEtZRGdyemtsNkZUSFlZRStHREozSHpMWTNQUVd6NlZmd21QNWg1Q3JibGtFVEVoRnZUQzlDclVmdHUKTmk0cnI3MENnWUVBMElqTllTejVjeFpYNERPR0h2UjNQdlRKcHRlWFZWRytKZTcySU5LVngvTkFkMm4wQ0F5QQpWUWVnRlM1SFkxQ0hTbUVrTjhqaHhUU0pGanJkUVlkRHhPbDRoN1duVmRPT25oRDJWRko5VjFKUFFybTFGREFQCm5CdHdvNllEZmhLSmR2eGVRbEF4b05uWGZQS0FjYkRPWTZmeGRaUW9TZHg4ZHMrOHUvM3VBZ01DZ1lFQXlETlIKdGowL2U4U3JrSGpHQjJEVWdhVXVkVkJ3K1F6cmdxQTllVHlYVlJqSTZibVEwVVdSK2dPbjBnTVZGVGpOMlhHbwpPaU43bko5NHlqSmRWZWpVTGpMK2hBZjNnajk1L0ZCRUoyTnQ0VElkNnhtcGc5SjRLZURiZ05td3JnOGRLdjloClNuY3dWZlZUbVpxeHpYeGNBb2xObFl3Uk9lRVpRWk1EdGVQRDlaY0NnWUJaK094RDVSZXJaQlIrRXp6bTFpc3MKNm9pbWg1WXZwWmtZM01VczNDN3JtalJTVVZDTXVIZ1dON2dGNjNXNWorRVBZbUl4LzJZSm8rVVJ4a3Y0SGRoTAplVUFiclhDSlEwSGhTUWcrMFdocTZJUnlFWlhqSStsWVBTNllMT1NNM0lxYTM3LzdkSVkxRkVnNURKZ0dkWFpXCjRQcjQ4L2QrQnJkY3U3eCtqOHpFNlFLQmdCc2JwOUxQVkV0RUJCOFoyMmFnVytYNkllSk10QjlrK25iRGo4OWMKdnZrTTFCZWh3dFF6WVdMREgvUTE2cUxuQUNpVFZUNGFFK0RQVHlIQjFCV1A0enNtT0lSVU45VnhGdWx0VE8wdwpiMjV3eE5CU3R6dGNRbDBaVDErUkduVlhJcEh4NXBDWXR2ak1zVGM1VlI0SDJzV1ZKZVk4QXhFZFE3ZzNXZWRGCklnR2RBb0dBQVNSemFpeUY4NWpmWEU0dkhESURodlFieXVFWkJWY1o0UXlJQ1UxMUx3bGpnODYvZk42MmdaZFQKNmV3SUNkSkNRa3c0QVJSdVk5UzFKOE4yZiswMS9xR3ZDY21LbEVwclBWY1NQVFgyRy9FK1UreWZCVThRS0MrVAovYTJxb0QzNUxNL0doMUdXVnNGQ09nUUFiMTRNeUhuTGl0MHRrZEFOZHVPRXRWRDV1M3M9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/apiserver-proxy.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXekNDQWtPZ0F3SUJBZ0lJQlc3aG55RGY1MG93RFFZSktvWklodmNOQVFFTEJRQXdLREVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEV6QVJCZ05WQkFNVENtRm5aM0psWjJGMGIzSXdIaGNOTWpNd09USTFNakV6TkRNNApXaGNOTWpNd09USTJNakV6TkRNNFdqQThNUlF3RWdZRFZRUUtFd3RyZFdKbExXMWhjM1JsY2pFa01DSUdBMVVFCkF4TWJjM2x6ZEdWdE9tdDFZbVV0WVhCcGMyVnlkbVZ5TFhCeWIzaDVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUYKQUFPQ0FROEFNSUlCQ2dLQ0FRRUFveFN1UkpHZzZWanFxZzd5UkJ3UFBlSitHMGs3SzZkK2JtZFBtQjdGYjJmeApFT1Y3VXh2Q1Y2WlVlaDdkcmNrUHcraFE1bjRXOEd1TWg2Wnc3NTJ5bW84bTMxOXhjVW9aOEw0dTR2S3hsaWt5CnE1eE5QNTJocWtsb3FsR3VwbUtESHlja1lpSHErM3J6ZTg1WjdwMURoWmFTWkcrMExZTlJjRW01OXhicUMvMWQKdk9FeXZ1aVg1enRWTllTa2ZNZU5JRlNKV3IreG5YcmhiWEtRNGJNOXBWVmJpQjN4TGRwL0lNcmFSTElmaGlvLwpHRjJZdGM2UG5Rd3JEOWdpWlYyWmFHWGVza3UyMzNNRUplb29mcnJNUXM3WUhiRVM1YkRqb2xqU0svSHZqS3ZGCnRhUUFScjZRaHAxMmY0enBrWXYzOEJkK24vRHRtQk9YaXlvYXdKa094UUlEQVFBQm8zVXdjekFPQmdOVkhROEIKQWY4RUJBTUNCYUF3RXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVgpIUTRFRmdRVVZSd3NjcTdFQlhIUlgvck1ROGVhOEgrUlhtc3dId1lEVlIwakJCZ3dGb0FVOHhtVGFpUUhMZDh4CnUwem5aZDBoT2hFQmlVMHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRDlaenQxam9GaGJBZlRmZWpnZHV5Wk0KN3pFSy82Uk4yUmdKTllnSnVpUmJ5SVhVTDVzWUZuSklzTndvd1QzTXJrMVM2K25Uc0VJU05Mdjkrb1BOVHVTOAp0RlRDcGNKajdQSjJ2RFl1MlhpdDAyVW1MNXNTME4wOU1LN05TWkhhQWZ1dUM3Yjd3cUhXZGZrUzM5UkhPdDIwCmdGUGxUL0JoRVRXRndiaUYyS1pHZ2VsNEFHZm1kOUUxU05jeGc4TVdLT2IyaWxVYmJpZzdpWUZ3QUNBd2xMWFoKM0NmU0FPQmZDekVnaGMraGlQU3BLQVo1RjU5RGFoVEhOZEk4cEFEUmNLazUza1hNOUhocG9JTm4xY2pKckhtdwozWHBKOHZucmVCUmVyOXJDcDl0dDFvMlNZQ3BIaW5QUkMzSnFmUk1QcWs0RGlYdEdkQ2UydlJiaWJpOFVZVDQ9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.AdminKubeConfigCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJWFg4cVh2aFpaNG93RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB5TXpBNU1qVXlNVE0wTXpWYUZ3MHpNekE1TWpJeU1UTTBNelZhTURZeEVqQVFCZ05WQkFzVENXOXdaVzV6CmFHbG1kREVnTUI0R0ExVUVBeE1YWVdSdGFXNHRhM1ZpWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRDlwK1R0N21HVzJjQmdyK0orU3JLM3krc2dvN1B3YUZVdQpDQ2Fub3ZwOXUwZTEvYlBOZlkreHlHVUNEYmprMVBWa0w2R0dGVG9UWHllZ3FtaExNVWN0UjQ1ODExMGVZNGpVClJ2UVZ5b21Jb2h0dnovaWZTVUowWVowakcvR3pwM2J6WlBhU3BHWWxEQ0xMcy9keHhpS240bzAyWi9FaHZ2QXgKRkhQcmIwWW5hdWY0V0tuTEFoZGpLaEg3ZzFTczEydk1ER25kMGdvdFk0b2dvZk40ZmdQNjIvcVlQWTY4eHcvWgoxRHBzdko4M0FBVEY3d0xqcE5MSTNLcVdnRFRjQXAwaW4yQ0dvZGh0MUtzYlc0WnZObXprcnpCaXR3bmZCVGRxCmRxMTdGR1lFYkhMQWI5N0N1VCtSbmUrZFNSN3hpOCs5OFVKNHAyU29hN1J2d05GNWJlS3RBZ01CQUFHalFqQkEKTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlR6bm5jWApYSlN4RU9UdzMvZW5BNXVHbnJRNTJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUE5REVTYVo2NW9IMkg5UDFQCitDZXZ1b1FCMnc5ZVB2NTVVMmZHVGkrSFhuTnF1cWZtK0lDNGh0cHp1R0RVSHdkZENJSzJjbjdmUGhJbW9oRFkKT3lQb1hROGI4N2hkdXZyMElRdGdmZVFQb1MzWlFpakltdzZ3b1FmclpsbVVoU1lFc1U2TEowSUJ1dU9ORXpXNQpyeEF5YlJuQmJaUGlYVVVwUSthdVpSbXRFeHFaVDVoUkg0alBUaW8rNEg3UXh1TlFYZEJLUmppMnJSVWl5NmI4CmFZUTAzNDhUdHErdnJZdjRJME01N2ZJdFNLOTJVT2o0ZXd0ZUNUOGlXWkliVXlNQzM5WEN0dGJGUHRzRjlFRGEKR2pyM1NLZ1hCQkdhaUVnVloweGxPZjQ0MU1FUEY0TitqQlBZLzdWY0RjQVhCd2xoMTRydmF2dTlhc3VBbXpSMApsMEw5elE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/admin-kubeconfig-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJWFg4cVh2aFpaNG93RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB5TXpBNU1qVXlNVE0wTXpWYUZ3MHpNekE1TWpJeU1UTTBNelZhTURZeEVqQVFCZ05WQkFzVENXOXdaVzV6CmFHbG1kREVnTUI0R0ExVUVBeE1YWVdSdGFXNHRhM1ZpWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRDlwK1R0N21HVzJjQmdyK0orU3JLM3krc2dvN1B3YUZVdQpDQ2Fub3ZwOXUwZTEvYlBOZlkreHlHVUNEYmprMVBWa0w2R0dGVG9UWHllZ3FtaExNVWN0UjQ1ODExMGVZNGpVClJ2UVZ5b21Jb2h0dnovaWZTVUowWVowakcvR3pwM2J6WlBhU3BHWWxEQ0xMcy9keHhpS240bzAyWi9FaHZ2QXgKRkhQcmIwWW5hdWY0V0tuTEFoZGpLaEg3ZzFTczEydk1ER25kMGdvdFk0b2dvZk40ZmdQNjIvcVlQWTY4eHcvWgoxRHBzdko4M0FBVEY3d0xqcE5MSTNLcVdnRFRjQXAwaW4yQ0dvZGh0MUtzYlc0WnZObXprcnpCaXR3bmZCVGRxCmRxMTdGR1lFYkhMQWI5N0N1VCtSbmUrZFNSN3hpOCs5OFVKNHAyU29hN1J2d05GNWJlS3RBZ01CQUFHalFqQkEKTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlR6bm5jWApYSlN4RU9UdzMvZW5BNXVHbnJRNTJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUE5REVTYVo2NW9IMkg5UDFQCitDZXZ1b1FCMnc5ZVB2NTVVMmZHVGkrSFhuTnF1cWZtK0lDNGh0cHp1R0RVSHdkZENJSzJjbjdmUGhJbW9oRFkKT3lQb1hROGI4N2hkdXZyMElRdGdmZVFQb1MzWlFpakltdzZ3b1FmclpsbVVoU1lFc1U2TEowSUJ1dU9ORXpXNQpyeEF5YlJuQmJaUGlYVVVwUSthdVpSbXRFeHFaVDVoUkg0alBUaW8rNEg3UXh1TlFYZEJLUmppMnJSVWl5NmI4CmFZUTAzNDhUdHErdnJZdjRJME01N2ZJdFNLOTJVT2o0ZXd0ZUNUOGlXWkliVXlNQzM5WEN0dGJGUHRzRjlFRGEKR2pyM1NLZ1hCQkdhaUVnVloweGxPZjQ0MU1FUEY0TitqQlBZLzdWY0RjQVhCd2xoMTRydmF2dTlhc3VBbXpSMApsMEw5elE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.AdminKubeConfigClientCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaekNDQWsrZ0F3SUJBZ0lJSTJzV3F5OVJCSTR3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB5TXpBNU1qVXlNVE0wTXpWYUZ3MHpNekE1TWpJeU1UTTBNelphTURBeEZ6QVZCZ05WQkFvVERuTjVjM1JsCmJUcHRZWE4wWlhKek1SVXdFd1lEVlFRREV3eHplWE4wWlcwNllXUnRhVzR3Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURjbmZvTDY2eHlBeFRxeWswN09YUXVIeHd4Z0loOEE4NmtMVUs4MjJxbAo3dnhBKzdQQTVyUTJqMWJscjJ6Y0QvSWU2SWZyeUtQbytrN2FuU2VnR1Z1VnZLU2dVRzh4THY4YlRobTAyc0o1CmhQdEFZRjUvVXN4UE1mVU9PcTdncndrSXI5UUt0bkNlZ1dMeTNqQWRWOFRsQmJ6U3NPK3M2VWk5NDh4U1haczAKWFd2N1g3R2VnckMxdGZad1JVaWZZdlhuT3orWDA1YlZpcGQva2h1ZStHdnN0V0xiRmhNdTFvVFFkZnhMVVI5bwowK0FwMkdVTXZCKzRoRHpnWW1pNG0yRkFrTG9yUUx5YmhsLzd1czU4TmRKL2dxS2V4REQ4Q2laamhic0FqTGwzCk0vV1BTeFROQVBYdlVuclJkanBJZXYvT3dFZHlsRmRsbm0wM3BnNmdPWjc3QWdNQkFBR2pmekI5TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVnSVN5TDUyN25EWGdQNVdBS1VxSVhIVUJEQjB3SHdZRFZSMGpCQmd3CkZvQVU4NTUzRjF5VXNSRGs4Ti8zcHdPYmhwNjBPZHN3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUlYOUFZZFgKNmdKWnBZdkZ6M2dCaDJlRGFrNnN1OVVGZnQ0ZTdyY2FzUHJ6TWtPaXlRdHc5a0pjeU1uZlIzUkxDazRKZzczeQo0eHowSmNwVU5iTzB1UFZrUUM1TldrMTVSWXJGbTBhdEQ4azNzck1tQkVycFhDM1EzUVBrcDllUm0xZGg5OFdWClNDVDdlY0pMMFhIRjRZZkkyMEVxeEpralB2VElaRFBIblYwMkVhbyt0cmZUTDJIWUFRSGZRZUwwbnJ4MG9WMzIKbVJTQ3MyQWFodFdUMUxPUWRnenFQYmNBZXZtUlJSa1FwSitqRG50Y1B0V1R6LzBobWZOT3FaYWFpTGpMN3BQNQo1SGltYzMrcE1qWUpMekdwbWQzMXBZWWkwSUF4WlJKWC91dHBQZHZnVE5KVExrU0plbTlBYkVuUGRXTDlxbjJMClZ0aWZkUUVFRWFIS1Rodz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBM0ozNkMrdXNjZ01VNnNwTk96bDBMaDhjTVlDSWZBUE9wQzFDdk50cXBlNzhRUHV6CndPYTBObzlXNWE5czNBL3lIdWlINjhpajZQcE8ycDBub0JsYmxieWtvRkJ2TVM3L0cwNFp0TnJDZVlUN1FHQmUKZjFMTVR6SDFEanF1NEs4SkNLL1VDclp3bm9GaTh0NHdIVmZFNVFXODByRHZyT2xJdmVQTVVsMmJORjFyKzEreApub0t3dGJYMmNFVkluMkwxNXpzL2w5T1cxWXFYZjVJYm52aHI3TFZpMnhZVEx0YUUwSFg4UzFFZmFOUGdLZGhsCkRMd2Z1SVE4NEdKb3VKdGhRSkM2SzBDOG00WmYrN3JPZkRYU2Y0S2luc1F3L0FvbVk0VzdBSXk1ZHpQMWowc1UKelFEMTcxSjYwWFk2U0hyL3pzQkhjcFJYWlo1dE42WU9vRG1lK3dJREFRQUJBb0lCQUZuc2hwUS9UcjMySlp1QwpOREswdTNkbE5OKzBqVzFITy81TmVJdDBRQ2M4bjFONWhRNVd1eFFXSHd4bUVkQXRLN3FQZTMrTys4aWw1bWhUCmNHaGdqYVVlREZoUUVOS1NYbWRwMFM2WGtIZHB6ZU95cERIdnRObCsrbXovWEhLMnhjN2xwRjl0ZDhBVDZ4b2wKbUtVTk5uTkhnR3k4dENUZHZjbXd4WUs1SnQ4VGh4RFo0cGZLYzhWMGV2YmNGRWhPbjdQTXJ6NDFtcm1ZNFJtZwpXRlg2djkxNGxTUlNuMTg5ZFE1eXNkbFdWRkkyTTNIdEU5T21LZmJMeGx1MnU0VUl2eHNoblVSS0VoVVM1NngyCnZLY29YeHhPa1MzeFRGNTlJOHYrSWp1M29NQ0J4L3hzWHA0R3pzOEUxTVNTWEFEenVhY3dlbFgySG5FUHpsUW0KeHVsUkFhRUNnWUVBM2JVTGpkSEhmUjhIOElVS3k3NnNOUEdlNExNUGF2d1JJanh0M1M3NG1tUnJxa0VkajN6VwpFTWE0SWFucFo2ejlUVGwydjFwMkRZQ1MwMEpVdkJOdEo3Z09tRExIa21UcFg1N0pJYzgvaTZ0V2NBNEpka2hsClFCZGVyWTAvMVFyakhZcGkzR2JVL3FsOWVEanVGZTBBOUk1d0hxLys2YTQ1MUV0VzQvci9QVXNDZ1lFQS9yM0UKTkFsNnk4aGJnYWZpeDVYNzIvT2ZsS2cvdUc5d1FGa0drdjl6blphb29QTmQwcXhLcnR5TytxRUZKWXRObDhjQgpUdWNSaDRUajVnaUllNWNlaHA5MEc4THljcjBkbnprREd3SitRSkx1cXZKTmNCUUhVVjczSDhHS1IxbkpQQlluCld1TEN3dkNWQVVkdnNIdHBPcHpxYjcvVU5JcFcyZUVpVU45Y2h4RUNnWUJBSWpVYmEwbTN5aGd6M1dpSUU3b2cKL3B3bEIrYzMzWDdmVm5lNWVmTDBSb1JXbGN1RlRHbG9KUFB5MlFIcHVjTDBhZUVON1k4a3pNS3NWZzNJOGgycgpWYlR6RmcxaExjdk1tMVEzY1lwQ1R1Z01OaU5La2hxbjlacXZ2YUp2Y0Z6T21NK01UanJqQ0FpQmxJWmExVnBuClpDVE8yNzV6dnJCLzF1Tmx3NSsrRFFLQmdRQ2N2UjV2OWpVOEZiZFgrM2lwM1RydWh1UDFqK0JGRnl3Mks1REQKK2JHbGtRR0lwclZmM3VyRTFLaVV4V1pwUjJFaXRpdXo1TEVBZFYvVU5nUGtKNE44eWJlakxUd0lKUnlJejRkOQpvdmNUdkZSbGtsamJVVGQvZGJNUU13Rm1EWFNvSitsbkhvYy9jcy83elh5SFZpZlZESitpeXFGREFxdVZ1OVJsCmRrbDBRUUtCZ0ZJTndZZUJnR01aNFNvNzNpOEovVzJrMlZIUjc5Q1J6S0hhMmVaMU9PZlRJQUU3TDBSVHJlbWwKM0VHbmFwUmdGU2V5aXNnVU5LeE9Uakg1MUI3N2UrVWx3KzVBR2lqV3M3cUlTYktwb2kyU3paZHN2dG5temx1YwpMNUFtNW5FTGVGRVBwMUNvUUlVM215VlBnZC9zckhZTUhvUW40UjNJZlI4YmZjc2ZLbTZuCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/admin-kubeconfig-client.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBM0ozNkMrdXNjZ01VNnNwTk96bDBMaDhjTVlDSWZBUE9wQzFDdk50cXBlNzhRUHV6CndPYTBObzlXNWE5czNBL3lIdWlINjhpajZQcE8ycDBub0JsYmxieWtvRkJ2TVM3L0cwNFp0TnJDZVlUN1FHQmUKZjFMTVR6SDFEanF1NEs4SkNLL1VDclp3bm9GaTh0NHdIVmZFNVFXODByRHZyT2xJdmVQTVVsMmJORjFyKzEreApub0t3dGJYMmNFVkluMkwxNXpzL2w5T1cxWXFYZjVJYm52aHI3TFZpMnhZVEx0YUUwSFg4UzFFZmFOUGdLZGhsCkRMd2Z1SVE4NEdKb3VKdGhRSkM2SzBDOG00WmYrN3JPZkRYU2Y0S2luc1F3L0FvbVk0VzdBSXk1ZHpQMWowc1UKelFEMTcxSjYwWFk2U0hyL3pzQkhjcFJYWlo1dE42WU9vRG1lK3dJREFRQUJBb0lCQUZuc2hwUS9UcjMySlp1QwpOREswdTNkbE5OKzBqVzFITy81TmVJdDBRQ2M4bjFONWhRNVd1eFFXSHd4bUVkQXRLN3FQZTMrTys4aWw1bWhUCmNHaGdqYVVlREZoUUVOS1NYbWRwMFM2WGtIZHB6ZU95cERIdnRObCsrbXovWEhLMnhjN2xwRjl0ZDhBVDZ4b2wKbUtVTk5uTkhnR3k4dENUZHZjbXd4WUs1SnQ4VGh4RFo0cGZLYzhWMGV2YmNGRWhPbjdQTXJ6NDFtcm1ZNFJtZwpXRlg2djkxNGxTUlNuMTg5ZFE1eXNkbFdWRkkyTTNIdEU5T21LZmJMeGx1MnU0VUl2eHNoblVSS0VoVVM1NngyCnZLY29YeHhPa1MzeFRGNTlJOHYrSWp1M29NQ0J4L3hzWHA0R3pzOEUxTVNTWEFEenVhY3dlbFgySG5FUHpsUW0KeHVsUkFhRUNnWUVBM2JVTGpkSEhmUjhIOElVS3k3NnNOUEdlNExNUGF2d1JJanh0M1M3NG1tUnJxa0VkajN6VwpFTWE0SWFucFo2ejlUVGwydjFwMkRZQ1MwMEpVdkJOdEo3Z09tRExIa21UcFg1N0pJYzgvaTZ0V2NBNEpka2hsClFCZGVyWTAvMVFyakhZcGkzR2JVL3FsOWVEanVGZTBBOUk1d0hxLys2YTQ1MUV0VzQvci9QVXNDZ1lFQS9yM0UKTkFsNnk4aGJnYWZpeDVYNzIvT2ZsS2cvdUc5d1FGa0drdjl6blphb29QTmQwcXhLcnR5TytxRUZKWXRObDhjQgpUdWNSaDRUajVnaUllNWNlaHA5MEc4THljcjBkbnprREd3SitRSkx1cXZKTmNCUUhVVjczSDhHS1IxbkpQQlluCld1TEN3dkNWQVVkdnNIdHBPcHpxYjcvVU5JcFcyZUVpVU45Y2h4RUNnWUJBSWpVYmEwbTN5aGd6M1dpSUU3b2cKL3B3bEIrYzMzWDdmVm5lNWVmTDBSb1JXbGN1RlRHbG9KUFB5MlFIcHVjTDBhZUVON1k4a3pNS3NWZzNJOGgycgpWYlR6RmcxaExjdk1tMVEzY1lwQ1R1Z01OaU5La2hxbjlacXZ2YUp2Y0Z6T21NK01UanJqQ0FpQmxJWmExVnBuClpDVE8yNzV6dnJCLzF1Tmx3NSsrRFFLQmdRQ2N2UjV2OWpVOEZiZFgrM2lwM1RydWh1UDFqK0JGRnl3Mks1REQKK2JHbGtRR0lwclZmM3VyRTFLaVV4V1pwUjJFaXRpdXo1TEVBZFYvVU5nUGtKNE44eWJlakxUd0lKUnlJejRkOQpvdmNUdkZSbGtsamJVVGQvZGJNUU13Rm1EWFNvSitsbkhvYy9jcy83elh5SFZpZlZESitpeXFGREFxdVZ1OVJsCmRrbDBRUUtCZ0ZJTndZZUJnR01aNFNvNzNpOEovVzJrMlZIUjc5Q1J6S0hhMmVaMU9PZlRJQUU3TDBSVHJlbWwKM0VHbmFwUmdGU2V5aXNnVU5LeE9Uakg1MUI3N2UrVWx3KzVBR2lqV3M3cUlTYktwb2kyU3paZHN2dG5temx1YwpMNUFtNW5FTGVGRVBwMUNvUUlVM215VlBnZC9zckhZTUhvUW40UjNJZlI4YmZjc2ZLbTZuCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/admin-kubeconfig-client.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaekNDQWsrZ0F3SUJBZ0lJSTJzV3F5OVJCSTR3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB5TXpBNU1qVXlNVE0wTXpWYUZ3MHpNekE1TWpJeU1UTTBNelphTURBeEZ6QVZCZ05WQkFvVERuTjVjM1JsCmJUcHRZWE4wWlhKek1SVXdFd1lEVlFRREV3eHplWE4wWlcwNllXUnRhVzR3Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURjbmZvTDY2eHlBeFRxeWswN09YUXVIeHd4Z0loOEE4NmtMVUs4MjJxbAo3dnhBKzdQQTVyUTJqMWJscjJ6Y0QvSWU2SWZyeUtQbytrN2FuU2VnR1Z1VnZLU2dVRzh4THY4YlRobTAyc0o1CmhQdEFZRjUvVXN4UE1mVU9PcTdncndrSXI5UUt0bkNlZ1dMeTNqQWRWOFRsQmJ6U3NPK3M2VWk5NDh4U1haczAKWFd2N1g3R2VnckMxdGZad1JVaWZZdlhuT3orWDA1YlZpcGQva2h1ZStHdnN0V0xiRmhNdTFvVFFkZnhMVVI5bwowK0FwMkdVTXZCKzRoRHpnWW1pNG0yRkFrTG9yUUx5YmhsLzd1czU4TmRKL2dxS2V4REQ4Q2laamhic0FqTGwzCk0vV1BTeFROQVBYdlVuclJkanBJZXYvT3dFZHlsRmRsbm0wM3BnNmdPWjc3QWdNQkFBR2pmekI5TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVnSVN5TDUyN25EWGdQNVdBS1VxSVhIVUJEQjB3SHdZRFZSMGpCQmd3CkZvQVU4NTUzRjF5VXNSRGs4Ti8zcHdPYmhwNjBPZHN3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUlYOUFZZFgKNmdKWnBZdkZ6M2dCaDJlRGFrNnN1OVVGZnQ0ZTdyY2FzUHJ6TWtPaXlRdHc5a0pjeU1uZlIzUkxDazRKZzczeQo0eHowSmNwVU5iTzB1UFZrUUM1TldrMTVSWXJGbTBhdEQ4azNzck1tQkVycFhDM1EzUVBrcDllUm0xZGg5OFdWClNDVDdlY0pMMFhIRjRZZkkyMEVxeEpralB2VElaRFBIblYwMkVhbyt0cmZUTDJIWUFRSGZRZUwwbnJ4MG9WMzIKbVJTQ3MyQWFodFdUMUxPUWRnenFQYmNBZXZtUlJSa1FwSitqRG50Y1B0V1R6LzBobWZOT3FaYWFpTGpMN3BQNQo1SGltYzMrcE1qWUpMekdwbWQzMXBZWWkwSUF4WlJKWC91dHBQZHZnVE5KVExrU0plbTlBYkVuUGRXTDlxbjJMClZ0aWZkUUVFRWFIS1Rodz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.AdminKubeConfigSignerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJWFg4cVh2aFpaNG93RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB5TXpBNU1qVXlNVE0wTXpWYUZ3MHpNekE1TWpJeU1UTTBNelZhTURZeEVqQVFCZ05WQkFzVENXOXdaVzV6CmFHbG1kREVnTUI0R0ExVUVBeE1YWVdSdGFXNHRhM1ZpWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRDlwK1R0N21HVzJjQmdyK0orU3JLM3krc2dvN1B3YUZVdQpDQ2Fub3ZwOXUwZTEvYlBOZlkreHlHVUNEYmprMVBWa0w2R0dGVG9UWHllZ3FtaExNVWN0UjQ1ODExMGVZNGpVClJ2UVZ5b21Jb2h0dnovaWZTVUowWVowakcvR3pwM2J6WlBhU3BHWWxEQ0xMcy9keHhpS240bzAyWi9FaHZ2QXgKRkhQcmIwWW5hdWY0V0tuTEFoZGpLaEg3ZzFTczEydk1ER25kMGdvdFk0b2dvZk40ZmdQNjIvcVlQWTY4eHcvWgoxRHBzdko4M0FBVEY3d0xqcE5MSTNLcVdnRFRjQXAwaW4yQ0dvZGh0MUtzYlc0WnZObXprcnpCaXR3bmZCVGRxCmRxMTdGR1lFYkhMQWI5N0N1VCtSbmUrZFNSN3hpOCs5OFVKNHAyU29hN1J2d05GNWJlS3RBZ01CQUFHalFqQkEKTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlR6bm5jWApYSlN4RU9UdzMvZW5BNXVHbnJRNTJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUE5REVTYVo2NW9IMkg5UDFQCitDZXZ1b1FCMnc5ZVB2NTVVMmZHVGkrSFhuTnF1cWZtK0lDNGh0cHp1R0RVSHdkZENJSzJjbjdmUGhJbW9oRFkKT3lQb1hROGI4N2hkdXZyMElRdGdmZVFQb1MzWlFpakltdzZ3b1FmclpsbVVoU1lFc1U2TEowSUJ1dU9ORXpXNQpyeEF5YlJuQmJaUGlYVVVwUSthdVpSbXRFeHFaVDVoUkg0alBUaW8rNEg3UXh1TlFYZEJLUmppMnJSVWl5NmI4CmFZUTAzNDhUdHErdnJZdjRJME01N2ZJdFNLOTJVT2o0ZXd0ZUNUOGlXWkliVXlNQzM5WEN0dGJGUHRzRjlFRGEKR2pyM1NLZ1hCQkdhaUVnVloweGxPZjQ0MU1FUEY0TitqQlBZLzdWY0RjQVhCd2xoMTRydmF2dTlhc3VBbXpSMApsMEw5elE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBL2FmazdlNWhsdG5BWUsvaWZrcXl0OHZySUtPejhHaFZMZ2dtcDZMNmZidEh0ZjJ6CnpYMlBzY2hsQWcyNDVOVDFaQytoaGhVNkUxOG5vS3BvU3pGSExVZU9mTmRkSG1PSTFFYjBGY3FKaUtJYmI4LzQKbjBsQ2RHR2RJeHZ4czZkMjgyVDJrcVJtSlF3aXk3UDNjY1lpcCtLTk5tZnhJYjd3TVJSejYyOUdKMnJuK0ZpcAp5d0lYWXlvUis0TlVyTmRyekF4cDNkSUtMV09LSUtIemVINEQrdHY2bUQyT3ZNY1AyZFE2Ykx5Zk53QUV4ZThDCjQ2VFN5TnlxbG9BMDNBS2RJcDlnaHFIWWJkU3JHMXVHYnpaczVLOHdZcmNKM3dVM2FuYXRleFJtQkd4eXdHL2UKd3JrL2taM3ZuVWtlOFl2UHZmRkNlS2RrcUd1MGI4RFJlVzNpclFJREFRQUJBb0lCQVFDZEJPYWhKdlRBUmZGaApxTjlESUloN1lEOGdDRlptRnAvTUMvMnB2aWpqMWgveEY2akxKdFBoME5RK0xqSnJiU3l1cFJHUEIrcllmUW54CjJpc1BpT1N2c2VFUmhOdSs2UXlWbzRxTFJzSldrMHI2cnpvUG1IRUx6RFZTdTRTbW1wNzIwbVFVcUxJV2N1bkQKUVplR2xZbDBkYmpHbWhkWnRYSElZQW5XRHg3VlhJdllTZEVlMjlUS0ZUUXkxZHcvZnQyZlBuWGtXamw1MDZNMgorYkV3Z0lQVGpTN3RUdDNNcm1GdGN3dVZJdjNDOEtLY0NRcjB6NURCRHp4Wi8wd1BHTkhVYlY2Vk5uZ1lQQTZsCjhxNjQvU0o5cmRPUkJOMnI5b2djWm1KMDBPME0rc1JMZVRtbFlhL1N5eS9UR1oxUURoVHlJYm5hTit5elFhY0cKWEF3aG81ZWhBb0dCQVA0QVFpUzJFQURFK01JTVdOYTZlVUd2NEg2RGFDdE4rUDFsd2puZ29Yb2VBNmtSOWFJawpubkxQVkVmOFJnYklaRW5CTnpxYXNZTVhCWTg1T2x4ayt1OE9ONVBjdlpLdkkzSlBPL0YwUFBSbUJ0MFdKUlBlCnBnanJqU3BmYjN5WXY5YnhOc2VJdUxsOGFSOWNvM0wySVJIU2lIdklrQ2YzNkIwNDEzMFpuMy9wQW9HQkFQK20KOE1HK2dpSmt0TmRPdUxZcGswdkRDRnFmYlltMW5kSDBxZVhKOURtZkRIME1xS1A1QTJuMThjSWRSekdPaEVXYwp1OVBJZTd3dEpIRkxzZG5wOEsrYThEN2pTNnVINStUOXRxTnpxangvaWZpNnIvZlRnVFpXL1krSUZVeEhBYkd5CnVxQmphNXR3b1FMZkZvOHd5VlVTMmE5dld2ODFMWi9pZXVKOU0zWWxBb0dBUnIwenJwMjEzMEQ4TnE3Um54dlgKNFY5bUdsWG1rUWpxSzBoSHkyNndDaDZKem5CZUJJWkdTcHRMVWJFRW42YjNwMExVYXRIaVZpdjNOR2d2eE1PcQp6eUVhZ1dlY3RGbHFlYzl2VmxPVkZrdkQ1WmJoUktOaGdtSjNzakZhRDAxTFFFVjFpQ1NmcmFqa2JnT1MwZFdTCmFEQkdLcE0wOHF5c1RGY2tUSWJ5VU9FQ2dZRUFtSkZCSnU2UmJRTWFwVTkyamtlN2ZzQXkwUnBKM2FBRVFsTTMKdlVuTHRVT0V5Vy92aUlQSUZNbFE4TjVXS1czNjVDeElMM2g2MTI4OVMxdTRGT3MyMXlXbzhHN25Mc1Baa1dBVQpTZkZ5Qzg2MVFUbndYLzdhSXRyQlVaSU4yOHFZYVRyWGczWXh0cjc5WitCSTcwVlhNYTBoT2tCRFZ3Q2ViTWRWClBLc3BOZjBDZ1lBcytQeVU0a1kxUEJoZEduZXB1eFU2WmFlUEZQR28zRXE3TXBOYVZNQWV4WEtLT1ZSNTF4cG4KU2dwUzQrbGdoellQSEZUL1Z6eUVnQ1lraG1IK0hyVFF1bUlML3JGRi9SdVdIRnRjYTBRU1c4TkZWK1hHUmZxMwowNW5Cc0JjUjNwd0lwTDcxalROVnFmdkJIMHQzL2MzaVlsd0ZUMzZ1cjA1V1RqUmtMMXp1WGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/admin-kubeconfig-signer.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBL2FmazdlNWhsdG5BWUsvaWZrcXl0OHZySUtPejhHaFZMZ2dtcDZMNmZidEh0ZjJ6CnpYMlBzY2hsQWcyNDVOVDFaQytoaGhVNkUxOG5vS3BvU3pGSExVZU9mTmRkSG1PSTFFYjBGY3FKaUtJYmI4LzQKbjBsQ2RHR2RJeHZ4czZkMjgyVDJrcVJtSlF3aXk3UDNjY1lpcCtLTk5tZnhJYjd3TVJSejYyOUdKMnJuK0ZpcAp5d0lYWXlvUis0TlVyTmRyekF4cDNkSUtMV09LSUtIemVINEQrdHY2bUQyT3ZNY1AyZFE2Ykx5Zk53QUV4ZThDCjQ2VFN5TnlxbG9BMDNBS2RJcDlnaHFIWWJkU3JHMXVHYnpaczVLOHdZcmNKM3dVM2FuYXRleFJtQkd4eXdHL2UKd3JrL2taM3ZuVWtlOFl2UHZmRkNlS2RrcUd1MGI4RFJlVzNpclFJREFRQUJBb0lCQVFDZEJPYWhKdlRBUmZGaApxTjlESUloN1lEOGdDRlptRnAvTUMvMnB2aWpqMWgveEY2akxKdFBoME5RK0xqSnJiU3l1cFJHUEIrcllmUW54CjJpc1BpT1N2c2VFUmhOdSs2UXlWbzRxTFJzSldrMHI2cnpvUG1IRUx6RFZTdTRTbW1wNzIwbVFVcUxJV2N1bkQKUVplR2xZbDBkYmpHbWhkWnRYSElZQW5XRHg3VlhJdllTZEVlMjlUS0ZUUXkxZHcvZnQyZlBuWGtXamw1MDZNMgorYkV3Z0lQVGpTN3RUdDNNcm1GdGN3dVZJdjNDOEtLY0NRcjB6NURCRHp4Wi8wd1BHTkhVYlY2Vk5uZ1lQQTZsCjhxNjQvU0o5cmRPUkJOMnI5b2djWm1KMDBPME0rc1JMZVRtbFlhL1N5eS9UR1oxUURoVHlJYm5hTit5elFhY0cKWEF3aG81ZWhBb0dCQVA0QVFpUzJFQURFK01JTVdOYTZlVUd2NEg2RGFDdE4rUDFsd2puZ29Yb2VBNmtSOWFJawpubkxQVkVmOFJnYklaRW5CTnpxYXNZTVhCWTg1T2x4ayt1OE9ONVBjdlpLdkkzSlBPL0YwUFBSbUJ0MFdKUlBlCnBnanJqU3BmYjN5WXY5YnhOc2VJdUxsOGFSOWNvM0wySVJIU2lIdklrQ2YzNkIwNDEzMFpuMy9wQW9HQkFQK20KOE1HK2dpSmt0TmRPdUxZcGswdkRDRnFmYlltMW5kSDBxZVhKOURtZkRIME1xS1A1QTJuMThjSWRSekdPaEVXYwp1OVBJZTd3dEpIRkxzZG5wOEsrYThEN2pTNnVINStUOXRxTnpxangvaWZpNnIvZlRnVFpXL1krSUZVeEhBYkd5CnVxQmphNXR3b1FMZkZvOHd5VlVTMmE5dld2ODFMWi9pZXVKOU0zWWxBb0dBUnIwenJwMjEzMEQ4TnE3Um54dlgKNFY5bUdsWG1rUWpxSzBoSHkyNndDaDZKem5CZUJJWkdTcHRMVWJFRW42YjNwMExVYXRIaVZpdjNOR2d2eE1PcQp6eUVhZ1dlY3RGbHFlYzl2VmxPVkZrdkQ1WmJoUktOaGdtSjNzakZhRDAxTFFFVjFpQ1NmcmFqa2JnT1MwZFdTCmFEQkdLcE0wOHF5c1RGY2tUSWJ5VU9FQ2dZRUFtSkZCSnU2UmJRTWFwVTkyamtlN2ZzQXkwUnBKM2FBRVFsTTMKdlVuTHRVT0V5Vy92aUlQSUZNbFE4TjVXS1czNjVDeElMM2g2MTI4OVMxdTRGT3MyMXlXbzhHN25Mc1Baa1dBVQpTZkZ5Qzg2MVFUbndYLzdhSXRyQlVaSU4yOHFZYVRyWGczWXh0cjc5WitCSTcwVlhNYTBoT2tCRFZ3Q2ViTWRWClBLc3BOZjBDZ1lBcytQeVU0a1kxUEJoZEduZXB1eFU2WmFlUEZQR28zRXE3TXBOYVZNQWV4WEtLT1ZSNTF4cG4KU2dwUzQrbGdoellQSEZUL1Z6eUVnQ1lraG1IK0hyVFF1bUlML3JGRi9SdVdIRnRjYTBRU1c4TkZWK1hHUmZxMwowNW5Cc0JjUjNwd0lwTDcxalROVnFmdkJIMHQzL2MzaVlsd0ZUMzZ1cjA1V1RqUmtMMXp1WGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/admin-kubeconfig-signer.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJWFg4cVh2aFpaNG93RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB5TXpBNU1qVXlNVE0wTXpWYUZ3MHpNekE1TWpJeU1UTTBNelZhTURZeEVqQVFCZ05WQkFzVENXOXdaVzV6CmFHbG1kREVnTUI0R0ExVUVBeE1YWVdSdGFXNHRhM1ZpWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRDlwK1R0N21HVzJjQmdyK0orU3JLM3krc2dvN1B3YUZVdQpDQ2Fub3ZwOXUwZTEvYlBOZlkreHlHVUNEYmprMVBWa0w2R0dGVG9UWHllZ3FtaExNVWN0UjQ1ODExMGVZNGpVClJ2UVZ5b21Jb2h0dnovaWZTVUowWVowakcvR3pwM2J6WlBhU3BHWWxEQ0xMcy9keHhpS240bzAyWi9FaHZ2QXgKRkhQcmIwWW5hdWY0V0tuTEFoZGpLaEg3ZzFTczEydk1ER25kMGdvdFk0b2dvZk40ZmdQNjIvcVlQWTY4eHcvWgoxRHBzdko4M0FBVEY3d0xqcE5MSTNLcVdnRFRjQXAwaW4yQ0dvZGh0MUtzYlc0WnZObXprcnpCaXR3bmZCVGRxCmRxMTdGR1lFYkhMQWI5N0N1VCtSbmUrZFNSN3hpOCs5OFVKNHAyU29hN1J2d05GNWJlS3RBZ01CQUFHalFqQkEKTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlR6bm5jWApYSlN4RU9UdzMvZW5BNXVHbnJRNTJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUE5REVTYVo2NW9IMkg5UDFQCitDZXZ1b1FCMnc5ZVB2NTVVMmZHVGkrSFhuTnF1cWZtK0lDNGh0cHp1R0RVSHdkZENJSzJjbjdmUGhJbW9oRFkKT3lQb1hROGI4N2hkdXZyMElRdGdmZVFQb1MzWlFpakltdzZ3b1FmclpsbVVoU1lFc1U2TEowSUJ1dU9ORXpXNQpyeEF5YlJuQmJaUGlYVVVwUSthdVpSbXRFeHFaVDVoUkg0alBUaW8rNEg3UXh1TlFYZEJLUmppMnJSVWl5NmI4CmFZUTAzNDhUdHErdnJZdjRJME01N2ZJdFNLOTJVT2o0ZXd0ZUNUOGlXWkliVXlNQzM5WEN0dGJGUHRzRjlFRGEKR2pyM1NLZ1hCQkdhaUVnVloweGxPZjQ0MU1FUEY0TitqQlBZLzdWY0RjQVhCd2xoMTRydmF2dTlhc3VBbXpSMApsMEw5elE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.AggregatorCA": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lJUm04U1F6MVJTdDB3RFFZSktvWklodmNOQVFFTEJRQXdLREVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEV6QVJCZ05WQkFNVENtRm5aM0psWjJGMGIzSXdIaGNOTWpNd09USTFNakV6TkRNNApXaGNOTWpNd09USTJNakV6TkRNNFdqQW9NUkV3RHdZRFZRUUxFd2hpYjI5MGEzVmlaVEVUTUJFR0ExVUVBeE1LCllXZG5jbVZuWVhSdmNqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxDN1pZK0YKSmtVLzRONWdRdjFqdDRyOG1wbHVLbXJEZlBNL0N3eUIxeUZ0eXphbEVzUWQ4Q1UrMUNwZzZqR2psWVR2TnBzbApzeVRKV3dXM3o5YkwzS01JUFlFcmo3eUNYN3BmTGM5MkloSFdvOGM3bnhHYXhwOGRiaGJuVWh3TG9XWmtwdFUwCklWTFhkcGllYmp3UVE4MHNETEQ0RVlJZ1VzRm1TbXhPYzlFRnFVYlVLeFRZdThmSDdGS3ZiN1FUVVdEQU5lQ2cKNHBrbldEVHBDejNuZnVXQkZLTHJBK0ppY1B0NFRVK3pIWFBVVW13MVdDaXNjaU1QWGhxUWNDNE54QmJKWktQegpHU0JXZm8vdUVZSzVocXEyd09oWjJFOGZJVlRwY2FGckFiTytNektETHRvUmFnTFN1NWlFT1ZYRDd1Q3J0ak5SCjV0aWtkQWJBM0Q1ODBjY0NBd0VBQWFOQ01FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUE1aazJva0J5M2ZNYnRNNTJYZElUb1JBWWxOTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVBrNzB1aUttakduZVFkMnZqdUpuYWlVanVyMVFZaXFYb1gzUU0zWUFIWGZqRm5DcjBuRFFzCnRJYXc2YVI0b2t5ZDhoT2ZlSEE0K1Z5TDRXd2ZUeVV2cGZNOTRvUVNqOWYvVmVvL3A3ODQ3ODFGdGVCWi91WmgKc1NrKzYwalQvMU5wZGpNT2Fka2tnWkpDK0xzeGpnb1orMU9pUUh4N3E2UnJHeFpuQVNOVUhVYlZRbDlFWkVuUAo1ZHhBbDZDbmFFUkVxdGNyT3lPRFpsV0FoWWk1QWVaQjlGdm5wVThXYSsvRDlCanh2c3lFaUR4Sm5oWVNNUkxjCkFhTzFrSTduUG8vRGQ4MTFTb25iT01SNDlWN3FQUXVIQ3d1cTVFY2xqYmI1T2wvVEUxNmVKemVNQ0pHWXV6d1MKTGtyWjIvb0g3V2QreVZtemphNkZidFlHeW5zNXZBUkkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc0x0bGo0VW1SVC9nM21CQy9XTzNpdnlhbVc0cWFzTjg4ejhMRElIWElXM0xOcVVTCnhCM3dKVDdVS21EcU1hT1ZoTzgybXlXekpNbGJCYmZQMXN2Y293ZzlnU3VQdklKZnVsOHR6M1lpRWRhanh6dWYKRVpyR254MXVGdWRTSEF1aFptU20xVFFoVXRkMm1KNXVQQkJEelN3TXNQZ1JnaUJTd1daS2JFNXowUVdwUnRRcgpGTmk3eDhmc1VxOXZ0Qk5SWU1BMTRLRGltU2RZTk9rTFBlZCs1WUVVb3VzRDRtSncrM2hOVDdNZGM5UlNiRFZZCktLeHlJdzllR3BCd0xnM0VGc2xrby9NWklGWitqKzRSZ3JtR3FyYkE2Rm5ZVHg4aFZPbHhvV3NCczc0ek1vTXUKMmhGcUF0SzdtSVE1VmNQdTRLdTJNMUhtMktSMEJzRGNQbnpSeHdJREFRQUJBb0lCQVFDbk1QRTRYLzgvZmRuTwpwZ1JaMEc3L3BrN2ZIWEExUmpDN3NZVlRWTFhmWXczZTZUVWlvU3ZoSUZuNHFXeUVmenZnNGFpb0IzYzlNdHZRClFmNzJOaS9KYis4M2RxMW82WEdFVDZ4MzJrc0sweUpuUllrTFQzL2RZU3NYc2Noa3piL25yUXFESWVqd2hQTW0KR0tNeVlUU3pNWnZrQXhvVkgxMEtweWw2NHBFQVNDWmZLb2VGVDRENWVYYWhJazNOWk1Gekx5WmU3d1hpdGVXZwpkdTRVcnJCUlV0VndmTXRGVDBhVjFkSkRTNjJTYjFlbk5yWTZaTi9seCtkaFNjY25uajFSejZxeGNuWVcvakRvCnBNMXdxTTViWHpXZmNvTlpwaEdYa2FwZG5jTHJ2S09PMnpjQVA1bmVzL3JOZlZYYmZXLzBnNWtYRlZ0cVpISEQKejlaSkhYYkpBb0dCQU1hTW9nd09pWStoWnRlOXI0Vjl4elE0dnNiTm5tY1JVM0RvQU5JR0hRSG9DczNCeUtuRgoyNHdvMGt2c3JXVGZWSzhLTy9ZcGtlTDBHalQ5czY3by81a3RMTUgwUm9qWC9GeWsvSTR4SHRGZms4SWtnUW5lCllIeHF1TlpOaXBqS2VvOUhQdHRVWDVqblBoS3pYSzM0TTBRQUhoa21ndUdPMktiYldZWWtJcVg5QW9HQkFPUGUKcWhYUEpQZS9ZN0dWbkcyN3dHb3NKeUpub1R3WXFUSGlBYTkyNi9WdWhTOFQ5bUhaVStWUllJaHRza0dHZWYwLwpBZWRIZkladFVmeDMxNXpHYjFWMmM0dDBtQ09NbDdDRFFrREZ0WjRSQzlPcXVxRzg5VGV1VlZrRmV5TW04azdvCk5sbVBxd0wzSVMvNkJzaGVtSjVJbXF2YnVXY2JqeHgrRzJYT1hJQVRBb0dCQUxiSHlIWW8rK0pKeDQ5Y2hEVHoKOFdyVndtcnA1NlVpZ2hveXVtNmVTaDN6Szk3M1FtOW9RaERwazQ5cHRzWmlBbWVSbUZtcE16QW5YK2pnbFlXego0WGwxNlBvMGtxcHZpMWNPVzZIYS9tL28rUEdGQVhYQVRqcTdWS1dVaEw3Yng3QVcrbnFYVmRwQkp4ZTRIdDNZCjIva0Iwck44akloeEpHbVhEUGM4Vk5sUkFvR0FkWUFoOEhFS1BQNWg1L2FmM1MzTmdISVlFL09mL3A4d3o5b2MKeUYvb09IeXZES0dja01SQ01LT1B4WW5iTzFLZW9PbldqMjRiVmk0VThyelJYN1FyUU1SOXZGRjVDZ3U3UkhmSwp1Qis3RVREMUNrYWxTalZudFRpZUpmTmZsYmJGaDg3U0I4aS9oQjN1N1JCZVl2LzBidG85ZDVVcnUzRklrSWF1CmxnYWRTQ1VDZ1lCaWlLWDBwYTVqTlFreVFMRmIvY2VaOUJjZmNEd2Q5K3lhN00zZjlDU04vclRkZUczSVh4QVcKOVB1VWE4K0RvUUlYejlpcUcySzljSzF1S2hRcCtTcGVXUGJ2WjgvcTZNbWFnS09KWnp3TGZzYzBabDJOL1NrbApteU1uL2lDamd6cmcwc2hNODFSbzBmK3VNK08zeVFob2NkUHhybUFUNVptdUNrNEVGYmFhRnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/aggregator-ca.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc0x0bGo0VW1SVC9nM21CQy9XTzNpdnlhbVc0cWFzTjg4ejhMRElIWElXM0xOcVVTCnhCM3dKVDdVS21EcU1hT1ZoTzgybXlXekpNbGJCYmZQMXN2Y293ZzlnU3VQdklKZnVsOHR6M1lpRWRhanh6dWYKRVpyR254MXVGdWRTSEF1aFptU20xVFFoVXRkMm1KNXVQQkJEelN3TXNQZ1JnaUJTd1daS2JFNXowUVdwUnRRcgpGTmk3eDhmc1VxOXZ0Qk5SWU1BMTRLRGltU2RZTk9rTFBlZCs1WUVVb3VzRDRtSncrM2hOVDdNZGM5UlNiRFZZCktLeHlJdzllR3BCd0xnM0VGc2xrby9NWklGWitqKzRSZ3JtR3FyYkE2Rm5ZVHg4aFZPbHhvV3NCczc0ek1vTXUKMmhGcUF0SzdtSVE1VmNQdTRLdTJNMUhtMktSMEJzRGNQbnpSeHdJREFRQUJBb0lCQVFDbk1QRTRYLzgvZmRuTwpwZ1JaMEc3L3BrN2ZIWEExUmpDN3NZVlRWTFhmWXczZTZUVWlvU3ZoSUZuNHFXeUVmenZnNGFpb0IzYzlNdHZRClFmNzJOaS9KYis4M2RxMW82WEdFVDZ4MzJrc0sweUpuUllrTFQzL2RZU3NYc2Noa3piL25yUXFESWVqd2hQTW0KR0tNeVlUU3pNWnZrQXhvVkgxMEtweWw2NHBFQVNDWmZLb2VGVDRENWVYYWhJazNOWk1Gekx5WmU3d1hpdGVXZwpkdTRVcnJCUlV0VndmTXRGVDBhVjFkSkRTNjJTYjFlbk5yWTZaTi9seCtkaFNjY25uajFSejZxeGNuWVcvakRvCnBNMXdxTTViWHpXZmNvTlpwaEdYa2FwZG5jTHJ2S09PMnpjQVA1bmVzL3JOZlZYYmZXLzBnNWtYRlZ0cVpISEQKejlaSkhYYkpBb0dCQU1hTW9nd09pWStoWnRlOXI0Vjl4elE0dnNiTm5tY1JVM0RvQU5JR0hRSG9DczNCeUtuRgoyNHdvMGt2c3JXVGZWSzhLTy9ZcGtlTDBHalQ5czY3by81a3RMTUgwUm9qWC9GeWsvSTR4SHRGZms4SWtnUW5lCllIeHF1TlpOaXBqS2VvOUhQdHRVWDVqblBoS3pYSzM0TTBRQUhoa21ndUdPMktiYldZWWtJcVg5QW9HQkFPUGUKcWhYUEpQZS9ZN0dWbkcyN3dHb3NKeUpub1R3WXFUSGlBYTkyNi9WdWhTOFQ5bUhaVStWUllJaHRza0dHZWYwLwpBZWRIZkladFVmeDMxNXpHYjFWMmM0dDBtQ09NbDdDRFFrREZ0WjRSQzlPcXVxRzg5VGV1VlZrRmV5TW04azdvCk5sbVBxd0wzSVMvNkJzaGVtSjVJbXF2YnVXY2JqeHgrRzJYT1hJQVRBb0dCQUxiSHlIWW8rK0pKeDQ5Y2hEVHoKOFdyVndtcnA1NlVpZ2hveXVtNmVTaDN6Szk3M1FtOW9RaERwazQ5cHRzWmlBbWVSbUZtcE16QW5YK2pnbFlXego0WGwxNlBvMGtxcHZpMWNPVzZIYS9tL28rUEdGQVhYQVRqcTdWS1dVaEw3Yng3QVcrbnFYVmRwQkp4ZTRIdDNZCjIva0Iwck44akloeEpHbVhEUGM4Vk5sUkFvR0FkWUFoOEhFS1BQNWg1L2FmM1MzTmdISVlFL09mL3A4d3o5b2MKeUYvb09IeXZES0dja01SQ01LT1B4WW5iTzFLZW9PbldqMjRiVmk0VThyelJYN1FyUU1SOXZGRjVDZ3U3UkhmSwp1Qis3RVREMUNrYWxTalZudFRpZUpmTmZsYmJGaDg3U0I4aS9oQjN1N1JCZVl2LzBidG85ZDVVcnUzRklrSWF1CmxnYWRTQ1VDZ1lCaWlLWDBwYTVqTlFreVFMRmIvY2VaOUJjZmNEd2Q5K3lhN00zZjlDU04vclRkZUczSVh4QVcKOVB1VWE4K0RvUUlYejlpcUcySzljSzF1S2hRcCtTcGVXUGJ2WjgvcTZNbWFnS09KWnp3TGZzYzBabDJOL1NrbApteU1uL2lDamd6cmcwc2hNODFSbzBmK3VNK08zeVFob2NkUHhybUFUNVptdUNrNEVGYmFhRnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/aggregator-ca.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lJUm04U1F6MVJTdDB3RFFZSktvWklodmNOQVFFTEJRQXdLREVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEV6QVJCZ05WQkFNVENtRm5aM0psWjJGMGIzSXdIaGNOTWpNd09USTFNakV6TkRNNApXaGNOTWpNd09USTJNakV6TkRNNFdqQW9NUkV3RHdZRFZRUUxFd2hpYjI5MGEzVmlaVEVUTUJFR0ExVUVBeE1LCllXZG5jbVZuWVhSdmNqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxDN1pZK0YKSmtVLzRONWdRdjFqdDRyOG1wbHVLbXJEZlBNL0N3eUIxeUZ0eXphbEVzUWQ4Q1UrMUNwZzZqR2psWVR2TnBzbApzeVRKV3dXM3o5YkwzS01JUFlFcmo3eUNYN3BmTGM5MkloSFdvOGM3bnhHYXhwOGRiaGJuVWh3TG9XWmtwdFUwCklWTFhkcGllYmp3UVE4MHNETEQ0RVlJZ1VzRm1TbXhPYzlFRnFVYlVLeFRZdThmSDdGS3ZiN1FUVVdEQU5lQ2cKNHBrbldEVHBDejNuZnVXQkZLTHJBK0ppY1B0NFRVK3pIWFBVVW13MVdDaXNjaU1QWGhxUWNDNE54QmJKWktQegpHU0JXZm8vdUVZSzVocXEyd09oWjJFOGZJVlRwY2FGckFiTytNektETHRvUmFnTFN1NWlFT1ZYRDd1Q3J0ak5SCjV0aWtkQWJBM0Q1ODBjY0NBd0VBQWFOQ01FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUE1aazJva0J5M2ZNYnRNNTJYZElUb1JBWWxOTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVBrNzB1aUttakduZVFkMnZqdUpuYWlVanVyMVFZaXFYb1gzUU0zWUFIWGZqRm5DcjBuRFFzCnRJYXc2YVI0b2t5ZDhoT2ZlSEE0K1Z5TDRXd2ZUeVV2cGZNOTRvUVNqOWYvVmVvL3A3ODQ3ODFGdGVCWi91WmgKc1NrKzYwalQvMU5wZGpNT2Fka2tnWkpDK0xzeGpnb1orMU9pUUh4N3E2UnJHeFpuQVNOVUhVYlZRbDlFWkVuUAo1ZHhBbDZDbmFFUkVxdGNyT3lPRFpsV0FoWWk1QWVaQjlGdm5wVThXYSsvRDlCanh2c3lFaUR4Sm5oWVNNUkxjCkFhTzFrSTduUG8vRGQ4MTFTb25iT01SNDlWN3FQUXVIQ3d1cTVFY2xqYmI1T2wvVEUxNmVKemVNQ0pHWXV6d1MKTGtyWjIvb0g3V2QreVZtemphNkZidFlHeW5zNXZBUkkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.AggregatorCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lJZDdoaHFBTWxVNVF3RFFZSktvWklodmNOQVFFTEJRQXdNREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sb3dHQVlEVlFRREV4RmhaMmR5WldkaGRHOXlMWE5wWjI1bGNqQWVGdzB5TXpBNQpNalV5TVRNME16aGFGdzB5TXpBNU1qWXlNVE0wTXpoYU1EQXhFakFRQmdOVkJBc1RDVzl3Wlc1emFHbG1kREVhCk1CZ0dBMVVFQXhNUllXZG5jbVZuWVhSdmNpMXphV2R1WlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFEUDBjN1RZcUJFWExtTld5bDZYSmVDVU1KdUYxZk9mdk1pb25tRllabnNTZy8rL3dNQgpCZi9RWjVwVGtsVTFGWUU2Z25ic1pOeldoMHA2UjV4ZHhsYTA5KytmVVdJRDdmeTh1bWpTUXYrNTZScmowUkMvCjBGMUJUYnZmYWNhbGJqSFZCZjM2dCtnNzBwYWluS0FiaWlRczZqT3VKMmlSUkNyc0VSQ0VqN0MycFFFMDhPbDkKNGluT0NkVlJTZjd5STZFQnFGYVZ4cVVBSDd2ZHVBTU5LdThLYkl2cVN2aDNCRGwxNWFFdDJsWVJBeHJLeU5ubAplN1lPcmxOZ3BOQmJRR0t2anBma3lQd294WTlSQWxoQXFXYzZjdTBqdmRhbWorQmdNMFltcE4rNUVNS0ZIOUtjCkNsYUIrZFUzWERQc0gycHVoZ1pCVTVMWXhUdldIc0dvQUVZdEFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUUKQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUWdabFFxV0VFSnFldWduRFU5RklrWgpTL0xhL0RBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUtURzkxQWwrb2UxK1R5UnhRYjZhTnFzaXlDbEw5YnBLCnVIdHFOdi95TXNrRmV5N2hKakorNG1kaW9oVFBkV2F6SHRVQU5taENFQittL2NpRTAwNm9XdkFDaDhTODBFcmkKTkNIeTljYzVNNVRKNDFNc1pjYm5ybXVIeFk4UlRNNkU4UTRTRWNuam9iZnFWby8zRGQyanlPV2E0UTBJb2hXcwpCcE9SbForN2dUZG1BNndXL2lXMkZyYWlvVWREY3ZxTnZpbkpUZUpNZjRhbURSZXRieTdMc0Z5eVpyQzRISjVHCmJxM05uRklSZjIxN3R1YW5yT1VMREFaa1ZxTG9id3lBZm1PamRwU1YvM0JyYURoSXBPRG5PY2lLY25NTmd0NnYKMVhidDVvcExCeWxWOU1HTWdPZVZmQlJpSHdDUCtzci9DQ3pRQkNxdTRrckxaM2ZUZGFqRmVBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/aggregator-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lJZDdoaHFBTWxVNVF3RFFZSktvWklodmNOQVFFTEJRQXdNREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sb3dHQVlEVlFRREV4RmhaMmR5WldkaGRHOXlMWE5wWjI1bGNqQWVGdzB5TXpBNQpNalV5TVRNME16aGFGdzB5TXpBNU1qWXlNVE0wTXpoYU1EQXhFakFRQmdOVkJBc1RDVzl3Wlc1emFHbG1kREVhCk1CZ0dBMVVFQXhNUllXZG5jbVZuWVhSdmNpMXphV2R1WlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFEUDBjN1RZcUJFWExtTld5bDZYSmVDVU1KdUYxZk9mdk1pb25tRllabnNTZy8rL3dNQgpCZi9RWjVwVGtsVTFGWUU2Z25ic1pOeldoMHA2UjV4ZHhsYTA5KytmVVdJRDdmeTh1bWpTUXYrNTZScmowUkMvCjBGMUJUYnZmYWNhbGJqSFZCZjM2dCtnNzBwYWluS0FiaWlRczZqT3VKMmlSUkNyc0VSQ0VqN0MycFFFMDhPbDkKNGluT0NkVlJTZjd5STZFQnFGYVZ4cVVBSDd2ZHVBTU5LdThLYkl2cVN2aDNCRGwxNWFFdDJsWVJBeHJLeU5ubAplN1lPcmxOZ3BOQmJRR0t2anBma3lQd294WTlSQWxoQXFXYzZjdTBqdmRhbWorQmdNMFltcE4rNUVNS0ZIOUtjCkNsYUIrZFUzWERQc0gycHVoZ1pCVTVMWXhUdldIc0dvQUVZdEFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUUKQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUWdabFFxV0VFSnFldWduRFU5RklrWgpTL0xhL0RBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUtURzkxQWwrb2UxK1R5UnhRYjZhTnFzaXlDbEw5YnBLCnVIdHFOdi95TXNrRmV5N2hKakorNG1kaW9oVFBkV2F6SHRVQU5taENFQittL2NpRTAwNm9XdkFDaDhTODBFcmkKTkNIeTljYzVNNVRKNDFNc1pjYm5ybXVIeFk4UlRNNkU4UTRTRWNuam9iZnFWby8zRGQyanlPV2E0UTBJb2hXcwpCcE9SbForN2dUZG1BNndXL2lXMkZyYWlvVWREY3ZxTnZpbkpUZUpNZjRhbURSZXRieTdMc0Z5eVpyQzRISjVHCmJxM05uRklSZjIxN3R1YW5yT1VMREFaa1ZxTG9id3lBZm1PamRwU1YvM0JyYURoSXBPRG5PY2lLY25NTmd0NnYKMVhidDVvcExCeWxWOU1HTWdPZVZmQlJpSHdDUCtzci9DQ3pRQkNxdTRrckxaM2ZUZGFqRmVBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.AggregatorClientCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZekNDQWt1Z0F3SUJBZ0lJZHFMUEZjVERwaEl3RFFZSktvWklodmNOQVFFTEJRQXdNREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sb3dHQVlEVlFRREV4RmhaMmR5WldkaGRHOXlMWE5wWjI1bGNqQWVGdzB5TXpBNQpNalV5TVRNME16aGFGdzB5TXpBNU1qWXlNVE0wTXpoYU1Ed3hGREFTQmdOVkJBb1RDMnQxWW1VdGJXRnpkR1Z5Ck1TUXdJZ1lEVlFRREV4dHplWE4wWlcwNmEzVmlaUzFoY0dselpYSjJaWEl0Y0hKdmVIa3dnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRERvb2dHYkwydFFVQVBoZEU0Yis4ZDZmdkNsZ01kYWRPWQpJdGh1NDUzRVBySkVTMTY3bXpLRnJ2ck1hU2Evc1dKQ2lVckZveWRqVWdRM3VJSjhzZGhjWDVyYkJIMGlhMGVFCk1aKzJCNmdjWnB5N1JiaVVRWkpCVDBnQUpJVVloZ1ZtV2RvNS9CR0ZWQjJIa04xdlMxUWVscW1sNTExUGZWS3kKc2tXcERkZW1EdFJBdC9TNTAyQWU2YTdDZm0yQnZVNWtvcVJkRFIvVVVCY0RDdkQrTXVYdFg5ZHR3dVZOTnNLZQpkbGJWVktBdVllQld6cHY0QnlaMkNFeTJnQmJEenNHekVpejBxTThkZXFIVGdtcWJDV0tSZkRpaWVtejR0Wjc3CmZxeEpXcjdFV2tZbkZLNEh2MVYwejZNUlYrYkRXbXlYZ3ltK3VRTDBSWlFjbHBCM0RIWlhBZ01CQUFHamRUQnoKTUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUIwR0ExVWREZ1FXQkJUQzNnTnA2a1UrOC9XOGdPYUlJY1V5c0ZBMmN6QWZCZ05WSFNNRUdEQVdnQlFnClpsUXFXRUVKcWV1Z25EVTlGSWtaUy9MYS9EQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFhZnQwM1IxQTR5Qk8KQUhxVWtCZFFkWnBQRnArQ2I0SS9wbG5OQWxaRm9pNFQwZXl1a0Z0K3dUZURWWmFxVHFvZUsrTkxuVHllaGN2Ngpkd1lCQ1h5cGtNQUwwWTR4cHJ2WUwvMEpuTUN6cWhOS3hGNzVvdW5LMXd1dWg4cE5nQ3NrU29RU3BwbmJ1NzZuCnNCNWVVMzIyZCttckRYSVJvM0lVMDVHSFdzYlNsUG1BTlZ6YlBxYkFFKy9vT1JqVHVTREVRN1RrM20wUk5hV1gKK3lCLytRMEJaVlpPM3pQdVBvVU4xZVI1aFlXaWpBQlhVODJES2xGWmtNUDUvNVJ2U1kwR2h5bnRqdFBTSGxhQgpLS2hWNEFBb2s3c0QzSFhXalhuV3l0QnpRUE1UYm1lMGJ0dFVGa3lPdXYwZXd0VlNSVmtHWXhBdExpYlhaem4yCmQ4bURFR3I1bUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdzZLSUJteTlyVUZBRDRYUk9HL3ZIZW43d3BZREhXblRtQ0xZYnVPZHhENnlSRXRlCnU1c3loYTc2ekdrbXY3RmlRb2xLeGFNblkxSUVON2lDZkxIWVhGK2Eyd1I5SW10SGhER2Z0Z2VvSEdhY3UwVzQKbEVHU1FVOUlBQ1NGR0lZRlpsbmFPZndSaFZRZGg1RGRiMHRVSHBhcHBlZGRUMzFTc3JKRnFRM1hwZzdVUUxmMAp1ZE5nSHVtdXduNXRnYjFPWktLa1hRMGYxRkFYQXdydy9qTGw3Vi9YYmNMbFRUYkNublpXMVZTZ0xtSGdWczZiCitBY21kZ2hNdG9BV3c4N0JzeElzOUtqUEhYcWgwNEpxbXdsaWtYdzRvbnBzK0xXZSszNnNTVnEreEZwR0p4U3UKQjc5VmRNK2pFVmZtdzFwc2w0TXB2cmtDOUVXVUhKYVFkd3gyVndJREFRQUJBb0lCQUJCdTJhQTRpQ0pDaGVBSAo3SkFpRHVMallhdHhzR2RMR1dRQklVOEhQWnhiYTl3Q3ZMMWpodlhsd2Rsang4WjRYdm1aMExjVFFsNjhaL0JLClJtTzFDS2lSdTA5RWJFSjA0bmYvTnh3eVBuUE1Sc1FRVWpYWjREQXVPYTBSWkVDd0dVb0VxQ2tRdkdRSHNjZE8KYXR0TFo1QitOVmZqUEZwTis2RlpDakx1SDd3cUF4ZTRXM1NDdWU0dGMxbllhVFpacytZdnFYSDdMV1lGRjM5bwpMY01mZHBiQkllZDZVeExIM1FaeDF2UGxoMC9BRDJSL0U4S0w4RENDaGgwZXNYcjFFMW8wNW5ZMUR5UmpaNzBNCnlVbWtOYmVTRm5Rbks3MXMvUVgxb0Z4cWZETCtNblVwZzJlZXRtWmtGTUZOZjZiMlREblZHclQ4elE1RXBsYzUKZGdGU1BJRUNnWUVBNlBXdXJvdlBhbCtIUmd3TzNvTFhjV2MwSVBVcG5hVDNOYmVnZkpnaHh5Mk85cSt6dzIrYgplL3ZRMzJta2VSbG84ZjJReFZ0YkhYSm04SHcvTkVrOW83cEdHTWtoVTQzbzNzRldPV1VrdHU4WUhmZXd0SDlECkg3b1R5K0l1Rit5ZVJIYzhWKytoZTdVOG1XMGQ5eUZwSVpMMFErVlpLa3I2L09YbGptejdkeGNDZ1lFQTF2dlMKQlN5b2o0bS9uNUtYeC9raXJZUHdkZGZ1c3JtZjlaZmgwZ3JGU1czWUFqNHFLK2ZMTHVlR0d0aFgrUlBLNHVJSQpOVTlaN0VFZTc3U29wdURCUjZ3T0lQUVN2bEdPSVB4NlRVZFBEWlNLeXk2WWJxVm54ODJNUUQ1OXhXdG8ranJNClEvK090bjUrZWZtdjlwWXQrSS9GK3FHN3BEKytLMVVGVHJ1eWdzRUNnWUEyaHlzNEYrbVkwSHR0WGUwdEVCczEKcEI2RGlGOFJVMGU1L3gxRmpLWjdaS0tPQTFwa2FIOVFhZ1RlQm5CRkdEbUVTd0hUOENwSG5qdVNGc01FamhBcgpmckpob3RKMktFVlZ2cE5jSTl5UUpTN1Q5T0liblo0c2t2V0hSNDNhYzd3bjhuRGhkR21yOXlRVUZZSnFFaHYxCmk5dzQrRG9DdUVJL1orQnZrZnJhU1FLQmdGV096cHlrazBqY3gxaFlYUE9HNFJneEpDZWlFaXNxMk5CQzYrcE4Kd3dwZ0h0RjFzQTdkSnUyNTBwTW9lb3AwS0JCM2FGRGZEYWlLbWlkSHZMNzlQNjZvZU04QWs5ME9WQVFvdHZ1KwpYMlhHTWg1K29zZVdLR0ZLR29FTzNic043aTkzNndjODA2MHBWbWh3eUdqWWg5OGVTT3BnSjI5TXR3QkR5K0x6CnJDMkJBb0dCQUtScERHVUlKS3QxdzFRQktqRVNKY0Zyb1JZT3V6R0JTOUczUUVBUlUyYVNMaG1mRkh4SXR2SGYKZWp1OXlqUDNaMmFCZGtoMkYwVjI4TDhEbkRaMHB0cTFjTW9ETEJuZDhxVHVQL0dxWm5qTnZocHBQdjVxSTBScQpkVjh6R09YYkJKdks3YnVxSmYrSU1kdTRPbW45TDBPc2ZLNHAzY0tIUUdXUmh5R1VNdGFoCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/aggregator-client.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdzZLSUJteTlyVUZBRDRYUk9HL3ZIZW43d3BZREhXblRtQ0xZYnVPZHhENnlSRXRlCnU1c3loYTc2ekdrbXY3RmlRb2xLeGFNblkxSUVON2lDZkxIWVhGK2Eyd1I5SW10SGhER2Z0Z2VvSEdhY3UwVzQKbEVHU1FVOUlBQ1NGR0lZRlpsbmFPZndSaFZRZGg1RGRiMHRVSHBhcHBlZGRUMzFTc3JKRnFRM1hwZzdVUUxmMAp1ZE5nSHVtdXduNXRnYjFPWktLa1hRMGYxRkFYQXdydy9qTGw3Vi9YYmNMbFRUYkNublpXMVZTZ0xtSGdWczZiCitBY21kZ2hNdG9BV3c4N0JzeElzOUtqUEhYcWgwNEpxbXdsaWtYdzRvbnBzK0xXZSszNnNTVnEreEZwR0p4U3UKQjc5VmRNK2pFVmZtdzFwc2w0TXB2cmtDOUVXVUhKYVFkd3gyVndJREFRQUJBb0lCQUJCdTJhQTRpQ0pDaGVBSAo3SkFpRHVMallhdHhzR2RMR1dRQklVOEhQWnhiYTl3Q3ZMMWpodlhsd2Rsang4WjRYdm1aMExjVFFsNjhaL0JLClJtTzFDS2lSdTA5RWJFSjA0bmYvTnh3eVBuUE1Sc1FRVWpYWjREQXVPYTBSWkVDd0dVb0VxQ2tRdkdRSHNjZE8KYXR0TFo1QitOVmZqUEZwTis2RlpDakx1SDd3cUF4ZTRXM1NDdWU0dGMxbllhVFpacytZdnFYSDdMV1lGRjM5bwpMY01mZHBiQkllZDZVeExIM1FaeDF2UGxoMC9BRDJSL0U4S0w4RENDaGgwZXNYcjFFMW8wNW5ZMUR5UmpaNzBNCnlVbWtOYmVTRm5Rbks3MXMvUVgxb0Z4cWZETCtNblVwZzJlZXRtWmtGTUZOZjZiMlREblZHclQ4elE1RXBsYzUKZGdGU1BJRUNnWUVBNlBXdXJvdlBhbCtIUmd3TzNvTFhjV2MwSVBVcG5hVDNOYmVnZkpnaHh5Mk85cSt6dzIrYgplL3ZRMzJta2VSbG84ZjJReFZ0YkhYSm04SHcvTkVrOW83cEdHTWtoVTQzbzNzRldPV1VrdHU4WUhmZXd0SDlECkg3b1R5K0l1Rit5ZVJIYzhWKytoZTdVOG1XMGQ5eUZwSVpMMFErVlpLa3I2L09YbGptejdkeGNDZ1lFQTF2dlMKQlN5b2o0bS9uNUtYeC9raXJZUHdkZGZ1c3JtZjlaZmgwZ3JGU1czWUFqNHFLK2ZMTHVlR0d0aFgrUlBLNHVJSQpOVTlaN0VFZTc3U29wdURCUjZ3T0lQUVN2bEdPSVB4NlRVZFBEWlNLeXk2WWJxVm54ODJNUUQ1OXhXdG8ranJNClEvK090bjUrZWZtdjlwWXQrSS9GK3FHN3BEKytLMVVGVHJ1eWdzRUNnWUEyaHlzNEYrbVkwSHR0WGUwdEVCczEKcEI2RGlGOFJVMGU1L3gxRmpLWjdaS0tPQTFwa2FIOVFhZ1RlQm5CRkdEbUVTd0hUOENwSG5qdVNGc01FamhBcgpmckpob3RKMktFVlZ2cE5jSTl5UUpTN1Q5T0liblo0c2t2V0hSNDNhYzd3bjhuRGhkR21yOXlRVUZZSnFFaHYxCmk5dzQrRG9DdUVJL1orQnZrZnJhU1FLQmdGV096cHlrazBqY3gxaFlYUE9HNFJneEpDZWlFaXNxMk5CQzYrcE4Kd3dwZ0h0RjFzQTdkSnUyNTBwTW9lb3AwS0JCM2FGRGZEYWlLbWlkSHZMNzlQNjZvZU04QWs5ME9WQVFvdHZ1KwpYMlhHTWg1K29zZVdLR0ZLR29FTzNic043aTkzNndjODA2MHBWbWh3eUdqWWg5OGVTT3BnSjI5TXR3QkR5K0x6CnJDMkJBb0dCQUtScERHVUlKS3QxdzFRQktqRVNKY0Zyb1JZT3V6R0JTOUczUUVBUlUyYVNMaG1mRkh4SXR2SGYKZWp1OXlqUDNaMmFCZGtoMkYwVjI4TDhEbkRaMHB0cTFjTW9ETEJuZDhxVHVQL0dxWm5qTnZocHBQdjVxSTBScQpkVjh6R09YYkJKdks3YnVxSmYrSU1kdTRPbW45TDBPc2ZLNHAzY0tIUUdXUmh5R1VNdGFoCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/aggregator-client.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZekNDQWt1Z0F3SUJBZ0lJZHFMUEZjVERwaEl3RFFZSktvWklodmNOQVFFTEJRQXdNREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sb3dHQVlEVlFRREV4RmhaMmR5WldkaGRHOXlMWE5wWjI1bGNqQWVGdzB5TXpBNQpNalV5TVRNME16aGFGdzB5TXpBNU1qWXlNVE0wTXpoYU1Ed3hGREFTQmdOVkJBb1RDMnQxWW1VdGJXRnpkR1Z5Ck1TUXdJZ1lEVlFRREV4dHplWE4wWlcwNmEzVmlaUzFoY0dselpYSjJaWEl0Y0hKdmVIa3dnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRERvb2dHYkwydFFVQVBoZEU0Yis4ZDZmdkNsZ01kYWRPWQpJdGh1NDUzRVBySkVTMTY3bXpLRnJ2ck1hU2Evc1dKQ2lVckZveWRqVWdRM3VJSjhzZGhjWDVyYkJIMGlhMGVFCk1aKzJCNmdjWnB5N1JiaVVRWkpCVDBnQUpJVVloZ1ZtV2RvNS9CR0ZWQjJIa04xdlMxUWVscW1sNTExUGZWS3kKc2tXcERkZW1EdFJBdC9TNTAyQWU2YTdDZm0yQnZVNWtvcVJkRFIvVVVCY0RDdkQrTXVYdFg5ZHR3dVZOTnNLZQpkbGJWVktBdVllQld6cHY0QnlaMkNFeTJnQmJEenNHekVpejBxTThkZXFIVGdtcWJDV0tSZkRpaWVtejR0Wjc3CmZxeEpXcjdFV2tZbkZLNEh2MVYwejZNUlYrYkRXbXlYZ3ltK3VRTDBSWlFjbHBCM0RIWlhBZ01CQUFHamRUQnoKTUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUIwR0ExVWREZ1FXQkJUQzNnTnA2a1UrOC9XOGdPYUlJY1V5c0ZBMmN6QWZCZ05WSFNNRUdEQVdnQlFnClpsUXFXRUVKcWV1Z25EVTlGSWtaUy9MYS9EQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFhZnQwM1IxQTR5Qk8KQUhxVWtCZFFkWnBQRnArQ2I0SS9wbG5OQWxaRm9pNFQwZXl1a0Z0K3dUZURWWmFxVHFvZUsrTkxuVHllaGN2Ngpkd1lCQ1h5cGtNQUwwWTR4cHJ2WUwvMEpuTUN6cWhOS3hGNzVvdW5LMXd1dWg4cE5nQ3NrU29RU3BwbmJ1NzZuCnNCNWVVMzIyZCttckRYSVJvM0lVMDVHSFdzYlNsUG1BTlZ6YlBxYkFFKy9vT1JqVHVTREVRN1RrM20wUk5hV1gKK3lCLytRMEJaVlpPM3pQdVBvVU4xZVI1aFlXaWpBQlhVODJES2xGWmtNUDUvNVJ2U1kwR2h5bnRqdFBTSGxhQgpLS2hWNEFBb2s3c0QzSFhXalhuV3l0QnpRUE1UYm1lMGJ0dFVGa3lPdXYwZXd0VlNSVmtHWXhBdExpYlhaem4yCmQ4bURFR3I1bUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.AggregatorSignerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lJZDdoaHFBTWxVNVF3RFFZSktvWklodmNOQVFFTEJRQXdNREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sb3dHQVlEVlFRREV4RmhaMmR5WldkaGRHOXlMWE5wWjI1bGNqQWVGdzB5TXpBNQpNalV5TVRNME16aGFGdzB5TXpBNU1qWXlNVE0wTXpoYU1EQXhFakFRQmdOVkJBc1RDVzl3Wlc1emFHbG1kREVhCk1CZ0dBMVVFQXhNUllXZG5jbVZuWVhSdmNpMXphV2R1WlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFEUDBjN1RZcUJFWExtTld5bDZYSmVDVU1KdUYxZk9mdk1pb25tRllabnNTZy8rL3dNQgpCZi9RWjVwVGtsVTFGWUU2Z25ic1pOeldoMHA2UjV4ZHhsYTA5KytmVVdJRDdmeTh1bWpTUXYrNTZScmowUkMvCjBGMUJUYnZmYWNhbGJqSFZCZjM2dCtnNzBwYWluS0FiaWlRczZqT3VKMmlSUkNyc0VSQ0VqN0MycFFFMDhPbDkKNGluT0NkVlJTZjd5STZFQnFGYVZ4cVVBSDd2ZHVBTU5LdThLYkl2cVN2aDNCRGwxNWFFdDJsWVJBeHJLeU5ubAplN1lPcmxOZ3BOQmJRR0t2anBma3lQd294WTlSQWxoQXFXYzZjdTBqdmRhbWorQmdNMFltcE4rNUVNS0ZIOUtjCkNsYUIrZFUzWERQc0gycHVoZ1pCVTVMWXhUdldIc0dvQUVZdEFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUUKQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUWdabFFxV0VFSnFldWduRFU5RklrWgpTL0xhL0RBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUtURzkxQWwrb2UxK1R5UnhRYjZhTnFzaXlDbEw5YnBLCnVIdHFOdi95TXNrRmV5N2hKakorNG1kaW9oVFBkV2F6SHRVQU5taENFQittL2NpRTAwNm9XdkFDaDhTODBFcmkKTkNIeTljYzVNNVRKNDFNc1pjYm5ybXVIeFk4UlRNNkU4UTRTRWNuam9iZnFWby8zRGQyanlPV2E0UTBJb2hXcwpCcE9SbForN2dUZG1BNndXL2lXMkZyYWlvVWREY3ZxTnZpbkpUZUpNZjRhbURSZXRieTdMc0Z5eVpyQzRISjVHCmJxM05uRklSZjIxN3R1YW5yT1VMREFaa1ZxTG9id3lBZm1PamRwU1YvM0JyYURoSXBPRG5PY2lLY25NTmd0NnYKMVhidDVvcExCeWxWOU1HTWdPZVZmQlJpSHdDUCtzci9DQ3pRQkNxdTRrckxaM2ZUZGFqRmVBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBejlITzAyS2dSRnk1alZzcGVseVhnbERDYmhkWHpuN3pJcUo1aFdHWjdFb1AvdjhECkFRWC8wR2VhVTVKVk5SV0JPb0oyN0dUYzFvZEtla2VjWGNaV3RQZnZuMUZpQSszOHZMcG8wa0wvdWVrYTQ5RVEKdjlCZFFVMjczMm5HcFc0eDFRWDkrcmZvTzlLV29weWdHNG9rTE9venJpZG9rVVFxN0JFUWhJK3d0cVVCTlBEcApmZUlwemduVlVVbis4aU9oQWFoV2xjYWxBQis3M2JnRERTcnZDbXlMNmtyNGR3UTVkZVdoTGRwV0VRTWF5c2paCjVYdTJEcTVUWUtUUVcwQmlyNDZYNU1qOEtNV1BVUUpZUUtsbk9uTHRJNzNXcG8vZ1lETkdKcVRmdVJEQ2hSL1MKbkFwV2dmblZOMXd6N0I5cWJvWUdRVk9TMk1VNzFoN0JxQUJHTFFJREFRQUJBb0lCQVFEQ1VneHkyK1hBQm5QNgpHU1BQcG9TRTliN1g4anZJZWl3ZVZvNEtpaGpET1AxOEVqZGMzWjgxMzZvT091WXhuTW9aUzZTbnBpaFk4R2hUCnJtSW56UzJHU2M5bHlWTTlHV3NaamJRMTV5LzNSbUErWlY2ai9ORTJIdGx0TGhydzFQa0RsM2JFMlBIdC9odWMKTVpnRUtFZHJPQkxhNVQ2Qmxwd0w0R2p4aXVwUjNJZkM2Vzk5a0w3dFc0YjQzVWlDcm12a0NoWGpsRHlhbGkrUQpoMmN4MGsxbmJnbkJJTFlWb0FXbGs5YVJBUVVGVS92d08rRjNNVnB2ZnNXZ05uY2tHbnZqSitRdXZyZGx2NGdmCmdYYzBGaUhrb2xRSWFERTlNeWRKeUJ4dlR4b0plREthSDVwcnJvMTJ3OEhJcWpvdHh4bDNQVmUyMHYvMTBIMkkKYUZHblEwd0JBb0dCQU5kRXFBaGZuejZta3JBQUZvMndvWjlLZnVLcHlHT0dGam1VYmFvTlB5THFVVUFnK251eApXbmRjNklJbW4yS0RYOFZMSkFHVVhOdm5xdWFuZTZSMVNEZEdPb2pNNEdJVmV2Z0FmRnJPZlF1Y01wV3BXWkVaCmpHdk1OVndGanJjcTdhZ0hCNEpEZ05kTHBMVmpua2pNT21RTVU3cUprajFKeXYwTlFoNlB3YUZGQW9HQkFQY2sKV1Q3TXR2ZisyWE5OVG5DNHArbE83cWlKQnMrRXB6WHRGb09KNkZNcmZSUSt4dFVLMFZrQUpyWlYzc0M2VVIxVgpzNzVOa1BGR2x6QXJlWXpYRHFETEt0cTZ1SE5zT2psWEt0dXJFTnlDUzFXUHkrYS9odGh6Y1dPdWVTMW1GeGFzClJkQTdXMmZMdDJsTXpwM2ozY2FmM0sxYXpVVTJhV01zOXY5RkV2dkpBb0dBV1hIMm05d1hqL0dvbTZhOXVFdi8KSysvSlB5Y3EwMmVnam5aRkJ0YVFPRkxDUmZJdUFmMVVTS3A3RmJFMG9ydFJyT21tNFYwakpHQmpXNG1WejJUSQpCK2VQWk00MElhMHBOaWtGZ3JtdnJZWk9ZbTlHZndydGxORDZEdTFrT21tRTdEOVhlR0hTQkNNeklnZHRlblFaCmd2NjRQNWJ3QTdWSXVkS3JlWVZrQUQwQ2dZRUF1MkR5elZ0M1NsWU9WbzZCYjVPQnM3SGwzeUJ0YW45Z0s5SEQKWlIzMWFNR3JSdU5GNjVjVkhNNnhpME5WN1hnV01oQ2RoQ2JaUXlYTFVYbFU0a1RYMFcvWTRSZjY2NEJlTU1WMwpPQy9lUytINTdqaGxWMkZWZ3QwY1ZvQ2RYWjl1MkFEcnViS1hYZjRsNUkrWWhEdVZGWmgxUDNaOTlnRUlMR3FXCkp2c2ZKb2tDZ1lBRjU1aXF4TEJ0Q01WcVRBTWEweGl5MTNlaHVnNkVIZUNVcjIvQkJLTEFZTDF6TU1DazJ3cWIKbEJOOFJzSE9MQ3lRWXpDK2MvNlkwYS9yS2s3VDR2QUMxZElSTjAxcEIyKy9RWElxSkpNQ0VGL1NWTFhrOHluZQp1eitnVlVLNEJqVHk3WGtvcm9oZjNoNm5RcWwrdXprZHVNMkppQkVUNlBPTjkyOHJyQ3ZiVGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/aggregator-signer.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBejlITzAyS2dSRnk1alZzcGVseVhnbERDYmhkWHpuN3pJcUo1aFdHWjdFb1AvdjhECkFRWC8wR2VhVTVKVk5SV0JPb0oyN0dUYzFvZEtla2VjWGNaV3RQZnZuMUZpQSszOHZMcG8wa0wvdWVrYTQ5RVEKdjlCZFFVMjczMm5HcFc0eDFRWDkrcmZvTzlLV29weWdHNG9rTE9venJpZG9rVVFxN0JFUWhJK3d0cVVCTlBEcApmZUlwemduVlVVbis4aU9oQWFoV2xjYWxBQis3M2JnRERTcnZDbXlMNmtyNGR3UTVkZVdoTGRwV0VRTWF5c2paCjVYdTJEcTVUWUtUUVcwQmlyNDZYNU1qOEtNV1BVUUpZUUtsbk9uTHRJNzNXcG8vZ1lETkdKcVRmdVJEQ2hSL1MKbkFwV2dmblZOMXd6N0I5cWJvWUdRVk9TMk1VNzFoN0JxQUJHTFFJREFRQUJBb0lCQVFEQ1VneHkyK1hBQm5QNgpHU1BQcG9TRTliN1g4anZJZWl3ZVZvNEtpaGpET1AxOEVqZGMzWjgxMzZvT091WXhuTW9aUzZTbnBpaFk4R2hUCnJtSW56UzJHU2M5bHlWTTlHV3NaamJRMTV5LzNSbUErWlY2ai9ORTJIdGx0TGhydzFQa0RsM2JFMlBIdC9odWMKTVpnRUtFZHJPQkxhNVQ2Qmxwd0w0R2p4aXVwUjNJZkM2Vzk5a0w3dFc0YjQzVWlDcm12a0NoWGpsRHlhbGkrUQpoMmN4MGsxbmJnbkJJTFlWb0FXbGs5YVJBUVVGVS92d08rRjNNVnB2ZnNXZ05uY2tHbnZqSitRdXZyZGx2NGdmCmdYYzBGaUhrb2xRSWFERTlNeWRKeUJ4dlR4b0plREthSDVwcnJvMTJ3OEhJcWpvdHh4bDNQVmUyMHYvMTBIMkkKYUZHblEwd0JBb0dCQU5kRXFBaGZuejZta3JBQUZvMndvWjlLZnVLcHlHT0dGam1VYmFvTlB5THFVVUFnK251eApXbmRjNklJbW4yS0RYOFZMSkFHVVhOdm5xdWFuZTZSMVNEZEdPb2pNNEdJVmV2Z0FmRnJPZlF1Y01wV3BXWkVaCmpHdk1OVndGanJjcTdhZ0hCNEpEZ05kTHBMVmpua2pNT21RTVU3cUprajFKeXYwTlFoNlB3YUZGQW9HQkFQY2sKV1Q3TXR2ZisyWE5OVG5DNHArbE83cWlKQnMrRXB6WHRGb09KNkZNcmZSUSt4dFVLMFZrQUpyWlYzc0M2VVIxVgpzNzVOa1BGR2x6QXJlWXpYRHFETEt0cTZ1SE5zT2psWEt0dXJFTnlDUzFXUHkrYS9odGh6Y1dPdWVTMW1GeGFzClJkQTdXMmZMdDJsTXpwM2ozY2FmM0sxYXpVVTJhV01zOXY5RkV2dkpBb0dBV1hIMm05d1hqL0dvbTZhOXVFdi8KSysvSlB5Y3EwMmVnam5aRkJ0YVFPRkxDUmZJdUFmMVVTS3A3RmJFMG9ydFJyT21tNFYwakpHQmpXNG1WejJUSQpCK2VQWk00MElhMHBOaWtGZ3JtdnJZWk9ZbTlHZndydGxORDZEdTFrT21tRTdEOVhlR0hTQkNNeklnZHRlblFaCmd2NjRQNWJ3QTdWSXVkS3JlWVZrQUQwQ2dZRUF1MkR5elZ0M1NsWU9WbzZCYjVPQnM3SGwzeUJ0YW45Z0s5SEQKWlIzMWFNR3JSdU5GNjVjVkhNNnhpME5WN1hnV01oQ2RoQ2JaUXlYTFVYbFU0a1RYMFcvWTRSZjY2NEJlTU1WMwpPQy9lUytINTdqaGxWMkZWZ3QwY1ZvQ2RYWjl1MkFEcnViS1hYZjRsNUkrWWhEdVZGWmgxUDNaOTlnRUlMR3FXCkp2c2ZKb2tDZ1lBRjU1aXF4TEJ0Q01WcVRBTWEweGl5MTNlaHVnNkVIZUNVcjIvQkJLTEFZTDF6TU1DazJ3cWIKbEJOOFJzSE9MQ3lRWXpDK2MvNlkwYS9yS2s3VDR2QUMxZElSTjAxcEIyKy9RWElxSkpNQ0VGL1NWTFhrOHluZQp1eitnVlVLNEJqVHk3WGtvcm9oZjNoNm5RcWwrdXprZHVNMkppQkVUNlBPTjkyOHJyQ3ZiVGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/aggregator-signer.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lJZDdoaHFBTWxVNVF3RFFZSktvWklodmNOQVFFTEJRQXdNREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sb3dHQVlEVlFRREV4RmhaMmR5WldkaGRHOXlMWE5wWjI1bGNqQWVGdzB5TXpBNQpNalV5TVRNME16aGFGdzB5TXpBNU1qWXlNVE0wTXpoYU1EQXhFakFRQmdOVkJBc1RDVzl3Wlc1emFHbG1kREVhCk1CZ0dBMVVFQXhNUllXZG5jbVZuWVhSdmNpMXphV2R1WlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFEUDBjN1RZcUJFWExtTld5bDZYSmVDVU1KdUYxZk9mdk1pb25tRllabnNTZy8rL3dNQgpCZi9RWjVwVGtsVTFGWUU2Z25ic1pOeldoMHA2UjV4ZHhsYTA5KytmVVdJRDdmeTh1bWpTUXYrNTZScmowUkMvCjBGMUJUYnZmYWNhbGJqSFZCZjM2dCtnNzBwYWluS0FiaWlRczZqT3VKMmlSUkNyc0VSQ0VqN0MycFFFMDhPbDkKNGluT0NkVlJTZjd5STZFQnFGYVZ4cVVBSDd2ZHVBTU5LdThLYkl2cVN2aDNCRGwxNWFFdDJsWVJBeHJLeU5ubAplN1lPcmxOZ3BOQmJRR0t2anBma3lQd294WTlSQWxoQXFXYzZjdTBqdmRhbWorQmdNMFltcE4rNUVNS0ZIOUtjCkNsYUIrZFUzWERQc0gycHVoZ1pCVTVMWXhUdldIc0dvQUVZdEFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUUKQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUWdabFFxV0VFSnFldWduRFU5RklrWgpTL0xhL0RBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUtURzkxQWwrb2UxK1R5UnhRYjZhTnFzaXlDbEw5YnBLCnVIdHFOdi95TXNrRmV5N2hKakorNG1kaW9oVFBkV2F6SHRVQU5taENFQittL2NpRTAwNm9XdkFDaDhTODBFcmkKTkNIeTljYzVNNVRKNDFNc1pjYm5ybXVIeFk4UlRNNkU4UTRTRWNuam9iZnFWby8zRGQyanlPV2E0UTBJb2hXcwpCcE9SbForN2dUZG1BNndXL2lXMkZyYWlvVWREY3ZxTnZpbkpUZUpNZjRhbURSZXRieTdMc0Z5eVpyQzRISjVHCmJxM05uRklSZjIxN3R1YW5yT1VMREFaa1ZxTG9id3lBZm1PamRwU1YvM0JyYURoSXBPRG5PY2lLY25NTmd0NnYKMVhidDVvcExCeWxWOU1HTWdPZVZmQlJpSHdDUCtzci9DQ3pRQkNxdTRrckxaM2ZUZGFqRmVBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.BootstrapSSHKeyPair": {
        "Priv": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdzB0OGVmQU42L0pYUGF6ZTFaNGtkcmNQK2lhYTNTSjhiTXZNQklWK2FTbloyeUFHCkwrSlAybUoyb1ljUnl0SjNHU2kyc21jUmJpWjg4NkZ1SVdQaDZRU3BOekN4VHBPOWxRTURxV1NEODhHM3Rvem8KVzN1MjlZZ25VU3lGVVd6Y2F3d29kYXJyeFB2bzU0MklUMlRhNlEzZU44TE94cVRHSHE2QklWQUFHa1VEdlZINgpMc0xpeVR2Mk5XMHRnYnVUOE5YSFhPNTl2MUY5ZW5QVFhSWFN6M2JWbnRLTTRrbFVhV1U5V3FFbjZEQ0VONnNvCmR1RGorNWZSUERHZ2F6WmlBVjhIK2dHZE5YOHQ1c2pwQURHbWpSdWZ5V0lQNWJEWEhkaVB2RDJaOWEwRFZzQmsKV09iTTR4ZmhkcDdWK3ZpZVBBaHk2VDFLQWVXWUlKREFDQ3FxS3dJREFRQUJBb0lCQUNkcGtvTmhTTTMzS0ZnUQpEU0I3Tzh5aGdSM3dzSXcwSzN3aFhOa0V2OUFsWEF2MjJJak5XV1F2UHRXMlZvYmlGcHNETm11bWxVUHZqSVAyCmJpMWE1UHFMc0VLdEZ2dE9vWkh5KzhneHV0ZDBuc2krZ3g0RFI1Y2hsUjJ5cUcwWVZSdGRac1RvYTVCamJrdGMKcXNlckNPckRtN2NSSDMzRFB5QnVBeTFmNGNWckVlSklsenU2b2NJMHJWaWxHQ1ovWlo3WDVDUlF5amVTNk1mMgpWQnIrdktON2gvQVpqcEZ0SGlFU3pxV3RscTBVc2hibzZpRTZsUXhjdDY3cU11UW8yVE9udUF3L0dCc3BkVGRVCmwvN2ZQSkhkNGZZQWVUeHJyRnBBZUV0MHhMK3IzT1NyVkdiMGg4SUZkUkQwb3gwZjdZNmVIQnhPRFk4cld4bncKajQraFZURUNnWUVBNU1JMlBXRmNYcjZZTEhUZEN5clJWODdTREhGMTBqakZSS1F0U2k5dlQ5d1JIY0RVT2lMVwpJSk1yenZIZkxHaVpTU3c1OHVibW9hRzR1QytlV0JFQTVyWC9LRWJTd1d4ZzRMWnZ6akZGT01rb0JkNXBPZmVPCmpaOEk3QnU5b2dya08wd3A4akpETWREY1FZTnE5LzBxOGdHWFRLbVZYRWROWXZyTzM1cjNWVVVDZ1lFQTJvMGUKa3FPaUdsZTB5b29nUGZ6TmxnUkJPVThzcXpWMnV1NFB5OXBUb3hQQnlTUEM5eU1aamhIbVNMdkFPOGtUM0FQcApxT0d2SFZNUUVUS2hraXNqL3c4ZkU0a1UxbVpWc01kVHZLSWNQNW1OdHkralZpQTFqTzYxNHFhaWF2V21ncnk3CitiYXF3T3VuRVRaVmxXbG16WUo5bzZDcUJZMDA4aHpTVE5DLzRLOENnWUVBbFdpVGJIdU9qUU1HK09KTERPUW0KWHFkaVlXWXBnZWc2VDU2N1JkeTlZdmRrNW4zdkh4bHBxVlQySSsrdHg1OTVubVVZWkNHVE9MWWJvNURXWnNhVQpSQnRTVDhnU0Z1cm1TMTVjbjl0bVRyUnpRNElFVUN2MEcyTm52RzVSNk9nY01PNko1dm9WRVJCTkN5eitUSUk1CjdsNURwM3FMWnYzYStXNitkeVVMcmRFQ2dZQmU5Uy9TY095TzI0cSs4ZExlZkFmclpYL2RZYXc3MjJmeUFsdTAKcS9EcEN6MklvbFFrd3dob2RSaUVnNmNia3R0aEhnWVpEYTNqWk9LM1JqTnphZkVpOGpRRGJlMHkxcFhtMEVSdQowbFRKd1hNVW84c3BNYWR5eTRrVnFHY3JaLzVvRVk3dkNkSVpMb3FSYlBVMGpPNVEzcUN1UnJGNDVnaWFKYkd1CkZJazZHd0tCZ0NFOGo4MVFIUXlMdk55RU1TWEx3Y3ZqYW1PcVBUakFZNFRyT1RWelJFSmlmb0xDeFYvQVFCeGwKd0pNWXpnOGRzcUVxVDNpT2xPMjFDWUhsUnc4Y05jdDZ2ZUE3RmJpUGhpcmg4N0hQVHVqaFVJam1Wd0ZqV0Y5dgpVb2dJSm1hNi81Y2srSVJYMS9LREZ3bHhId3Rlb21FWWRTeGh5UWZyV2NJMmVYV3NjWnI4Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "Pub": "c3NoLXJzYSBBQUFBQjNOemFDMXljMkVBQUFBREFRQUJBQUFCQVFERFMzeDU4QTNyOGxjOXJON1ZuaVIydHcvNkpwcmRJbnhzeTh3RWhYNXBLZG5iSUFZdjRrL2FZbmFoaHhISzBuY1pLTGF5WnhGdUpuenpvVzRoWStIcEJLazNNTEZPazcyVkF3T3BaSVB6d2JlMmpPaGJlN2IxaUNkUkxJVlJiTnhyRENoMXF1dkUrK2pualloUFpOcnBEZDQzd3M3R3BNWWVyb0VoVUFBYVJRTzlVZm91d3VMSk8vWTFiUzJCdTVQdzFjZGM3bjIvVVgxNmM5TmRGZExQZHRXZTBvemlTVlJwWlQxYW9TZm9NSVEzcXloMjRPUDdsOUU4TWFCck5tSUJYd2Y2QVowMWZ5M215T2tBTWFhTkc1L0pZZy9sc05jZDJJKzhQWm4xclFOV3dHUlk1c3pqRitGMm50WDYrSjQ4Q0hMcFBVb0I1Wmdna01BSUtxb3IK"
    },
    "*tls.BoundSASigningKey": {
        "FileList": null
    },
    "*tls.CloudProviderCABundle": {
        "File": null
    },
    "*tls.JournalCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtpZ0F3SUJBZ0lJQ3gxTzVEc3IvaWd3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEl6TURreU5USXhNelF6TlZvWApEVE16TURreU1qSXhNelF6T0Zvd09URWNNQm9HQTFVRUNoTVRUM0JsYmxOb2FXWjBJRUp2YjNSemRISmhjREVaCk1CY0dBMVVFQXhNUWFtOTFjbTVoYkMxbllYUmxkMkY1WkRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU0yZldGbndSbUZjWFBCV25XdkREcE1TdEpxM3J2TVA2OUcvUFdrdll1OVFjM2ZtMWFETApYTHIrdmZRVXlRWVZ2c0xLcmFHN3FPVmpiTDQyRnp5VlNGRERsWlozL3NWNWZ4Z21mODhzbEY0Z05TMnRwUFAzCitrTUtEMHZMNkQyZmtzUm5Hd3VLNXJMMTdHdSsvYVUvWGovQXc0SWdhQWZhczBoL2RjT1dIMlRMK1IwK0krRSsKazVMRTVSNThHSlllMVVIS0tPVzJtNUhDKzNFdjZTWlY2RE11WlpxWlh3ZDJ4NStvK0dneEhDN3R2QVZZbThTRwpmZGhpc0FEa3JtSzhkWjY4UWpwZ1o0SVhqY2VEeHNZVGx4bVJJNCtiZFMyaXQ0RXNoZmljc1pWRjYzNzZoNC93CkN6TS9lU3FGNGFpYVp2all0eU9EUmcvSmd0Ujg5a05INUhjQ0F3RUFBYU4vTUgwd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQjBHQTFVZERnUVdCQlFmbFRYUFRSeFVsNWRZYThYUkV6V3RsNmZZNWpBZkJnTlZIU01FR0RBV2dCUjdjcmY3CmE1c2VYVkhSN1h4U2xQeW03WHNuOURBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVhNUkMxNlBmUVRRMndETnYKVW1XRXErZHVSYm9pdzAvZGlzUUM2VWZjcmc4cVd3RS9xaUZQL21vTklsRmdJaTJqbUJ4ZUo2elE2Z0hwakJ6MQppYVlsWndRZ3EvaFY4Y0Z3UGE1bmxwQjhuUHJqekRTcVlEMFBKQVF2Y3paSHduRG5Eb0VnOWd2cEFmOHRCV2lCCnZzRTduNFNrbW5aQzJZQzIxQ3pROS9BbGNMSG9yY0tsRFU3NXVHV04vaDZMYStqeTd1UkxER1JzWkhMcVpma1YKWXFybytxM1A1elBnM0FIUndIcDd6RSsrdldSdHdUc3NVQnBjdE9GTmZPS1ZwTUJFYzFnYk01RHNjdWphWUFaTQprLzE2czFRc3ZmL0h2YlRvNTFMTnZVYU9HcGVZS0xGMDFqV0NRazA1SU5sb0ZDRXZKaWpkWldpYWw4OCtjSTB4ClhQLzNDUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBelo5WVdmQkdZVnhjOEZhZGE4TU9reEswbXJldTh3L3IwYjg5YVM5aTcxQnpkK2JWCm9NdGN1djY5OUJUSkJoVyt3c3F0b2J1bzVXTnN2allYUEpWSVVNT1ZsbmYreFhsL0dDWi96eXlVWGlBMUxhMmsKOC9mNlF3b1BTOHZvUForU3hHY2JDNHJtc3ZYc2E3NzlwVDllUDhERGdpQm9COXF6U0g5MXc1WWZaTXY1SFQ0ago0VDZUa3NUbEhud1lsaDdWUWNvbzViYWJrY0w3Y1MvcEpsWG9NeTVsbXBsZkIzYkhuNmo0YURFY0x1MjhCVmliCnhJWjkyR0t3QU9TdVlyeDFucnhDT21CbmdoZU54NFBHeGhPWEdaRWpqNXQxTGFLM2dTeUYrSnl4bFVYcmZ2cUgKai9BTE16OTVLb1hocUpwbStOaTNJNE5HRDhtQzFIejJRMGZrZHdJREFRQUJBb0lCQVFDRVk5Z3E4RDBnYXF1YwpRdWhRZmVKZ1oyYkpSd0xwbEpLdEZZaWd0TlhxWjg0d29QdGk4QXpnaVN3Y2YxVi9DWGt0U2ZuSmJGNHVjM21NCmJwOC9ibzZGRWFpNm5MLzR2V1ZMVTE1dk1iREZlYzlEZmMzN0Z1cVhSMTdaMm92SlFYanA0OGpTQWJqUCtPOGoKNEhESGVLbGlPdWFtWGQ4ZFQzNm5hd21UeUpDbUFGYTZienQ2Qi8rb2U4K3hLTEtCVmpLcG42Q2xabTkrZVpaZQoyNHB0eTlwMjhRM0Vld1NLSlk0UjhzTTlNM0YzUk1ISnpEV1A4SXRjcFJPQWlXeTJwQVZBeXNTZFlRWjVxeEVsCnB0K0pNejRkbytGUHNlZjI0VHlXOWxwa2I5cldvdmlENUtCNmVxM1c2UGs4RmMzeE82RWdGVENJeGx3NHh2cHkKR3liZ2l4REJBb0dCQVBDRzdTTExXMEFVRk4zeWxwd2wyZVhETGlkUlhXUGZZV3dNSnhPcWRIWjl3eXJHdUVpKwpVVENYU01CNlhSNExBaWEzRThlMm9KQmNwQXpQRldUWVJKZS9WWW04OVRaSk9MbEVZWHlEQjNRYngxY010N1ZPCmg0dW1FVmlzckNnTDdSUFN5aExUclZyWkhVU2xoS3hYaExCdktsVFFORmZ4OVR2VlFBdEx5cFpKQW9HQkFOcloKbVU5MloyRjRXMkdXU0o4blBsV3YyK09tczFGd2RxVEZsWWUvRUdhTmhwTS85bnduakRGSUFDOFloZUlTQlg2bQpBajNjVG5QeGlaWmZGbTYrTGFIbStQOXlva2ZsWjRtTGdaVUh2cHNEbWJUbXdZaTdBMFZWOUtmbmg4MWZ0NHBLCk1IcGU5TS9YaURPUkVsUTNJaE5FTm9XcjZwbjJHNXJWMmhITUE2Uy9Bb0dBWWdScUVKclVaY21KTTJWUGNQU1AKMW16eW12MHlWS2ZNV0s2ZklnbDlpbWYzcDYveG0xdExWTVRoMWVaSG1oMmNVOUNaay9KZGZsYnlWM0h3WXZjcgpCTGZwRU1kYkdqTStsV2xEWE8wOGxWbFlvNlhBRzNlVUR4bXV5ZmNiOVBuZk5BdmJZMDYxdjJibzRYZWVHR2xWCjNseCs0SzgwRlg2NWxCZDBFT1ppK1ZrQ2dZQlFHcDJYREV2Q3pYOEZOVERYc0ZHTW81WGt1YnVnNzMwOXltUjEKRDJZOVkwZ0MxY0t1cHZzVmZya3lnOU5kY0NNNnZDRE42N2w3anNsQmxRUnMvSWRQWDI5OGNNVWRjOFoxL2U0cwpVbTFkNSs5MjI0K3pNR0IrSEh3MGlQYVlJWlRZdFZjUk0zaUFLdS9ia0JvWllTVEQwSS8wVlh6RlplT3N4T0hRCjZjL2JtUUtCZ0FyUmZUcVhJSlZuREFTTWlsWERDSWFZMlNCL2F4UmVTVENwaS9oWlU1a1BmODBjaFU5ZjR0REYKaXc0V3h4TjgzNS95ajdadmQ1dUlGVVZRQ1Z5b3hTYnl4dkpobmZudDFVTmkrOFo2M2t5Q2FRV3Q2MHg3SXd5OApJQm5kdFEwLzRtZ0Z6KzVrdGxrN0k2Z3Jwc0d6c1NuOS93Vk8vU0NDeEZrdWpDemVDRU5QCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/journal-gatewayd.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBelo5WVdmQkdZVnhjOEZhZGE4TU9reEswbXJldTh3L3IwYjg5YVM5aTcxQnpkK2JWCm9NdGN1djY5OUJUSkJoVyt3c3F0b2J1bzVXTnN2allYUEpWSVVNT1ZsbmYreFhsL0dDWi96eXlVWGlBMUxhMmsKOC9mNlF3b1BTOHZvUForU3hHY2JDNHJtc3ZYc2E3NzlwVDllUDhERGdpQm9COXF6U0g5MXc1WWZaTXY1SFQ0ago0VDZUa3NUbEhud1lsaDdWUWNvbzViYWJrY0w3Y1MvcEpsWG9NeTVsbXBsZkIzYkhuNmo0YURFY0x1MjhCVmliCnhJWjkyR0t3QU9TdVlyeDFucnhDT21CbmdoZU54NFBHeGhPWEdaRWpqNXQxTGFLM2dTeUYrSnl4bFVYcmZ2cUgKai9BTE16OTVLb1hocUpwbStOaTNJNE5HRDhtQzFIejJRMGZrZHdJREFRQUJBb0lCQVFDRVk5Z3E4RDBnYXF1YwpRdWhRZmVKZ1oyYkpSd0xwbEpLdEZZaWd0TlhxWjg0d29QdGk4QXpnaVN3Y2YxVi9DWGt0U2ZuSmJGNHVjM21NCmJwOC9ibzZGRWFpNm5MLzR2V1ZMVTE1dk1iREZlYzlEZmMzN0Z1cVhSMTdaMm92SlFYanA0OGpTQWJqUCtPOGoKNEhESGVLbGlPdWFtWGQ4ZFQzNm5hd21UeUpDbUFGYTZienQ2Qi8rb2U4K3hLTEtCVmpLcG42Q2xabTkrZVpaZQoyNHB0eTlwMjhRM0Vld1NLSlk0UjhzTTlNM0YzUk1ISnpEV1A4SXRjcFJPQWlXeTJwQVZBeXNTZFlRWjVxeEVsCnB0K0pNejRkbytGUHNlZjI0VHlXOWxwa2I5cldvdmlENUtCNmVxM1c2UGs4RmMzeE82RWdGVENJeGx3NHh2cHkKR3liZ2l4REJBb0dCQVBDRzdTTExXMEFVRk4zeWxwd2wyZVhETGlkUlhXUGZZV3dNSnhPcWRIWjl3eXJHdUVpKwpVVENYU01CNlhSNExBaWEzRThlMm9KQmNwQXpQRldUWVJKZS9WWW04OVRaSk9MbEVZWHlEQjNRYngxY010N1ZPCmg0dW1FVmlzckNnTDdSUFN5aExUclZyWkhVU2xoS3hYaExCdktsVFFORmZ4OVR2VlFBdEx5cFpKQW9HQkFOcloKbVU5MloyRjRXMkdXU0o4blBsV3YyK09tczFGd2RxVEZsWWUvRUdhTmhwTS85bnduakRGSUFDOFloZUlTQlg2bQpBajNjVG5QeGlaWmZGbTYrTGFIbStQOXlva2ZsWjRtTGdaVUh2cHNEbWJUbXdZaTdBMFZWOUtmbmg4MWZ0NHBLCk1IcGU5TS9YaURPUkVsUTNJaE5FTm9XcjZwbjJHNXJWMmhITUE2Uy9Bb0dBWWdScUVKclVaY21KTTJWUGNQU1AKMW16eW12MHlWS2ZNV0s2ZklnbDlpbWYzcDYveG0xdExWTVRoMWVaSG1oMmNVOUNaay9KZGZsYnlWM0h3WXZjcgpCTGZwRU1kYkdqTStsV2xEWE8wOGxWbFlvNlhBRzNlVUR4bXV5ZmNiOVBuZk5BdmJZMDYxdjJibzRYZWVHR2xWCjNseCs0SzgwRlg2NWxCZDBFT1ppK1ZrQ2dZQlFHcDJYREV2Q3pYOEZOVERYc0ZHTW81WGt1YnVnNzMwOXltUjEKRDJZOVkwZ0MxY0t1cHZzVmZya3lnOU5kY0NNNnZDRE42N2w3anNsQmxRUnMvSWRQWDI5OGNNVWRjOFoxL2U0cwpVbTFkNSs5MjI0K3pNR0IrSEh3MGlQYVlJWlRZdFZjUk0zaUFLdS9ia0JvWllTVEQwSS8wVlh6RlplT3N4T0hRCjZjL2JtUUtCZ0FyUmZUcVhJSlZuREFTTWlsWERDSWFZMlNCL2F4UmVTVENwaS9oWlU1a1BmODBjaFU5ZjR0REYKaXc0V3h4TjgzNS95ajdadmQ1dUlGVVZRQ1Z5b3hTYnl4dkpobmZudDFVTmkrOFo2M2t5Q2FRV3Q2MHg3SXd5OApJQm5kdFEwLzRtZ0Z6KzVrdGxrN0k2Z3Jwc0d6c1NuOS93Vk8vU0NDeEZrdWpDemVDRU5QCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/journal-gatewayd.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtpZ0F3SUJBZ0lJQ3gxTzVEc3IvaWd3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEl6TURreU5USXhNelF6TlZvWApEVE16TURreU1qSXhNelF6T0Zvd09URWNNQm9HQTFVRUNoTVRUM0JsYmxOb2FXWjBJRUp2YjNSemRISmhjREVaCk1CY0dBMVVFQXhNUWFtOTFjbTVoYkMxbllYUmxkMkY1WkRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU0yZldGbndSbUZjWFBCV25XdkREcE1TdEpxM3J2TVA2OUcvUFdrdll1OVFjM2ZtMWFETApYTHIrdmZRVXlRWVZ2c0xLcmFHN3FPVmpiTDQyRnp5VlNGRERsWlozL3NWNWZ4Z21mODhzbEY0Z05TMnRwUFAzCitrTUtEMHZMNkQyZmtzUm5Hd3VLNXJMMTdHdSsvYVUvWGovQXc0SWdhQWZhczBoL2RjT1dIMlRMK1IwK0krRSsKazVMRTVSNThHSlllMVVIS0tPVzJtNUhDKzNFdjZTWlY2RE11WlpxWlh3ZDJ4NStvK0dneEhDN3R2QVZZbThTRwpmZGhpc0FEa3JtSzhkWjY4UWpwZ1o0SVhqY2VEeHNZVGx4bVJJNCtiZFMyaXQ0RXNoZmljc1pWRjYzNzZoNC93CkN6TS9lU3FGNGFpYVp2all0eU9EUmcvSmd0Ujg5a05INUhjQ0F3RUFBYU4vTUgwd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQjBHQTFVZERnUVdCQlFmbFRYUFRSeFVsNWRZYThYUkV6V3RsNmZZNWpBZkJnTlZIU01FR0RBV2dCUjdjcmY3CmE1c2VYVkhSN1h4U2xQeW03WHNuOURBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVhNUkMxNlBmUVRRMndETnYKVW1XRXErZHVSYm9pdzAvZGlzUUM2VWZjcmc4cVd3RS9xaUZQL21vTklsRmdJaTJqbUJ4ZUo2elE2Z0hwakJ6MQppYVlsWndRZ3EvaFY4Y0Z3UGE1bmxwQjhuUHJqekRTcVlEMFBKQVF2Y3paSHduRG5Eb0VnOWd2cEFmOHRCV2lCCnZzRTduNFNrbW5aQzJZQzIxQ3pROS9BbGNMSG9yY0tsRFU3NXVHV04vaDZMYStqeTd1UkxER1JzWkhMcVpma1YKWXFybytxM1A1elBnM0FIUndIcDd6RSsrdldSdHdUc3NVQnBjdE9GTmZPS1ZwTUJFYzFnYk01RHNjdWphWUFaTQprLzE2czFRc3ZmL0h2YlRvNTFMTnZVYU9HcGVZS0xGMDFqV0NRazA1SU5sb0ZDRXZKaWpkWldpYWw4OCtjSTB4ClhQLzNDUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeAPIServerCompleteCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJUlVZVGpXSEFkL1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURreU5USXhNelF6TmxvWERUTXpNRGt5TWpJeE16UXpObG93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZmdWZTYU5EVWIyQgpsSHpxTkxiQXUrTHc4VjNCYkdObTdOSTdWR3M0TTBTajFhUjUwR2JYalFuajBqV2diamV0Q0ZjRUM1VTRNeUU3ClVJVTZTb1RHVm1UZlhpY2NoZjFCM3BWQXF5QXg3YzlGb083TXNYNWpHMFRxUGhZUi93TWFEM0VUNjZJVld0aWcKa2FqNGdIcGVNb0o0WkhMbVZCcFdJNklvb014NVgyYlFrTzBMZXZHd0tQU1doK0FYTVhlU2h2ZUlUY3VUaWg2bgp3WXd3eTUzYW52clRCWjdxMkNablpwQ0NKZjZ2YzVZUWR2UXRCMkNGVjJPcDU0ZFdJc3NYdVA2ZFpQY0dHckNkCnFaUHo4ZU12M01BR0kvQU9DL1dDWklmbHR4WkZGem5nSmR0UmZ0RnZPZ1A5RWNGa014ZnA5ZG1ZZEk0bTRIUXoKcXlqd1IrQ01md0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVd0docUpnZ2NJbVNWZUk0a0FCdnZ6SVcvUXFFd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBS2dFYzk0TVl4TTRXazF1WFlENXhGL0xiS255eTBwWUk1UlBVWm95bk1Lcjl3MHVmYXhIL2dMaGFjdmkKck1NdTV3bXVOcnJDdGdBbUwyOTZhZVFLZ1NTUTRrQlZZOGJJL0dpaXdRQU9Gb3JEcWxTeUZMVXJ1aWhHcm5JdgpoOXozeWpCVEVOWk1LcWNYVGdvWE5TL2xUZzE1NWJTZm43TG92c0FENDN5bk1xUFBMeEwySDNkZVc0bkpjM0YyClArWEhjRzI1MzJzSlBKRW9lUW5hTE1BRlB5WWFNeEFxdk9Rb0cyVW0rcjVoTVJGYXRKcjYzOXpFM04vUjRScm4KdWRDbGl4NWtKYUdSak1rdUFnVGEwRnB0UHV6aUpIQW4rNWlSRHN5SnN5QXFLcmNjQ0lueklZSkVMOG5PY0hIWgpNa2ZVUzYvbVRsMUFVM01MQ2RxWTBBYmJXcHc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJTkxWVFBEbERCQXN3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRGt5TlRJeE16UXpObG9YRFRNek1Ea3lNakl4TXpRek5sb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBcUFzaEF2bmcwN1ptRnlLaGZ5cS9GWHJrTzM4dVF6a04zQlNoWnBEa2NTVzlIOGxxemh4cjcvWXZkR3FnCisrckdQQ2Zra1dQTTZLNC9SZXVDZDhadEJUR3J0cGVEbXVPSHNpd0lPK0ZTN29ibFAwZWJMNFVmNkVqd2VwcWkKaCtOOE03UkRZaWVRMWhDcGt5K1NRUk9TbkFhVnZ1Y2xaZW4ram5VK2lMUzBGOXl3UUtoblRXci9QOEFwTnZTaApxNGo5NEpZYmpadUdrdG82K0wzclVzcHBMdi9TWFNQK1ZpdlFBRmYvRFZnV0Zad0p4OGY1SlF4bEttYnBpbjlXCmtpTnFZMHYvaFAyNHpIKzdWOTM5SmZMRXdNZVB3TWRrYXFsZGp2YkdUQlNwN0lKczNML2hzVVkyTkNUNHJVSnUKRUpnekF4dW01N0ZXeGYydnBQcFVBVmdBWlFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVVlJd25XUzJTc2FrWlk0R2E1UXNFZlFWQ2FWVXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUppb0d5dVB2bzlnTVUxenlVQm41bXpGaVUzVytPQ2RHeGJ3M1JjenFMckYKN0FKd2V3Q01PdHl1UDlkWDNlMEtuUkxIRXhra0F4ZzQwRGxmcTRkWWJZZGhaSFVRbm10dGsrRnhLTHMzU3VuWgovd2xUZGR3Y1BpUXl3WlJ0VUhCdGxGaUtkYzEydUtvd3hJemd5eWpZTGxTYktyNHpxanpnMkxoL0xicXRpWnVyCjdwNFlGL29aaWdFRllGQzBRTTVpZHl3SS91OEJ1Y1ZJdmRVeFNycTJJZnVDeDJkU0ZZUW0vZlVoVmlpWFBoTkMKdjduY2JPTGQ3OWtqMHVXeThJV1RRRWNKSVN3UW13V2xyZU1hcVovcGRrY1VVaEpYS29KaUdManV6aUFDZXJZRgowSXRJWmh2c3FXbk4vci9OSUZ3amttWlFDN3ZQcjZqV00rZTJiTzJib0hJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETWpDQ0FocWdBd0lCQWdJSU1RdlRMWU5sZWJBd0RRWUpLb1pJaHZjTkFRRUxCUUF3TnpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU0V3SHdZRFZRUURFeGhyZFdKbExXRndhWE5sY25abGNpMXNZaTF6YVdkdVpYSXcKSGhjTk1qTXdPVEkxTWpFek5ETTJXaGNOTXpNd09USXlNakV6TkRNMldqQTNNUkl3RUFZRFZRUUxFd2x2Y0dWdQpjMmhwWm5ReElUQWZCZ05WQkFNVEdHdDFZbVV0WVhCcGMyVnlkbVZ5TFd4aUxYTnBaMjVsY2pDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUthQXVOemFZOFZjYTJDSG5NOG52aHcvRXpRZG1xUngKSzNYaSt6TFJiSmVLMWZKNDVxbDl2VXlQYzNDL045V1RmNE1IaVhmMldZWkxDb2ZhVGtKZWJLNUlhazdqQW9yLwpaamI5RzZ2Q3lTbWw5MzJtVjliZ0FOVElXN2M1TkdidEN3Sys2WHlsUHZ5T3ZqbjNEVFhlc08xdkE0VS9reldPCmg3N05KdVNkckZtZU5PZ1JzZllXSnhDMEcvbHprK0M3OGZhQmsySDA3d3BqOFlmU0Z0ZGdUR1ZNNFRVSGxNMWsKV0JCU2g3VWNuL0w5Q2ZhMU55QTNiV1o2Rk05eWFPaWtnZnVhNTJRSUo2cSs2dEVZMVVuc1p3WVJqREp0QVpaRgpQSTZ0OFcrQnZWY2NxWU8rNmRjeWVjempiWWt0aXBHcEQxRWZTZ0dHOHNWMlc0N1FaQ1JPQnhrQ0F3RUFBYU5DCk1FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZOWUwKaXRVZlZnYnpFcUpRQmU1OU1LZmhtbFFPTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCQVpndWptWURNVm1OSQoyT242RjR6elVDNzhtZTRaQkNycnd5Ull2RkZPSk83ZXc2MDRQUENZUi8zT0pZWmR3ayt2NWxKM09BSDlqNGtqCldueUxjaVZHamhvMDYzcmNtWFdvSVNSSHptWnlXSmllc21hZ0dXN2NFOWRhZTZwR2pkdDdBQU1mQWFTRWxrdUYKSEdWcEFKVnhxOW8rZnBPZndFajNqUUlMWHMvTVhNUFNxTCt2cW5yN0pGSlBhQjNabUhMWjFwWFBoUDRpMnNlbApEUkY2VVBMRnFZOFpJaGZVcVFwK2tsK3BxM3RMRDZENUtuZE8wUmNxKzNoUXhhUHpNKzl5MElCOWlmSlB6a1NxClQ3Tll4Ky9WaUVETURHZG44ckZibFV0TnRnTmtXby9jTjV2dU1URHQ1cUVrS2dOOXJyUVhjT1BsTXFzdjhzRUUKWXlCaldzUkgKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-complete-server-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJUlVZVGpXSEFkL1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURreU5USXhNelF6TmxvWERUTXpNRGt5TWpJeE16UXpObG93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZmdWZTYU5EVWIyQgpsSHpxTkxiQXUrTHc4VjNCYkdObTdOSTdWR3M0TTBTajFhUjUwR2JYalFuajBqV2diamV0Q0ZjRUM1VTRNeUU3ClVJVTZTb1RHVm1UZlhpY2NoZjFCM3BWQXF5QXg3YzlGb083TXNYNWpHMFRxUGhZUi93TWFEM0VUNjZJVld0aWcKa2FqNGdIcGVNb0o0WkhMbVZCcFdJNklvb014NVgyYlFrTzBMZXZHd0tQU1doK0FYTVhlU2h2ZUlUY3VUaWg2bgp3WXd3eTUzYW52clRCWjdxMkNablpwQ0NKZjZ2YzVZUWR2UXRCMkNGVjJPcDU0ZFdJc3NYdVA2ZFpQY0dHckNkCnFaUHo4ZU12M01BR0kvQU9DL1dDWklmbHR4WkZGem5nSmR0UmZ0RnZPZ1A5RWNGa014ZnA5ZG1ZZEk0bTRIUXoKcXlqd1IrQ01md0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVd0docUpnZ2NJbVNWZUk0a0FCdnZ6SVcvUXFFd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBS2dFYzk0TVl4TTRXazF1WFlENXhGL0xiS255eTBwWUk1UlBVWm95bk1Lcjl3MHVmYXhIL2dMaGFjdmkKck1NdTV3bXVOcnJDdGdBbUwyOTZhZVFLZ1NTUTRrQlZZOGJJL0dpaXdRQU9Gb3JEcWxTeUZMVXJ1aWhHcm5JdgpoOXozeWpCVEVOWk1LcWNYVGdvWE5TL2xUZzE1NWJTZm43TG92c0FENDN5bk1xUFBMeEwySDNkZVc0bkpjM0YyClArWEhjRzI1MzJzSlBKRW9lUW5hTE1BRlB5WWFNeEFxdk9Rb0cyVW0rcjVoTVJGYXRKcjYzOXpFM04vUjRScm4KdWRDbGl4NWtKYUdSak1rdUFnVGEwRnB0UHV6aUpIQW4rNWlSRHN5SnN5QXFLcmNjQ0lueklZSkVMOG5PY0hIWgpNa2ZVUzYvbVRsMUFVM01MQ2RxWTBBYmJXcHc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJTkxWVFBEbERCQXN3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRGt5TlRJeE16UXpObG9YRFRNek1Ea3lNakl4TXpRek5sb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBcUFzaEF2bmcwN1ptRnlLaGZ5cS9GWHJrTzM4dVF6a04zQlNoWnBEa2NTVzlIOGxxemh4cjcvWXZkR3FnCisrckdQQ2Zra1dQTTZLNC9SZXVDZDhadEJUR3J0cGVEbXVPSHNpd0lPK0ZTN29ibFAwZWJMNFVmNkVqd2VwcWkKaCtOOE03UkRZaWVRMWhDcGt5K1NRUk9TbkFhVnZ1Y2xaZW4ram5VK2lMUzBGOXl3UUtoblRXci9QOEFwTnZTaApxNGo5NEpZYmpadUdrdG82K0wzclVzcHBMdi9TWFNQK1ZpdlFBRmYvRFZnV0Zad0p4OGY1SlF4bEttYnBpbjlXCmtpTnFZMHYvaFAyNHpIKzdWOTM5SmZMRXdNZVB3TWRrYXFsZGp2YkdUQlNwN0lKczNML2hzVVkyTkNUNHJVSnUKRUpnekF4dW01N0ZXeGYydnBQcFVBVmdBWlFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVVlJd25XUzJTc2FrWlk0R2E1UXNFZlFWQ2FWVXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUppb0d5dVB2bzlnTVUxenlVQm41bXpGaVUzVytPQ2RHeGJ3M1JjenFMckYKN0FKd2V3Q01PdHl1UDlkWDNlMEtuUkxIRXhra0F4ZzQwRGxmcTRkWWJZZGhaSFVRbm10dGsrRnhLTHMzU3VuWgovd2xUZGR3Y1BpUXl3WlJ0VUhCdGxGaUtkYzEydUtvd3hJemd5eWpZTGxTYktyNHpxanpnMkxoL0xicXRpWnVyCjdwNFlGL29aaWdFRllGQzBRTTVpZHl3SS91OEJ1Y1ZJdmRVeFNycTJJZnVDeDJkU0ZZUW0vZlVoVmlpWFBoTkMKdjduY2JPTGQ3OWtqMHVXeThJV1RRRWNKSVN3UW13V2xyZU1hcVovcGRrY1VVaEpYS29KaUdManV6aUFDZXJZRgowSXRJWmh2c3FXbk4vci9OSUZ3amttWlFDN3ZQcjZqV00rZTJiTzJib0hJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETWpDQ0FocWdBd0lCQWdJSU1RdlRMWU5sZWJBd0RRWUpLb1pJaHZjTkFRRUxCUUF3TnpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU0V3SHdZRFZRUURFeGhyZFdKbExXRndhWE5sY25abGNpMXNZaTF6YVdkdVpYSXcKSGhjTk1qTXdPVEkxTWpFek5ETTJXaGNOTXpNd09USXlNakV6TkRNMldqQTNNUkl3RUFZRFZRUUxFd2x2Y0dWdQpjMmhwWm5ReElUQWZCZ05WQkFNVEdHdDFZbVV0WVhCcGMyVnlkbVZ5TFd4aUxYTnBaMjVsY2pDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUthQXVOemFZOFZjYTJDSG5NOG52aHcvRXpRZG1xUngKSzNYaSt6TFJiSmVLMWZKNDVxbDl2VXlQYzNDL045V1RmNE1IaVhmMldZWkxDb2ZhVGtKZWJLNUlhazdqQW9yLwpaamI5RzZ2Q3lTbWw5MzJtVjliZ0FOVElXN2M1TkdidEN3Sys2WHlsUHZ5T3ZqbjNEVFhlc08xdkE0VS9reldPCmg3N05KdVNkckZtZU5PZ1JzZllXSnhDMEcvbHprK0M3OGZhQmsySDA3d3BqOFlmU0Z0ZGdUR1ZNNFRVSGxNMWsKV0JCU2g3VWNuL0w5Q2ZhMU55QTNiV1o2Rk05eWFPaWtnZnVhNTJRSUo2cSs2dEVZMVVuc1p3WVJqREp0QVpaRgpQSTZ0OFcrQnZWY2NxWU8rNmRjeWVjempiWWt0aXBHcEQxRWZTZ0dHOHNWMlc0N1FaQ1JPQnhrQ0F3RUFBYU5DCk1FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZOWUwKaXRVZlZnYnpFcUpRQmU1OU1LZmhtbFFPTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCQVpndWptWURNVm1OSQoyT242RjR6elVDNzhtZTRaQkNycnd5Ull2RkZPSk83ZXc2MDRQUENZUi8zT0pZWmR3ayt2NWxKM09BSDlqNGtqCldueUxjaVZHamhvMDYzcmNtWFdvSVNSSHptWnlXSmllc21hZ0dXN2NFOWRhZTZwR2pkdDdBQU1mQWFTRWxrdUYKSEdWcEFKVnhxOW8rZnBPZndFajNqUUlMWHMvTVhNUFNxTCt2cW5yN0pGSlBhQjNabUhMWjFwWFBoUDRpMnNlbApEUkY2VVBMRnFZOFpJaGZVcVFwK2tsK3BxM3RMRDZENUtuZE8wUmNxKzNoUXhhUHpNKzl5MElCOWlmSlB6a1NxClQ3Tll4Ky9WaUVETURHZG44ckZibFV0TnRnTmtXby9jTjV2dU1URHQ1cUVrS2dOOXJyUVhjT1BsTXFzdjhzRUUKWXlCaldzUkgKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.KubeAPIServerCompleteClientCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJWFg4cVh2aFpaNG93RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB5TXpBNU1qVXlNVE0wTXpWYUZ3MHpNekE1TWpJeU1UTTBNelZhTURZeEVqQVFCZ05WQkFzVENXOXdaVzV6CmFHbG1kREVnTUI0R0ExVUVBeE1YWVdSdGFXNHRhM1ZpWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRDlwK1R0N21HVzJjQmdyK0orU3JLM3krc2dvN1B3YUZVdQpDQ2Fub3ZwOXUwZTEvYlBOZlkreHlHVUNEYmprMVBWa0w2R0dGVG9UWHllZ3FtaExNVWN0UjQ1ODExMGVZNGpVClJ2UVZ5b21Jb2h0dnovaWZTVUowWVowakcvR3pwM2J6WlBhU3BHWWxEQ0xMcy9keHhpS240bzAyWi9FaHZ2QXgKRkhQcmIwWW5hdWY0V0tuTEFoZGpLaEg3ZzFTczEydk1ER25kMGdvdFk0b2dvZk40ZmdQNjIvcVlQWTY4eHcvWgoxRHBzdko4M0FBVEY3d0xqcE5MSTNLcVdnRFRjQXAwaW4yQ0dvZGh0MUtzYlc0WnZObXprcnpCaXR3bmZCVGRxCmRxMTdGR1lFYkhMQWI5N0N1VCtSbmUrZFNSN3hpOCs5OFVKNHAyU29hN1J2d05GNWJlS3RBZ01CQUFHalFqQkEKTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlR6bm5jWApYSlN4RU9UdzMvZW5BNXVHbnJRNTJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUE5REVTYVo2NW9IMkg5UDFQCitDZXZ1b1FCMnc5ZVB2NTVVMmZHVGkrSFhuTnF1cWZtK0lDNGh0cHp1R0RVSHdkZENJSzJjbjdmUGhJbW9oRFkKT3lQb1hROGI4N2hkdXZyMElRdGdmZVFQb1MzWlFpakltdzZ3b1FmclpsbVVoU1lFc1U2TEowSUJ1dU9ORXpXNQpyeEF5YlJuQmJaUGlYVVVwUSthdVpSbXRFeHFaVDVoUkg0alBUaW8rNEg3UXh1TlFYZEJLUmppMnJSVWl5NmI4CmFZUTAzNDhUdHErdnJZdjRJME01N2ZJdFNLOTJVT2o0ZXd0ZUNUOGlXWkliVXlNQzM5WEN0dGJGUHRzRjlFRGEKR2pyM1NLZ1hCQkdhaUVnVloweGxPZjQ0MU1FUEY0TitqQlBZLzdWY0RjQVhCd2xoMTRydmF2dTlhc3VBbXpSMApsMEw5elE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlESGpDQ0FnYWdBd0lCQWdJSVRNK1NqcC81djV3d0RRWUpLb1pJaHZjTkFRRUxCUUF3TFRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUmN3RlFZRFZRUURFdzVyZFdKbGJHVjBMWE5wWjI1bGNqQWVGdzB5TXpBNU1qVXkKTVRNME16bGFGdzB5TXpBNU1qWXlNVE0wTXpsYU1DMHhFakFRQmdOVkJBc1RDVzl3Wlc1emFHbG1kREVYTUJVRwpBMVVFQXhNT2EzVmlaV3hsZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURDNkdpY3JrVzgrTVV1RDlPVkJTOHM4MEY4Tnd0L1pJeGxxcTVadmJTQy9HTWFGRXhiUU1GL2cxd3UKd1RpWm93MmFEQTJrdWhVL2o3Ym03U2lRZ010VndVd3ZtNEFQd0Z2VzZSVnErNzBDT1lBcFh1eHhjdlZKbm51Ywo5Y0UyT084ZnFHakZIVGFmaCswdHIweS9FUDJJdEhTcHZLeVJMeTNjbnNGRU5ycG9vU2ZSdGQ5cWs2dzg2MlhsCllHSXFFTis5S2hHNWloYm9FOE5TdFpRU29Wblpvdm9sQndEZ0x5TTZ1R0hHdnpNaHVGWEFXYUx4dmowSjEvKzcKcllvVkR4dm5XRWFzMUd5VWsrR1VjblZJMGNwaGIvWnRmQUVIR0ZYTEk0M1EvU1BZZHA0SEVVY3lWMzlPdXhBdgoveVJtSGExeDBuL0ZsSm0xMHdBUCtoaDJPUm0xQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUdmFWNXhXemJJV1RBeEpCT3p4OWU4cktqd0lqQU4KQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBbjdvcGFtaVVVcGh2cGVMMDNEby82dkpTdllQdVZzRnFDWlJDd3V2bQpwMDgxMitzOFV2MEFHS2ZXZDl1OTdNbTZSMERuR2pxWDJEVU93QWNUMlF2Y29JTzAzc2ZseDJTRXRtQU91MkVoCldmcUJQZGRIM0ltV2VuYVlIb1oxOS9FZGtSWDdPejlaY2ovZHRGdmI2LzVWNjJzRkdaSnFtVnlRakY1VThYSGoKTnhUUGFXSWZoTEYzeU9KYXVpSXRaMVovakh5OEZQdmN2bHhjaTZuZkpONUE2RTFvUkdZR2U4VkpudjZsQnpJVQo0NmZUSjZ3VVdrcEhjYkcvVkYxSmlqcGQvcFlaNjRlZ2w5cm4zaWg4dzdMamYyc3BqNCtobE1nMGFmSEpYOVNwCm0vNXB1OW5XTEsrcjZhVkZzYk5jSmFIOUttd1k2ZW5xQlp6Z251NVlkcFUyM2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETkRDQ0FoeWdBd0lCQWdJSUh1SFJ1OHgzeXg0d0RRWUpLb1pJaHZjTkFRRUxCUUF3T0RFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU0l3SUFZRFZRUURFeGxyZFdKbExXTnZiblJ5YjJ3dGNHeGhibVV0YzJsbmJtVnkKTUI0WERUSXpNRGt5TlRJeE16UXpPVm9YRFRJME1Ea3lOREl4TXpRek9Wb3dPREVTTUJBR0ExVUVDeE1KYjNCbApibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeU1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQThPSVBXNWs1MGIza3pUK1plV21oNWcxaTNsbEMKTktZSzA0YjVPdjdReWkzMFd0K0daT0ZFZ1NyNTRUZlloNW5iK05pekRaenFhTjJWZytlazVEU0VMYW5kRkF1Vgo5Y3h1TWpldTRpZVU4aUtzTmJYdWRyM1dPWms1dXdlZzBUY0ZoYnc4ZGpOQWFRRlV1enR5SVRLTXQyVlBVSDBJCjVqWVQvQTE4UUUreUl0SjgxSEROTlhTMWlQUlEvbTZDK3FTdHRHdzJ4c3lIblIzcTIwVnhkdnE5VDhFd3ExNEgKbktPL3lKaUFhVmZjbHdBSTdXa3BFamRlVGdXL1ZHdFRjUm53c0JRRGRLRm5ocVNNREZVTXJPTFY2dGdqSXllOQpyUmlIeXBuMGpCODIzSDJIUDh1ZjVuRXAwVHIxT3UzUEJnR1lvOWNzRm9Mc0FHTnpKR1dFYll5dTN3SURBUUFCCm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVUKM1c0VzRFVGdsbVdvRkxvMitNbU9FNjRJaGc0d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFMR0tRT2poSVgzMgpLYjMxM085WWE0R0dpZU5ka1k0eWFoREVyT0M3ZXEzakJzVXVjd3VvREJLNys5MkQ4OHVwYlVWRk00U3I1SGhiCnFuWmNFNG1aUmcyMS8zMUk5dzU5WUhxbDdGUzR5ekZGOE1KNDNUOVY2aCsvUkRkWVlPQ0lhTEZnZE1yTEhvWEoKbU8wcWViNHRrWHZQZEZCaElGTXRaTmRGVjB2ZjBDUHhqZ2FFWUIrY1FVbjI4d2FGb3ZLTUpyYXhLWEtZaFdyOApmbUpMS090UnJrNjF4em9zZjNpZDN3ZE4yQTBHSDQydXhuRDI3U2I0OWZRTUFjWVVLSmZHSEIxQUQydkYwcnlwCi8vU2Q5by95TStTN2ZqSEtVSW5TUjRMdU9zODJEcEZGMFNUOTRyRUx4YXBtMWM2Z2R5R0JNZXVVY053YU9OemUKNGRDZFhCUE1lbjA9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJV21sQkt5ZWUvL0F3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB5TXpBNU1qVXlNVE0wTXpsYUZ3MHlOREE1TWpReU1UTTBNemxhTUQ4eEVqQVFCZ05WCkJBc1RDVzl3Wlc1emFHbG1kREVwTUNjR0ExVUVBeE1nYTNWaVpTMWhjR2x6WlhKMlpYSXRkRzh0YTNWaVpXeGwKZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQy9Jd0s0cXFYaQpjZ2xaQlhndEs4RE4wSEphRnR4amNqY1k3djN0YXVXeTZ6TGI2TEN5L25XdE9Pc2RCN2xCL0VSMVc5anJNOGtvCmdreFZJaWdYK3RxblBzaDNIMmk3UUw0SE5WZENWb0lhcGlnbFIwYjlYVFNVVThIYkwvTEQ1eWF6cHFEOFVyT2gKV3VDcEtaY0xjYkVvazRVeFd4OHgxamNwbXRtVkdvWE41b3BjSksxQlNrTnhLdTNYd0s3S1lKK04zQkQzdEs1dApHRHpTUEJFOGVxZDdPVWVNUlJyQXEzN1I5RG4yM3NuOEp0bHBXQUJiVWJHK2h4MEtNS2NqVHFtWFJ1aUw5MmpoCjdsUUNPbEJaYnlRTFZuZXF2aGJSMlZlQ2RWd3RjQkRReExaRXNXZlhkcnJYQzhkQlpXYmVwQnJ1QWlTLzVQYzgKSTQzOTd6L2tLRjVWQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBRApBUUgvTUIwR0ExVWREZ1FXQkJRd0FEVEova2lWaDcyYmgzVTI3MmRqU28wVnh6QU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBVWNHRlJzV3lOektHZW1zeFhiQnp1cVRvVzNuRlRNT0xqUFNVTE9URDhpNXQyUlFjZFJ0cUZYeHYKdnQ0cng1N29zbS9zSnczejczUDFwcCs4ZXhSOUJrcGpHOVdpdGJQcDgzdFd2Y05wcDF5dGoxWEIrQkplbC9BeApDVEpEcGFTVGw2eWVIdGphOE45QnJqeTlCL1JCQjhMWWpJenJoelh0elhtNjhKcnVKKzdQTU5iYVhiOWc5RnZWCllxeGFDdkIzMWxoUnh6cWtjUld4QjBOM3cyNGY0dk4vZTREeFZEWTNva0NZRFlvallsSCtVMWRTWEt3VUt6Mk4KRWxWWUxZRDBNWER3SGVBblBrQmJKK2t2ai9EaWhIY0R1Y0E5eDhQUTFwbEpZMWFhQmtLNE9QVStGZHQ3andLLwowM1YwbHgwN0o3M3Rkb09jdDM1S3dDUUpwUEFUMkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEU0RDQ0FqQ2dBd0lCQWdJSUtKM1JxNk43OUZNd0RRWUpLb1pJaHZjTkFRRUxCUUF3UWpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU3d3S2dZRFZRUURFeU5yZFdKbGJHVjBMV0p2YjNSemRISmhjQzFyZFdKbFkyOXUKWm1sbkxYTnBaMjVsY2pBZUZ3MHlNekE1TWpVeU1UTTBNelphRncwek16QTVNakl5TVRNME16WmFNRUl4RWpBUQpCZ05WQkFzVENXOXdaVzV6YUdsbWRERXNNQ29HQTFVRUF4TWphM1ZpWld4bGRDMWliMjkwYzNSeVlYQXRhM1ZpClpXTnZibVpwWnkxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFgKSDRoc2FFL1V0b0FueVRydXE2L2FZcFc2Z0kvZjdTaHdSaHY3RmtJWGtDYXB0eWJNblREamRBa2svRmdFU21JMwo0VjFCWmQrV3ZScWFSNHl6NEpXWkloMndaWlBFeEZ6M2oxM1Nabm5JSWFvWDBWcGQvYWE5bEMrUmYrSjNrdytCCkZPUWh1ckhyai9Iak9DT0RlZFdUS1RmOTRHSCt5eHdOUXFhMUJCSkZ6UGZwcTh2dndDN0hVN1JvaXF1aHJKR2cKUFlXZGJaazloTy9UalJOMUJOSlZpRVVZOHhFc1B1OEFVR2FBVTZJOWVaZmxoYkt0ZzUwVnBPR0dJQVBmdFBBOApsR2hKbkIxaEhteTZ0MlpRRGFPbkFvdUl2RzgzeFRDRG5jcFpwbkNzelhJeTJhL2tBVUVRS1ZhQ3pIeXVSbEdDCk5ZSVJESFpBK3VycmxGQ0pFbzBkQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUIKQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUdEpOVGNyTTB1U1g4eVgzSXp6ZCtUTytIRjJUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBRkNmYUZHM3pRQ0tRRE9lZmlFUkhjSCs2bDFXSTZ3RXViM0QxVExEK3dUMmF3eEZWCjBvL2ZTRUF6R2xCOWJCK0ZmSklobmwvNlZQMGp4bTUvWmtiYmdxVDRaelpDU3RuYWlpNE0xSjBkNGE2Vml0VXYKVmFuRzZ5MkN3UzZ4M0NKV2VQcmdUYTNFM1l6TGVjZlFHcXBZV1VLdDBOWlBSSzVaV1ljUG16MDQwQTZsK1dpVQovVTJxc2kvT0EvRk5pQjg0alc5TnVaQklONnRJRHJXS1hja0QzcUZNWjQ3bHZ1SnNidm9qdlgzY21PMFdiZyt5ClZHNEx6NEx0cXMyMEZrS2M4bzNXZXZnMmtCQWNkcHYrSG44TWdsaVhwRmVQeTdyak9xQWVISHk1M3ZWVE9sU3QKVERDcHlmeHNjb0V0UmcxSG91ME1NcnFJWGNoZU0yN1R6OTNKRGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-complete-client-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJWFg4cVh2aFpaNG93RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB5TXpBNU1qVXlNVE0wTXpWYUZ3MHpNekE1TWpJeU1UTTBNelZhTURZeEVqQVFCZ05WQkFzVENXOXdaVzV6CmFHbG1kREVnTUI0R0ExVUVBeE1YWVdSdGFXNHRhM1ZpWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRDlwK1R0N21HVzJjQmdyK0orU3JLM3krc2dvN1B3YUZVdQpDQ2Fub3ZwOXUwZTEvYlBOZlkreHlHVUNEYmprMVBWa0w2R0dGVG9UWHllZ3FtaExNVWN0UjQ1ODExMGVZNGpVClJ2UVZ5b21Jb2h0dnovaWZTVUowWVowakcvR3pwM2J6WlBhU3BHWWxEQ0xMcy9keHhpS240bzAyWi9FaHZ2QXgKRkhQcmIwWW5hdWY0V0tuTEFoZGpLaEg3ZzFTczEydk1ER25kMGdvdFk0b2dvZk40ZmdQNjIvcVlQWTY4eHcvWgoxRHBzdko4M0FBVEY3d0xqcE5MSTNLcVdnRFRjQXAwaW4yQ0dvZGh0MUtzYlc0WnZObXprcnpCaXR3bmZCVGRxCmRxMTdGR1lFYkhMQWI5N0N1VCtSbmUrZFNSN3hpOCs5OFVKNHAyU29hN1J2d05GNWJlS3RBZ01CQUFHalFqQkEKTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlR6bm5jWApYSlN4RU9UdzMvZW5BNXVHbnJRNTJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUE5REVTYVo2NW9IMkg5UDFQCitDZXZ1b1FCMnc5ZVB2NTVVMmZHVGkrSFhuTnF1cWZtK0lDNGh0cHp1R0RVSHdkZENJSzJjbjdmUGhJbW9oRFkKT3lQb1hROGI4N2hkdXZyMElRdGdmZVFQb1MzWlFpakltdzZ3b1FmclpsbVVoU1lFc1U2TEowSUJ1dU9ORXpXNQpyeEF5YlJuQmJaUGlYVVVwUSthdVpSbXRFeHFaVDVoUkg0alBUaW8rNEg3UXh1TlFYZEJLUmppMnJSVWl5NmI4CmFZUTAzNDhUdHErdnJZdjRJME01N2ZJdFNLOTJVT2o0ZXd0ZUNUOGlXWkliVXlNQzM5WEN0dGJGUHRzRjlFRGEKR2pyM1NLZ1hCQkdhaUVnVloweGxPZjQ0MU1FUEY0TitqQlBZLzdWY0RjQVhCd2xoMTRydmF2dTlhc3VBbXpSMApsMEw5elE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlESGpDQ0FnYWdBd0lCQWdJSVRNK1NqcC81djV3d0RRWUpLb1pJaHZjTkFRRUxCUUF3TFRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUmN3RlFZRFZRUURFdzVyZFdKbGJHVjBMWE5wWjI1bGNqQWVGdzB5TXpBNU1qVXkKTVRNME16bGFGdzB5TXpBNU1qWXlNVE0wTXpsYU1DMHhFakFRQmdOVkJBc1RDVzl3Wlc1emFHbG1kREVYTUJVRwpBMVVFQXhNT2EzVmlaV3hsZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURDNkdpY3JrVzgrTVV1RDlPVkJTOHM4MEY4Tnd0L1pJeGxxcTVadmJTQy9HTWFGRXhiUU1GL2cxd3UKd1RpWm93MmFEQTJrdWhVL2o3Ym03U2lRZ010VndVd3ZtNEFQd0Z2VzZSVnErNzBDT1lBcFh1eHhjdlZKbm51Ywo5Y0UyT084ZnFHakZIVGFmaCswdHIweS9FUDJJdEhTcHZLeVJMeTNjbnNGRU5ycG9vU2ZSdGQ5cWs2dzg2MlhsCllHSXFFTis5S2hHNWloYm9FOE5TdFpRU29Wblpvdm9sQndEZ0x5TTZ1R0hHdnpNaHVGWEFXYUx4dmowSjEvKzcKcllvVkR4dm5XRWFzMUd5VWsrR1VjblZJMGNwaGIvWnRmQUVIR0ZYTEk0M1EvU1BZZHA0SEVVY3lWMzlPdXhBdgoveVJtSGExeDBuL0ZsSm0xMHdBUCtoaDJPUm0xQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUdmFWNXhXemJJV1RBeEpCT3p4OWU4cktqd0lqQU4KQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBbjdvcGFtaVVVcGh2cGVMMDNEby82dkpTdllQdVZzRnFDWlJDd3V2bQpwMDgxMitzOFV2MEFHS2ZXZDl1OTdNbTZSMERuR2pxWDJEVU93QWNUMlF2Y29JTzAzc2ZseDJTRXRtQU91MkVoCldmcUJQZGRIM0ltV2VuYVlIb1oxOS9FZGtSWDdPejlaY2ovZHRGdmI2LzVWNjJzRkdaSnFtVnlRakY1VThYSGoKTnhUUGFXSWZoTEYzeU9KYXVpSXRaMVovakh5OEZQdmN2bHhjaTZuZkpONUE2RTFvUkdZR2U4VkpudjZsQnpJVQo0NmZUSjZ3VVdrcEhjYkcvVkYxSmlqcGQvcFlaNjRlZ2w5cm4zaWg4dzdMamYyc3BqNCtobE1nMGFmSEpYOVNwCm0vNXB1OW5XTEsrcjZhVkZzYk5jSmFIOUttd1k2ZW5xQlp6Z251NVlkcFUyM2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETkRDQ0FoeWdBd0lCQWdJSUh1SFJ1OHgzeXg0d0RRWUpLb1pJaHZjTkFRRUxCUUF3T0RFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU0l3SUFZRFZRUURFeGxyZFdKbExXTnZiblJ5YjJ3dGNHeGhibVV0YzJsbmJtVnkKTUI0WERUSXpNRGt5TlRJeE16UXpPVm9YRFRJME1Ea3lOREl4TXpRek9Wb3dPREVTTUJBR0ExVUVDeE1KYjNCbApibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeU1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQThPSVBXNWs1MGIza3pUK1plV21oNWcxaTNsbEMKTktZSzA0YjVPdjdReWkzMFd0K0daT0ZFZ1NyNTRUZlloNW5iK05pekRaenFhTjJWZytlazVEU0VMYW5kRkF1Vgo5Y3h1TWpldTRpZVU4aUtzTmJYdWRyM1dPWms1dXdlZzBUY0ZoYnc4ZGpOQWFRRlV1enR5SVRLTXQyVlBVSDBJCjVqWVQvQTE4UUUreUl0SjgxSEROTlhTMWlQUlEvbTZDK3FTdHRHdzJ4c3lIblIzcTIwVnhkdnE5VDhFd3ExNEgKbktPL3lKaUFhVmZjbHdBSTdXa3BFamRlVGdXL1ZHdFRjUm53c0JRRGRLRm5ocVNNREZVTXJPTFY2dGdqSXllOQpyUmlIeXBuMGpCODIzSDJIUDh1ZjVuRXAwVHIxT3UzUEJnR1lvOWNzRm9Mc0FHTnpKR1dFYll5dTN3SURBUUFCCm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVUKM1c0VzRFVGdsbVdvRkxvMitNbU9FNjRJaGc0d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFMR0tRT2poSVgzMgpLYjMxM085WWE0R0dpZU5ka1k0eWFoREVyT0M3ZXEzakJzVXVjd3VvREJLNys5MkQ4OHVwYlVWRk00U3I1SGhiCnFuWmNFNG1aUmcyMS8zMUk5dzU5WUhxbDdGUzR5ekZGOE1KNDNUOVY2aCsvUkRkWVlPQ0lhTEZnZE1yTEhvWEoKbU8wcWViNHRrWHZQZEZCaElGTXRaTmRGVjB2ZjBDUHhqZ2FFWUIrY1FVbjI4d2FGb3ZLTUpyYXhLWEtZaFdyOApmbUpMS090UnJrNjF4em9zZjNpZDN3ZE4yQTBHSDQydXhuRDI3U2I0OWZRTUFjWVVLSmZHSEIxQUQydkYwcnlwCi8vU2Q5by95TStTN2ZqSEtVSW5TUjRMdU9zODJEcEZGMFNUOTRyRUx4YXBtMWM2Z2R5R0JNZXVVY053YU9OemUKNGRDZFhCUE1lbjA9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJV21sQkt5ZWUvL0F3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB5TXpBNU1qVXlNVE0wTXpsYUZ3MHlOREE1TWpReU1UTTBNemxhTUQ4eEVqQVFCZ05WCkJBc1RDVzl3Wlc1emFHbG1kREVwTUNjR0ExVUVBeE1nYTNWaVpTMWhjR2x6WlhKMlpYSXRkRzh0YTNWaVpXeGwKZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQy9Jd0s0cXFYaQpjZ2xaQlhndEs4RE4wSEphRnR4amNqY1k3djN0YXVXeTZ6TGI2TEN5L25XdE9Pc2RCN2xCL0VSMVc5anJNOGtvCmdreFZJaWdYK3RxblBzaDNIMmk3UUw0SE5WZENWb0lhcGlnbFIwYjlYVFNVVThIYkwvTEQ1eWF6cHFEOFVyT2gKV3VDcEtaY0xjYkVvazRVeFd4OHgxamNwbXRtVkdvWE41b3BjSksxQlNrTnhLdTNYd0s3S1lKK04zQkQzdEs1dApHRHpTUEJFOGVxZDdPVWVNUlJyQXEzN1I5RG4yM3NuOEp0bHBXQUJiVWJHK2h4MEtNS2NqVHFtWFJ1aUw5MmpoCjdsUUNPbEJaYnlRTFZuZXF2aGJSMlZlQ2RWd3RjQkRReExaRXNXZlhkcnJYQzhkQlpXYmVwQnJ1QWlTLzVQYzgKSTQzOTd6L2tLRjVWQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBRApBUUgvTUIwR0ExVWREZ1FXQkJRd0FEVEova2lWaDcyYmgzVTI3MmRqU28wVnh6QU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBVWNHRlJzV3lOektHZW1zeFhiQnp1cVRvVzNuRlRNT0xqUFNVTE9URDhpNXQyUlFjZFJ0cUZYeHYKdnQ0cng1N29zbS9zSnczejczUDFwcCs4ZXhSOUJrcGpHOVdpdGJQcDgzdFd2Y05wcDF5dGoxWEIrQkplbC9BeApDVEpEcGFTVGw2eWVIdGphOE45QnJqeTlCL1JCQjhMWWpJenJoelh0elhtNjhKcnVKKzdQTU5iYVhiOWc5RnZWCllxeGFDdkIzMWxoUnh6cWtjUld4QjBOM3cyNGY0dk4vZTREeFZEWTNva0NZRFlvallsSCtVMWRTWEt3VUt6Mk4KRWxWWUxZRDBNWER3SGVBblBrQmJKK2t2ai9EaWhIY0R1Y0E5eDhQUTFwbEpZMWFhQmtLNE9QVStGZHQ3andLLwowM1YwbHgwN0o3M3Rkb09jdDM1S3dDUUpwUEFUMkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEU0RDQ0FqQ2dBd0lCQWdJSUtKM1JxNk43OUZNd0RRWUpLb1pJaHZjTkFRRUxCUUF3UWpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU3d3S2dZRFZRUURFeU5yZFdKbGJHVjBMV0p2YjNSemRISmhjQzFyZFdKbFkyOXUKWm1sbkxYTnBaMjVsY2pBZUZ3MHlNekE1TWpVeU1UTTBNelphRncwek16QTVNakl5TVRNME16WmFNRUl4RWpBUQpCZ05WQkFzVENXOXdaVzV6YUdsbWRERXNNQ29HQTFVRUF4TWphM1ZpWld4bGRDMWliMjkwYzNSeVlYQXRhM1ZpClpXTnZibVpwWnkxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFgKSDRoc2FFL1V0b0FueVRydXE2L2FZcFc2Z0kvZjdTaHdSaHY3RmtJWGtDYXB0eWJNblREamRBa2svRmdFU21JMwo0VjFCWmQrV3ZScWFSNHl6NEpXWkloMndaWlBFeEZ6M2oxM1Nabm5JSWFvWDBWcGQvYWE5bEMrUmYrSjNrdytCCkZPUWh1ckhyai9Iak9DT0RlZFdUS1RmOTRHSCt5eHdOUXFhMUJCSkZ6UGZwcTh2dndDN0hVN1JvaXF1aHJKR2cKUFlXZGJaazloTy9UalJOMUJOSlZpRVVZOHhFc1B1OEFVR2FBVTZJOWVaZmxoYkt0ZzUwVnBPR0dJQVBmdFBBOApsR2hKbkIxaEhteTZ0MlpRRGFPbkFvdUl2RzgzeFRDRG5jcFpwbkNzelhJeTJhL2tBVUVRS1ZhQ3pIeXVSbEdDCk5ZSVJESFpBK3VycmxGQ0pFbzBkQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUIKQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUdEpOVGNyTTB1U1g4eVgzSXp6ZCtUTytIRjJUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBRkNmYUZHM3pRQ0tRRE9lZmlFUkhjSCs2bDFXSTZ3RXViM0QxVExEK3dUMmF3eEZWCjBvL2ZTRUF6R2xCOWJCK0ZmSklobmwvNlZQMGp4bTUvWmtiYmdxVDRaelpDU3RuYWlpNE0xSjBkNGE2Vml0VXYKVmFuRzZ5MkN3UzZ4M0NKV2VQcmdUYTNFM1l6TGVjZlFHcXBZV1VLdDBOWlBSSzVaV1ljUG16MDQwQTZsK1dpVQovVTJxc2kvT0EvRk5pQjg0alc5TnVaQklONnRJRHJXS1hja0QzcUZNWjQ3bHZ1SnNidm9qdlgzY21PMFdiZyt5ClZHNEx6NEx0cXMyMEZrS2M4bzNXZXZnMmtCQWNkcHYrSG44TWdsaVhwRmVQeTdyak9xQWVISHk1M3ZWVE9sU3QKVERDcHlmeHNjb0V0UmcxSG91ME1NcnFJWGNoZU0yN1R6OTNKRGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeAPIServerExternalLBServerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURsekNDQW4rZ0F3SUJBZ0lJTStIdlNaWHNDb1V3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd09USTFNakV6TkRNMldoY05Nak13T1RJMk1qRXpORE00V2pBMk1SUXdFZ1lEVlFRS0V3dHJkV0psCkxXMWhjM1JsY2pFZU1Cd0dBMVVFQXhNVmMzbHpkR1Z0T210MVltVXRZWEJwYzJWeWRtVnlNSUlCSWpBTkJna3EKaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUExa1dIelIvcC9tWWNKV3J3bWN2K1Z6YWJrS3p6M1FkQgpDQlY5MVc2OHJzYituUi9yMEwrMXVzR0g2RU5aWmgwYTRZdVRUZjdGWXlvV0xSc3VEVkt4ZTFHUGxYMUdwL3M0CmFVMjkvYlNqNGlCWVh6bnY3TWdINFh4L3I3L3E4SDdDYmd4MkVISG04ZmY1RFJ5QlhNb1llc09GMEE4cW16N08KUStjUFlqcHVhSmFxWWdsL2ZmekpOdVNzdmwwM0RvY05IK0ZtM2VnUkx0OTc4R3YrV3hYYnpGTE95MzlwWVRxaAprV3cxdG13Y1d1akRKbGZGRDNKTWx5K2ZYMG14bVA1SDlMaE1lZitZanRENy9obzBDcmxJeElvV3JjMnNvcWR5CldsUEN1aTdSaDI0T2JBWlMzaU9rZndSbzhVa0ZvdHJ5RHU4UWd6d3Q3bG96U3ZrTFBESHp6UUlEQVFBQm80R24KTUlHa01BNEdBMVVkRHdFQi93UUVBd0lGb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFUQU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdRV0JCUkIxMVU0Zy9KQlNUbi9aRnJmakttdjdJNnhNREFmQmdOVkhTTUVHREFXCmdCVFdDNHJWSDFZRzh4S2lVQVh1ZlRDbjRacFVEakF2QmdOVkhSRUVLREFtZ2lSaGNHa3VaV1JtTFdSbGJXOHUKYzJGdVpHSnZlREU0T0RBdWIzQmxiblJzWXk1amIyMHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQ2h5eXFKeApPekQrM010Y1dXNXA2WHZVallramlDcjJuNzVMZnBNckUrSk1FelpRbWJ4dEw4OVFvL28zbjJqajlOclRuNU1hCktlZEFHTmZkRExrdWR4QVVSbk5aVTZzeTZacGpLSytIVkRsTDQvcnZrVDFjTHFKbGp1OUhsY2t6K2JVN0IrWm4KSVdHR3orajZTbllFbHNlZ1VVaWd4ZUdqOE9wSnd0UHJ4eFNnekEvOUJwV1BTK3NMVDZoeVFFd3M0dkEranFyawp0TDlZbi9ZK3R4RWhIb3lSZUNzdENWWVd6RkxxQWtBVDhDWDhqYnIrL2ZhN1ZFLzNRSExKMmplTXBDY1diZ3lNCnMzbTRlQ3JQdVcwT2ZZa1VSMkpZYk9OYkdIeWhVOWEwa3gvMHM5WFdKRVJiUU9zcE1YL2praDdNSU1YTGtMMkcKMG5vY2Rjc25ONGljb1M0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRE1qQ0NBaHFnQXdJQkFnSUlNUXZUTFlObGViQXdEUVlKS29aSWh2Y05BUUVMQlFBd056RVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNFd0h3WURWUVFERXhocmRXSmxMV0Z3YVhObGNuWmxjaTFzWWkxemFXZHVaWEl3CkhoY05Nak13T1RJMU1qRXpORE0yV2hjTk16TXdPVEl5TWpFek5ETTJXakEzTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhJVEFmQmdOVkJBTVRHR3QxWW1VdFlYQnBjMlZ5ZG1WeUxXeGlMWE5wWjI1bGNqQ0NBU0l3RFFZSgpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFLYUF1TnphWThWY2EyQ0huTThudmh3L0V6UWRtcVJ4CkszWGkrekxSYkplSzFmSjQ1cWw5dlV5UGMzQy9OOVdUZjRNSGlYZjJXWVpMQ29mYVRrSmViSzVJYWs3akFvci8KWmpiOUc2dkN5U21sOTMybVY5YmdBTlRJVzdjNU5HYnRDd0srNlh5bFB2eU92am4zRFRYZXNPMXZBNFUva3pXTwpoNzdOSnVTZHJGbWVOT2dSc2ZZV0p4QzBHL2x6aytDNzhmYUJrMkgwN3dwajhZZlNGdGRnVEdWTTRUVUhsTTFrCldCQlNoN1Vjbi9MOUNmYTFOeUEzYldaNkZNOXlhT2lrZ2Z1YTUyUUlKNnErNnRFWTFVbnNad1lSakRKdEFaWkYKUEk2dDhXK0J2VmNjcVlPKzZkY3llY3pqYllrdGlwR3BEMUVmU2dHRzhzVjJXNDdRWkNST0J4a0NBd0VBQWFOQwpNRUF3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTllMCml0VWZWZ2J6RXFKUUJlNTlNS2ZobWxRT01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQkFaZ3VqbVlETVZtTkkKMk9uNkY0enpVQzc4bWU0WkJDcnJ3eVJZdkZGT0pPN2V3NjA0UFBDWVIvM09KWVpkd2srdjVsSjNPQUg5ajRragpXbnlMY2lWR2pobzA2M3JjbVhXb0lTUkh6bVp5V0ppZXNtYWdHVzdjRTlkYWU2cEdqZHQ3QUFNZkFhU0Vsa3VGCkhHVnBBSlZ4cTlvK2ZwT2Z3RWozalFJTFhzL01YTVBTcUwrdnFucjdKRkpQYUIzWm1ITFoxcFhQaFA0aTJzZWwKRFJGNlVQTEZxWThaSWhmVXFRcCtrbCtwcTN0TEQ2RDVLbmRPMFJjcSszaFF4YVB6TSs5eTBJQjlpZkpQemtTcQpUN05ZeCsvVmlFRE1ER2RuOHJGYmxVdE50Z05rV28vY041dnVNVER0NXFFa0tnTjlyclFYY09QbE1xc3Y4c0VFCll5QmpXc1JICi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMWtXSHpSL3AvbVljSldyd21jditWemFia0t6ejNRZEJDQlY5MVc2OHJzYituUi9yCjBMKzF1c0dINkVOWlpoMGE0WXVUVGY3Rll5b1dMUnN1RFZLeGUxR1BsWDFHcC9zNGFVMjkvYlNqNGlCWVh6bnYKN01nSDRYeC9yNy9xOEg3Q2JneDJFSEhtOGZmNURSeUJYTW9ZZXNPRjBBOHFtejdPUStjUFlqcHVhSmFxWWdsLwpmZnpKTnVTc3ZsMDNEb2NOSCtGbTNlZ1JMdDk3OEd2K1d4WGJ6RkxPeTM5cFlUcWhrV3cxdG13Y1d1akRKbGZGCkQzSk1seStmWDBteG1QNUg5TGhNZWYrWWp0RDcvaG8wQ3JsSXhJb1dyYzJzb3FkeVdsUEN1aTdSaDI0T2JBWlMKM2lPa2Z3Um84VWtGb3RyeUR1OFFnend0N2xvelN2a0xQREh6elFJREFRQUJBb0lCQVFEQXBiVUtaUll4eDBhcApFYlFPNHd6akJ0THBTY2JidzhqaFpzbERHeFFEcENDSnpvaHJuK0haYm1VdUcxZUdhc2FmWUtscEo1WDZxWDFVCndxb3VDbHBPUUs5eXZUYklreU5OOGpyT254bjFsaFUrVU0zNU9vTnpaVWM4RWJZKzBna25mb2FzRkd5S3d1T2wKdVNwSjdkNENpa2FHSVF5eWxjNUgyTGZKSGpYa1MyTmZtTnNuQS9qVUV0VmNyL0R0SlVTNWU1Qk9UMG9IQzNZQwpLY1RoRjVzOVg3TkVRQThKQytpNzVKcmdYOWE4QUg5VWRTbkk1dnZzbXBJQ2FMRU9NMkRQUTZrSGhxV3o4akxYCkt6N2t2TS9OV1J2ZllIN0MxN3R0RWVnUWVBM2dKcWo3Uy9oelY5MXZHb3NCckU4K1YrQlNXQVNad0JNS2tqcmcKckJwZlN6ZVZBb0dCQU5iYkVGM3hlVHMya21EWVBxSlkzYmNxYkZFS1F4TGs0eDY4Kzh4dmg3RWtwbmRpalhXRwpCelBlYW1lVzBSM3l3QW85enM4ZUd6N01WTVU0WGxjR2o4OHRyRFc2TEo4VVVSRzBYT0FkbEhkaEhUZWRUcTI3CmV5bDNVODUrUzB5QkZLek5SeTNSM3EzbU54Q2VtQko5aS9YNTFNcVI0Q0FDSDV6eG1aeGhVL0pyQW9HQkFQOU4KMU0rVEUvOXA5Rm1qaHhOcGtHT3I3NWFJaGRxTmd6c0Y3dTdGRUY2K1BEbVNNam5qSTRsbTBEcTFuNHJLd0ZQWQorWU1panFxTGdOdlRKc0dYeHlWbnVsTlg1K0FyRjhaWDE0alY2Z3VpN25RNk1LdHg4cUFxMVRjUTdJaUZkNDhICjFkaThzUHcvMll4MU9ibGpzV0VuemcwRktmYzlxZktQZWhIbElIQ25Bb0dBWGo5QjhyT1dCazl0N21WdE5ESGYKTUJXLzVkeW1oNGMzeWFnRW5DemdUT2hTelZQQjBhZTFTUjlyZFgxR3hlaFNMU3ZucUJzQXdJOUpNQ29GMkE3Ywp6bml1YmZMNDE5OUZvSXFKb3hYV3BuZEhKYm92WlM0MFhJQW5seEQzWHR2UWdleWFLSk5ESnUweGdtelBNRzA2CkUvQS9VNHloeitpZWpXMjlnRWVCVjNrQ2dZQTV4M09TUnNjUDF2cm1Eb3hUYUdDMUxnUmJIU3F0KzdqbmNzQlEKYVdqN0NESzVGTTBwTEs2dU9nYUdRdlNJaExwaVA0aTRsT21VejEycVltOHpBUmFnOElqS3MrcFdZV3BRQ1RGTwpWcHRSWnQ1d2ozclVVa1dHMmlyRys1Mk1pQ2cyeHA4dkhnVXdFWU02dG8wSjEvWWM5dFU3UFIveVJKSmh3dmJ0CmRkMlJvUUtCZ1FDVW1FcXAxTVpSVXlKdDNHM1IyZ0YrMzVMck1xMldTRTlIRDhwSi83QVRqN0dETE93b2xUdWYKbWlUNTF3Q1pGSVB6T2NNYk1YVVFDNnVvd3VFcmo3VU0xT21rWVJEMGV1OG96Znpwc0ZTbU9KQ1JVNXJIQzFnYQpzVDZ1RWZaNi9UNVJlaU9wSmFZN3NDNy9wWXN3NC8rVm5OZnFqSldvemljWVdMcWNVdlpKMGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-lb-server.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMWtXSHpSL3AvbVljSldyd21jditWemFia0t6ejNRZEJDQlY5MVc2OHJzYituUi9yCjBMKzF1c0dINkVOWlpoMGE0WXVUVGY3Rll5b1dMUnN1RFZLeGUxR1BsWDFHcC9zNGFVMjkvYlNqNGlCWVh6bnYKN01nSDRYeC9yNy9xOEg3Q2JneDJFSEhtOGZmNURSeUJYTW9ZZXNPRjBBOHFtejdPUStjUFlqcHVhSmFxWWdsLwpmZnpKTnVTc3ZsMDNEb2NOSCtGbTNlZ1JMdDk3OEd2K1d4WGJ6RkxPeTM5cFlUcWhrV3cxdG13Y1d1akRKbGZGCkQzSk1seStmWDBteG1QNUg5TGhNZWYrWWp0RDcvaG8wQ3JsSXhJb1dyYzJzb3FkeVdsUEN1aTdSaDI0T2JBWlMKM2lPa2Z3Um84VWtGb3RyeUR1OFFnend0N2xvelN2a0xQREh6elFJREFRQUJBb0lCQVFEQXBiVUtaUll4eDBhcApFYlFPNHd6akJ0THBTY2JidzhqaFpzbERHeFFEcENDSnpvaHJuK0haYm1VdUcxZUdhc2FmWUtscEo1WDZxWDFVCndxb3VDbHBPUUs5eXZUYklreU5OOGpyT254bjFsaFUrVU0zNU9vTnpaVWM4RWJZKzBna25mb2FzRkd5S3d1T2wKdVNwSjdkNENpa2FHSVF5eWxjNUgyTGZKSGpYa1MyTmZtTnNuQS9qVUV0VmNyL0R0SlVTNWU1Qk9UMG9IQzNZQwpLY1RoRjVzOVg3TkVRQThKQytpNzVKcmdYOWE4QUg5VWRTbkk1dnZzbXBJQ2FMRU9NMkRQUTZrSGhxV3o4akxYCkt6N2t2TS9OV1J2ZllIN0MxN3R0RWVnUWVBM2dKcWo3Uy9oelY5MXZHb3NCckU4K1YrQlNXQVNad0JNS2tqcmcKckJwZlN6ZVZBb0dCQU5iYkVGM3hlVHMya21EWVBxSlkzYmNxYkZFS1F4TGs0eDY4Kzh4dmg3RWtwbmRpalhXRwpCelBlYW1lVzBSM3l3QW85enM4ZUd6N01WTVU0WGxjR2o4OHRyRFc2TEo4VVVSRzBYT0FkbEhkaEhUZWRUcTI3CmV5bDNVODUrUzB5QkZLek5SeTNSM3EzbU54Q2VtQko5aS9YNTFNcVI0Q0FDSDV6eG1aeGhVL0pyQW9HQkFQOU4KMU0rVEUvOXA5Rm1qaHhOcGtHT3I3NWFJaGRxTmd6c0Y3dTdGRUY2K1BEbVNNam5qSTRsbTBEcTFuNHJLd0ZQWQorWU1panFxTGdOdlRKc0dYeHlWbnVsTlg1K0FyRjhaWDE0alY2Z3VpN25RNk1LdHg4cUFxMVRjUTdJaUZkNDhICjFkaThzUHcvMll4MU9ibGpzV0VuemcwRktmYzlxZktQZWhIbElIQ25Bb0dBWGo5QjhyT1dCazl0N21WdE5ESGYKTUJXLzVkeW1oNGMzeWFnRW5DemdUT2hTelZQQjBhZTFTUjlyZFgxR3hlaFNMU3ZucUJzQXdJOUpNQ29GMkE3Ywp6bml1YmZMNDE5OUZvSXFKb3hYV3BuZEhKYm92WlM0MFhJQW5seEQzWHR2UWdleWFLSk5ESnUweGdtelBNRzA2CkUvQS9VNHloeitpZWpXMjlnRWVCVjNrQ2dZQTV4M09TUnNjUDF2cm1Eb3hUYUdDMUxnUmJIU3F0KzdqbmNzQlEKYVdqN0NESzVGTTBwTEs2dU9nYUdRdlNJaExwaVA0aTRsT21VejEycVltOHpBUmFnOElqS3MrcFdZV3BRQ1RGTwpWcHRSWnQ1d2ozclVVa1dHMmlyRys1Mk1pQ2cyeHA4dkhnVXdFWU02dG8wSjEvWWM5dFU3UFIveVJKSmh3dmJ0CmRkMlJvUUtCZ1FDVW1FcXAxTVpSVXlKdDNHM1IyZ0YrMzVMck1xMldTRTlIRDhwSi83QVRqN0dETE93b2xUdWYKbWlUNTF3Q1pGSVB6T2NNYk1YVVFDNnVvd3VFcmo3VU0xT21rWVJEMGV1OG96Znpwc0ZTbU9KQ1JVNXJIQzFnYQpzVDZ1RWZaNi9UNVJlaU9wSmFZN3NDNy9wWXN3NC8rVm5OZnFqSldvemljWVdMcWNVdlpKMGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/kube-apiserver-lb-server.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURsekNDQW4rZ0F3SUJBZ0lJTStIdlNaWHNDb1V3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd09USTFNakV6TkRNMldoY05Nak13T1RJMk1qRXpORE00V2pBMk1SUXdFZ1lEVlFRS0V3dHJkV0psCkxXMWhjM1JsY2pFZU1Cd0dBMVVFQXhNVmMzbHpkR1Z0T210MVltVXRZWEJwYzJWeWRtVnlNSUlCSWpBTkJna3EKaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUExa1dIelIvcC9tWWNKV3J3bWN2K1Z6YWJrS3p6M1FkQgpDQlY5MVc2OHJzYituUi9yMEwrMXVzR0g2RU5aWmgwYTRZdVRUZjdGWXlvV0xSc3VEVkt4ZTFHUGxYMUdwL3M0CmFVMjkvYlNqNGlCWVh6bnY3TWdINFh4L3I3L3E4SDdDYmd4MkVISG04ZmY1RFJ5QlhNb1llc09GMEE4cW16N08KUStjUFlqcHVhSmFxWWdsL2ZmekpOdVNzdmwwM0RvY05IK0ZtM2VnUkx0OTc4R3YrV3hYYnpGTE95MzlwWVRxaAprV3cxdG13Y1d1akRKbGZGRDNKTWx5K2ZYMG14bVA1SDlMaE1lZitZanRENy9obzBDcmxJeElvV3JjMnNvcWR5CldsUEN1aTdSaDI0T2JBWlMzaU9rZndSbzhVa0ZvdHJ5RHU4UWd6d3Q3bG96U3ZrTFBESHp6UUlEQVFBQm80R24KTUlHa01BNEdBMVVkRHdFQi93UUVBd0lGb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFUQU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdRV0JCUkIxMVU0Zy9KQlNUbi9aRnJmakttdjdJNnhNREFmQmdOVkhTTUVHREFXCmdCVFdDNHJWSDFZRzh4S2lVQVh1ZlRDbjRacFVEakF2QmdOVkhSRUVLREFtZ2lSaGNHa3VaV1JtTFdSbGJXOHUKYzJGdVpHSnZlREU0T0RBdWIzQmxiblJzWXk1amIyMHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQ2h5eXFKeApPekQrM010Y1dXNXA2WHZVallramlDcjJuNzVMZnBNckUrSk1FelpRbWJ4dEw4OVFvL28zbjJqajlOclRuNU1hCktlZEFHTmZkRExrdWR4QVVSbk5aVTZzeTZacGpLSytIVkRsTDQvcnZrVDFjTHFKbGp1OUhsY2t6K2JVN0IrWm4KSVdHR3orajZTbllFbHNlZ1VVaWd4ZUdqOE9wSnd0UHJ4eFNnekEvOUJwV1BTK3NMVDZoeVFFd3M0dkEranFyawp0TDlZbi9ZK3R4RWhIb3lSZUNzdENWWVd6RkxxQWtBVDhDWDhqYnIrL2ZhN1ZFLzNRSExKMmplTXBDY1diZ3lNCnMzbTRlQ3JQdVcwT2ZZa1VSMkpZYk9OYkdIeWhVOWEwa3gvMHM5WFdKRVJiUU9zcE1YL2praDdNSU1YTGtMMkcKMG5vY2Rjc25ONGljb1M0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRE1qQ0NBaHFnQXdJQkFnSUlNUXZUTFlObGViQXdEUVlKS29aSWh2Y05BUUVMQlFBd056RVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNFd0h3WURWUVFERXhocmRXSmxMV0Z3YVhObGNuWmxjaTFzWWkxemFXZHVaWEl3CkhoY05Nak13T1RJMU1qRXpORE0yV2hjTk16TXdPVEl5TWpFek5ETTJXakEzTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhJVEFmQmdOVkJBTVRHR3QxWW1VdFlYQnBjMlZ5ZG1WeUxXeGlMWE5wWjI1bGNqQ0NBU0l3RFFZSgpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFLYUF1TnphWThWY2EyQ0huTThudmh3L0V6UWRtcVJ4CkszWGkrekxSYkplSzFmSjQ1cWw5dlV5UGMzQy9OOVdUZjRNSGlYZjJXWVpMQ29mYVRrSmViSzVJYWs3akFvci8KWmpiOUc2dkN5U21sOTMybVY5YmdBTlRJVzdjNU5HYnRDd0srNlh5bFB2eU92am4zRFRYZXNPMXZBNFUva3pXTwpoNzdOSnVTZHJGbWVOT2dSc2ZZV0p4QzBHL2x6aytDNzhmYUJrMkgwN3dwajhZZlNGdGRnVEdWTTRUVUhsTTFrCldCQlNoN1Vjbi9MOUNmYTFOeUEzYldaNkZNOXlhT2lrZ2Z1YTUyUUlKNnErNnRFWTFVbnNad1lSakRKdEFaWkYKUEk2dDhXK0J2VmNjcVlPKzZkY3llY3pqYllrdGlwR3BEMUVmU2dHRzhzVjJXNDdRWkNST0J4a0NBd0VBQWFOQwpNRUF3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTllMCml0VWZWZ2J6RXFKUUJlNTlNS2ZobWxRT01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQkFaZ3VqbVlETVZtTkkKMk9uNkY0enpVQzc4bWU0WkJDcnJ3eVJZdkZGT0pPN2V3NjA0UFBDWVIvM09KWVpkd2srdjVsSjNPQUg5ajRragpXbnlMY2lWR2pobzA2M3JjbVhXb0lTUkh6bVp5V0ppZXNtYWdHVzdjRTlkYWU2cEdqZHQ3QUFNZkFhU0Vsa3VGCkhHVnBBSlZ4cTlvK2ZwT2Z3RWozalFJTFhzL01YTVBTcUwrdnFucjdKRkpQYUIzWm1ITFoxcFhQaFA0aTJzZWwKRFJGNlVQTEZxWThaSWhmVXFRcCtrbCtwcTN0TEQ2RDVLbmRPMFJjcSszaFF4YVB6TSs5eTBJQjlpZkpQemtTcQpUN05ZeCsvVmlFRE1ER2RuOHJGYmxVdE50Z05rV28vY041dnVNVER0NXFFa0tnTjlyclFYY09QbE1xc3Y4c0VFCll5QmpXc1JICi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeAPIServerInternalLBServerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lJZTBWZGhBd2Nsa0V3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd09USTFNakV6TkRNMldoY05Nak13T1RJMk1qRXpORE01V2pBMk1SUXdFZ1lEVlFRS0V3dHJkV0psCkxXMWhjM1JsY2pFZU1Cd0dBMVVFQXhNVmMzbHpkR1Z0T210MVltVXRZWEJwYzJWeWRtVnlNSUlCSWpBTkJna3EKaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFxc0orTmJOdmVyczRJUE00RSs3RWdOdHJ4REJ3TG1GeQplT3d3R1RKSGZhbnIrUVhZZ0k2WjA3WURiQlg4dWs4VXJBTkRWZlVaMEZ5QW5zQ1RUbXdxSkQzZHNWcU84SitsCno0ZCs3S0dGSEpvSGYyV1cybEhBMlpWZGU5azV3N1VTTjlMUnJkWllVZ1AydUd6aVNtdGJzUVNNdGFRUXBCYmUKVVI5TVMyRXZGMjNXMi9QMVZGcHp4WExDaDB2emdoSzNjT1FOK0YzNzFYcUlxeFpYdTE4U1YrWFRzUjJPWnlmYgpCbmNtRjBRUktKeE9xZGpTVDF4TXI1Rnl5QXBmUHRTemUyVThUK3poS3FMZ1NRVDNrdXg2TVQrUHRkbFdhbG5DCmMxN2pqdEJISE5xODZxTzZXaE42TVBtaWtySXZtcjFMb3VDd3NSS1RsaTljMzY1NmxIZ1U5d0lEQVFBQm80R3IKTUlHb01BNEdBMVVkRHdFQi93UUVBd0lGb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFUQU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdRV0JCVGZLd0NsTVczRjkyNUlXREZybnB3azVrVFR2VEFmQmdOVkhTTUVHREFXCmdCVFdDNHJWSDFZRzh4S2lVQVh1ZlRDbjRacFVEakF6QmdOVkhSRUVMREFxZ2loaGNHa3RhVzUwTG1Wa1ppMWsKWlcxdkxuTmhibVJpYjNneE9EZ3dMbTl3Wlc1MGJHTXVZMjl0TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBNwpPTUJ6NTN0VlJTbFFMRDdPd2lXTXBLQXR2Mm9yN0NlTDFQQWFmVTUzNnNTNVBFd3JYWlBkRXIwQjlVemc5dGRxCld0R2lQTzh6T0YwRXE4RXhBelZGY3Q0SWkyQVFqMVkvbHhtOHg2RDdaaHYzWDJiL1NoNVZYWkZlYVl0UHErck4KZXAzbUdYS0JGNTFlcW4rU2t6STFxUkswVVpuc3Rsa2gvUlNFdGJoWHRNanRQcjZhMVkvRjd4UkpSUTF1YTZ3VQpYWWxISDNwSTFZMzFEelN5S0lubFMrWlVoK0JGZTg0bmlSaGMvK1JDaVUxRjhQdGp5Mlkxb1UrNTFNdXdUYUhzCjhyZDltUy9Jc21QYllIblBiOTRrWlY0MXRUTGsranJuV0M5c2RaTzBwckF4QnhRTWRFa3c2R1ZoYWR3R29DeW8KUGFvRmprSEUvVUdOUFpSK3psaTUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJTVF2VExZTmxlYkF3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd09USTFNakV6TkRNMldoY05Nek13T1RJeU1qRXpORE0yV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS2FBdU56YVk4VmNhMkNIbk04bnZody9FelFkbXFSeApLM1hpK3pMUmJKZUsxZko0NXFsOXZVeVBjM0MvTjlXVGY0TUhpWGYyV1laTENvZmFUa0plYks1SWFrN2pBb3IvClpqYjlHNnZDeVNtbDkzMm1WOWJnQU5USVc3YzVOR2J0Q3dLKzZYeWxQdnlPdmpuM0RUWGVzTzF2QTRVL2t6V08KaDc3Tkp1U2RyRm1lTk9nUnNmWVdKeEMwRy9semsrQzc4ZmFCazJIMDd3cGo4WWZTRnRkZ1RHVk00VFVIbE0xawpXQkJTaDdVY24vTDlDZmExTnlBM2JXWjZGTTl5YU9pa2dmdWE1MlFJSjZxKzZ0RVkxVW5zWndZUmpESnRBWlpGClBJNnQ4VytCdlZjY3FZTys2ZGN5ZWN6amJZa3RpcEdwRDFFZlNnR0c4c1YyVzQ3UVpDUk9CeGtDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk5ZTAppdFVmVmdiekVxSlFCZTU5TUtmaG1sUU9NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJBWmd1am1ZRE1WbU5JCjJPbjZGNHp6VUM3OG1lNFpCQ3Jyd3lSWXZGRk9KTzdldzYwNFBQQ1lSLzNPSllaZHdrK3Y1bEozT0FIOWo0a2oKV255TGNpVkdqaG8wNjNyY21YV29JU1JIem1aeVdKaWVzbWFnR1c3Y0U5ZGFlNnBHamR0N0FBTWZBYVNFbGt1RgpIR1ZwQUpWeHE5bytmcE9md0VqM2pRSUxYcy9NWE1QU3FMK3ZxbnI3SkZKUGFCM1ptSExaMXBYUGhQNGkyc2VsCkRSRjZVUExGcVk4WkloZlVxUXAra2wrcHEzdExENkQ1S25kTzBSY3ErM2hReGFQek0rOXkwSUI5aWZKUHprU3EKVDdOWXgrL1ZpRURNREdkbjhyRmJsVXROdGdOa1dvL2NONXZ1TVREdDVxRWtLZ045cnJRWGNPUGxNcXN2OHNFRQpZeUJqV3NSSAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcXNKK05iTnZlcnM0SVBNNEUrN0VnTnRyeERCd0xtRnllT3d3R1RKSGZhbnIrUVhZCmdJNlowN1lEYkJYOHVrOFVyQU5EVmZVWjBGeUFuc0NUVG13cUpEM2RzVnFPOEorbHo0ZCs3S0dGSEpvSGYyV1cKMmxIQTJaVmRlOWs1dzdVU045TFJyZFpZVWdQMnVHemlTbXRic1FTTXRhUVFwQmJlVVI5TVMyRXZGMjNXMi9QMQpWRnB6eFhMQ2gwdnpnaEszY09RTitGMzcxWHFJcXhaWHUxOFNWK1hUc1IyT1p5ZmJCbmNtRjBRUktKeE9xZGpTClQxeE1yNUZ5eUFwZlB0U3plMlU4VCt6aEtxTGdTUVQza3V4Nk1UK1B0ZGxXYWxuQ2MxN2pqdEJISE5xODZxTzYKV2hONk1QbWlrckl2bXIxTG91Q3dzUktUbGk5YzM2NTZsSGdVOXdJREFRQUJBb0lCQUZqbURwellnTll0ZCtnMwpsMTlSTS80OXZab1MrYVE3MlVPNCtzVnpWcUxHZnZKVEo4YXQ5c213ZlpHYzFNa04rSjRneU1LTWF0YitBWHdrCmw4d0JKZU5lVGZkU1JRNWlud2t1NmxZNU5McVNPZ3NLRVlJeGc2d0RSZnIvT1VKNUZ6WDJ6SENySWFuNUpFNFoKYWFvQ3dHYWxEcmhWNU0vNGs5ODU0eGR2VGZ2c3VsdVlXSVpYNmZiNnFQLzN1ZjZQSDQ4NG1LMHZFV1hpR0tQUgpjdXYyQXp1SDRBdUVlOEFkVVNpYTEyUDFYQ0k4eHFsTjhjZXRKK2JaOGdpNWdXOTIrVXNCVkMrcHovZDgzeWRQCmFGNEtESGV4TEUrYWhaQUI5b3dFZCtudVNZWWJrUFJ0L2llTGxPR3dNNmI1L1Q3OGQ2cFVZZHBqY2lobVdQekUKYXFuT05BRUNnWUVBeXFTRlVNTk42cDVRRVdRSjE4YWpYenZSUWl6RkVZQ0ZLbGd5cUhtdjBRSWxtdTlBRnA0YwoxZkxFa3lLMnM1aEhJVytjQmpSMGJQSFZhVXpoNXppeElPb01oVHlrSllUeG5vN0k5TVpReFZlU1RMVlQxdStrCmdCN1M0aWV4WXYvaXhyeElWUzlScXV4dDlJZ2FXTXp5WWFvWWZ3VXRXOFNsZloycFYzZWNCdmNDZ1lFQTE3aloKU01Lb0VQWHdyd0NMRDg2NWd5Y2I0Q3NDWWY0VFprN0t3T3A1MktsMGlIbXVTeWpibHlKRXg4MHRjN2RUeUNibAp0dy9GaFMyVnkxbVhxaEg1MGI2VUVFbXdnUnpuVjVjZGp0MWQvVDRkM25Za1lpa1pqcHVCQ3p5SUFiMTVydUxjClZ3YnNpMXk2UjRSWmRNcFg1SzBWRmI4WC9ONE91anlLTEJ0NjRnRUNnWUFqWjE4TFh6UHJ1OEVOYU1iM2RmTHgKSG9oTzRYZUV1VW1Ldm1JTFlVZEFZdm1pK2czZVpiMXYrN3d3WUs0KzdtbnZBNHJrNHFFOHIzdXpyQVVEMnJuSApvRnlUb3FhakQza1BWSzd6WlBxVG45c2xuOENJR3RKSXVCbnIvVGRXcnBJMldvcmdweVhEa1E4YzIvS09kVEFiCnRCWVhpeFlEcEhXdFhyQkpZZEpXdlFLQmdDN1luWmNIYnFnQVFMeEFTZktzMmV4NVdieGNtcS9kRlNscWd1MVIKL2hQbStMK0tiU2MxUURxWjNvWGxNTEdvWmpGWkFSbTMreFRveVZiWHBlL3c1MmQ5RTNwV0JsYURpRm1sSDI0ZQo5SUpDTXdwVWJhSkRlcUZWYzdpVTlKUXNLWGlwRzJCcXlJT2JKM2pRYlB6SDFENTh0ODk1S0NScHRKa00vSlNICmd6QUJBb0dBVmRiZHpuZjRlVmJMajJWUmtzVFhINStDU1JJVWx4UFZBVU9KYmNFb0hPQjRBTitiZWJtZXpEeFQKWkd4UGhNMFhuNUM4RnJ3WSs1cVlnSkR0NWw0OUFtQmZEd0ErSWluM3JJdGM5My9uc29mTWVFVUFoV2c1R3J6WApFdGc2U0RJMTJ0TWRXaURXNXIwdHVQRnJSL21WSWV4WVkvVlAzWnlzQi9UMHFhSDlvTzA9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-internal-lb-server.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcXNKK05iTnZlcnM0SVBNNEUrN0VnTnRyeERCd0xtRnllT3d3R1RKSGZhbnIrUVhZCmdJNlowN1lEYkJYOHVrOFVyQU5EVmZVWjBGeUFuc0NUVG13cUpEM2RzVnFPOEorbHo0ZCs3S0dGSEpvSGYyV1cKMmxIQTJaVmRlOWs1dzdVU045TFJyZFpZVWdQMnVHemlTbXRic1FTTXRhUVFwQmJlVVI5TVMyRXZGMjNXMi9QMQpWRnB6eFhMQ2gwdnpnaEszY09RTitGMzcxWHFJcXhaWHUxOFNWK1hUc1IyT1p5ZmJCbmNtRjBRUktKeE9xZGpTClQxeE1yNUZ5eUFwZlB0U3plMlU4VCt6aEtxTGdTUVQza3V4Nk1UK1B0ZGxXYWxuQ2MxN2pqdEJISE5xODZxTzYKV2hONk1QbWlrckl2bXIxTG91Q3dzUktUbGk5YzM2NTZsSGdVOXdJREFRQUJBb0lCQUZqbURwellnTll0ZCtnMwpsMTlSTS80OXZab1MrYVE3MlVPNCtzVnpWcUxHZnZKVEo4YXQ5c213ZlpHYzFNa04rSjRneU1LTWF0YitBWHdrCmw4d0JKZU5lVGZkU1JRNWlud2t1NmxZNU5McVNPZ3NLRVlJeGc2d0RSZnIvT1VKNUZ6WDJ6SENySWFuNUpFNFoKYWFvQ3dHYWxEcmhWNU0vNGs5ODU0eGR2VGZ2c3VsdVlXSVpYNmZiNnFQLzN1ZjZQSDQ4NG1LMHZFV1hpR0tQUgpjdXYyQXp1SDRBdUVlOEFkVVNpYTEyUDFYQ0k4eHFsTjhjZXRKK2JaOGdpNWdXOTIrVXNCVkMrcHovZDgzeWRQCmFGNEtESGV4TEUrYWhaQUI5b3dFZCtudVNZWWJrUFJ0L2llTGxPR3dNNmI1L1Q3OGQ2cFVZZHBqY2lobVdQekUKYXFuT05BRUNnWUVBeXFTRlVNTk42cDVRRVdRSjE4YWpYenZSUWl6RkVZQ0ZLbGd5cUhtdjBRSWxtdTlBRnA0YwoxZkxFa3lLMnM1aEhJVytjQmpSMGJQSFZhVXpoNXppeElPb01oVHlrSllUeG5vN0k5TVpReFZlU1RMVlQxdStrCmdCN1M0aWV4WXYvaXhyeElWUzlScXV4dDlJZ2FXTXp5WWFvWWZ3VXRXOFNsZloycFYzZWNCdmNDZ1lFQTE3aloKU01Lb0VQWHdyd0NMRDg2NWd5Y2I0Q3NDWWY0VFprN0t3T3A1MktsMGlIbXVTeWpibHlKRXg4MHRjN2RUeUNibAp0dy9GaFMyVnkxbVhxaEg1MGI2VUVFbXdnUnpuVjVjZGp0MWQvVDRkM25Za1lpa1pqcHVCQ3p5SUFiMTVydUxjClZ3YnNpMXk2UjRSWmRNcFg1SzBWRmI4WC9ONE91anlLTEJ0NjRnRUNnWUFqWjE4TFh6UHJ1OEVOYU1iM2RmTHgKSG9oTzRYZUV1VW1Ldm1JTFlVZEFZdm1pK2czZVpiMXYrN3d3WUs0KzdtbnZBNHJrNHFFOHIzdXpyQVVEMnJuSApvRnlUb3FhakQza1BWSzd6WlBxVG45c2xuOENJR3RKSXVCbnIvVGRXcnBJMldvcmdweVhEa1E4YzIvS09kVEFiCnRCWVhpeFlEcEhXdFhyQkpZZEpXdlFLQmdDN1luWmNIYnFnQVFMeEFTZktzMmV4NVdieGNtcS9kRlNscWd1MVIKL2hQbStMK0tiU2MxUURxWjNvWGxNTEdvWmpGWkFSbTMreFRveVZiWHBlL3c1MmQ5RTNwV0JsYURpRm1sSDI0ZQo5SUpDTXdwVWJhSkRlcUZWYzdpVTlKUXNLWGlwRzJCcXlJT2JKM2pRYlB6SDFENTh0ODk1S0NScHRKa00vSlNICmd6QUJBb0dBVmRiZHpuZjRlVmJMajJWUmtzVFhINStDU1JJVWx4UFZBVU9KYmNFb0hPQjRBTitiZWJtZXpEeFQKWkd4UGhNMFhuNUM4RnJ3WSs1cVlnSkR0NWw0OUFtQmZEd0ErSWluM3JJdGM5My9uc29mTWVFVUFoV2c1R3J6WApFdGc2U0RJMTJ0TWRXaURXNXIwdHVQRnJSL21WSWV4WVkvVlAzWnlzQi9UMHFhSDlvTzA9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/kube-apiserver-internal-lb-server.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lJZTBWZGhBd2Nsa0V3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd09USTFNakV6TkRNMldoY05Nak13T1RJMk1qRXpORE01V2pBMk1SUXdFZ1lEVlFRS0V3dHJkV0psCkxXMWhjM1JsY2pFZU1Cd0dBMVVFQXhNVmMzbHpkR1Z0T210MVltVXRZWEJwYzJWeWRtVnlNSUlCSWpBTkJna3EKaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFxc0orTmJOdmVyczRJUE00RSs3RWdOdHJ4REJ3TG1GeQplT3d3R1RKSGZhbnIrUVhZZ0k2WjA3WURiQlg4dWs4VXJBTkRWZlVaMEZ5QW5zQ1RUbXdxSkQzZHNWcU84SitsCno0ZCs3S0dGSEpvSGYyV1cybEhBMlpWZGU5azV3N1VTTjlMUnJkWllVZ1AydUd6aVNtdGJzUVNNdGFRUXBCYmUKVVI5TVMyRXZGMjNXMi9QMVZGcHp4WExDaDB2emdoSzNjT1FOK0YzNzFYcUlxeFpYdTE4U1YrWFRzUjJPWnlmYgpCbmNtRjBRUktKeE9xZGpTVDF4TXI1Rnl5QXBmUHRTemUyVThUK3poS3FMZ1NRVDNrdXg2TVQrUHRkbFdhbG5DCmMxN2pqdEJISE5xODZxTzZXaE42TVBtaWtySXZtcjFMb3VDd3NSS1RsaTljMzY1NmxIZ1U5d0lEQVFBQm80R3IKTUlHb01BNEdBMVVkRHdFQi93UUVBd0lGb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFUQU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdRV0JCVGZLd0NsTVczRjkyNUlXREZybnB3azVrVFR2VEFmQmdOVkhTTUVHREFXCmdCVFdDNHJWSDFZRzh4S2lVQVh1ZlRDbjRacFVEakF6QmdOVkhSRUVMREFxZ2loaGNHa3RhVzUwTG1Wa1ppMWsKWlcxdkxuTmhibVJpYjNneE9EZ3dMbTl3Wlc1MGJHTXVZMjl0TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBNwpPTUJ6NTN0VlJTbFFMRDdPd2lXTXBLQXR2Mm9yN0NlTDFQQWFmVTUzNnNTNVBFd3JYWlBkRXIwQjlVemc5dGRxCld0R2lQTzh6T0YwRXE4RXhBelZGY3Q0SWkyQVFqMVkvbHhtOHg2RDdaaHYzWDJiL1NoNVZYWkZlYVl0UHErck4KZXAzbUdYS0JGNTFlcW4rU2t6STFxUkswVVpuc3Rsa2gvUlNFdGJoWHRNanRQcjZhMVkvRjd4UkpSUTF1YTZ3VQpYWWxISDNwSTFZMzFEelN5S0lubFMrWlVoK0JGZTg0bmlSaGMvK1JDaVUxRjhQdGp5Mlkxb1UrNTFNdXdUYUhzCjhyZDltUy9Jc21QYllIblBiOTRrWlY0MXRUTGsranJuV0M5c2RaTzBwckF4QnhRTWRFa3c2R1ZoYWR3R29DeW8KUGFvRmprSEUvVUdOUFpSK3psaTUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJTVF2VExZTmxlYkF3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd09USTFNakV6TkRNMldoY05Nek13T1RJeU1qRXpORE0yV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS2FBdU56YVk4VmNhMkNIbk04bnZody9FelFkbXFSeApLM1hpK3pMUmJKZUsxZko0NXFsOXZVeVBjM0MvTjlXVGY0TUhpWGYyV1laTENvZmFUa0plYks1SWFrN2pBb3IvClpqYjlHNnZDeVNtbDkzMm1WOWJnQU5USVc3YzVOR2J0Q3dLKzZYeWxQdnlPdmpuM0RUWGVzTzF2QTRVL2t6V08KaDc3Tkp1U2RyRm1lTk9nUnNmWVdKeEMwRy9semsrQzc4ZmFCazJIMDd3cGo4WWZTRnRkZ1RHVk00VFVIbE0xawpXQkJTaDdVY24vTDlDZmExTnlBM2JXWjZGTTl5YU9pa2dmdWE1MlFJSjZxKzZ0RVkxVW5zWndZUmpESnRBWlpGClBJNnQ4VytCdlZjY3FZTys2ZGN5ZWN6amJZa3RpcEdwRDFFZlNnR0c4c1YyVzQ3UVpDUk9CeGtDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk5ZTAppdFVmVmdiekVxSlFCZTU5TUtmaG1sUU9NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJBWmd1am1ZRE1WbU5JCjJPbjZGNHp6VUM3OG1lNFpCQ3Jyd3lSWXZGRk9KTzdldzYwNFBQQ1lSLzNPSllaZHdrK3Y1bEozT0FIOWo0a2oKV255TGNpVkdqaG8wNjNyY21YV29JU1JIem1aeVdKaWVzbWFnR1c3Y0U5ZGFlNnBHamR0N0FBTWZBYVNFbGt1RgpIR1ZwQUpWeHE5bytmcE9md0VqM2pRSUxYcy9NWE1QU3FMK3ZxbnI3SkZKUGFCM1ptSExaMXBYUGhQNGkyc2VsCkRSRjZVUExGcVk4WkloZlVxUXAra2wrcHEzdExENkQ1S25kTzBSY3ErM2hReGFQek0rOXkwSUI5aWZKUHprU3EKVDdOWXgrL1ZpRURNREdkbjhyRmJsVXROdGdOa1dvL2NONXZ1TVREdDVxRWtLZ045cnJRWGNPUGxNcXN2OHNFRQpZeUJqV3NSSAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeAPIServerLBCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJTVF2VExZTmxlYkF3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd09USTFNakV6TkRNMldoY05Nek13T1RJeU1qRXpORE0yV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS2FBdU56YVk4VmNhMkNIbk04bnZody9FelFkbXFSeApLM1hpK3pMUmJKZUsxZko0NXFsOXZVeVBjM0MvTjlXVGY0TUhpWGYyV1laTENvZmFUa0plYks1SWFrN2pBb3IvClpqYjlHNnZDeVNtbDkzMm1WOWJnQU5USVc3YzVOR2J0Q3dLKzZYeWxQdnlPdmpuM0RUWGVzTzF2QTRVL2t6V08KaDc3Tkp1U2RyRm1lTk9nUnNmWVdKeEMwRy9semsrQzc4ZmFCazJIMDd3cGo4WWZTRnRkZ1RHVk00VFVIbE0xawpXQkJTaDdVY24vTDlDZmExTnlBM2JXWjZGTTl5YU9pa2dmdWE1MlFJSjZxKzZ0RVkxVW5zWndZUmpESnRBWlpGClBJNnQ4VytCdlZjY3FZTys2ZGN5ZWN6amJZa3RpcEdwRDFFZlNnR0c4c1YyVzQ3UVpDUk9CeGtDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk5ZTAppdFVmVmdiekVxSlFCZTU5TUtmaG1sUU9NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJBWmd1am1ZRE1WbU5JCjJPbjZGNHp6VUM3OG1lNFpCQ3Jyd3lSWXZGRk9KTzdldzYwNFBQQ1lSLzNPSllaZHdrK3Y1bEozT0FIOWo0a2oKV255TGNpVkdqaG8wNjNyY21YV29JU1JIem1aeVdKaWVzbWFnR1c3Y0U5ZGFlNnBHamR0N0FBTWZBYVNFbGt1RgpIR1ZwQUpWeHE5bytmcE9md0VqM2pRSUxYcy9NWE1QU3FMK3ZxbnI3SkZKUGFCM1ptSExaMXBYUGhQNGkyc2VsCkRSRjZVUExGcVk4WkloZlVxUXAra2wrcHEzdExENkQ1S25kTzBSY3ErM2hReGFQek0rOXkwSUI5aWZKUHprU3EKVDdOWXgrL1ZpRURNREdkbjhyRmJsVXROdGdOa1dvL2NONXZ1TVREdDVxRWtLZ045cnJRWGNPUGxNcXN2OHNFRQpZeUJqV3NSSAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-lb-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJTVF2VExZTmxlYkF3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd09USTFNakV6TkRNMldoY05Nek13T1RJeU1qRXpORE0yV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS2FBdU56YVk4VmNhMkNIbk04bnZody9FelFkbXFSeApLM1hpK3pMUmJKZUsxZko0NXFsOXZVeVBjM0MvTjlXVGY0TUhpWGYyV1laTENvZmFUa0plYks1SWFrN2pBb3IvClpqYjlHNnZDeVNtbDkzMm1WOWJnQU5USVc3YzVOR2J0Q3dLKzZYeWxQdnlPdmpuM0RUWGVzTzF2QTRVL2t6V08KaDc3Tkp1U2RyRm1lTk9nUnNmWVdKeEMwRy9semsrQzc4ZmFCazJIMDd3cGo4WWZTRnRkZ1RHVk00VFVIbE0xawpXQkJTaDdVY24vTDlDZmExTnlBM2JXWjZGTTl5YU9pa2dmdWE1MlFJSjZxKzZ0RVkxVW5zWndZUmpESnRBWlpGClBJNnQ4VytCdlZjY3FZTys2ZGN5ZWN6amJZa3RpcEdwRDFFZlNnR0c4c1YyVzQ3UVpDUk9CeGtDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk5ZTAppdFVmVmdiekVxSlFCZTU5TUtmaG1sUU9NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJBWmd1am1ZRE1WbU5JCjJPbjZGNHp6VUM3OG1lNFpCQ3Jyd3lSWXZGRk9KTzdldzYwNFBQQ1lSLzNPSllaZHdrK3Y1bEozT0FIOWo0a2oKV255TGNpVkdqaG8wNjNyY21YV29JU1JIem1aeVdKaWVzbWFnR1c3Y0U5ZGFlNnBHamR0N0FBTWZBYVNFbGt1RgpIR1ZwQUpWeHE5bytmcE9md0VqM2pRSUxYcy9NWE1QU3FMK3ZxbnI3SkZKUGFCM1ptSExaMXBYUGhQNGkyc2VsCkRSRjZVUExGcVk4WkloZlVxUXAra2wrcHEzdExENkQ1S25kTzBSY3ErM2hReGFQek0rOXkwSUI5aWZKUHprU3EKVDdOWXgrL1ZpRURNREdkbjhyRmJsVXROdGdOa1dvL2NONXZ1TVREdDVxRWtLZ045cnJRWGNPUGxNcXN2OHNFRQpZeUJqV3NSSAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeAPIServerLBSignerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJTVF2VExZTmxlYkF3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd09USTFNakV6TkRNMldoY05Nek13T1RJeU1qRXpORE0yV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS2FBdU56YVk4VmNhMkNIbk04bnZody9FelFkbXFSeApLM1hpK3pMUmJKZUsxZko0NXFsOXZVeVBjM0MvTjlXVGY0TUhpWGYyV1laTENvZmFUa0plYks1SWFrN2pBb3IvClpqYjlHNnZDeVNtbDkzMm1WOWJnQU5USVc3YzVOR2J0Q3dLKzZYeWxQdnlPdmpuM0RUWGVzTzF2QTRVL2t6V08KaDc3Tkp1U2RyRm1lTk9nUnNmWVdKeEMwRy9semsrQzc4ZmFCazJIMDd3cGo4WWZTRnRkZ1RHVk00VFVIbE0xawpXQkJTaDdVY24vTDlDZmExTnlBM2JXWjZGTTl5YU9pa2dmdWE1MlFJSjZxKzZ0RVkxVW5zWndZUmpESnRBWlpGClBJNnQ4VytCdlZjY3FZTys2ZGN5ZWN6amJZa3RpcEdwRDFFZlNnR0c4c1YyVzQ3UVpDUk9CeGtDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk5ZTAppdFVmVmdiekVxSlFCZTU5TUtmaG1sUU9NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJBWmd1am1ZRE1WbU5JCjJPbjZGNHp6VUM3OG1lNFpCQ3Jyd3lSWXZGRk9KTzdldzYwNFBQQ1lSLzNPSllaZHdrK3Y1bEozT0FIOWo0a2oKV255TGNpVkdqaG8wNjNyY21YV29JU1JIem1aeVdKaWVzbWFnR1c3Y0U5ZGFlNnBHamR0N0FBTWZBYVNFbGt1RgpIR1ZwQUpWeHE5bytmcE9md0VqM2pRSUxYcy9NWE1QU3FMK3ZxbnI3SkZKUGFCM1ptSExaMXBYUGhQNGkyc2VsCkRSRjZVUExGcVk4WkloZlVxUXAra2wrcHEzdExENkQ1S25kTzBSY3ErM2hReGFQek0rOXkwSUI5aWZKUHprU3EKVDdOWXgrL1ZpRURNREdkbjhyRmJsVXROdGdOa1dvL2NONXZ1TVREdDVxRWtLZ045cnJRWGNPUGxNcXN2OHNFRQpZeUJqV3NSSAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcG9DNDNOcGp4VnhyWUllY3p5ZStIRDhUTkIyYXBIRXJkZUw3TXRGc2w0clY4bmptCnFYMjlUSTl6Y0w4MzFaTi9nd2VKZC9aWmhrc0toOXBPUWw1c3JraHFUdU1DaXY5bU52MGJxOExKS2FYM2ZhWlgKMXVBQTFNaGJ0emswWnUwTEFyN3BmS1UrL0k2K09mY05OZDZ3N1c4RGhUK1ROWTZIdnMwbTVKMnNXWjQwNkJHeAo5aFluRUxRYitYT1Q0THZ4OW9HVFlmVHZDbVB4aDlJVzEyQk1aVXpoTlFlVXpXUllFRktIdFJ5Zjh2MEo5clUzCklEZHRabm9VejNKbzZLU0IrNXJuWkFnbnFyN3EwUmpWU2V4bkJoR01NbTBCbGtVOGpxM3hiNEc5Vnh5cGc3N3AKMXpKNXpPTnRpUzJLa2FrUFVSOUtBWWJ5eFhaYmp0QmtKRTRIR1FJREFRQUJBb0lCQVFDQ2VEZGppQlhLSHlOYwozcWMzaEhMcCsxcjI2WU8xKzZBTW5qSXNuZ0l6dFd6MHRWdzV6L2UzdUdqREhuT0gvaTVhNUZzS0Q1WVRMMVl2CkloZFUxbHpmTEl0eENWMkN3YUs4MEJVUXdHK1ZIU0lUNlhiSFAzd25RR0R0Ny90cDg3RS9FNDR1UitaVlRSMHUKbXJKVlZnelo0TFduZ2l1K09kT1E1WHptZzg3NzRVTHRpak9IQ1psYkJVaEd5cWlUSjlSaE9OT1hWbEQ4QjJ2VQpRbjh4c0xUL2xiY1BjTURJK2hoTDhFemxSdVdsTUdmSi9YM1VqYkM2bDBpUm1Sa0l4THFSTU1XZ3lwVHVVM3J2CjdBRDlUa2FTUTQ1U3ptdVR5bUpWV3JMNENqU0RoRVpaS3g0b0JMdkRmeDJoZ0pWeU1JR2V6YkwzeUppeWZWYjgKZ3QrRjlVQkpBb0dCQU1pTXNzR043bElxOTRHZWRoRnZkbHJYZ0Z0MlJKcEFDRHMxMURocFNOM1Z2dXJiK1V3NgpIcS9rZm5NQ2lXd2VBcnVXNldrQ3c0bXJWVThhR3VVRmdXSmdPZ1R6MVRuYXhhbWFEMERpeW41bEpOcnVIUnRFCnVONTcyRldVcnEwcWhiNC9yajVoYlNwYmphNUxNdUI2OTVQdUtHcHdHWDBTZkVJUlR5d3A4OFRQQW9HQkFOU0sKSCtTMHN5RjBQQ1NSd0RvZTlSaEI1MXkxalZXNTFmNitlVWZJUURjOFYxMEEyaDZJZUY0MnB5UlFEV2tJRUZoUAo5UlQyTkFGY1NmUmt2dlg4RitQOGx1REdoS3lwNzU0UENIVmhMeHdQcTd3aDRjZHJvVXM5MUhYczJDcEIwbHhqCmJ2V2tLQ0pZNGxRY2VwVzhha0hWU0sycnRmQjVjeVhwNDdQSUNqK1hBb0dBWXZSUmk0R05zMHR5SHFuaWxnM0sKZDE1WC9ra241bmhyMTFOaktJYUNwcnE5M2tLMkNxK3V6cGxPNzA2MElmM1kyVmpJU01GTlhGT0czMllCR1RvVApNa2hLdUlEYm1CVmpiS0VRbjdLSHVjQU1aRjRUVEk0bkxkZ3IwV1p3bmc4YU9OcFJEb1NpQ2NGczhqQTJwVjduClpEMmlBWXJZZU1jek9xSXh6NWZQcVM4Q2dZRUFxMDNnd3Q5NStaN0wwdFcrejVtZ0Jqc29GU3NualU3SlVoZUgKZlBuRCtFRWtVUXVjd2p0UWVPOG43RGF4ZUZSTmlFQjUwcmxWMVRyalNKM2k1RFNadE9JallXdmdCNks0UlBicwo1RjYrTDZuWnl6cXIxYVhFVFBhNnhZbHQrVEV3TWRMYTNoVy9XMSswbkFLUU14dTNzUFFOTGgxVitVcUtLcWJICkptSTNFR1VDZ1lBWjgzQmJ6ajBOMWY4b3lNekYxbFhNSVIzSzFjVHBNeVdtK1dEcjZTTWpaTGtIbUNMK2VFbUoKaFNDTHFZaWoyRlFFdE0xb2xVQU5MY2JTQzdnZ3lwV3hqbEpPSjBvOFhmN3pqSG9sYXk2WGNDcEFDSlMvNUlHVQpwY2o5eThpK1QvWWQzQ2xBTWVDRWUxNmt4OVFXalpQWmkzV0drNmtId3ZaRDMxQ1MrNVY5RkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-lb-signer.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcG9DNDNOcGp4VnhyWUllY3p5ZStIRDhUTkIyYXBIRXJkZUw3TXRGc2w0clY4bmptCnFYMjlUSTl6Y0w4MzFaTi9nd2VKZC9aWmhrc0toOXBPUWw1c3JraHFUdU1DaXY5bU52MGJxOExKS2FYM2ZhWlgKMXVBQTFNaGJ0emswWnUwTEFyN3BmS1UrL0k2K09mY05OZDZ3N1c4RGhUK1ROWTZIdnMwbTVKMnNXWjQwNkJHeAo5aFluRUxRYitYT1Q0THZ4OW9HVFlmVHZDbVB4aDlJVzEyQk1aVXpoTlFlVXpXUllFRktIdFJ5Zjh2MEo5clUzCklEZHRabm9VejNKbzZLU0IrNXJuWkFnbnFyN3EwUmpWU2V4bkJoR01NbTBCbGtVOGpxM3hiNEc5Vnh5cGc3N3AKMXpKNXpPTnRpUzJLa2FrUFVSOUtBWWJ5eFhaYmp0QmtKRTRIR1FJREFRQUJBb0lCQVFDQ2VEZGppQlhLSHlOYwozcWMzaEhMcCsxcjI2WU8xKzZBTW5qSXNuZ0l6dFd6MHRWdzV6L2UzdUdqREhuT0gvaTVhNUZzS0Q1WVRMMVl2CkloZFUxbHpmTEl0eENWMkN3YUs4MEJVUXdHK1ZIU0lUNlhiSFAzd25RR0R0Ny90cDg3RS9FNDR1UitaVlRSMHUKbXJKVlZnelo0TFduZ2l1K09kT1E1WHptZzg3NzRVTHRpak9IQ1psYkJVaEd5cWlUSjlSaE9OT1hWbEQ4QjJ2VQpRbjh4c0xUL2xiY1BjTURJK2hoTDhFemxSdVdsTUdmSi9YM1VqYkM2bDBpUm1Sa0l4THFSTU1XZ3lwVHVVM3J2CjdBRDlUa2FTUTQ1U3ptdVR5bUpWV3JMNENqU0RoRVpaS3g0b0JMdkRmeDJoZ0pWeU1JR2V6YkwzeUppeWZWYjgKZ3QrRjlVQkpBb0dCQU1pTXNzR043bElxOTRHZWRoRnZkbHJYZ0Z0MlJKcEFDRHMxMURocFNOM1Z2dXJiK1V3NgpIcS9rZm5NQ2lXd2VBcnVXNldrQ3c0bXJWVThhR3VVRmdXSmdPZ1R6MVRuYXhhbWFEMERpeW41bEpOcnVIUnRFCnVONTcyRldVcnEwcWhiNC9yajVoYlNwYmphNUxNdUI2OTVQdUtHcHdHWDBTZkVJUlR5d3A4OFRQQW9HQkFOU0sKSCtTMHN5RjBQQ1NSd0RvZTlSaEI1MXkxalZXNTFmNitlVWZJUURjOFYxMEEyaDZJZUY0MnB5UlFEV2tJRUZoUAo5UlQyTkFGY1NmUmt2dlg4RitQOGx1REdoS3lwNzU0UENIVmhMeHdQcTd3aDRjZHJvVXM5MUhYczJDcEIwbHhqCmJ2V2tLQ0pZNGxRY2VwVzhha0hWU0sycnRmQjVjeVhwNDdQSUNqK1hBb0dBWXZSUmk0R05zMHR5SHFuaWxnM0sKZDE1WC9ra241bmhyMTFOaktJYUNwcnE5M2tLMkNxK3V6cGxPNzA2MElmM1kyVmpJU01GTlhGT0czMllCR1RvVApNa2hLdUlEYm1CVmpiS0VRbjdLSHVjQU1aRjRUVEk0bkxkZ3IwV1p3bmc4YU9OcFJEb1NpQ2NGczhqQTJwVjduClpEMmlBWXJZZU1jek9xSXh6NWZQcVM4Q2dZRUFxMDNnd3Q5NStaN0wwdFcrejVtZ0Jqc29GU3NualU3SlVoZUgKZlBuRCtFRWtVUXVjd2p0UWVPOG43RGF4ZUZSTmlFQjUwcmxWMVRyalNKM2k1RFNadE9JallXdmdCNks0UlBicwo1RjYrTDZuWnl6cXIxYVhFVFBhNnhZbHQrVEV3TWRMYTNoVy9XMSswbkFLUU14dTNzUFFOTGgxVitVcUtLcWJICkptSTNFR1VDZ1lBWjgzQmJ6ajBOMWY4b3lNekYxbFhNSVIzSzFjVHBNeVdtK1dEcjZTTWpaTGtIbUNMK2VFbUoKaFNDTHFZaWoyRlFFdE0xb2xVQU5MY2JTQzdnZ3lwV3hqbEpPSjBvOFhmN3pqSG9sYXk2WGNDcEFDSlMvNUlHVQpwY2o5eThpK1QvWWQzQ2xBTWVDRWUxNmt4OVFXalpQWmkzV0drNmtId3ZaRDMxQ1MrNVY5RkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/kube-apiserver-lb-signer.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJTVF2VExZTmxlYkF3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpNd09USTFNakV6TkRNMldoY05Nek13T1RJeU1qRXpORE0yV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS2FBdU56YVk4VmNhMkNIbk04bnZody9FelFkbXFSeApLM1hpK3pMUmJKZUsxZko0NXFsOXZVeVBjM0MvTjlXVGY0TUhpWGYyV1laTENvZmFUa0plYks1SWFrN2pBb3IvClpqYjlHNnZDeVNtbDkzMm1WOWJnQU5USVc3YzVOR2J0Q3dLKzZYeWxQdnlPdmpuM0RUWGVzTzF2QTRVL2t6V08KaDc3Tkp1U2RyRm1lTk9nUnNmWVdKeEMwRy9semsrQzc4ZmFCazJIMDd3cGo4WWZTRnRkZ1RHVk00VFVIbE0xawpXQkJTaDdVY24vTDlDZmExTnlBM2JXWjZGTTl5YU9pa2dmdWE1MlFJSjZxKzZ0RVkxVW5zWndZUmpESnRBWlpGClBJNnQ4VytCdlZjY3FZTys2ZGN5ZWN6amJZa3RpcEdwRDFFZlNnR0c4c1YyVzQ3UVpDUk9CeGtDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk5ZTAppdFVmVmdiekVxSlFCZTU5TUtmaG1sUU9NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJBWmd1am1ZRE1WbU5JCjJPbjZGNHp6VUM3OG1lNFpCQ3Jyd3lSWXZGRk9KTzdldzYwNFBQQ1lSLzNPSllaZHdrK3Y1bEozT0FIOWo0a2oKV255TGNpVkdqaG8wNjNyY21YV29JU1JIem1aeVdKaWVzbWFnR1c3Y0U5ZGFlNnBHamR0N0FBTWZBYVNFbGt1RgpIR1ZwQUpWeHE5bytmcE9md0VqM2pRSUxYcy9NWE1QU3FMK3ZxbnI3SkZKUGFCM1ptSExaMXBYUGhQNGkyc2VsCkRSRjZVUExGcVk4WkloZlVxUXAra2wrcHEzdExENkQ1S25kTzBSY3ErM2hReGFQek0rOXkwSUI5aWZKUHprU3EKVDdOWXgrL1ZpRURNREdkbjhyRmJsVXROdGdOa1dvL2NONXZ1TVREdDVxRWtLZ045cnJRWGNPUGxNcXN2OHNFRQpZeUJqV3NSSAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeAPIServerLocalhostCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJUlVZVGpXSEFkL1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURreU5USXhNelF6TmxvWERUTXpNRGt5TWpJeE16UXpObG93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZmdWZTYU5EVWIyQgpsSHpxTkxiQXUrTHc4VjNCYkdObTdOSTdWR3M0TTBTajFhUjUwR2JYalFuajBqV2diamV0Q0ZjRUM1VTRNeUU3ClVJVTZTb1RHVm1UZlhpY2NoZjFCM3BWQXF5QXg3YzlGb083TXNYNWpHMFRxUGhZUi93TWFEM0VUNjZJVld0aWcKa2FqNGdIcGVNb0o0WkhMbVZCcFdJNklvb014NVgyYlFrTzBMZXZHd0tQU1doK0FYTVhlU2h2ZUlUY3VUaWg2bgp3WXd3eTUzYW52clRCWjdxMkNablpwQ0NKZjZ2YzVZUWR2UXRCMkNGVjJPcDU0ZFdJc3NYdVA2ZFpQY0dHckNkCnFaUHo4ZU12M01BR0kvQU9DL1dDWklmbHR4WkZGem5nSmR0UmZ0RnZPZ1A5RWNGa014ZnA5ZG1ZZEk0bTRIUXoKcXlqd1IrQ01md0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVd0docUpnZ2NJbVNWZUk0a0FCdnZ6SVcvUXFFd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBS2dFYzk0TVl4TTRXazF1WFlENXhGL0xiS255eTBwWUk1UlBVWm95bk1Lcjl3MHVmYXhIL2dMaGFjdmkKck1NdTV3bXVOcnJDdGdBbUwyOTZhZVFLZ1NTUTRrQlZZOGJJL0dpaXdRQU9Gb3JEcWxTeUZMVXJ1aWhHcm5JdgpoOXozeWpCVEVOWk1LcWNYVGdvWE5TL2xUZzE1NWJTZm43TG92c0FENDN5bk1xUFBMeEwySDNkZVc0bkpjM0YyClArWEhjRzI1MzJzSlBKRW9lUW5hTE1BRlB5WWFNeEFxdk9Rb0cyVW0rcjVoTVJGYXRKcjYzOXpFM04vUjRScm4KdWRDbGl4NWtKYUdSak1rdUFnVGEwRnB0UHV6aUpIQW4rNWlSRHN5SnN5QXFLcmNjQ0lueklZSkVMOG5PY0hIWgpNa2ZVUzYvbVRsMUFVM01MQ2RxWTBBYmJXcHc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-localhost-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJUlVZVGpXSEFkL1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURreU5USXhNelF6TmxvWERUTXpNRGt5TWpJeE16UXpObG93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZmdWZTYU5EVWIyQgpsSHpxTkxiQXUrTHc4VjNCYkdObTdOSTdWR3M0TTBTajFhUjUwR2JYalFuajBqV2diamV0Q0ZjRUM1VTRNeUU3ClVJVTZTb1RHVm1UZlhpY2NoZjFCM3BWQXF5QXg3YzlGb083TXNYNWpHMFRxUGhZUi93TWFEM0VUNjZJVld0aWcKa2FqNGdIcGVNb0o0WkhMbVZCcFdJNklvb014NVgyYlFrTzBMZXZHd0tQU1doK0FYTVhlU2h2ZUlUY3VUaWg2bgp3WXd3eTUzYW52clRCWjdxMkNablpwQ0NKZjZ2YzVZUWR2UXRCMkNGVjJPcDU0ZFdJc3NYdVA2ZFpQY0dHckNkCnFaUHo4ZU12M01BR0kvQU9DL1dDWklmbHR4WkZGem5nSmR0UmZ0RnZPZ1A5RWNGa014ZnA5ZG1ZZEk0bTRIUXoKcXlqd1IrQ01md0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVd0docUpnZ2NJbVNWZUk0a0FCdnZ6SVcvUXFFd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBS2dFYzk0TVl4TTRXazF1WFlENXhGL0xiS255eTBwWUk1UlBVWm95bk1Lcjl3MHVmYXhIL2dMaGFjdmkKck1NdTV3bXVOcnJDdGdBbUwyOTZhZVFLZ1NTUTRrQlZZOGJJL0dpaXdRQU9Gb3JEcWxTeUZMVXJ1aWhHcm5JdgpoOXozeWpCVEVOWk1LcWNYVGdvWE5TL2xUZzE1NWJTZm43TG92c0FENDN5bk1xUFBMeEwySDNkZVc0bkpjM0YyClArWEhjRzI1MzJzSlBKRW9lUW5hTE1BRlB5WWFNeEFxdk9Rb0cyVW0rcjVoTVJGYXRKcjYzOXpFM04vUjRScm4KdWRDbGl4NWtKYUdSak1rdUFnVGEwRnB0UHV6aUpIQW4rNWlSRHN5SnN5QXFLcmNjQ0lueklZSkVMOG5PY0hIWgpNa2ZVUzYvbVRsMUFVM01MQ2RxWTBBYmJXcHc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeAPIServerLocalhostServerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lJVWgwaWlWNWlQWWd3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURreU5USXhNelF6TmxvWERUSXpNRGt5TmpJeE16UXpPVm93TmpFVU1CSUdBMVVFCkNoTUxhM1ZpWlMxdFlYTjBaWEl4SGpBY0JnTlZCQU1URlhONWMzUmxiVHByZFdKbExXRndhWE5sY25abGNqQ0MKQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFNTlRXYnJpL3VQZUFwTUN5K0JZNFFsTwpodTBOWm14dGhiWTF6MThCdUlDT29EaWN4K1dRcTNmWjNkeDJUVTRvL1o4ZVNkRHBJYXBKbHBwbXNyWGpnay90CmJsSVFTaWlDcFA0RFZTU0tTeXZDbXFjVWxyWlhKSHdVTFpwR2hUU1dOaWU3bFZGaFFxN01JZUxiNmFuT3FudDcKYjgyenZnZWx2OVlDTkthYlNvNGVlWlI4aXMrS1FCRjg0MlN3UlFrVUZwVlV5bXJqZk5KdVNmOW5iM3BmQUNwVAo2VmQwQUY3RFV6cG5FbXVsWXJLcEx3bTh1ODg1ZmpiSzRlNXl3NkhpMlZ5dkdleThxNzVqSjFYOUdIQU1RQXNkCjRUUFM5dndLR2tyOGJETmcxQTdVUUgrWUZaZHNQQ0hnSlBUekdDc04xcEtSVFFEOXRJTUptcVFCZ1NCUVdXTUMKQXdFQUFhT0JwRENCb1RBT0JnTlZIUThCQWY4RUJBTUNCYUF3RXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdFdwpEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVWhEV2FpSkNPTWVMTW1GenZ2b0svd1JvdnpTRXdId1lEClZSMGpCQmd3Rm9BVXdHaHFKZ2djSW1TVmVJNGtBQnZ2eklXL1FxRXdMQVlEVlIwUkJDVXdJNElKYkc5allXeG8KYjNOMGh3Ui9BQUFCaHhBQUFBQUFBQUFBQUFBQUFBQUFBQUFCTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDMgo3eisrSGlkT2greXRyWVRjbmlJbVVheWVSMzd2a0ptSVN2VGVpRXptUHIyRnNNeXgyMXk2RHp2Z2Z5MHdGUTd1CmJRVUtFQ2J3QklWVGYxMjdMdTMvMDRnSGZ2MWFQeG8xRGZFalJnZnZ1T21nN2Z5YzNOdHJ1SlBJaFRyV1JFbWcKYkVXNDBPZkMrUHVyWmZleFk4SmVaZVVhRE8vYXBaT3ZvREVMdFJFNGE0QWluRVJWU0FJSlRsZ0tLTFRsSmJxOAo4OERmUUJkNW53OUlRRTJ6NWoyRFAzQlVDNGd2QW5FSmkySCtadlc5bEtjc2ZJdGJRKzlCMGhYbGhEbmZvTVVRClN3Q1JhaWR1MnV1Wk1RZ0NiaFhnQjBDRitiaXNLQ2d0U2pJSm9mUTlZWVZvc085Y0JZUmhUNWorOVl5QU9pOVIKY2JQdDFWdzhoa0FFZERrbkZ3YjYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJUlVZVGpXSEFkL1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURreU5USXhNelF6TmxvWERUTXpNRGt5TWpJeE16UXpObG93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZmdWZTYU5EVWIyQgpsSHpxTkxiQXUrTHc4VjNCYkdObTdOSTdWR3M0TTBTajFhUjUwR2JYalFuajBqV2diamV0Q0ZjRUM1VTRNeUU3ClVJVTZTb1RHVm1UZlhpY2NoZjFCM3BWQXF5QXg3YzlGb083TXNYNWpHMFRxUGhZUi93TWFEM0VUNjZJVld0aWcKa2FqNGdIcGVNb0o0WkhMbVZCcFdJNklvb014NVgyYlFrTzBMZXZHd0tQU1doK0FYTVhlU2h2ZUlUY3VUaWg2bgp3WXd3eTUzYW52clRCWjdxMkNablpwQ0NKZjZ2YzVZUWR2UXRCMkNGVjJPcDU0ZFdJc3NYdVA2ZFpQY0dHckNkCnFaUHo4ZU12M01BR0kvQU9DL1dDWklmbHR4WkZGem5nSmR0UmZ0RnZPZ1A5RWNGa014ZnA5ZG1ZZEk0bTRIUXoKcXlqd1IrQ01md0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVd0docUpnZ2NJbVNWZUk0a0FCdnZ6SVcvUXFFd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBS2dFYzk0TVl4TTRXazF1WFlENXhGL0xiS255eTBwWUk1UlBVWm95bk1Lcjl3MHVmYXhIL2dMaGFjdmkKck1NdTV3bXVOcnJDdGdBbUwyOTZhZVFLZ1NTUTRrQlZZOGJJL0dpaXdRQU9Gb3JEcWxTeUZMVXJ1aWhHcm5JdgpoOXozeWpCVEVOWk1LcWNYVGdvWE5TL2xUZzE1NWJTZm43TG92c0FENDN5bk1xUFBMeEwySDNkZVc0bkpjM0YyClArWEhjRzI1MzJzSlBKRW9lUW5hTE1BRlB5WWFNeEFxdk9Rb0cyVW0rcjVoTVJGYXRKcjYzOXpFM04vUjRScm4KdWRDbGl4NWtKYUdSak1rdUFnVGEwRnB0UHV6aUpIQW4rNWlSRHN5SnN5QXFLcmNjQ0lueklZSkVMOG5PY0hIWgpNa2ZVUzYvbVRsMUFVM01MQ2RxWTBBYmJXcHc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdzFOWnV1TCs0OTRDa3dMTDRGamhDVTZHN1ExbWJHMkZ0alhQWHdHNGdJNmdPSnpICjVaQ3JkOW5kM0haTlRpajlueDVKME9raHFrbVdtbWF5dGVPQ1QrMXVVaEJLS0lLay9nTlZKSXBMSzhLYXB4U1cKdGxja2ZCUXRta2FGTkpZMko3dVZVV0ZDcnN3aDR0dnBxYzZxZTN0dnpiTytCNlcvMWdJMHBwdEtqaDU1bEh5Swp6NHBBRVh6alpMQkZDUlFXbFZUS2F1TjgwbTVKLzJkdmVsOEFLbFBwVjNRQVhzTlRPbWNTYTZWaXNxa3ZDYnk3Cnp6bCtOc3JoN25MRG9lTFpYSzhaN0x5cnZtTW5WZjBZY0F4QUN4M2hNOUwyL0FvYVN2eHNNMkRVRHRSQWY1Z1YKbDJ3OEllQWs5UE1ZS3czV2twRk5BUDIwZ3dtYXBBR0JJRkJaWXdJREFRQUJBb0lCQVFEQVZ0aDZMc01lY2VVSgpET3prTzhGRm45MC9tejFyc2lIRVBwSzRsSUl4bmNEcVhvQjliNHRaMXVFaEVpR253TGVXczRXdXdaTlVFMmpKCkhDNEk3RUxMSUJ2Tmxacmc3MTAzZ09LYnU4NndCYzZ5anBTbWM0Tks1N2ZNUG5zM1FGK05tcXM3MnRHR1BSOTEKUEdhSXZ5aWp0Zlp2a2Zxam56VWJzVXBWY1gvbUZ5TVkzdnZDUFQ1MkpLcVJGSjNHU0Q0amhoM0ExMWVxcGlqRQo1K1cvRkV3ZXp0ZUZxcitJdE42bUxqUEswbUx0dmdNK2tyLzRSdncrWHlhbWpJajJGMTMvT1h3dFhiVEVyUUpxCmxMelRVRFRqMnFRYU1JYkk5ajhkcC9lWnZNaEtydUhKVmVKamNzMkcyVmZySUo3dkR0eHh4RnJacmJHNkNibDcKVzlySTc3WVJBb0dCQU1lbHVMVmxTWS9BUUlVNXVoWmkvblg1NlY0bFRXNEgyOUpPdFE2VERoMldFOElQcXAweApXd3ZyUHNJNkowdmZnUVhqcTRPQnlpRkNjTEFINGE4MlN6YmFyWGpHMjJSV1M4WW9BeEdCcDFhQkdjQjZYUW9mClg2bXdxYmFqcTlJUVgrSTVRR2NUN1drcEwraTNqdWJPVUgwNEZnZ3NMWllHZjgzTlovS0t4WUFaQW9HQkFQcDEKVi9vTVJUTkIyQTQ0bkY2Y3V3ajByQ2toRjBKN3RFRmpUUlVyTkV1V3YvYTFXb3FNNkV1RWtFbkhZd1U3UEM1eQpNZVdId1hOb3pCNVdYeEZhKzF0WkszaFpnRDNYVG5pQWxONzlLYUNGY2JoS1JvdWY5dzhlUFhFbGZVd2czYi9jCnRQV0V6YithVFV5ZDlUNTVWRmhFbS9INzFTVytMZ1J1NXI1QUltVGJBb0dBRzJDYldxeWdFTWxoVDZPaDVBNEIKTFBadlRReTZlSHMxWnJxS1U0eFE1RGUvVDk1TUhEQTNkd1AwWURnUFNYVkZ3U1ArVWhOTFA1SlgxNXZORS9UVApEWnVoTEMzQXlocVhXMzRESmJSczJRenRGaHJ4aFVEV0luUHFZZlJCekpXWVFISnZaWE16SERlY3JVSDJvNm5wCkdiTEdPcXFzT2FWOGd5Rkd2dGpPeW9rQ2dZQTY0ell4TzR0VnR1aUd4M2EwcENNeHd0MXJ1alVPMDZrWktyRG8KQmtXQWRFeGtSRldxZCtEeVNKUG9WUElLTzlnMWozSDk1c0pzVVRxVTgzZmN5OGlIdk5xRXJINkRpOGtPZWlVRwpuUDJabVdhWWp4WXhKQVpoenBsaHJnL2N3MmwvLy9Pb09uWnAwMnpUVTl4aXVRSkUwclRiMjN0TktYOEdXZEQwCjhIMWx1d0tCZ1FDTlp1UFNBNnpsL21qQkNZekF0bXhYMG0waDhSVkhjZnRsdFAxYjY2ZWRmb3ZxWTlxTG1UNE4KcVlTdFZkRmxaU1RyNXYyaU1Ndk5Rdy9DVVQ3SFhNMEppdmZFbXR0NGZnNFc4azVlZTBpRXhEazlVeGp4MDRUcwpRaGdTMnUrRTVKUWlxdFVUUFdXZzRWSUVISU5qKzJ5MmVqcjNyR0sxZTd2bC9vVWNCbEVDNWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-localhost-server.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdzFOWnV1TCs0OTRDa3dMTDRGamhDVTZHN1ExbWJHMkZ0alhQWHdHNGdJNmdPSnpICjVaQ3JkOW5kM0haTlRpajlueDVKME9raHFrbVdtbWF5dGVPQ1QrMXVVaEJLS0lLay9nTlZKSXBMSzhLYXB4U1cKdGxja2ZCUXRta2FGTkpZMko3dVZVV0ZDcnN3aDR0dnBxYzZxZTN0dnpiTytCNlcvMWdJMHBwdEtqaDU1bEh5Swp6NHBBRVh6alpMQkZDUlFXbFZUS2F1TjgwbTVKLzJkdmVsOEFLbFBwVjNRQVhzTlRPbWNTYTZWaXNxa3ZDYnk3Cnp6bCtOc3JoN25MRG9lTFpYSzhaN0x5cnZtTW5WZjBZY0F4QUN4M2hNOUwyL0FvYVN2eHNNMkRVRHRSQWY1Z1YKbDJ3OEllQWs5UE1ZS3czV2twRk5BUDIwZ3dtYXBBR0JJRkJaWXdJREFRQUJBb0lCQVFEQVZ0aDZMc01lY2VVSgpET3prTzhGRm45MC9tejFyc2lIRVBwSzRsSUl4bmNEcVhvQjliNHRaMXVFaEVpR253TGVXczRXdXdaTlVFMmpKCkhDNEk3RUxMSUJ2Tmxacmc3MTAzZ09LYnU4NndCYzZ5anBTbWM0Tks1N2ZNUG5zM1FGK05tcXM3MnRHR1BSOTEKUEdhSXZ5aWp0Zlp2a2Zxam56VWJzVXBWY1gvbUZ5TVkzdnZDUFQ1MkpLcVJGSjNHU0Q0amhoM0ExMWVxcGlqRQo1K1cvRkV3ZXp0ZUZxcitJdE42bUxqUEswbUx0dmdNK2tyLzRSdncrWHlhbWpJajJGMTMvT1h3dFhiVEVyUUpxCmxMelRVRFRqMnFRYU1JYkk5ajhkcC9lWnZNaEtydUhKVmVKamNzMkcyVmZySUo3dkR0eHh4RnJacmJHNkNibDcKVzlySTc3WVJBb0dCQU1lbHVMVmxTWS9BUUlVNXVoWmkvblg1NlY0bFRXNEgyOUpPdFE2VERoMldFOElQcXAweApXd3ZyUHNJNkowdmZnUVhqcTRPQnlpRkNjTEFINGE4MlN6YmFyWGpHMjJSV1M4WW9BeEdCcDFhQkdjQjZYUW9mClg2bXdxYmFqcTlJUVgrSTVRR2NUN1drcEwraTNqdWJPVUgwNEZnZ3NMWllHZjgzTlovS0t4WUFaQW9HQkFQcDEKVi9vTVJUTkIyQTQ0bkY2Y3V3ajByQ2toRjBKN3RFRmpUUlVyTkV1V3YvYTFXb3FNNkV1RWtFbkhZd1U3UEM1eQpNZVdId1hOb3pCNVdYeEZhKzF0WkszaFpnRDNYVG5pQWxONzlLYUNGY2JoS1JvdWY5dzhlUFhFbGZVd2czYi9jCnRQV0V6YithVFV5ZDlUNTVWRmhFbS9INzFTVytMZ1J1NXI1QUltVGJBb0dBRzJDYldxeWdFTWxoVDZPaDVBNEIKTFBadlRReTZlSHMxWnJxS1U0eFE1RGUvVDk1TUhEQTNkd1AwWURnUFNYVkZ3U1ArVWhOTFA1SlgxNXZORS9UVApEWnVoTEMzQXlocVhXMzRESmJSczJRenRGaHJ4aFVEV0luUHFZZlJCekpXWVFISnZaWE16SERlY3JVSDJvNm5wCkdiTEdPcXFzT2FWOGd5Rkd2dGpPeW9rQ2dZQTY0ell4TzR0VnR1aUd4M2EwcENNeHd0MXJ1alVPMDZrWktyRG8KQmtXQWRFeGtSRldxZCtEeVNKUG9WUElLTzlnMWozSDk1c0pzVVRxVTgzZmN5OGlIdk5xRXJINkRpOGtPZWlVRwpuUDJabVdhWWp4WXhKQVpoenBsaHJnL2N3MmwvLy9Pb09uWnAwMnpUVTl4aXVRSkUwclRiMjN0TktYOEdXZEQwCjhIMWx1d0tCZ1FDTlp1UFNBNnpsL21qQkNZekF0bXhYMG0waDhSVkhjZnRsdFAxYjY2ZWRmb3ZxWTlxTG1UNE4KcVlTdFZkRmxaU1RyNXYyaU1Ndk5Rdy9DVVQ3SFhNMEppdmZFbXR0NGZnNFc4azVlZTBpRXhEazlVeGp4MDRUcwpRaGdTMnUrRTVKUWlxdFVUUFdXZzRWSUVISU5qKzJ5MmVqcjNyR0sxZTd2bC9vVWNCbEVDNWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/kube-apiserver-localhost-server.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lJVWgwaWlWNWlQWWd3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURreU5USXhNelF6TmxvWERUSXpNRGt5TmpJeE16UXpPVm93TmpFVU1CSUdBMVVFCkNoTUxhM1ZpWlMxdFlYTjBaWEl4SGpBY0JnTlZCQU1URlhONWMzUmxiVHByZFdKbExXRndhWE5sY25abGNqQ0MKQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFNTlRXYnJpL3VQZUFwTUN5K0JZNFFsTwpodTBOWm14dGhiWTF6MThCdUlDT29EaWN4K1dRcTNmWjNkeDJUVTRvL1o4ZVNkRHBJYXBKbHBwbXNyWGpnay90CmJsSVFTaWlDcFA0RFZTU0tTeXZDbXFjVWxyWlhKSHdVTFpwR2hUU1dOaWU3bFZGaFFxN01JZUxiNmFuT3FudDcKYjgyenZnZWx2OVlDTkthYlNvNGVlWlI4aXMrS1FCRjg0MlN3UlFrVUZwVlV5bXJqZk5KdVNmOW5iM3BmQUNwVAo2VmQwQUY3RFV6cG5FbXVsWXJLcEx3bTh1ODg1ZmpiSzRlNXl3NkhpMlZ5dkdleThxNzVqSjFYOUdIQU1RQXNkCjRUUFM5dndLR2tyOGJETmcxQTdVUUgrWUZaZHNQQ0hnSlBUekdDc04xcEtSVFFEOXRJTUptcVFCZ1NCUVdXTUMKQXdFQUFhT0JwRENCb1RBT0JnTlZIUThCQWY4RUJBTUNCYUF3RXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdFdwpEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVWhEV2FpSkNPTWVMTW1GenZ2b0svd1JvdnpTRXdId1lEClZSMGpCQmd3Rm9BVXdHaHFKZ2djSW1TVmVJNGtBQnZ2eklXL1FxRXdMQVlEVlIwUkJDVXdJNElKYkc5allXeG8KYjNOMGh3Ui9BQUFCaHhBQUFBQUFBQUFBQUFBQUFBQUFBQUFCTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDMgo3eisrSGlkT2greXRyWVRjbmlJbVVheWVSMzd2a0ptSVN2VGVpRXptUHIyRnNNeXgyMXk2RHp2Z2Z5MHdGUTd1CmJRVUtFQ2J3QklWVGYxMjdMdTMvMDRnSGZ2MWFQeG8xRGZFalJnZnZ1T21nN2Z5YzNOdHJ1SlBJaFRyV1JFbWcKYkVXNDBPZkMrUHVyWmZleFk4SmVaZVVhRE8vYXBaT3ZvREVMdFJFNGE0QWluRVJWU0FJSlRsZ0tLTFRsSmJxOAo4OERmUUJkNW53OUlRRTJ6NWoyRFAzQlVDNGd2QW5FSmkySCtadlc5bEtjc2ZJdGJRKzlCMGhYbGhEbmZvTVVRClN3Q1JhaWR1MnV1Wk1RZ0NiaFhnQjBDRitiaXNLQ2d0U2pJSm9mUTlZWVZvc085Y0JZUmhUNWorOVl5QU9pOVIKY2JQdDFWdzhoa0FFZERrbkZ3YjYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJUlVZVGpXSEFkL1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURreU5USXhNelF6TmxvWERUTXpNRGt5TWpJeE16UXpObG93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZmdWZTYU5EVWIyQgpsSHpxTkxiQXUrTHc4VjNCYkdObTdOSTdWR3M0TTBTajFhUjUwR2JYalFuajBqV2diamV0Q0ZjRUM1VTRNeUU3ClVJVTZTb1RHVm1UZlhpY2NoZjFCM3BWQXF5QXg3YzlGb083TXNYNWpHMFRxUGhZUi93TWFEM0VUNjZJVld0aWcKa2FqNGdIcGVNb0o0WkhMbVZCcFdJNklvb014NVgyYlFrTzBMZXZHd0tQU1doK0FYTVhlU2h2ZUlUY3VUaWg2bgp3WXd3eTUzYW52clRCWjdxMkNablpwQ0NKZjZ2YzVZUWR2UXRCMkNGVjJPcDU0ZFdJc3NYdVA2ZFpQY0dHckNkCnFaUHo4ZU12M01BR0kvQU9DL1dDWklmbHR4WkZGem5nSmR0UmZ0RnZPZ1A5RWNGa014ZnA5ZG1ZZEk0bTRIUXoKcXlqd1IrQ01md0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVd0docUpnZ2NJbVNWZUk0a0FCdnZ6SVcvUXFFd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBS2dFYzk0TVl4TTRXazF1WFlENXhGL0xiS255eTBwWUk1UlBVWm95bk1Lcjl3MHVmYXhIL2dMaGFjdmkKck1NdTV3bXVOcnJDdGdBbUwyOTZhZVFLZ1NTUTRrQlZZOGJJL0dpaXdRQU9Gb3JEcWxTeUZMVXJ1aWhHcm5JdgpoOXozeWpCVEVOWk1LcWNYVGdvWE5TL2xUZzE1NWJTZm43TG92c0FENDN5bk1xUFBMeEwySDNkZVc0bkpjM0YyClArWEhjRzI1MzJzSlBKRW9lUW5hTE1BRlB5WWFNeEFxdk9Rb0cyVW0rcjVoTVJGYXRKcjYzOXpFM04vUjRScm4KdWRDbGl4NWtKYUdSak1rdUFnVGEwRnB0UHV6aUpIQW4rNWlSRHN5SnN5QXFLcmNjQ0lueklZSkVMOG5PY0hIWgpNa2ZVUzYvbVRsMUFVM01MQ2RxWTBBYmJXcHc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeAPIServerLocalhostSignerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJUlVZVGpXSEFkL1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURreU5USXhNelF6TmxvWERUTXpNRGt5TWpJeE16UXpObG93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZmdWZTYU5EVWIyQgpsSHpxTkxiQXUrTHc4VjNCYkdObTdOSTdWR3M0TTBTajFhUjUwR2JYalFuajBqV2diamV0Q0ZjRUM1VTRNeUU3ClVJVTZTb1RHVm1UZlhpY2NoZjFCM3BWQXF5QXg3YzlGb083TXNYNWpHMFRxUGhZUi93TWFEM0VUNjZJVld0aWcKa2FqNGdIcGVNb0o0WkhMbVZCcFdJNklvb014NVgyYlFrTzBMZXZHd0tQU1doK0FYTVhlU2h2ZUlUY3VUaWg2bgp3WXd3eTUzYW52clRCWjdxMkNablpwQ0NKZjZ2YzVZUWR2UXRCMkNGVjJPcDU0ZFdJc3NYdVA2ZFpQY0dHckNkCnFaUHo4ZU12M01BR0kvQU9DL1dDWklmbHR4WkZGem5nSmR0UmZ0RnZPZ1A5RWNGa014ZnA5ZG1ZZEk0bTRIUXoKcXlqd1IrQ01md0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVd0docUpnZ2NJbVNWZUk0a0FCdnZ6SVcvUXFFd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBS2dFYzk0TVl4TTRXazF1WFlENXhGL0xiS255eTBwWUk1UlBVWm95bk1Lcjl3MHVmYXhIL2dMaGFjdmkKck1NdTV3bXVOcnJDdGdBbUwyOTZhZVFLZ1NTUTRrQlZZOGJJL0dpaXdRQU9Gb3JEcWxTeUZMVXJ1aWhHcm5JdgpoOXozeWpCVEVOWk1LcWNYVGdvWE5TL2xUZzE1NWJTZm43TG92c0FENDN5bk1xUFBMeEwySDNkZVc0bkpjM0YyClArWEhjRzI1MzJzSlBKRW9lUW5hTE1BRlB5WWFNeEFxdk9Rb0cyVW0rcjVoTVJGYXRKcjYzOXpFM04vUjRScm4KdWRDbGl4NWtKYUdSak1rdUFnVGEwRnB0UHV6aUpIQW4rNWlSRHN5SnN5QXFLcmNjQ0lueklZSkVMOG5PY0hIWgpNa2ZVUzYvbVRsMUFVM01MQ2RxWTBBYmJXcHc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdmZ1ZlNhTkRVYjJCbEh6cU5MYkF1K0x3OFYzQmJHTm03Tkk3VkdzNE0wU2oxYVI1CjBHYlhqUW5qMGpXZ2JqZXRDRmNFQzVVNE15RTdVSVU2U29UR1ZtVGZYaWNjaGYxQjNwVkFxeUF4N2M5Rm9PN00Kc1g1akcwVHFQaFlSL3dNYUQzRVQ2NklWV3RpZ2thajRnSHBlTW9KNFpITG1WQnBXSTZJb29NeDVYMmJRa08wTApldkd3S1BTV2grQVhNWGVTaHZlSVRjdVRpaDZud1l3d3k1M2FudnJUQlo3cTJDWm5acENDSmY2dmM1WVFkdlF0CkIyQ0ZWMk9wNTRkV0lzc1h1UDZkWlBjR0dyQ2RxWlB6OGVNdjNNQUdJL0FPQy9XQ1pJZmx0eFpGRnpuZ0pkdFIKZnRGdk9nUDlFY0ZrTXhmcDlkbVlkSTRtNEhRenF5andSK0NNZndJREFRQUJBb0lCQUhleWNES0tEYUVUZisvWgpJQXFrVmh4S3FMbTU4MkxoNGZnMW9MSFlkK2s5UnVnVkg3YWhCUS9VZWxoMzl5TmFLc2ZGWTBRVStQcWw1bVFkCi9KTDB3cTJ1RWxtVTFOREt0dFNSUHRSU2pZS2lnK0VZYzVrazR6Wk1IaldOM0RyS2JvSHFJYjNsT2dVcDFValEKcC9qeW9DUzh0VE84Zk1maWJBRTVhdFdjM3ArdTVlbjI3ZkVDa2J1cWtRekwrQXpqM04rV2RxRG5zNVdvcnUxUAp6NXdJL0pBN2lLSlc2S1ZUMnZGRUxtbUt1WmFjMHF1S1dzR2ZQV3liRGZsSzJacllKY002bGxwUjhXNXk3K2lJCjd3UW4vQVlyQlYra09xZDRJRjFuNUhRQU1yRjlMb2w5bXVUWnpaWkV4U1VURmI2SzVvSFYwVWgzSFNhU3p6R0cKUnI2L0Y2a0NnWUVBekhUUk9uQmFCTjhSdzFMQU9kZ3k2dTk5L1JIc3NrRXlPK1NpZllXOEdTTlYzWU00MmJyTApCRGY3ZTg2RXo2bHl5OGlUNHlaTDlsOWFUOUJNVEgycVE5bUpqV3Q3cjRmZmZOQkFxd0o0UUdCZUw2YkZrMlgyCks5UjFraTZBNTR3TFZUWk9jVEFzL0JTOWFqa2I4WTdTVytscWExYS9KMXhsMDRVeW5vV2ljNXNDZ1lFQTdlQzQKaHBsOW9aRFN5em5hMlN1OGxrS2J4YTJUSUdxTFBaRitKUnFqMjhhQVY5OGRaRWpycWVEdkQ4ckV2a3V3TTk3NApoT0NxT1VaYzhwL3J2ZHBwWk1mZ2ZBTzQ0VUd3WHozbEZhRnBISklSczJmaVYyajZ1R0dvVlc1dG9kVFFCTmNWCnFZUVFCWUdUMmxBL1FZcHg4N2pyYlh0bVdLRUE5RWxkN0poSjh1MENnWUErNlhzd0pqNHMzWThUc1RUaEY3dWoKT3dwamdzNTRrME1uMXRTQkYxT24wSTJ0V2FGMnJkbW1kS3QzanphaXg1dEJSWGpzSG02bFl2WGhOVkVsQUU0UwpEckFheWdZSEh5SVB2KzBHTWY1YW9NeWFrUkNlcUhNMVRXellER014M0kvb0tvdThuSHhiSE82ajd1ckFTNWhECkcvSFpFWnBFUEZSQTMrMlJoY0ZWSFFLQmdCTkJZbzU2dEVHMDBHdGs5b01uMkM4dG15Qm9TWVdST2s0MGpjcUIKR294NngvN1U3N01qZC9nYlhoNmdJa2JwSjQwN1dsQ2ZRd2c1MnVKRThiYy9pOUo5bjMxS2E5ZklFbmZUTWMwTApjTS9BUHpDUGt6SFNMS0ZxUGs4VURrblFTVHByRXJUVEhOemxQVXVwdlVVWDZOdDZ0NHY0TmpPc2JNQlpoQUhYCjNmeU5Bb0dCQUt3SDIxRlNXWkl0Y0EwTEZQQVpleW5RUi9wMExEbmg4aktabUZienZoMTFtajlXakxRWU1sMzUKbEl0UFM1MEx1YU5ET2tVQm1qV2RiTEJHOWxxTDAyUXpiMktrWjhxMHpzcy9wRnFEaDlyWUVKZFlpekZWc0hGNAo2MkQwaElkaWY0VXBPaS9qa2VtZGMya0xLd3h1b1JGalBtVjh1TWxMWEFGWFA3cTdZV3MzCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-localhost-signer.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdmZ1ZlNhTkRVYjJCbEh6cU5MYkF1K0x3OFYzQmJHTm03Tkk3VkdzNE0wU2oxYVI1CjBHYlhqUW5qMGpXZ2JqZXRDRmNFQzVVNE15RTdVSVU2U29UR1ZtVGZYaWNjaGYxQjNwVkFxeUF4N2M5Rm9PN00Kc1g1akcwVHFQaFlSL3dNYUQzRVQ2NklWV3RpZ2thajRnSHBlTW9KNFpITG1WQnBXSTZJb29NeDVYMmJRa08wTApldkd3S1BTV2grQVhNWGVTaHZlSVRjdVRpaDZud1l3d3k1M2FudnJUQlo3cTJDWm5acENDSmY2dmM1WVFkdlF0CkIyQ0ZWMk9wNTRkV0lzc1h1UDZkWlBjR0dyQ2RxWlB6OGVNdjNNQUdJL0FPQy9XQ1pJZmx0eFpGRnpuZ0pkdFIKZnRGdk9nUDlFY0ZrTXhmcDlkbVlkSTRtNEhRenF5andSK0NNZndJREFRQUJBb0lCQUhleWNES0tEYUVUZisvWgpJQXFrVmh4S3FMbTU4MkxoNGZnMW9MSFlkK2s5UnVnVkg3YWhCUS9VZWxoMzl5TmFLc2ZGWTBRVStQcWw1bVFkCi9KTDB3cTJ1RWxtVTFOREt0dFNSUHRSU2pZS2lnK0VZYzVrazR6Wk1IaldOM0RyS2JvSHFJYjNsT2dVcDFValEKcC9qeW9DUzh0VE84Zk1maWJBRTVhdFdjM3ArdTVlbjI3ZkVDa2J1cWtRekwrQXpqM04rV2RxRG5zNVdvcnUxUAp6NXdJL0pBN2lLSlc2S1ZUMnZGRUxtbUt1WmFjMHF1S1dzR2ZQV3liRGZsSzJacllKY002bGxwUjhXNXk3K2lJCjd3UW4vQVlyQlYra09xZDRJRjFuNUhRQU1yRjlMb2w5bXVUWnpaWkV4U1VURmI2SzVvSFYwVWgzSFNhU3p6R0cKUnI2L0Y2a0NnWUVBekhUUk9uQmFCTjhSdzFMQU9kZ3k2dTk5L1JIc3NrRXlPK1NpZllXOEdTTlYzWU00MmJyTApCRGY3ZTg2RXo2bHl5OGlUNHlaTDlsOWFUOUJNVEgycVE5bUpqV3Q3cjRmZmZOQkFxd0o0UUdCZUw2YkZrMlgyCks5UjFraTZBNTR3TFZUWk9jVEFzL0JTOWFqa2I4WTdTVytscWExYS9KMXhsMDRVeW5vV2ljNXNDZ1lFQTdlQzQKaHBsOW9aRFN5em5hMlN1OGxrS2J4YTJUSUdxTFBaRitKUnFqMjhhQVY5OGRaRWpycWVEdkQ4ckV2a3V3TTk3NApoT0NxT1VaYzhwL3J2ZHBwWk1mZ2ZBTzQ0VUd3WHozbEZhRnBISklSczJmaVYyajZ1R0dvVlc1dG9kVFFCTmNWCnFZUVFCWUdUMmxBL1FZcHg4N2pyYlh0bVdLRUE5RWxkN0poSjh1MENnWUErNlhzd0pqNHMzWThUc1RUaEY3dWoKT3dwamdzNTRrME1uMXRTQkYxT24wSTJ0V2FGMnJkbW1kS3QzanphaXg1dEJSWGpzSG02bFl2WGhOVkVsQUU0UwpEckFheWdZSEh5SVB2KzBHTWY1YW9NeWFrUkNlcUhNMVRXellER014M0kvb0tvdThuSHhiSE82ajd1ckFTNWhECkcvSFpFWnBFUEZSQTMrMlJoY0ZWSFFLQmdCTkJZbzU2dEVHMDBHdGs5b01uMkM4dG15Qm9TWVdST2s0MGpjcUIKR294NngvN1U3N01qZC9nYlhoNmdJa2JwSjQwN1dsQ2ZRd2c1MnVKRThiYy9pOUo5bjMxS2E5ZklFbmZUTWMwTApjTS9BUHpDUGt6SFNMS0ZxUGs4VURrblFTVHByRXJUVEhOemxQVXVwdlVVWDZOdDZ0NHY0TmpPc2JNQlpoQUhYCjNmeU5Bb0dCQUt3SDIxRlNXWkl0Y0EwTEZQQVpleW5RUi9wMExEbmg4aktabUZienZoMTFtajlXakxRWU1sMzUKbEl0UFM1MEx1YU5ET2tVQm1qV2RiTEJHOWxxTDAyUXpiMktrWjhxMHpzcy9wRnFEaDlyWUVKZFlpekZWc0hGNAo2MkQwaElkaWY0VXBPaS9qa2VtZGMya0xLd3h1b1JGalBtVjh1TWxMWEFGWFA3cTdZV3MzCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/kube-apiserver-localhost-signer.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJUlVZVGpXSEFkL1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURreU5USXhNelF6TmxvWERUTXpNRGt5TWpJeE16UXpObG93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZmdWZTYU5EVWIyQgpsSHpxTkxiQXUrTHc4VjNCYkdObTdOSTdWR3M0TTBTajFhUjUwR2JYalFuajBqV2diamV0Q0ZjRUM1VTRNeUU3ClVJVTZTb1RHVm1UZlhpY2NoZjFCM3BWQXF5QXg3YzlGb083TXNYNWpHMFRxUGhZUi93TWFEM0VUNjZJVld0aWcKa2FqNGdIcGVNb0o0WkhMbVZCcFdJNklvb014NVgyYlFrTzBMZXZHd0tQU1doK0FYTVhlU2h2ZUlUY3VUaWg2bgp3WXd3eTUzYW52clRCWjdxMkNablpwQ0NKZjZ2YzVZUWR2UXRCMkNGVjJPcDU0ZFdJc3NYdVA2ZFpQY0dHckNkCnFaUHo4ZU12M01BR0kvQU9DL1dDWklmbHR4WkZGem5nSmR0UmZ0RnZPZ1A5RWNGa014ZnA5ZG1ZZEk0bTRIUXoKcXlqd1IrQ01md0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVd0docUpnZ2NJbVNWZUk0a0FCdnZ6SVcvUXFFd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBS2dFYzk0TVl4TTRXazF1WFlENXhGL0xiS255eTBwWUk1UlBVWm95bk1Lcjl3MHVmYXhIL2dMaGFjdmkKck1NdTV3bXVOcnJDdGdBbUwyOTZhZVFLZ1NTUTRrQlZZOGJJL0dpaXdRQU9Gb3JEcWxTeUZMVXJ1aWhHcm5JdgpoOXozeWpCVEVOWk1LcWNYVGdvWE5TL2xUZzE1NWJTZm43TG92c0FENDN5bk1xUFBMeEwySDNkZVc0bkpjM0YyClArWEhjRzI1MzJzSlBKRW9lUW5hTE1BRlB5WWFNeEFxdk9Rb0cyVW0rcjVoTVJGYXRKcjYzOXpFM04vUjRScm4KdWRDbGl4NWtKYUdSak1rdUFnVGEwRnB0UHV6aUpIQW4rNWlSRHN5SnN5QXFLcmNjQ0lueklZSkVMOG5PY0hIWgpNa2ZVUzYvbVRsMUFVM01MQ2RxWTBBYmJXcHc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeAPIServerServiceNetworkCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJTkxWVFBEbERCQXN3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRGt5TlRJeE16UXpObG9YRFRNek1Ea3lNakl4TXpRek5sb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBcUFzaEF2bmcwN1ptRnlLaGZ5cS9GWHJrTzM4dVF6a04zQlNoWnBEa2NTVzlIOGxxemh4cjcvWXZkR3FnCisrckdQQ2Zra1dQTTZLNC9SZXVDZDhadEJUR3J0cGVEbXVPSHNpd0lPK0ZTN29ibFAwZWJMNFVmNkVqd2VwcWkKaCtOOE03UkRZaWVRMWhDcGt5K1NRUk9TbkFhVnZ1Y2xaZW4ram5VK2lMUzBGOXl3UUtoblRXci9QOEFwTnZTaApxNGo5NEpZYmpadUdrdG82K0wzclVzcHBMdi9TWFNQK1ZpdlFBRmYvRFZnV0Zad0p4OGY1SlF4bEttYnBpbjlXCmtpTnFZMHYvaFAyNHpIKzdWOTM5SmZMRXdNZVB3TWRrYXFsZGp2YkdUQlNwN0lKczNML2hzVVkyTkNUNHJVSnUKRUpnekF4dW01N0ZXeGYydnBQcFVBVmdBWlFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVVlJd25XUzJTc2FrWlk0R2E1UXNFZlFWQ2FWVXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUppb0d5dVB2bzlnTVUxenlVQm41bXpGaVUzVytPQ2RHeGJ3M1JjenFMckYKN0FKd2V3Q01PdHl1UDlkWDNlMEtuUkxIRXhra0F4ZzQwRGxmcTRkWWJZZGhaSFVRbm10dGsrRnhLTHMzU3VuWgovd2xUZGR3Y1BpUXl3WlJ0VUhCdGxGaUtkYzEydUtvd3hJemd5eWpZTGxTYktyNHpxanpnMkxoL0xicXRpWnVyCjdwNFlGL29aaWdFRllGQzBRTTVpZHl3SS91OEJ1Y1ZJdmRVeFNycTJJZnVDeDJkU0ZZUW0vZlVoVmlpWFBoTkMKdjduY2JPTGQ3OWtqMHVXeThJV1RRRWNKSVN3UW13V2xyZU1hcVovcGRrY1VVaEpYS29KaUdManV6aUFDZXJZRgowSXRJWmh2c3FXbk4vci9OSUZ3amttWlFDN3ZQcjZqV00rZTJiTzJib0hJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-service-network-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJTkxWVFBEbERCQXN3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRGt5TlRJeE16UXpObG9YRFRNek1Ea3lNakl4TXpRek5sb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBcUFzaEF2bmcwN1ptRnlLaGZ5cS9GWHJrTzM4dVF6a04zQlNoWnBEa2NTVzlIOGxxemh4cjcvWXZkR3FnCisrckdQQ2Zra1dQTTZLNC9SZXVDZDhadEJUR3J0cGVEbXVPSHNpd0lPK0ZTN29ibFAwZWJMNFVmNkVqd2VwcWkKaCtOOE03UkRZaWVRMWhDcGt5K1NRUk9TbkFhVnZ1Y2xaZW4ram5VK2lMUzBGOXl3UUtoblRXci9QOEFwTnZTaApxNGo5NEpZYmpadUdrdG82K0wzclVzcHBMdi9TWFNQK1ZpdlFBRmYvRFZnV0Zad0p4OGY1SlF4bEttYnBpbjlXCmtpTnFZMHYvaFAyNHpIKzdWOTM5SmZMRXdNZVB3TWRrYXFsZGp2YkdUQlNwN0lKczNML2hzVVkyTkNUNHJVSnUKRUpnekF4dW01N0ZXeGYydnBQcFVBVmdBWlFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVVlJd25XUzJTc2FrWlk0R2E1UXNFZlFWQ2FWVXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUppb0d5dVB2bzlnTVUxenlVQm41bXpGaVUzVytPQ2RHeGJ3M1JjenFMckYKN0FKd2V3Q01PdHl1UDlkWDNlMEtuUkxIRXhra0F4ZzQwRGxmcTRkWWJZZGhaSFVRbm10dGsrRnhLTHMzU3VuWgovd2xUZGR3Y1BpUXl3WlJ0VUhCdGxGaUtkYzEydUtvd3hJemd5eWpZTGxTYktyNHpxanpnMkxoL0xicXRpWnVyCjdwNFlGL29aaWdFRllGQzBRTTVpZHl3SS91OEJ1Y1ZJdmRVeFNycTJJZnVDeDJkU0ZZUW0vZlVoVmlpWFBoTkMKdjduY2JPTGQ3OWtqMHVXeThJV1RRRWNKSVN3UW13V2xyZU1hcVovcGRrY1VVaEpYS29KaUdManV6aUFDZXJZRgowSXRJWmh2c3FXbk4vci9OSUZ3amttWlFDN3ZQcjZqV00rZTJiTzJib0hJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeAPIServerServiceNetworkServerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVRVENDQXltZ0F3SUJBZ0lJR3ZHTzVFeEdqR1F3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRGt5TlRJeE16UXpObG9YRFRJek1Ea3lOakl4TXpRek9Wb3dOakVVCk1CSUdBMVVFQ2hNTGEzVmlaUzF0WVhOMFpYSXhIakFjQmdOVkJBTVRGWE41YzNSbGJUcHJkV0psTFdGd2FYTmwKY25abGNqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU5BWTBHb2pIUVBnTENjVwpJRHo4ajgxTXRtMzJvd2pYQTBoVWdYajFQNFRmeURxNy9UOEZDRDFIZ0NBcnkyTlV2UVNwN2N2dXp0N0ZpQVJyCnQvWTdWNFlCcWJnVUpjSWNhRnIxMkdXU3dZakZEM3doMHJQT2lFWGl2WjROOFRyM2V3R2JUYkJWblFtbWo1U1UKejArdlVZd1dtVXh4aGEyRmRncC9Zc0U2aWYwbGlFS01odlp2clBTWEFkYVd0blJKS1Y2SVBjVHd1Yloyb1prZAp5RUpRWnQzNHV2aVFDRmN6aEZRTHo5TE02R2JnYWt0V1ZPV05CajBHdXhzSGtRQ1FqcHNQOEMzTm9WazI0K1VBCmpCVXlPbldiZHFyaUh3QmdwRURwQ1JkSnhIbEpOK0RnTnlTUSttU0JoSXVnS2ZtOHROY0N5QXdCakVvb29OT1oKM1RtbnJhVUNBd0VBQWFPQ0FVTXdnZ0UvTUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdncgpCZ0VGQlFjREFUQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJRZWUvRVBLcHM3ZFkvejduVHVYMTBvCkV6RmFnekFmQmdOVkhTTUVHREFXZ0JSZ2pDZFpMWkt4cVJsamdacmxDd1I5QlVKcFZUQ0J5UVlEVlIwUkJJSEIKTUlHK2dncHJkV0psY201bGRHVnpnaEpyZFdKbGNtNWxkR1Z6TG1SbFptRjFiSFNDRm10MVltVnlibVYwWlhNdQpaR1ZtWVhWc2RDNXpkbU9DSkd0MVltVnlibVYwWlhNdVpHVm1ZWFZzZEM1emRtTXVZMngxYzNSbGNpNXNiMk5oCmJJSUpiM0JsYm5Ob2FXWjBnaEZ2Y0dWdWMyaHBablF1WkdWbVlYVnNkSUlWYjNCbGJuTm9hV1owTG1SbFptRjEKYkhRdWMzWmpnaU52Y0dWdWMyaHBablF1WkdWbVlYVnNkQzV6ZG1NdVkyeDFjM1JsY2k1c2IyTmhiSWNFckI0QQpBVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBUjdNTVZZUzNWRExuMnVTN0VBbFJJWm05aTlXd2ZzeGUvRnZjCmRodEdnby9URnZPZ3QzOTZQc1NzelVNQWJGQ3BSNFd1UkxNUFZDWWxHb2x5ZDhhQUtJMmM2NWVMUVlFUTZsQ3MKMFpMcGRraGdvemZvZ2FKUDdCV3BIcXhJWmhtUGIrdGw1QWlsVnVPK3FqZ01VZFFQMVNxcWtBTDQ5TjRxcUpWVgprQnVpMUtuN1dydVRFTjd6NFFraHh0WjJBSFl3Q2IwZEtUNlpNdXE4bWZSTHZpTitMd2dYWlR5WlpMVGx1bnNGCnlaRXV4akJaTllyc0htR1RnWDFKemZad0VEYVB0Q1BPZWlWdkdWbVNYSzdZZXFnNUtCRVFJUENiMzBZTlFuNGUKVkhMczlGTUw0cERjOGVBQzNMM09SM2RUcmFQVXFRVnJEMkZBNlNCZmkzTDkrdTNUL1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRFREQ0NBalNnQXdJQkFnSUlOTFZUUERsREJBc3dEUVlKS29aSWh2Y05BUUVMQlFBd1JERVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVM0d0xBWURWUVFERXlWcmRXSmxMV0Z3YVhObGNuWmxjaTF6WlhKMmFXTmxMVzVsCmRIZHZjbXN0YzJsbmJtVnlNQjRYRFRJek1Ea3lOVEl4TXpRek5sb1hEVE16TURreU1qSXhNelF6Tmxvd1JERVMKTUJBR0ExVUVDeE1KYjNCbGJuTm9hV1owTVM0d0xBWURWUVFERXlWcmRXSmxMV0Z3YVhObGNuWmxjaTF6WlhKMgphV05sTFc1bGRIZHZjbXN0YzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDCkFRRUFxQXNoQXZuZzA3Wm1GeUtoZnlxL0ZYcmtPMzh1UXprTjNCU2hacERrY1NXOUg4bHF6aHhyNy9ZdmRHcWcKKytyR1BDZmtrV1BNNks0L1JldUNkOFp0QlRHcnRwZURtdU9Ic2l3SU8rRlM3b2JsUDBlYkw0VWY2RWp3ZXBxaQpoK044TTdSRFlpZVExaENwa3krU1FST1NuQWFWdnVjbFplbitqblUraUxTMEY5eXdRS2huVFdyL1A4QXBOdlNoCnE0ajk0Sllialp1R2t0bzYrTDNyVXNwcEx2L1NYU1ArVml2UUFGZi9EVmdXRlp3Sng4ZjVKUXhsS21icGluOVcKa2lOcVkwdi9oUDI0ekgrN1Y5MzlKZkxFd01lUHdNZGthcWxkanZiR1RCU3A3SUpzM0wvaHNVWTJOQ1Q0clVKdQpFSmd6QXh1bTU3Rld4ZjJ2cFBwVUFWZ0FaUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEClZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVWUl3bldTMlNzYWtaWTRHYTVRc0VmUVZDYVZVd0RRWUoKS29aSWh2Y05BUUVMQlFBRGdnRUJBSmlvR3l1UHZvOWdNVTF6eVVCbjVtekZpVTNXK09DZEd4YnczUmN6cUxyRgo3QUp3ZXdDTU90eXVQOWRYM2UwS25STEhFeGtrQXhnNDBEbGZxNGRZYllkaFpIVVFubXR0aytGeEtMczNTdW5aCi93bFRkZHdjUGlReXdaUnRVSEJ0bEZpS2RjMTJ1S293eEl6Z3l5allMbFNiS3I0enFqemcyTGgvTGJxdGladXIKN3A0WUYvb1ppZ0VGWUZDMFFNNWlkeXdJL3U4QnVjVkl2ZFV4U3JxMklmdUN4MmRTRllRbS9mVWhWaWlYUGhOQwp2N25jYk9MZDc5a2owdVd5OElXVFFFY0pJU3dRbXdXbHJlTWFxWi9wZGtjVVVoSlhLb0ppR0xqdXppQUNlcllGCjBJdElaaHZzcVduTi9yL05JRndqa21aUUM3dlByNmpXTStlMmJPMmJvSEk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMEJqUWFpTWRBK0FzSnhZZ1BQeVB6VXkyYmZhakNOY0RTRlNCZVBVL2hOL0lPcnY5ClB3VUlQVWVBSUN2TFkxUzlCS250eSs3TzNzV0lCR3UzOWp0WGhnR3B1QlFsd2h4b1d2WFlaWkxCaU1VUGZDSFMKczg2SVJlSzluZzN4T3ZkN0FadE5zRldkQ2FhUGxKVFBUNjlSakJhWlRIR0ZyWVYyQ245aXdUcUovU1dJUW95Rwo5bStzOUpjQjFwYTJkRWtwWG9nOXhQQzV0bmFobVIzSVFsQm0zZmk2K0pBSVZ6T0VWQXZQMHN6b1p1QnFTMVpVCjVZMEdQUWE3R3dlUkFKQ09tdy93TGMyaFdUYmo1UUNNRlRJNmRadDJxdUlmQUdDa1FPa0pGMG5FZVVrMzRPQTMKSkpENlpJR0VpNkFwK2J5MDF3TElEQUdNU2lpZzA1bmRPYWV0cFFJREFRQUJBb0lCQVFDcjZKUGoybllSeVpNdwpCdnRDNW5IMWE3WVpTWEtOenZJTFFxUml4RmRnOFcxNzkralJzdHFIcFJXWGZoWmJUSm1Kek1lQmZScXd0Z1lUCmdObE1OT0dzOXBxNlV3cU9QT0dJb3lmTllWczRIWE1aWE9ldldxTUErTHNrWXVneGlsaTNqeEN5NTBiL3ZmVkgKRFZmbHdETmh3eG1KS1E4QnRnczV5TnBRUG9mWDh6Y1RwSkcrV01jWFk3Z01SNlhDMWtJTFoxWldmRHRFZE5wVAp5a2RUUjlwQ2owMzZwem5FeS85bmV0bW1Zb0dMZmZRNmIzWHR1RW83dzI0VVVJYWlPdVFXdWRkN1ByYnM2cXpXCjVhaW8rM3hGU1JjQXh0dytuaXQ2VTR6bTJMdUFhU1hFUm1GeEtVeTRiR2NBVGJzcXhlaFFyZjlkMkZPZjVqUksKNW50dmc1YUJBb0dCQVBraHFaU3RHYTlDT3JZdVBBb3FTaWwzMWU3S0k1cUNEOW1vVmtVa1phdi9jVGNNTlVRdApFYnFYeDdsTWxvNnNlSlM3YWdzZVlid3doWVJ0dmJtWEtXTDFrRjlqdjd1bGIxRVN1T05yVFRyMVl4UWkxUW5QClZhaHUyRmU5Z1RoVWpvSm5QamN2UDJaMklxL1pIRFZvWTVQcy9weTVhdm45cXYwZkdLai9FQzZwQW9HQkFOWFYKaVB3NHJnSjJWVlorelQ1eHNrTDdJc3poanRSOXprMTlIaWs3QXFydXJLamtCdGZhbHkrU0NoZXc2MUc4clhvRQpWdllGaEpBdWNvY1V5c09GS1ZSMGdJbm1RM09GU0JYWmd4dC9IRXZqL0JyV3ZqNmsxMm9XSDBLWkxOWStLbDNOClp1SzlDV21PU0VuRmJRaS9IV0kvMytSZ2tTZTN2alh4UGp6WUhKQ2RBb0dCQU1GVnNVK1M0ZXJUWDlLL29KSlcKN1VTdkhkTjVCUlpEdHQ4M3R2TmpZbytPNWFKTmxBeTdXUlhQOGd2SDl0THozNE8weVgrbGJUMW8va1NlRVcwMApkTWE2UVBiMTV2Wk5WVXk2VmNjUEgxa1EwM250Nmh2NXpjU3ZlSzdtZnFCalpsQ21wRzZZK1ArZjBCMWRSSG5oCjc5ejlQejRLMm96MG9ieGJaSHpKckJvNUFvR0FiYll1bjRJUlBiQXJIc0xXV1hpS1JyV0ZhR3MrRmlZcUtEWE8KdU1iUEdwWjB2ZjZveUMwZUxza1dKb3VlWVFTV1dTbEsyTldCNjF2NVpQYzFCVllZRzMzZXlXSDhMNVF0cFJCQgpwV1QxUnJiRmpadXFab2U3QW5JeFBjRkxjT3phWGVCYUxuRmhGK2hwakhnZjlrSGdPSjJmS1JTbXhTTVFFNnNnCkRLV3hHajBDZ1lFQXhrc0VTbUdBOUxjRHBBeFplZEhUV3ZQYTNTWXNSWFRQSWcrdGg1aEdGeFpySFdRMmJaVkwKRGpNV0UraDM4dWxlZlRrWUJOWEVNRXFZMTFvT05wOTF0VTRpT0pFQmFIZ1gzZTkxelZwMVc1RUVDdzdFMENKZgpIS0pPWHZBT0xRcklJSlNyYzB6dzZBK1Y1OTVhbzZUUzdqajdRQ28wQ3VrenlxTEQ2UXlUQTRVPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-service-network-server.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMEJqUWFpTWRBK0FzSnhZZ1BQeVB6VXkyYmZhakNOY0RTRlNCZVBVL2hOL0lPcnY5ClB3VUlQVWVBSUN2TFkxUzlCS250eSs3TzNzV0lCR3UzOWp0WGhnR3B1QlFsd2h4b1d2WFlaWkxCaU1VUGZDSFMKczg2SVJlSzluZzN4T3ZkN0FadE5zRldkQ2FhUGxKVFBUNjlSakJhWlRIR0ZyWVYyQ245aXdUcUovU1dJUW95Rwo5bStzOUpjQjFwYTJkRWtwWG9nOXhQQzV0bmFobVIzSVFsQm0zZmk2K0pBSVZ6T0VWQXZQMHN6b1p1QnFTMVpVCjVZMEdQUWE3R3dlUkFKQ09tdy93TGMyaFdUYmo1UUNNRlRJNmRadDJxdUlmQUdDa1FPa0pGMG5FZVVrMzRPQTMKSkpENlpJR0VpNkFwK2J5MDF3TElEQUdNU2lpZzA1bmRPYWV0cFFJREFRQUJBb0lCQVFDcjZKUGoybllSeVpNdwpCdnRDNW5IMWE3WVpTWEtOenZJTFFxUml4RmRnOFcxNzkralJzdHFIcFJXWGZoWmJUSm1Kek1lQmZScXd0Z1lUCmdObE1OT0dzOXBxNlV3cU9QT0dJb3lmTllWczRIWE1aWE9ldldxTUErTHNrWXVneGlsaTNqeEN5NTBiL3ZmVkgKRFZmbHdETmh3eG1KS1E4QnRnczV5TnBRUG9mWDh6Y1RwSkcrV01jWFk3Z01SNlhDMWtJTFoxWldmRHRFZE5wVAp5a2RUUjlwQ2owMzZwem5FeS85bmV0bW1Zb0dMZmZRNmIzWHR1RW83dzI0VVVJYWlPdVFXdWRkN1ByYnM2cXpXCjVhaW8rM3hGU1JjQXh0dytuaXQ2VTR6bTJMdUFhU1hFUm1GeEtVeTRiR2NBVGJzcXhlaFFyZjlkMkZPZjVqUksKNW50dmc1YUJBb0dCQVBraHFaU3RHYTlDT3JZdVBBb3FTaWwzMWU3S0k1cUNEOW1vVmtVa1phdi9jVGNNTlVRdApFYnFYeDdsTWxvNnNlSlM3YWdzZVlid3doWVJ0dmJtWEtXTDFrRjlqdjd1bGIxRVN1T05yVFRyMVl4UWkxUW5QClZhaHUyRmU5Z1RoVWpvSm5QamN2UDJaMklxL1pIRFZvWTVQcy9weTVhdm45cXYwZkdLai9FQzZwQW9HQkFOWFYKaVB3NHJnSjJWVlorelQ1eHNrTDdJc3poanRSOXprMTlIaWs3QXFydXJLamtCdGZhbHkrU0NoZXc2MUc4clhvRQpWdllGaEpBdWNvY1V5c09GS1ZSMGdJbm1RM09GU0JYWmd4dC9IRXZqL0JyV3ZqNmsxMm9XSDBLWkxOWStLbDNOClp1SzlDV21PU0VuRmJRaS9IV0kvMytSZ2tTZTN2alh4UGp6WUhKQ2RBb0dCQU1GVnNVK1M0ZXJUWDlLL29KSlcKN1VTdkhkTjVCUlpEdHQ4M3R2TmpZbytPNWFKTmxBeTdXUlhQOGd2SDl0THozNE8weVgrbGJUMW8va1NlRVcwMApkTWE2UVBiMTV2Wk5WVXk2VmNjUEgxa1EwM250Nmh2NXpjU3ZlSzdtZnFCalpsQ21wRzZZK1ArZjBCMWRSSG5oCjc5ejlQejRLMm96MG9ieGJaSHpKckJvNUFvR0FiYll1bjRJUlBiQXJIc0xXV1hpS1JyV0ZhR3MrRmlZcUtEWE8KdU1iUEdwWjB2ZjZveUMwZUxza1dKb3VlWVFTV1dTbEsyTldCNjF2NVpQYzFCVllZRzMzZXlXSDhMNVF0cFJCQgpwV1QxUnJiRmpadXFab2U3QW5JeFBjRkxjT3phWGVCYUxuRmhGK2hwakhnZjlrSGdPSjJmS1JTbXhTTVFFNnNnCkRLV3hHajBDZ1lFQXhrc0VTbUdBOUxjRHBBeFplZEhUV3ZQYTNTWXNSWFRQSWcrdGg1aEdGeFpySFdRMmJaVkwKRGpNV0UraDM4dWxlZlRrWUJOWEVNRXFZMTFvT05wOTF0VTRpT0pFQmFIZ1gzZTkxelZwMVc1RUVDdzdFMENKZgpIS0pPWHZBT0xRcklJSlNyYzB6dzZBK1Y1OTVhbzZUUzdqajdRQ28wQ3VrenlxTEQ2UXlUQTRVPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/kube-apiserver-service-network-server.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVRVENDQXltZ0F3SUJBZ0lJR3ZHTzVFeEdqR1F3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRGt5TlRJeE16UXpObG9YRFRJek1Ea3lOakl4TXpRek9Wb3dOakVVCk1CSUdBMVVFQ2hNTGEzVmlaUzF0WVhOMFpYSXhIakFjQmdOVkJBTVRGWE41YzNSbGJUcHJkV0psTFdGd2FYTmwKY25abGNqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU5BWTBHb2pIUVBnTENjVwpJRHo4ajgxTXRtMzJvd2pYQTBoVWdYajFQNFRmeURxNy9UOEZDRDFIZ0NBcnkyTlV2UVNwN2N2dXp0N0ZpQVJyCnQvWTdWNFlCcWJnVUpjSWNhRnIxMkdXU3dZakZEM3doMHJQT2lFWGl2WjROOFRyM2V3R2JUYkJWblFtbWo1U1UKejArdlVZd1dtVXh4aGEyRmRncC9Zc0U2aWYwbGlFS01odlp2clBTWEFkYVd0blJKS1Y2SVBjVHd1Yloyb1prZAp5RUpRWnQzNHV2aVFDRmN6aEZRTHo5TE02R2JnYWt0V1ZPV05CajBHdXhzSGtRQ1FqcHNQOEMzTm9WazI0K1VBCmpCVXlPbldiZHFyaUh3QmdwRURwQ1JkSnhIbEpOK0RnTnlTUSttU0JoSXVnS2ZtOHROY0N5QXdCakVvb29OT1oKM1RtbnJhVUNBd0VBQWFPQ0FVTXdnZ0UvTUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdncgpCZ0VGQlFjREFUQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJRZWUvRVBLcHM3ZFkvejduVHVYMTBvCkV6RmFnekFmQmdOVkhTTUVHREFXZ0JSZ2pDZFpMWkt4cVJsamdacmxDd1I5QlVKcFZUQ0J5UVlEVlIwUkJJSEIKTUlHK2dncHJkV0psY201bGRHVnpnaEpyZFdKbGNtNWxkR1Z6TG1SbFptRjFiSFNDRm10MVltVnlibVYwWlhNdQpaR1ZtWVhWc2RDNXpkbU9DSkd0MVltVnlibVYwWlhNdVpHVm1ZWFZzZEM1emRtTXVZMngxYzNSbGNpNXNiMk5oCmJJSUpiM0JsYm5Ob2FXWjBnaEZ2Y0dWdWMyaHBablF1WkdWbVlYVnNkSUlWYjNCbGJuTm9hV1owTG1SbFptRjEKYkhRdWMzWmpnaU52Y0dWdWMyaHBablF1WkdWbVlYVnNkQzV6ZG1NdVkyeDFjM1JsY2k1c2IyTmhiSWNFckI0QQpBVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBUjdNTVZZUzNWRExuMnVTN0VBbFJJWm05aTlXd2ZzeGUvRnZjCmRodEdnby9URnZPZ3QzOTZQc1NzelVNQWJGQ3BSNFd1UkxNUFZDWWxHb2x5ZDhhQUtJMmM2NWVMUVlFUTZsQ3MKMFpMcGRraGdvemZvZ2FKUDdCV3BIcXhJWmhtUGIrdGw1QWlsVnVPK3FqZ01VZFFQMVNxcWtBTDQ5TjRxcUpWVgprQnVpMUtuN1dydVRFTjd6NFFraHh0WjJBSFl3Q2IwZEtUNlpNdXE4bWZSTHZpTitMd2dYWlR5WlpMVGx1bnNGCnlaRXV4akJaTllyc0htR1RnWDFKemZad0VEYVB0Q1BPZWlWdkdWbVNYSzdZZXFnNUtCRVFJUENiMzBZTlFuNGUKVkhMczlGTUw0cERjOGVBQzNMM09SM2RUcmFQVXFRVnJEMkZBNlNCZmkzTDkrdTNUL1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRFREQ0NBalNnQXdJQkFnSUlOTFZUUERsREJBc3dEUVlKS29aSWh2Y05BUUVMQlFBd1JERVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVM0d0xBWURWUVFERXlWcmRXSmxMV0Z3YVhObGNuWmxjaTF6WlhKMmFXTmxMVzVsCmRIZHZjbXN0YzJsbmJtVnlNQjRYRFRJek1Ea3lOVEl4TXpRek5sb1hEVE16TURreU1qSXhNelF6Tmxvd1JERVMKTUJBR0ExVUVDeE1KYjNCbGJuTm9hV1owTVM0d0xBWURWUVFERXlWcmRXSmxMV0Z3YVhObGNuWmxjaTF6WlhKMgphV05sTFc1bGRIZHZjbXN0YzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDCkFRRUFxQXNoQXZuZzA3Wm1GeUtoZnlxL0ZYcmtPMzh1UXprTjNCU2hacERrY1NXOUg4bHF6aHhyNy9ZdmRHcWcKKytyR1BDZmtrV1BNNks0L1JldUNkOFp0QlRHcnRwZURtdU9Ic2l3SU8rRlM3b2JsUDBlYkw0VWY2RWp3ZXBxaQpoK044TTdSRFlpZVExaENwa3krU1FST1NuQWFWdnVjbFplbitqblUraUxTMEY5eXdRS2huVFdyL1A4QXBOdlNoCnE0ajk0Sllialp1R2t0bzYrTDNyVXNwcEx2L1NYU1ArVml2UUFGZi9EVmdXRlp3Sng4ZjVKUXhsS21icGluOVcKa2lOcVkwdi9oUDI0ekgrN1Y5MzlKZkxFd01lUHdNZGthcWxkanZiR1RCU3A3SUpzM0wvaHNVWTJOQ1Q0clVKdQpFSmd6QXh1bTU3Rld4ZjJ2cFBwVUFWZ0FaUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEClZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVWUl3bldTMlNzYWtaWTRHYTVRc0VmUVZDYVZVd0RRWUoKS29aSWh2Y05BUUVMQlFBRGdnRUJBSmlvR3l1UHZvOWdNVTF6eVVCbjVtekZpVTNXK09DZEd4YnczUmN6cUxyRgo3QUp3ZXdDTU90eXVQOWRYM2UwS25STEhFeGtrQXhnNDBEbGZxNGRZYllkaFpIVVFubXR0aytGeEtMczNTdW5aCi93bFRkZHdjUGlReXdaUnRVSEJ0bEZpS2RjMTJ1S293eEl6Z3l5allMbFNiS3I0enFqemcyTGgvTGJxdGladXIKN3A0WUYvb1ppZ0VGWUZDMFFNNWlkeXdJL3U4QnVjVkl2ZFV4U3JxMklmdUN4MmRTRllRbS9mVWhWaWlYUGhOQwp2N25jYk9MZDc5a2owdVd5OElXVFFFY0pJU3dRbXdXbHJlTWFxWi9wZGtjVVVoSlhLb0ppR0xqdXppQUNlcllGCjBJdElaaHZzcVduTi9yL05JRndqa21aUUM3dlByNmpXTStlMmJPMmJvSEk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeAPIServerServiceNetworkSignerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJTkxWVFBEbERCQXN3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRGt5TlRJeE16UXpObG9YRFRNek1Ea3lNakl4TXpRek5sb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBcUFzaEF2bmcwN1ptRnlLaGZ5cS9GWHJrTzM4dVF6a04zQlNoWnBEa2NTVzlIOGxxemh4cjcvWXZkR3FnCisrckdQQ2Zra1dQTTZLNC9SZXVDZDhadEJUR3J0cGVEbXVPSHNpd0lPK0ZTN29ibFAwZWJMNFVmNkVqd2VwcWkKaCtOOE03UkRZaWVRMWhDcGt5K1NRUk9TbkFhVnZ1Y2xaZW4ram5VK2lMUzBGOXl3UUtoblRXci9QOEFwTnZTaApxNGo5NEpZYmpadUdrdG82K0wzclVzcHBMdi9TWFNQK1ZpdlFBRmYvRFZnV0Zad0p4OGY1SlF4bEttYnBpbjlXCmtpTnFZMHYvaFAyNHpIKzdWOTM5SmZMRXdNZVB3TWRrYXFsZGp2YkdUQlNwN0lKczNML2hzVVkyTkNUNHJVSnUKRUpnekF4dW01N0ZXeGYydnBQcFVBVmdBWlFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVVlJd25XUzJTc2FrWlk0R2E1UXNFZlFWQ2FWVXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUppb0d5dVB2bzlnTVUxenlVQm41bXpGaVUzVytPQ2RHeGJ3M1JjenFMckYKN0FKd2V3Q01PdHl1UDlkWDNlMEtuUkxIRXhra0F4ZzQwRGxmcTRkWWJZZGhaSFVRbm10dGsrRnhLTHMzU3VuWgovd2xUZGR3Y1BpUXl3WlJ0VUhCdGxGaUtkYzEydUtvd3hJemd5eWpZTGxTYktyNHpxanpnMkxoL0xicXRpWnVyCjdwNFlGL29aaWdFRllGQzBRTTVpZHl3SS91OEJ1Y1ZJdmRVeFNycTJJZnVDeDJkU0ZZUW0vZlVoVmlpWFBoTkMKdjduY2JPTGQ3OWtqMHVXeThJV1RRRWNKSVN3UW13V2xyZU1hcVovcGRrY1VVaEpYS29KaUdManV6aUFDZXJZRgowSXRJWmh2c3FXbk4vci9OSUZ3amttWlFDN3ZQcjZqV00rZTJiTzJib0hJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcUFzaEF2bmcwN1ptRnlLaGZ5cS9GWHJrTzM4dVF6a04zQlNoWnBEa2NTVzlIOGxxCnpoeHI3L1l2ZEdxZysrckdQQ2Zra1dQTTZLNC9SZXVDZDhadEJUR3J0cGVEbXVPSHNpd0lPK0ZTN29ibFAwZWIKTDRVZjZFandlcHFpaCtOOE03UkRZaWVRMWhDcGt5K1NRUk9TbkFhVnZ1Y2xaZW4ram5VK2lMUzBGOXl3UUtobgpUV3IvUDhBcE52U2hxNGo5NEpZYmpadUdrdG82K0wzclVzcHBMdi9TWFNQK1ZpdlFBRmYvRFZnV0Zad0p4OGY1CkpReGxLbWJwaW45V2tpTnFZMHYvaFAyNHpIKzdWOTM5SmZMRXdNZVB3TWRrYXFsZGp2YkdUQlNwN0lKczNML2gKc1VZMk5DVDRyVUp1RUpnekF4dW01N0ZXeGYydnBQcFVBVmdBWlFJREFRQUJBb0lCQVFDajJ6WTFVTEtKdmpHTwpIWmFjQ1hLSjMycnRHUFpqVmg3Tm10Qkcwc0h1RW41M29FOGs2MUhVaXBsN1N2M3VwdDdsaVlDMnhEbnFLUDVKCmozdUlqMU4rM1JBeTIwclluVVNUMTV1dngrYTE3NU5hUU5oeFhiM2ZJa0JiVEsxdkU4TG9KNzRNMThmQzlEeGwKNk4wVDE2SDl3ZTRDV0NGL1hzdDQzWm84Y3Zlb3kxT01mN2NvendUK3JGdXVXSWlxRHZhVnZQLzVvNVdaV3lsMgpBc1VjeFRyajdwM3Y5WEM2alc0bk0wRmtTdkM5eC9sM2Y0THBIdDdYRlJ6aVlrNjYxZzVzanE2WldLQWdLdngrCnRLODBsOTJPMkRZMWFhckE5WFNzUXBWVVZLWFNMbi84MzdCbmZrV3plQVJpUzBkd2pZUWMzZHNicVdQTEVqMHcKcHZPcGkvZ0JBb0dCQU5wTDd6VEsvclVIekxXVVVIcC94Y1h1UHVSbEFiSnVOUUkwQ0NqZUhHcnYrNGtkUlp0awo3ZnlTVVlLZ1JTTlYvWDVlRzB6dlo2d1FWUU9mR3Y2V3ZvUGVNYnBZaCtVMjU1VVN1b21VMm9abFZvbEkxbGRSCnpoNVpKdTB2U0hORTlGN1hqalZoTmxvUnB3MTFqNU5URzhEMmJYWHh6NWt1V0NjV1VUNHYyc2sxQW9HQkFNVVIKTzY2eGtyRTY5VVRkeVBydktVSE1jZ3lDRUpvVmxHclNva3M5SVljZWF2WHVJZkRxVTVWdUpkdlZ3Zm1CL08zZAoyRWZNNXprVDl3YWtnVDhmeUJXT1dCUUxPc0dKd1pHb0NMdFJPZ045ZEJUbVVNOWszNldoQkFRWDR1MU5HUklUCnJsbmJPRkRZeWxxanM3WjZmRnpiTUxrZ2JISmp4TWQ4OUE5NGhuQnhBb0dBT3E0bzJpY3JPdHlpNGJqQnZYdzEKWE5TRFlYL3BhZDZJTDFSdlVSVUx6STlBTFlhSjNKRFFESklFaVRtdC9DYTBZdERIUS9JakN6VEV0Wm1DZHlkcwpoU1FvZC9BdWI2WkhzR0g5ZE5obnViTHFCVE5vTXNiUndvU3lteFdYd3l5cENBbW50NSt2TFowTEsrb0xNMDRtCjZzTVRmNTRGOFNadEdleTg0QnViRTNVQ2dZRUFyVUNPV1BKU3hpL1FUQUEwWHJCK2RCT2F2UFpvUkI3dXdjOTIKMFhEb0ZoT2U4Nkd0QTFIdnMvTUhvN0xVKzFmVmx3WXZ6RWdQakhYSituUU1FUVFPOHl5V3NPQ0NnbjVxeUhTVApZS056dm5lLzQxUHMvYmh3aXZ2NVBPUUhKSnRnakN6elhwcEZjNFowdUtVdExTT1lURWFFR20yd0NnMCtoaWVMCnBrSk81M0VDZ1lBVW10akdpMENtQVhFc00reVlVZ3NWcWtmT3NTZEpVa01ydTJqZ1VSUWhBUmpLU254T0I2MnYKZjZua3VuRnIwcTdpeGJ5dVczQVJHckc0dWxBUTVaTXFTOFk4VHVVeWFteXBmQU1zV0JyYlQ4NjIyeGVaRTZOMgpsQ05Xb1BZNXhLRnJhYUg3QTZYbHFXQzBWWS9zRjBQb0tEZXY4b2dCdVR0UENnM1FzazFHYmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-service-network-signer.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcUFzaEF2bmcwN1ptRnlLaGZ5cS9GWHJrTzM4dVF6a04zQlNoWnBEa2NTVzlIOGxxCnpoeHI3L1l2ZEdxZysrckdQQ2Zra1dQTTZLNC9SZXVDZDhadEJUR3J0cGVEbXVPSHNpd0lPK0ZTN29ibFAwZWIKTDRVZjZFandlcHFpaCtOOE03UkRZaWVRMWhDcGt5K1NRUk9TbkFhVnZ1Y2xaZW4ram5VK2lMUzBGOXl3UUtobgpUV3IvUDhBcE52U2hxNGo5NEpZYmpadUdrdG82K0wzclVzcHBMdi9TWFNQK1ZpdlFBRmYvRFZnV0Zad0p4OGY1CkpReGxLbWJwaW45V2tpTnFZMHYvaFAyNHpIKzdWOTM5SmZMRXdNZVB3TWRrYXFsZGp2YkdUQlNwN0lKczNML2gKc1VZMk5DVDRyVUp1RUpnekF4dW01N0ZXeGYydnBQcFVBVmdBWlFJREFRQUJBb0lCQVFDajJ6WTFVTEtKdmpHTwpIWmFjQ1hLSjMycnRHUFpqVmg3Tm10Qkcwc0h1RW41M29FOGs2MUhVaXBsN1N2M3VwdDdsaVlDMnhEbnFLUDVKCmozdUlqMU4rM1JBeTIwclluVVNUMTV1dngrYTE3NU5hUU5oeFhiM2ZJa0JiVEsxdkU4TG9KNzRNMThmQzlEeGwKNk4wVDE2SDl3ZTRDV0NGL1hzdDQzWm84Y3Zlb3kxT01mN2NvendUK3JGdXVXSWlxRHZhVnZQLzVvNVdaV3lsMgpBc1VjeFRyajdwM3Y5WEM2alc0bk0wRmtTdkM5eC9sM2Y0THBIdDdYRlJ6aVlrNjYxZzVzanE2WldLQWdLdngrCnRLODBsOTJPMkRZMWFhckE5WFNzUXBWVVZLWFNMbi84MzdCbmZrV3plQVJpUzBkd2pZUWMzZHNicVdQTEVqMHcKcHZPcGkvZ0JBb0dCQU5wTDd6VEsvclVIekxXVVVIcC94Y1h1UHVSbEFiSnVOUUkwQ0NqZUhHcnYrNGtkUlp0awo3ZnlTVVlLZ1JTTlYvWDVlRzB6dlo2d1FWUU9mR3Y2V3ZvUGVNYnBZaCtVMjU1VVN1b21VMm9abFZvbEkxbGRSCnpoNVpKdTB2U0hORTlGN1hqalZoTmxvUnB3MTFqNU5URzhEMmJYWHh6NWt1V0NjV1VUNHYyc2sxQW9HQkFNVVIKTzY2eGtyRTY5VVRkeVBydktVSE1jZ3lDRUpvVmxHclNva3M5SVljZWF2WHVJZkRxVTVWdUpkdlZ3Zm1CL08zZAoyRWZNNXprVDl3YWtnVDhmeUJXT1dCUUxPc0dKd1pHb0NMdFJPZ045ZEJUbVVNOWszNldoQkFRWDR1MU5HUklUCnJsbmJPRkRZeWxxanM3WjZmRnpiTUxrZ2JISmp4TWQ4OUE5NGhuQnhBb0dBT3E0bzJpY3JPdHlpNGJqQnZYdzEKWE5TRFlYL3BhZDZJTDFSdlVSVUx6STlBTFlhSjNKRFFESklFaVRtdC9DYTBZdERIUS9JakN6VEV0Wm1DZHlkcwpoU1FvZC9BdWI2WkhzR0g5ZE5obnViTHFCVE5vTXNiUndvU3lteFdYd3l5cENBbW50NSt2TFowTEsrb0xNMDRtCjZzTVRmNTRGOFNadEdleTg0QnViRTNVQ2dZRUFyVUNPV1BKU3hpL1FUQUEwWHJCK2RCT2F2UFpvUkI3dXdjOTIKMFhEb0ZoT2U4Nkd0QTFIdnMvTUhvN0xVKzFmVmx3WXZ6RWdQakhYSituUU1FUVFPOHl5V3NPQ0NnbjVxeUhTVApZS056dm5lLzQxUHMvYmh3aXZ2NVBPUUhKSnRnakN6elhwcEZjNFowdUtVdExTT1lURWFFR20yd0NnMCtoaWVMCnBrSk81M0VDZ1lBVW10akdpMENtQVhFc00reVlVZ3NWcWtmT3NTZEpVa01ydTJqZ1VSUWhBUmpLU254T0I2MnYKZjZua3VuRnIwcTdpeGJ5dVczQVJHckc0dWxBUTVaTXFTOFk4VHVVeWFteXBmQU1zV0JyYlQ4NjIyeGVaRTZOMgpsQ05Xb1BZNXhLRnJhYUg3QTZYbHFXQzBWWS9zRjBQb0tEZXY4b2dCdVR0UENnM1FzazFHYmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/kube-apiserver-service-network-signer.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJTkxWVFBEbERCQXN3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRGt5TlRJeE16UXpObG9YRFRNek1Ea3lNakl4TXpRek5sb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBcUFzaEF2bmcwN1ptRnlLaGZ5cS9GWHJrTzM4dVF6a04zQlNoWnBEa2NTVzlIOGxxemh4cjcvWXZkR3FnCisrckdQQ2Zra1dQTTZLNC9SZXVDZDhadEJUR3J0cGVEbXVPSHNpd0lPK0ZTN29ibFAwZWJMNFVmNkVqd2VwcWkKaCtOOE03UkRZaWVRMWhDcGt5K1NRUk9TbkFhVnZ1Y2xaZW4ram5VK2lMUzBGOXl3UUtoblRXci9QOEFwTnZTaApxNGo5NEpZYmpadUdrdG82K0wzclVzcHBMdi9TWFNQK1ZpdlFBRmYvRFZnV0Zad0p4OGY1SlF4bEttYnBpbjlXCmtpTnFZMHYvaFAyNHpIKzdWOTM5SmZMRXdNZVB3TWRrYXFsZGp2YkdUQlNwN0lKczNML2hzVVkyTkNUNHJVSnUKRUpnekF4dW01N0ZXeGYydnBQcFVBVmdBWlFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVVlJd25XUzJTc2FrWlk0R2E1UXNFZlFWQ2FWVXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUppb0d5dVB2bzlnTVUxenlVQm41bXpGaVUzVytPQ2RHeGJ3M1JjenFMckYKN0FKd2V3Q01PdHl1UDlkWDNlMEtuUkxIRXhra0F4ZzQwRGxmcTRkWWJZZGhaSFVRbm10dGsrRnhLTHMzU3VuWgovd2xUZGR3Y1BpUXl3WlJ0VUhCdGxGaUtkYzEydUtvd3hJemd5eWpZTGxTYktyNHpxanpnMkxoL0xicXRpWnVyCjdwNFlGL29aaWdFRllGQzBRTTVpZHl3SS91OEJ1Y1ZJdmRVeFNycTJJZnVDeDJkU0ZZUW0vZlVoVmlpWFBoTkMKdjduY2JPTGQ3OWtqMHVXeThJV1RRRWNKSVN3UW13V2xyZU1hcVovcGRrY1VVaEpYS29KaUdManV6aUFDZXJZRgowSXRJWmh2c3FXbk4vci9OSUZ3amttWlFDN3ZQcjZqV00rZTJiTzJib0hJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeAPIServerToKubeletCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJV21sQkt5ZWUvL0F3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB5TXpBNU1qVXlNVE0wTXpsYUZ3MHlOREE1TWpReU1UTTBNemxhTUQ4eEVqQVFCZ05WCkJBc1RDVzl3Wlc1emFHbG1kREVwTUNjR0ExVUVBeE1nYTNWaVpTMWhjR2x6WlhKMlpYSXRkRzh0YTNWaVpXeGwKZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQy9Jd0s0cXFYaQpjZ2xaQlhndEs4RE4wSEphRnR4amNqY1k3djN0YXVXeTZ6TGI2TEN5L25XdE9Pc2RCN2xCL0VSMVc5anJNOGtvCmdreFZJaWdYK3RxblBzaDNIMmk3UUw0SE5WZENWb0lhcGlnbFIwYjlYVFNVVThIYkwvTEQ1eWF6cHFEOFVyT2gKV3VDcEtaY0xjYkVvazRVeFd4OHgxamNwbXRtVkdvWE41b3BjSksxQlNrTnhLdTNYd0s3S1lKK04zQkQzdEs1dApHRHpTUEJFOGVxZDdPVWVNUlJyQXEzN1I5RG4yM3NuOEp0bHBXQUJiVWJHK2h4MEtNS2NqVHFtWFJ1aUw5MmpoCjdsUUNPbEJaYnlRTFZuZXF2aGJSMlZlQ2RWd3RjQkRReExaRXNXZlhkcnJYQzhkQlpXYmVwQnJ1QWlTLzVQYzgKSTQzOTd6L2tLRjVWQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBRApBUUgvTUIwR0ExVWREZ1FXQkJRd0FEVEova2lWaDcyYmgzVTI3MmRqU28wVnh6QU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBVWNHRlJzV3lOektHZW1zeFhiQnp1cVRvVzNuRlRNT0xqUFNVTE9URDhpNXQyUlFjZFJ0cUZYeHYKdnQ0cng1N29zbS9zSnczejczUDFwcCs4ZXhSOUJrcGpHOVdpdGJQcDgzdFd2Y05wcDF5dGoxWEIrQkplbC9BeApDVEpEcGFTVGw2eWVIdGphOE45QnJqeTlCL1JCQjhMWWpJenJoelh0elhtNjhKcnVKKzdQTU5iYVhiOWc5RnZWCllxeGFDdkIzMWxoUnh6cWtjUld4QjBOM3cyNGY0dk4vZTREeFZEWTNva0NZRFlvallsSCtVMWRTWEt3VUt6Mk4KRWxWWUxZRDBNWER3SGVBblBrQmJKK2t2ai9EaWhIY0R1Y0E5eDhQUTFwbEpZMWFhQmtLNE9QVStGZHQ3andLLwowM1YwbHgwN0o3M3Rkb09jdDM1S3dDUUpwUEFUMkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-to-kubelet-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJV21sQkt5ZWUvL0F3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB5TXpBNU1qVXlNVE0wTXpsYUZ3MHlOREE1TWpReU1UTTBNemxhTUQ4eEVqQVFCZ05WCkJBc1RDVzl3Wlc1emFHbG1kREVwTUNjR0ExVUVBeE1nYTNWaVpTMWhjR2x6WlhKMlpYSXRkRzh0YTNWaVpXeGwKZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQy9Jd0s0cXFYaQpjZ2xaQlhndEs4RE4wSEphRnR4amNqY1k3djN0YXVXeTZ6TGI2TEN5L25XdE9Pc2RCN2xCL0VSMVc5anJNOGtvCmdreFZJaWdYK3RxblBzaDNIMmk3UUw0SE5WZENWb0lhcGlnbFIwYjlYVFNVVThIYkwvTEQ1eWF6cHFEOFVyT2gKV3VDcEtaY0xjYkVvazRVeFd4OHgxamNwbXRtVkdvWE41b3BjSksxQlNrTnhLdTNYd0s3S1lKK04zQkQzdEs1dApHRHpTUEJFOGVxZDdPVWVNUlJyQXEzN1I5RG4yM3NuOEp0bHBXQUJiVWJHK2h4MEtNS2NqVHFtWFJ1aUw5MmpoCjdsUUNPbEJaYnlRTFZuZXF2aGJSMlZlQ2RWd3RjQkRReExaRXNXZlhkcnJYQzhkQlpXYmVwQnJ1QWlTLzVQYzgKSTQzOTd6L2tLRjVWQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBRApBUUgvTUIwR0ExVWREZ1FXQkJRd0FEVEova2lWaDcyYmgzVTI3MmRqU28wVnh6QU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBVWNHRlJzV3lOektHZW1zeFhiQnp1cVRvVzNuRlRNT0xqUFNVTE9URDhpNXQyUlFjZFJ0cUZYeHYKdnQ0cng1N29zbS9zSnczejczUDFwcCs4ZXhSOUJrcGpHOVdpdGJQcDgzdFd2Y05wcDF5dGoxWEIrQkplbC9BeApDVEpEcGFTVGw2eWVIdGphOE45QnJqeTlCL1JCQjhMWWpJenJoelh0elhtNjhKcnVKKzdQTU5iYVhiOWc5RnZWCllxeGFDdkIzMWxoUnh6cWtjUld4QjBOM3cyNGY0dk4vZTREeFZEWTNva0NZRFlvallsSCtVMWRTWEt3VUt6Mk4KRWxWWUxZRDBNWER3SGVBblBrQmJKK2t2ai9EaWhIY0R1Y0E5eDhQUTFwbEpZMWFhQmtLNE9QVStGZHQ3andLLwowM1YwbHgwN0o3M3Rkb09jdDM1S3dDUUpwUEFUMkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeAPIServerToKubeletClientCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURiRENDQWxTZ0F3SUJBZ0lJQ3VzS0VjblIwNGd3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB5TXpBNU1qVXlNVE0wTXpsYUZ3MHlOREE1TWpReU1UTTBNemxhTURZeEZEQVNCZ05WCkJBb1RDMnQxWW1VdGJXRnpkR1Z5TVI0d0hBWURWUVFERXhWemVYTjBaVzA2YTNWaVpTMWhjR2x6WlhKMlpYSXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzJYMkNTQUFLZzRZelZicU9qUEw0cApQQzdnN3ZYOWM5TE1qVEVFSzJSWDZYNVMrZmFzT2pJNHg2TjJKT3JZdWczZmlUMm1LR09jeEtqTm1vRGlDWTI0CmQrd20vcVJSc1h6dlQwakZ1UjlGS0xzcjRoWkt4ZlhOOHJ3MmJ5bXhwWnEwOTRPS21PL2o3MmdCdFkrdHA3U0sKNDMrM0lPa3NmUzc1Tm00R2tPZEJpVFZzcE9FdW9ZSm52SG5qL2tXNVg2eXRZWjFpbTVXdUtTa2s5cVU3NXUyQgpMOW9NZzJMbUUzSHhnN2tIeWhVZ2NlR3FBbHVxTlZoNGFKcHFaMU8wT3FqRGFBRFNqakFWNmJ4blNpTHBZS0VQCkJrL0xnTVlMTzA3WWo4TlN5QWdBYzBDdGpDaDFTc3BmNWtGTVp3QngrMExadUFqYWlZR2JOL0JQU09zSUpRNlgKQWdNQkFBR2pkVEJ6TUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNEQWpBTQpCZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJRM3VUSFJxOU9RUkpRV0x6NnkwTHM5S0ZHYWVqQWZCZ05WCkhTTUVHREFXZ0JRd0FEVEova2lWaDcyYmgzVTI3MmRqU28wVnh6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUEKQjVpZDNSTzA5ejBMdmprdDVkcmFVQVc3bUlJSXZXSjJxVUR1N0JhMWM5QXVobmgrRithK2NTSGZtb25BUTFFTgovN0pnbWxWamx5OUJ3K3p1WHJOSmozWlBFd1J1S1NJUWhLcythTERJSnBlanV6NmJwWXNuV1g0Qmw5UHkwbWFECkRZaDNQdjBickpOWTJrVmdYY1d2Y2xhOVBwbm1xdmdDRVJoaUh3TDFUTTB1UlZMZjdSUjZialBaSG9LdGduVzUKMFlIVkh3cjB3UXJyb0J2dERMWDhMUVljbjh6ZERDZzRLOE9hVXZQNThSdDlGTlpSMWl1ekkxVVNqQ0k1akxxbApVTTIwL2FXOGFSRzJ5bkVlZjBGbmQ1djY0a3BrQmlxMU1HWldORkY3eVZ4cVV0WURxSUhPbmZBV1d3YWhISXBFCkZCSWRmZWFtZnR5ckVsYjN0d0Zibmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdGw5Z2tnQUNvT0dNMVc2am96eStLVHd1NE83MS9YUFN6STB4QkN0a1YrbCtVdm4yCnJEb3lPTWVqZGlUcTJMb04zNGs5cGloam5NU296WnFBNGdtTnVIZnNKdjZrVWJGODcwOUl4YmtmUlNpN0srSVcKU3NYMXpmSzhObThwc2FXYXRQZURpcGp2NCs5b0FiV1ByYWUwaXVOL3R5RHBMSDB1K1RadUJwRG5RWWsxYktUaApMcUdDWjd4NTQvNUZ1VitzcldHZFlwdVZyaWtwSlBhbE8rYnRnUy9hRElOaTVoTng4WU81QjhvVklISGhxZ0piCnFqVlllR2lhYW1kVHREcW93MmdBMG80d0ZlbThaMG9pNldDaER3WlB5NERHQ3p0TzJJL0RVc2dJQUhOQXJZd28KZFVyS1grWkJUR2NBY2Z0QzJiZ0kyb21CbXpmd1QwanJDQ1VPbHdJREFRQUJBb0lCQUQzekRDVE1LQmhxUmFMQwpvSWQwdk12WkM3dVFzTExWdzBlRXRwL0o5WjMvVE0vMjVSbi84c3RpMVYzdWtHL3FVNGdaWUgydXZwZWtIZ3NwCmJwcFowSEJYSERycXlQcVBKZmRNb1ZXNDJxeHRkNWNpaDV3Q3ZzcWtwOVo5MEZYdUFTMXozcFVYK25VYy8rR0UKd1RlbC9pZ251MXlEcTNGWFhMdC9COFRuT0FjRWQzRmsxRFRtWk9JOFdsakM1V3JlQkxPWlRzamNiR1c1V3NHSQpTcFk5OSsvbjJ3UWM2MDNtK0NZeTlBLzEvcDUvVW5reFdzejZBSlZlcTBSczRGRVE5OGI2NjR4NUY4d2pzVkhnCmwxMWFTdjRTVW1kRG1DUEd3ZzJJNnJ2cTlYd0lPVk1oL0RZdDNJd1VOOFNmc2lmVUR6REd4L0hWRzVTSDlsbW4KNFl4TUxwRUNnWUVBNjJxWGh3YWhLY2hvc1FPRk9qUFlsaTBiZ3MzNThxNW5KMTZvV3NRZjdYcVpKS2wyTkJWdAo1eUhZWm9jU1dlTnVFZFNCRGpoUmVyaUFVZHRoQytTZ3NFMDU0RzI1TmFRaWI2TVNoNXZpRlhldmtKM2JFdy9YCkQwUW8yZWtuYVhCRWZpWW9IMTh4TldYSzBieFI1K0cxMTBFUFJwWEJsZ29YNDlkWHJDVnZaYk1DZ1lFQXhsRjgKcTg0alZIUE1uU1NzVHE1UHBJWDBWcXl5Z04zNXRGK1V2Q1VjOTdsL3ZyOXdSTDhZYTdueUZqQjVYL2tyUkVWcgpYSmpvN2xiSnpYcTNCSnZvaGwxeXk0TWRNUWVOZ3BEUTIwaytWQjBoaGFQV21mMVFMQjZMZWhEUE9NNFRhL0lYCkhLZ010NTBvKzk1MzlYN3RkZ2MzQlhiV1dPSnVheWk3VXBJT1NZMENnWUVBZzZwVUlWTFY1SGFRQnlDKzdMUisKbUUrV0tXeG1OUkxSNHJVUVYrT0ZMOTczdEFlTGNzbmhjL243L0N2aldaN1h1dVV0WVBTaXJZNXZSbGo2U0JxUQp2TW9VYXE4emZRclZyN1oyOEoyQXJ4MEhka3l6Y0UvVnFsWW11dW1wLzFDcEhoemRKOTZudVFPN2tkNVB1TzhHCk11UFNWVm9Bc1pmbmtLaXFBai9Wcy8wQ2dZRUF1U2h6Z2VTZ1Q4VWVFTW1ncG9WUWpvY1NyYW5ucnpHUVpidW4KbmxINFRjRy9aMVJOZWFJQkp2TWc5MTZpczl4cmJQNXpVcXpoTFVXU2ZHcEtYZDlDcGRDeDBSakZOSFdjeFg1Mwp3WVVNMEhPeVRKZS9VVjZVYjl6RTFGN0ZXbi9zMmlmWk5FUWlPM3hjTzJ4bUM2dEtBWnlTM21NcGxTc3pkSkUrCjg4U3gyakVDZ1lFQTVtaE1sT3ExTWVLWk4reFQwOEFKL0Jqc3NUNlVTTlFFcFhNUE9hdHhxRXYrTkd2OVZPUEcKalZuUWFRTEtxRFZZWVlSV0JlVGhmTVV6UGZqT1ZEYnp0NE1rTlQ2MmQ5azdXL0ZKVTFSNVh5aW82d0liRlBHeAprb25GNlpwWE0rL1Yycm9PSThPeXZPV1JVa2ZGUUFxdFpXdzZ3SjBTbWJTQ2ZRblExUjFlYmNVPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-to-kubelet-client.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdGw5Z2tnQUNvT0dNMVc2am96eStLVHd1NE83MS9YUFN6STB4QkN0a1YrbCtVdm4yCnJEb3lPTWVqZGlUcTJMb04zNGs5cGloam5NU296WnFBNGdtTnVIZnNKdjZrVWJGODcwOUl4YmtmUlNpN0srSVcKU3NYMXpmSzhObThwc2FXYXRQZURpcGp2NCs5b0FiV1ByYWUwaXVOL3R5RHBMSDB1K1RadUJwRG5RWWsxYktUaApMcUdDWjd4NTQvNUZ1VitzcldHZFlwdVZyaWtwSlBhbE8rYnRnUy9hRElOaTVoTng4WU81QjhvVklISGhxZ0piCnFqVlllR2lhYW1kVHREcW93MmdBMG80d0ZlbThaMG9pNldDaER3WlB5NERHQ3p0TzJJL0RVc2dJQUhOQXJZd28KZFVyS1grWkJUR2NBY2Z0QzJiZ0kyb21CbXpmd1QwanJDQ1VPbHdJREFRQUJBb0lCQUQzekRDVE1LQmhxUmFMQwpvSWQwdk12WkM3dVFzTExWdzBlRXRwL0o5WjMvVE0vMjVSbi84c3RpMVYzdWtHL3FVNGdaWUgydXZwZWtIZ3NwCmJwcFowSEJYSERycXlQcVBKZmRNb1ZXNDJxeHRkNWNpaDV3Q3ZzcWtwOVo5MEZYdUFTMXozcFVYK25VYy8rR0UKd1RlbC9pZ251MXlEcTNGWFhMdC9COFRuT0FjRWQzRmsxRFRtWk9JOFdsakM1V3JlQkxPWlRzamNiR1c1V3NHSQpTcFk5OSsvbjJ3UWM2MDNtK0NZeTlBLzEvcDUvVW5reFdzejZBSlZlcTBSczRGRVE5OGI2NjR4NUY4d2pzVkhnCmwxMWFTdjRTVW1kRG1DUEd3ZzJJNnJ2cTlYd0lPVk1oL0RZdDNJd1VOOFNmc2lmVUR6REd4L0hWRzVTSDlsbW4KNFl4TUxwRUNnWUVBNjJxWGh3YWhLY2hvc1FPRk9qUFlsaTBiZ3MzNThxNW5KMTZvV3NRZjdYcVpKS2wyTkJWdAo1eUhZWm9jU1dlTnVFZFNCRGpoUmVyaUFVZHRoQytTZ3NFMDU0RzI1TmFRaWI2TVNoNXZpRlhldmtKM2JFdy9YCkQwUW8yZWtuYVhCRWZpWW9IMTh4TldYSzBieFI1K0cxMTBFUFJwWEJsZ29YNDlkWHJDVnZaYk1DZ1lFQXhsRjgKcTg0alZIUE1uU1NzVHE1UHBJWDBWcXl5Z04zNXRGK1V2Q1VjOTdsL3ZyOXdSTDhZYTdueUZqQjVYL2tyUkVWcgpYSmpvN2xiSnpYcTNCSnZvaGwxeXk0TWRNUWVOZ3BEUTIwaytWQjBoaGFQV21mMVFMQjZMZWhEUE9NNFRhL0lYCkhLZ010NTBvKzk1MzlYN3RkZ2MzQlhiV1dPSnVheWk3VXBJT1NZMENnWUVBZzZwVUlWTFY1SGFRQnlDKzdMUisKbUUrV0tXeG1OUkxSNHJVUVYrT0ZMOTczdEFlTGNzbmhjL243L0N2aldaN1h1dVV0WVBTaXJZNXZSbGo2U0JxUQp2TW9VYXE4emZRclZyN1oyOEoyQXJ4MEhka3l6Y0UvVnFsWW11dW1wLzFDcEhoemRKOTZudVFPN2tkNVB1TzhHCk11UFNWVm9Bc1pmbmtLaXFBai9Wcy8wQ2dZRUF1U2h6Z2VTZ1Q4VWVFTW1ncG9WUWpvY1NyYW5ucnpHUVpidW4KbmxINFRjRy9aMVJOZWFJQkp2TWc5MTZpczl4cmJQNXpVcXpoTFVXU2ZHcEtYZDlDcGRDeDBSakZOSFdjeFg1Mwp3WVVNMEhPeVRKZS9VVjZVYjl6RTFGN0ZXbi9zMmlmWk5FUWlPM3hjTzJ4bUM2dEtBWnlTM21NcGxTc3pkSkUrCjg4U3gyakVDZ1lFQTVtaE1sT3ExTWVLWk4reFQwOEFKL0Jqc3NUNlVTTlFFcFhNUE9hdHhxRXYrTkd2OVZPUEcKalZuUWFRTEtxRFZZWVlSV0JlVGhmTVV6UGZqT1ZEYnp0NE1rTlQ2MmQ5azdXL0ZKVTFSNVh5aW82d0liRlBHeAprb25GNlpwWE0rL1Yycm9PSThPeXZPV1JVa2ZGUUFxdFpXdzZ3SjBTbWJTQ2ZRblExUjFlYmNVPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/kube-apiserver-to-kubelet-client.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURiRENDQWxTZ0F3SUJBZ0lJQ3VzS0VjblIwNGd3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB5TXpBNU1qVXlNVE0wTXpsYUZ3MHlOREE1TWpReU1UTTBNemxhTURZeEZEQVNCZ05WCkJBb1RDMnQxWW1VdGJXRnpkR1Z5TVI0d0hBWURWUVFERXhWemVYTjBaVzA2YTNWaVpTMWhjR2x6WlhKMlpYSXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzJYMkNTQUFLZzRZelZicU9qUEw0cApQQzdnN3ZYOWM5TE1qVEVFSzJSWDZYNVMrZmFzT2pJNHg2TjJKT3JZdWczZmlUMm1LR09jeEtqTm1vRGlDWTI0CmQrd20vcVJSc1h6dlQwakZ1UjlGS0xzcjRoWkt4ZlhOOHJ3MmJ5bXhwWnEwOTRPS21PL2o3MmdCdFkrdHA3U0sKNDMrM0lPa3NmUzc1Tm00R2tPZEJpVFZzcE9FdW9ZSm52SG5qL2tXNVg2eXRZWjFpbTVXdUtTa2s5cVU3NXUyQgpMOW9NZzJMbUUzSHhnN2tIeWhVZ2NlR3FBbHVxTlZoNGFKcHFaMU8wT3FqRGFBRFNqakFWNmJ4blNpTHBZS0VQCkJrL0xnTVlMTzA3WWo4TlN5QWdBYzBDdGpDaDFTc3BmNWtGTVp3QngrMExadUFqYWlZR2JOL0JQU09zSUpRNlgKQWdNQkFBR2pkVEJ6TUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNEQWpBTQpCZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJRM3VUSFJxOU9RUkpRV0x6NnkwTHM5S0ZHYWVqQWZCZ05WCkhTTUVHREFXZ0JRd0FEVEova2lWaDcyYmgzVTI3MmRqU28wVnh6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUEKQjVpZDNSTzA5ejBMdmprdDVkcmFVQVc3bUlJSXZXSjJxVUR1N0JhMWM5QXVobmgrRithK2NTSGZtb25BUTFFTgovN0pnbWxWamx5OUJ3K3p1WHJOSmozWlBFd1J1S1NJUWhLcythTERJSnBlanV6NmJwWXNuV1g0Qmw5UHkwbWFECkRZaDNQdjBickpOWTJrVmdYY1d2Y2xhOVBwbm1xdmdDRVJoaUh3TDFUTTB1UlZMZjdSUjZialBaSG9LdGduVzUKMFlIVkh3cjB3UXJyb0J2dERMWDhMUVljbjh6ZERDZzRLOE9hVXZQNThSdDlGTlpSMWl1ekkxVVNqQ0k1akxxbApVTTIwL2FXOGFSRzJ5bkVlZjBGbmQ1djY0a3BrQmlxMU1HWldORkY3eVZ4cVV0WURxSUhPbmZBV1d3YWhISXBFCkZCSWRmZWFtZnR5ckVsYjN0d0Zibmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeAPIServerToKubeletSignerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJV21sQkt5ZWUvL0F3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB5TXpBNU1qVXlNVE0wTXpsYUZ3MHlOREE1TWpReU1UTTBNemxhTUQ4eEVqQVFCZ05WCkJBc1RDVzl3Wlc1emFHbG1kREVwTUNjR0ExVUVBeE1nYTNWaVpTMWhjR2x6WlhKMlpYSXRkRzh0YTNWaVpXeGwKZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQy9Jd0s0cXFYaQpjZ2xaQlhndEs4RE4wSEphRnR4amNqY1k3djN0YXVXeTZ6TGI2TEN5L25XdE9Pc2RCN2xCL0VSMVc5anJNOGtvCmdreFZJaWdYK3RxblBzaDNIMmk3UUw0SE5WZENWb0lhcGlnbFIwYjlYVFNVVThIYkwvTEQ1eWF6cHFEOFVyT2gKV3VDcEtaY0xjYkVvazRVeFd4OHgxamNwbXRtVkdvWE41b3BjSksxQlNrTnhLdTNYd0s3S1lKK04zQkQzdEs1dApHRHpTUEJFOGVxZDdPVWVNUlJyQXEzN1I5RG4yM3NuOEp0bHBXQUJiVWJHK2h4MEtNS2NqVHFtWFJ1aUw5MmpoCjdsUUNPbEJaYnlRTFZuZXF2aGJSMlZlQ2RWd3RjQkRReExaRXNXZlhkcnJYQzhkQlpXYmVwQnJ1QWlTLzVQYzgKSTQzOTd6L2tLRjVWQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBRApBUUgvTUIwR0ExVWREZ1FXQkJRd0FEVEova2lWaDcyYmgzVTI3MmRqU28wVnh6QU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBVWNHRlJzV3lOektHZW1zeFhiQnp1cVRvVzNuRlRNT0xqUFNVTE9URDhpNXQyUlFjZFJ0cUZYeHYKdnQ0cng1N29zbS9zSnczejczUDFwcCs4ZXhSOUJrcGpHOVdpdGJQcDgzdFd2Y05wcDF5dGoxWEIrQkplbC9BeApDVEpEcGFTVGw2eWVIdGphOE45QnJqeTlCL1JCQjhMWWpJenJoelh0elhtNjhKcnVKKzdQTU5iYVhiOWc5RnZWCllxeGFDdkIzMWxoUnh6cWtjUld4QjBOM3cyNGY0dk4vZTREeFZEWTNva0NZRFlvallsSCtVMWRTWEt3VUt6Mk4KRWxWWUxZRDBNWER3SGVBblBrQmJKK2t2ai9EaWhIY0R1Y0E5eDhQUTFwbEpZMWFhQmtLNE9QVStGZHQ3andLLwowM1YwbHgwN0o3M3Rkb09jdDM1S3dDUUpwUEFUMkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdnlNQ3VLcWw0bklKV1FWNExTdkF6ZEJ5V2hiY1kzSTNHTzc5N1dybHN1c3kyK2l3CnN2NTFyVGpySFFlNVFmeEVkVnZZNnpQSktJSk1WU0lvRi9yYXB6N0lkeDlvdTBDK0J6VlhRbGFDR3FZb0pVZEcKL1YwMGxGUEIyeS95dytjbXM2YWcvRkt6b1ZyZ3FTbVhDM0d4S0pPRk1Wc2ZNZFkzS1pyWmxScUZ6ZWFLWENTdApRVXBEY1NydDE4Q3V5bUNmamR3UTk3U3ViUmc4MGp3UlBIcW5lemxIakVVYXdLdCswZlE1OXQ3Si9DYlphVmdBClcxR3h2b2NkQ2pDbkkwNnBsMGJvaS9kbzRlNVVBanBRV1c4a0MxWjNxcjRXMGRsWGduVmNMWEFRME1TMlJMRm4KMTNhNjF3dkhRV1ZtM3FRYTdnSWt2K1QzUENPTi9lOC81Q2hlVlFJREFRQUJBb0lCQURhQXhVWGpZMm92R250SQpFL3pOZlMwelEyaHRIR3MvSm5iMXIzTUVDSHY4bFlRZjFrTTBURm9ZNFBKbVFXMlBnZlgxT3VYVzNvV3VvaFdrCnA4b3V2aXJ5dkRjN3ZhR24xSWc1cmFnOUF0eVdoTndjZHlISWNqWFpyRzNVUG1XZWhHcTJHVEhhWTE2ZmkzQ3gKYTJEWUNxeUhaSE91aURhdDN3eitHdzFwZ3I0emdSZ2tjcGhKdVFSd293dWlPT1poRytPU2p5cVdhWndmQlc5aQpDVHBydExDUVVRRExSbkxiaGhBU051MnMrWFhzMk5XcUhvV1VBUGhiaFJaa2lrZHRrUzRkUVVQYi9QcDdxM3EzClBXWExBdUpMcXlueHRMUXA5T3pGTnk5WmtjRFFtTFFBUjI3Ti9EU1lNVDQvSkczTkJvaTNvWFlkWXQ4eWFHdVQKaDZRS2dBRUNnWUVBMjR5S0w0L1NIUmFKQkcxNU9zaXRwd1NKcTRaRFZKbi9SM0pUTnVJT2V3cDhwUXdwU3Z6TwoxR01DeHRQYnNyNkcxT04vYVVtazVSSXJGUWt1USttTGFkTm9GSjVDNVhPSkE5QkErektldmhpZWFqOGZMRVBKCk1wYklVOXUyWElScGMrWitscTFiV3dHekVRU2pjczd6WkttcDNaaG9pOXl1cUJRL3VHZTdFWFVDZ1lFQTN0N2UKdWpzcDRxYzJhWGRiampDdmJ0UVZOVU5XeGRnOVVodmNyaUMyREgzUnA0YThKcFhPdkQ5RXBEdng1YXF3ZVJkVwovNThDb0tzWHJzV3pDVExjVmk0eGQydU5ETVJxRGJKZ0JCaXI1VlBWclIvVCtkRW1ZRG5JbUVHM0R4MXJrVFdICkMwSmNpZUZYVVJ1b0RiODdaRzlVTVh5Syt6TlVXdnRHZjdZS25XRUNnWUVBdVF6NVFHT0IzMENxVnBBTFdZL2kKUmw5ZHhyUlJOaExqQjQ2R00wRlFvVWJTanE3MGN4OHBHZjBtVHY0dE5MakFudG50LzRteU1kNGhjQWFmOTEvMwpRVWlPZHFwNmlqbmFwOXMxbWtVdFpkOE1UMU5LN0IxcWpYaG4rNzY2TTdycncyUHBHUW1mY2RLNTRzTTlIVHp3CkM4Mnh2blNDMGpnOUFyQ21rTURsL1MwQ2dZQjJ2Qi9HOGF3djcwdWl4bzhGWXRTajQrTmttL3FIcnR1RWVnbUkKenk2TjJ4NHQ5UzhhRTJldmpMbGlFZm1lbE9BdHN3eUxaTWgrbG9nb2VYVVhxbndPZ2MraXdxN0RwWVNteFdnMwo1bmoxMVVNYVY4R1Q3eVJWMFpNWDRyTEhIN0ptQ3pGbUF6WFAwemkwb2xwVzhKR1F3V3NHYmthUTY5aStHKzZFCkxaVGNJUUtCZ1FDMjRaQWt1OGxsNjBkZTE4SFIzcCtPWVpPTmVTTW8rZ1JNVERtQUxhenA0bFRhOTZqWTZ3ZFkKZFJxMU9yTG5INkhySnBwbVFncUFWMC9vWHprdWdUUmozRFhLeVc2bFBuTVlIRUx6bW1wWFhWU1ZCYk16UXhkSgp0ZnIyanVGNXppcDZUYTNYbjE2VE9mRG5zUURZYlJBaDBVREhWQzdyYWFLM3ZodG56NnI5OGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-to-kubelet-signer.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdnlNQ3VLcWw0bklKV1FWNExTdkF6ZEJ5V2hiY1kzSTNHTzc5N1dybHN1c3kyK2l3CnN2NTFyVGpySFFlNVFmeEVkVnZZNnpQSktJSk1WU0lvRi9yYXB6N0lkeDlvdTBDK0J6VlhRbGFDR3FZb0pVZEcKL1YwMGxGUEIyeS95dytjbXM2YWcvRkt6b1ZyZ3FTbVhDM0d4S0pPRk1Wc2ZNZFkzS1pyWmxScUZ6ZWFLWENTdApRVXBEY1NydDE4Q3V5bUNmamR3UTk3U3ViUmc4MGp3UlBIcW5lemxIakVVYXdLdCswZlE1OXQ3Si9DYlphVmdBClcxR3h2b2NkQ2pDbkkwNnBsMGJvaS9kbzRlNVVBanBRV1c4a0MxWjNxcjRXMGRsWGduVmNMWEFRME1TMlJMRm4KMTNhNjF3dkhRV1ZtM3FRYTdnSWt2K1QzUENPTi9lOC81Q2hlVlFJREFRQUJBb0lCQURhQXhVWGpZMm92R250SQpFL3pOZlMwelEyaHRIR3MvSm5iMXIzTUVDSHY4bFlRZjFrTTBURm9ZNFBKbVFXMlBnZlgxT3VYVzNvV3VvaFdrCnA4b3V2aXJ5dkRjN3ZhR24xSWc1cmFnOUF0eVdoTndjZHlISWNqWFpyRzNVUG1XZWhHcTJHVEhhWTE2ZmkzQ3gKYTJEWUNxeUhaSE91aURhdDN3eitHdzFwZ3I0emdSZ2tjcGhKdVFSd293dWlPT1poRytPU2p5cVdhWndmQlc5aQpDVHBydExDUVVRRExSbkxiaGhBU051MnMrWFhzMk5XcUhvV1VBUGhiaFJaa2lrZHRrUzRkUVVQYi9QcDdxM3EzClBXWExBdUpMcXlueHRMUXA5T3pGTnk5WmtjRFFtTFFBUjI3Ti9EU1lNVDQvSkczTkJvaTNvWFlkWXQ4eWFHdVQKaDZRS2dBRUNnWUVBMjR5S0w0L1NIUmFKQkcxNU9zaXRwd1NKcTRaRFZKbi9SM0pUTnVJT2V3cDhwUXdwU3Z6TwoxR01DeHRQYnNyNkcxT04vYVVtazVSSXJGUWt1USttTGFkTm9GSjVDNVhPSkE5QkErektldmhpZWFqOGZMRVBKCk1wYklVOXUyWElScGMrWitscTFiV3dHekVRU2pjczd6WkttcDNaaG9pOXl1cUJRL3VHZTdFWFVDZ1lFQTN0N2UKdWpzcDRxYzJhWGRiampDdmJ0UVZOVU5XeGRnOVVodmNyaUMyREgzUnA0YThKcFhPdkQ5RXBEdng1YXF3ZVJkVwovNThDb0tzWHJzV3pDVExjVmk0eGQydU5ETVJxRGJKZ0JCaXI1VlBWclIvVCtkRW1ZRG5JbUVHM0R4MXJrVFdICkMwSmNpZUZYVVJ1b0RiODdaRzlVTVh5Syt6TlVXdnRHZjdZS25XRUNnWUVBdVF6NVFHT0IzMENxVnBBTFdZL2kKUmw5ZHhyUlJOaExqQjQ2R00wRlFvVWJTanE3MGN4OHBHZjBtVHY0dE5MakFudG50LzRteU1kNGhjQWFmOTEvMwpRVWlPZHFwNmlqbmFwOXMxbWtVdFpkOE1UMU5LN0IxcWpYaG4rNzY2TTdycncyUHBHUW1mY2RLNTRzTTlIVHp3CkM4Mnh2blNDMGpnOUFyQ21rTURsL1MwQ2dZQjJ2Qi9HOGF3djcwdWl4bzhGWXRTajQrTmttL3FIcnR1RWVnbUkKenk2TjJ4NHQ5UzhhRTJldmpMbGlFZm1lbE9BdHN3eUxaTWgrbG9nb2VYVVhxbndPZ2MraXdxN0RwWVNteFdnMwo1bmoxMVVNYVY4R1Q3eVJWMFpNWDRyTEhIN0ptQ3pGbUF6WFAwemkwb2xwVzhKR1F3V3NHYmthUTY5aStHKzZFCkxaVGNJUUtCZ1FDMjRaQWt1OGxsNjBkZTE4SFIzcCtPWVpPTmVTTW8rZ1JNVERtQUxhenA0bFRhOTZqWTZ3ZFkKZFJxMU9yTG5INkhySnBwbVFncUFWMC9vWHprdWdUUmozRFhLeVc2bFBuTVlIRUx6bW1wWFhWU1ZCYk16UXhkSgp0ZnIyanVGNXppcDZUYTNYbjE2VE9mRG5zUURZYlJBaDBVREhWQzdyYWFLM3ZodG56NnI5OGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/kube-apiserver-to-kubelet-signer.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJV21sQkt5ZWUvL0F3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB5TXpBNU1qVXlNVE0wTXpsYUZ3MHlOREE1TWpReU1UTTBNemxhTUQ4eEVqQVFCZ05WCkJBc1RDVzl3Wlc1emFHbG1kREVwTUNjR0ExVUVBeE1nYTNWaVpTMWhjR2x6WlhKMlpYSXRkRzh0YTNWaVpXeGwKZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQy9Jd0s0cXFYaQpjZ2xaQlhndEs4RE4wSEphRnR4amNqY1k3djN0YXVXeTZ6TGI2TEN5L25XdE9Pc2RCN2xCL0VSMVc5anJNOGtvCmdreFZJaWdYK3RxblBzaDNIMmk3UUw0SE5WZENWb0lhcGlnbFIwYjlYVFNVVThIYkwvTEQ1eWF6cHFEOFVyT2gKV3VDcEtaY0xjYkVvazRVeFd4OHgxamNwbXRtVkdvWE41b3BjSksxQlNrTnhLdTNYd0s3S1lKK04zQkQzdEs1dApHRHpTUEJFOGVxZDdPVWVNUlJyQXEzN1I5RG4yM3NuOEp0bHBXQUJiVWJHK2h4MEtNS2NqVHFtWFJ1aUw5MmpoCjdsUUNPbEJaYnlRTFZuZXF2aGJSMlZlQ2RWd3RjQkRReExaRXNXZlhkcnJYQzhkQlpXYmVwQnJ1QWlTLzVQYzgKSTQzOTd6L2tLRjVWQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBRApBUUgvTUIwR0ExVWREZ1FXQkJRd0FEVEova2lWaDcyYmgzVTI3MmRqU28wVnh6QU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBVWNHRlJzV3lOektHZW1zeFhiQnp1cVRvVzNuRlRNT0xqUFNVTE9URDhpNXQyUlFjZFJ0cUZYeHYKdnQ0cng1N29zbS9zSnczejczUDFwcCs4ZXhSOUJrcGpHOVdpdGJQcDgzdFd2Y05wcDF5dGoxWEIrQkplbC9BeApDVEpEcGFTVGw2eWVIdGphOE45QnJqeTlCL1JCQjhMWWpJenJoelh0elhtNjhKcnVKKzdQTU5iYVhiOWc5RnZWCllxeGFDdkIzMWxoUnh6cWtjUld4QjBOM3cyNGY0dk4vZTREeFZEWTNva0NZRFlvallsSCtVMWRTWEt3VUt6Mk4KRWxWWUxZRDBNWER3SGVBblBrQmJKK2t2ai9EaWhIY0R1Y0E5eDhQUTFwbEpZMWFhQmtLNE9QVStGZHQ3andLLwowM1YwbHgwN0o3M3Rkb09jdDM1S3dDUUpwUEFUMkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeControlPlaneCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURORENDQWh5Z0F3SUJBZ0lJSHVIUnU4eDN5eDR3RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRJek1Ea3lOVEl4TXpRek9Wb1hEVEkwTURreU5ESXhNelF6T1Zvd09ERVNNQkFHQTFVRUN4TUpiM0JsCmJuTm9hV1owTVNJd0lBWURWUVFERXhscmRXSmxMV052Ym5SeWIyd3RjR3hoYm1VdGMybG5ibVZ5TUlJQklqQU4KQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBOE9JUFc1azUwYjNrelQrWmVXbWg1ZzFpM2xsQwpOS1lLMDRiNU92N1F5aTMwV3QrR1pPRkVnU3I1NFRmWWg1bmIrTml6RFp6cWFOMlZnK2VrNURTRUxhbmRGQXVWCjljeHVNamV1NGllVThpS3NOYlh1ZHIzV09aazV1d2VnMFRjRmhidzhkak5BYVFGVXV6dHlJVEtNdDJWUFVIMEkKNWpZVC9BMThRRSt5SXRKODFIRE5OWFMxaVBSUS9tNkMrcVN0dEd3MnhzeUhuUjNxMjBWeGR2cTlUOEV3cTE0SApuS08veUppQWFWZmNsd0FJN1drcEVqZGVUZ1cvVkd0VGNSbndzQlFEZEtGbmhxU01ERlVNck9MVjZ0Z2pJeWU5CnJSaUh5cG4wakI4MjNIMkhQOHVmNW5FcDBUcjFPdTNQQmdHWW85Y3NGb0xzQUdOekpHV0ViWXl1M3dJREFRQUIKbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVQozVzRXNEVUZ2xtV29GTG8yK01tT0U2NEloZzR3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUxHS1FPamhJWDMyCktiMzEzTzlZYTRHR2llTmRrWTR5YWhERXJPQzdlcTNqQnNVdWN3dW9EQks3KzkyRDg4dXBiVVZGTTRTcjVIaGIKcW5aY0U0bVpSZzIxLzMxSTl3NTlZSHFsN0ZTNHl6RkY4TUo0M1Q5VjZoKy9SRGRZWU9DSWFMRmdkTXJMSG9YSgptTzBxZWI0dGtYdlBkRkJoSUZNdFpOZEZWMHZmMENQeGpnYUVZQitjUVVuMjh3YUZvdktNSnJheEtYS1loV3I4CmZtSkxLT3RScms2MXh6b3NmM2lkM3dkTjJBMEdINDJ1eG5EMjdTYjQ5ZlFNQWNZVUtKZkdIQjFBRDJ2RjByeXAKLy9TZDlvL3lNK1M3ZmpIS1VJblNSNEx1T3M4MkRwRkYwU1Q5NHJFTHhhcG0xYzZnZHlHQk1ldVVjTndhT056ZQo0ZENkWEJQTWVuMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRE1qQ0NBaHFnQXdJQkFnSUlNUXZUTFlObGViQXdEUVlKS29aSWh2Y05BUUVMQlFBd056RVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNFd0h3WURWUVFERXhocmRXSmxMV0Z3YVhObGNuWmxjaTFzWWkxemFXZHVaWEl3CkhoY05Nak13T1RJMU1qRXpORE0yV2hjTk16TXdPVEl5TWpFek5ETTJXakEzTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhJVEFmQmdOVkJBTVRHR3QxWW1VdFlYQnBjMlZ5ZG1WeUxXeGlMWE5wWjI1bGNqQ0NBU0l3RFFZSgpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFLYUF1TnphWThWY2EyQ0huTThudmh3L0V6UWRtcVJ4CkszWGkrekxSYkplSzFmSjQ1cWw5dlV5UGMzQy9OOVdUZjRNSGlYZjJXWVpMQ29mYVRrSmViSzVJYWs3akFvci8KWmpiOUc2dkN5U21sOTMybVY5YmdBTlRJVzdjNU5HYnRDd0srNlh5bFB2eU92am4zRFRYZXNPMXZBNFUva3pXTwpoNzdOSnVTZHJGbWVOT2dSc2ZZV0p4QzBHL2x6aytDNzhmYUJrMkgwN3dwajhZZlNGdGRnVEdWTTRUVUhsTTFrCldCQlNoN1Vjbi9MOUNmYTFOeUEzYldaNkZNOXlhT2lrZ2Z1YTUyUUlKNnErNnRFWTFVbnNad1lSakRKdEFaWkYKUEk2dDhXK0J2VmNjcVlPKzZkY3llY3pqYllrdGlwR3BEMUVmU2dHRzhzVjJXNDdRWkNST0J4a0NBd0VBQWFOQwpNRUF3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTllMCml0VWZWZ2J6RXFKUUJlNTlNS2ZobWxRT01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQkFaZ3VqbVlETVZtTkkKMk9uNkY0enpVQzc4bWU0WkJDcnJ3eVJZdkZGT0pPN2V3NjA0UFBDWVIvM09KWVpkd2srdjVsSjNPQUg5ajRragpXbnlMY2lWR2pobzA2M3JjbVhXb0lTUkh6bVp5V0ppZXNtYWdHVzdjRTlkYWU2cEdqZHQ3QUFNZkFhU0Vsa3VGCkhHVnBBSlZ4cTlvK2ZwT2Z3RWozalFJTFhzL01YTVBTcUwrdnFucjdKRkpQYUIzWm1ITFoxcFhQaFA0aTJzZWwKRFJGNlVQTEZxWThaSWhmVXFRcCtrbCtwcTN0TEQ2RDVLbmRPMFJjcSszaFF4YVB6TSs5eTBJQjlpZkpQemtTcQpUN05ZeCsvVmlFRE1ER2RuOHJGYmxVdE50Z05rV28vY041dnVNVER0NXFFa0tnTjlyclFYY09QbE1xc3Y4c0VFCll5QmpXc1JICi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJUlVZVGpXSEFkL1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURreU5USXhNelF6TmxvWERUTXpNRGt5TWpJeE16UXpObG93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZmdWZTYU5EVWIyQgpsSHpxTkxiQXUrTHc4VjNCYkdObTdOSTdWR3M0TTBTajFhUjUwR2JYalFuajBqV2diamV0Q0ZjRUM1VTRNeUU3ClVJVTZTb1RHVm1UZlhpY2NoZjFCM3BWQXF5QXg3YzlGb083TXNYNWpHMFRxUGhZUi93TWFEM0VUNjZJVld0aWcKa2FqNGdIcGVNb0o0WkhMbVZCcFdJNklvb014NVgyYlFrTzBMZXZHd0tQU1doK0FYTVhlU2h2ZUlUY3VUaWg2bgp3WXd3eTUzYW52clRCWjdxMkNablpwQ0NKZjZ2YzVZUWR2UXRCMkNGVjJPcDU0ZFdJc3NYdVA2ZFpQY0dHckNkCnFaUHo4ZU12M01BR0kvQU9DL1dDWklmbHR4WkZGem5nSmR0UmZ0RnZPZ1A5RWNGa014ZnA5ZG1ZZEk0bTRIUXoKcXlqd1IrQ01md0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVd0docUpnZ2NJbVNWZUk0a0FCdnZ6SVcvUXFFd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBS2dFYzk0TVl4TTRXazF1WFlENXhGL0xiS255eTBwWUk1UlBVWm95bk1Lcjl3MHVmYXhIL2dMaGFjdmkKck1NdTV3bXVOcnJDdGdBbUwyOTZhZVFLZ1NTUTRrQlZZOGJJL0dpaXdRQU9Gb3JEcWxTeUZMVXJ1aWhHcm5JdgpoOXozeWpCVEVOWk1LcWNYVGdvWE5TL2xUZzE1NWJTZm43TG92c0FENDN5bk1xUFBMeEwySDNkZVc0bkpjM0YyClArWEhjRzI1MzJzSlBKRW9lUW5hTE1BRlB5WWFNeEFxdk9Rb0cyVW0rcjVoTVJGYXRKcjYzOXpFM04vUjRScm4KdWRDbGl4NWtKYUdSak1rdUFnVGEwRnB0UHV6aUpIQW4rNWlSRHN5SnN5QXFLcmNjQ0lueklZSkVMOG5PY0hIWgpNa2ZVUzYvbVRsMUFVM01MQ2RxWTBBYmJXcHc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJTkxWVFBEbERCQXN3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRGt5TlRJeE16UXpObG9YRFRNek1Ea3lNakl4TXpRek5sb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBcUFzaEF2bmcwN1ptRnlLaGZ5cS9GWHJrTzM4dVF6a04zQlNoWnBEa2NTVzlIOGxxemh4cjcvWXZkR3FnCisrckdQQ2Zra1dQTTZLNC9SZXVDZDhadEJUR3J0cGVEbXVPSHNpd0lPK0ZTN29ibFAwZWJMNFVmNkVqd2VwcWkKaCtOOE03UkRZaWVRMWhDcGt5K1NRUk9TbkFhVnZ1Y2xaZW4ram5VK2lMUzBGOXl3UUtoblRXci9QOEFwTnZTaApxNGo5NEpZYmpadUdrdG82K0wzclVzcHBMdi9TWFNQK1ZpdlFBRmYvRFZnV0Zad0p4OGY1SlF4bEttYnBpbjlXCmtpTnFZMHYvaFAyNHpIKzdWOTM5SmZMRXdNZVB3TWRrYXFsZGp2YkdUQlNwN0lKczNML2hzVVkyTkNUNHJVSnUKRUpnekF4dW01N0ZXeGYydnBQcFVBVmdBWlFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVVlJd25XUzJTc2FrWlk0R2E1UXNFZlFWQ2FWVXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUppb0d5dVB2bzlnTVUxenlVQm41bXpGaVUzVytPQ2RHeGJ3M1JjenFMckYKN0FKd2V3Q01PdHl1UDlkWDNlMEtuUkxIRXhra0F4ZzQwRGxmcTRkWWJZZGhaSFVRbm10dGsrRnhLTHMzU3VuWgovd2xUZGR3Y1BpUXl3WlJ0VUhCdGxGaUtkYzEydUtvd3hJemd5eWpZTGxTYktyNHpxanpnMkxoL0xicXRpWnVyCjdwNFlGL29aaWdFRllGQzBRTTVpZHl3SS91OEJ1Y1ZJdmRVeFNycTJJZnVDeDJkU0ZZUW0vZlVoVmlpWFBoTkMKdjduY2JPTGQ3OWtqMHVXeThJV1RRRWNKSVN3UW13V2xyZU1hcVovcGRrY1VVaEpYS29KaUdManV6aUFDZXJZRgowSXRJWmh2c3FXbk4vci9OSUZ3amttWlFDN3ZQcjZqV00rZTJiTzJib0hJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kube-control-plane-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURORENDQWh5Z0F3SUJBZ0lJSHVIUnU4eDN5eDR3RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRJek1Ea3lOVEl4TXpRek9Wb1hEVEkwTURreU5ESXhNelF6T1Zvd09ERVNNQkFHQTFVRUN4TUpiM0JsCmJuTm9hV1owTVNJd0lBWURWUVFERXhscmRXSmxMV052Ym5SeWIyd3RjR3hoYm1VdGMybG5ibVZ5TUlJQklqQU4KQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBOE9JUFc1azUwYjNrelQrWmVXbWg1ZzFpM2xsQwpOS1lLMDRiNU92N1F5aTMwV3QrR1pPRkVnU3I1NFRmWWg1bmIrTml6RFp6cWFOMlZnK2VrNURTRUxhbmRGQXVWCjljeHVNamV1NGllVThpS3NOYlh1ZHIzV09aazV1d2VnMFRjRmhidzhkak5BYVFGVXV6dHlJVEtNdDJWUFVIMEkKNWpZVC9BMThRRSt5SXRKODFIRE5OWFMxaVBSUS9tNkMrcVN0dEd3MnhzeUhuUjNxMjBWeGR2cTlUOEV3cTE0SApuS08veUppQWFWZmNsd0FJN1drcEVqZGVUZ1cvVkd0VGNSbndzQlFEZEtGbmhxU01ERlVNck9MVjZ0Z2pJeWU5CnJSaUh5cG4wakI4MjNIMkhQOHVmNW5FcDBUcjFPdTNQQmdHWW85Y3NGb0xzQUdOekpHV0ViWXl1M3dJREFRQUIKbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVQozVzRXNEVUZ2xtV29GTG8yK01tT0U2NEloZzR3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUxHS1FPamhJWDMyCktiMzEzTzlZYTRHR2llTmRrWTR5YWhERXJPQzdlcTNqQnNVdWN3dW9EQks3KzkyRDg4dXBiVVZGTTRTcjVIaGIKcW5aY0U0bVpSZzIxLzMxSTl3NTlZSHFsN0ZTNHl6RkY4TUo0M1Q5VjZoKy9SRGRZWU9DSWFMRmdkTXJMSG9YSgptTzBxZWI0dGtYdlBkRkJoSUZNdFpOZEZWMHZmMENQeGpnYUVZQitjUVVuMjh3YUZvdktNSnJheEtYS1loV3I4CmZtSkxLT3RScms2MXh6b3NmM2lkM3dkTjJBMEdINDJ1eG5EMjdTYjQ5ZlFNQWNZVUtKZkdIQjFBRDJ2RjByeXAKLy9TZDlvL3lNK1M3ZmpIS1VJblNSNEx1T3M4MkRwRkYwU1Q5NHJFTHhhcG0xYzZnZHlHQk1ldVVjTndhT056ZQo0ZENkWEJQTWVuMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRE1qQ0NBaHFnQXdJQkFnSUlNUXZUTFlObGViQXdEUVlKS29aSWh2Y05BUUVMQlFBd056RVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNFd0h3WURWUVFERXhocmRXSmxMV0Z3YVhObGNuWmxjaTFzWWkxemFXZHVaWEl3CkhoY05Nak13T1RJMU1qRXpORE0yV2hjTk16TXdPVEl5TWpFek5ETTJXakEzTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhJVEFmQmdOVkJBTVRHR3QxWW1VdFlYQnBjMlZ5ZG1WeUxXeGlMWE5wWjI1bGNqQ0NBU0l3RFFZSgpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFLYUF1TnphWThWY2EyQ0huTThudmh3L0V6UWRtcVJ4CkszWGkrekxSYkplSzFmSjQ1cWw5dlV5UGMzQy9OOVdUZjRNSGlYZjJXWVpMQ29mYVRrSmViSzVJYWs3akFvci8KWmpiOUc2dkN5U21sOTMybVY5YmdBTlRJVzdjNU5HYnRDd0srNlh5bFB2eU92am4zRFRYZXNPMXZBNFUva3pXTwpoNzdOSnVTZHJGbWVOT2dSc2ZZV0p4QzBHL2x6aytDNzhmYUJrMkgwN3dwajhZZlNGdGRnVEdWTTRUVUhsTTFrCldCQlNoN1Vjbi9MOUNmYTFOeUEzYldaNkZNOXlhT2lrZ2Z1YTUyUUlKNnErNnRFWTFVbnNad1lSakRKdEFaWkYKUEk2dDhXK0J2VmNjcVlPKzZkY3llY3pqYllrdGlwR3BEMUVmU2dHRzhzVjJXNDdRWkNST0J4a0NBd0VBQWFOQwpNRUF3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTllMCml0VWZWZ2J6RXFKUUJlNTlNS2ZobWxRT01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQkFaZ3VqbVlETVZtTkkKMk9uNkY0enpVQzc4bWU0WkJDcnJ3eVJZdkZGT0pPN2V3NjA0UFBDWVIvM09KWVpkd2srdjVsSjNPQUg5ajRragpXbnlMY2lWR2pobzA2M3JjbVhXb0lTUkh6bVp5V0ppZXNtYWdHVzdjRTlkYWU2cEdqZHQ3QUFNZkFhU0Vsa3VGCkhHVnBBSlZ4cTlvK2ZwT2Z3RWozalFJTFhzL01YTVBTcUwrdnFucjdKRkpQYUIzWm1ITFoxcFhQaFA0aTJzZWwKRFJGNlVQTEZxWThaSWhmVXFRcCtrbCtwcTN0TEQ2RDVLbmRPMFJjcSszaFF4YVB6TSs5eTBJQjlpZkpQemtTcQpUN05ZeCsvVmlFRE1ER2RuOHJGYmxVdE50Z05rV28vY041dnVNVER0NXFFa0tnTjlyclFYY09QbE1xc3Y4c0VFCll5QmpXc1JICi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJUlVZVGpXSEFkL1l3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEl6TURreU5USXhNelF6TmxvWERUTXpNRGt5TWpJeE16UXpObG93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZmdWZTYU5EVWIyQgpsSHpxTkxiQXUrTHc4VjNCYkdObTdOSTdWR3M0TTBTajFhUjUwR2JYalFuajBqV2diamV0Q0ZjRUM1VTRNeUU3ClVJVTZTb1RHVm1UZlhpY2NoZjFCM3BWQXF5QXg3YzlGb083TXNYNWpHMFRxUGhZUi93TWFEM0VUNjZJVld0aWcKa2FqNGdIcGVNb0o0WkhMbVZCcFdJNklvb014NVgyYlFrTzBMZXZHd0tQU1doK0FYTVhlU2h2ZUlUY3VUaWg2bgp3WXd3eTUzYW52clRCWjdxMkNablpwQ0NKZjZ2YzVZUWR2UXRCMkNGVjJPcDU0ZFdJc3NYdVA2ZFpQY0dHckNkCnFaUHo4ZU12M01BR0kvQU9DL1dDWklmbHR4WkZGem5nSmR0UmZ0RnZPZ1A5RWNGa014ZnA5ZG1ZZEk0bTRIUXoKcXlqd1IrQ01md0lEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVd0docUpnZ2NJbVNWZUk0a0FCdnZ6SVcvUXFFd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBS2dFYzk0TVl4TTRXazF1WFlENXhGL0xiS255eTBwWUk1UlBVWm95bk1Lcjl3MHVmYXhIL2dMaGFjdmkKck1NdTV3bXVOcnJDdGdBbUwyOTZhZVFLZ1NTUTRrQlZZOGJJL0dpaXdRQU9Gb3JEcWxTeUZMVXJ1aWhHcm5JdgpoOXozeWpCVEVOWk1LcWNYVGdvWE5TL2xUZzE1NWJTZm43TG92c0FENDN5bk1xUFBMeEwySDNkZVc0bkpjM0YyClArWEhjRzI1MzJzSlBKRW9lUW5hTE1BRlB5WWFNeEFxdk9Rb0cyVW0rcjVoTVJGYXRKcjYzOXpFM04vUjRScm4KdWRDbGl4NWtKYUdSak1rdUFnVGEwRnB0UHV6aUpIQW4rNWlSRHN5SnN5QXFLcmNjQ0lueklZSkVMOG5PY0hIWgpNa2ZVUzYvbVRsMUFVM01MQ2RxWTBBYmJXcHc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJTkxWVFBEbERCQXN3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERUSXpNRGt5TlRJeE16UXpObG9YRFRNek1Ea3lNakl4TXpRek5sb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBcUFzaEF2bmcwN1ptRnlLaGZ5cS9GWHJrTzM4dVF6a04zQlNoWnBEa2NTVzlIOGxxemh4cjcvWXZkR3FnCisrckdQQ2Zra1dQTTZLNC9SZXVDZDhadEJUR3J0cGVEbXVPSHNpd0lPK0ZTN29ibFAwZWJMNFVmNkVqd2VwcWkKaCtOOE03UkRZaWVRMWhDcGt5K1NRUk9TbkFhVnZ1Y2xaZW4ram5VK2lMUzBGOXl3UUtoblRXci9QOEFwTnZTaApxNGo5NEpZYmpadUdrdG82K0wzclVzcHBMdi9TWFNQK1ZpdlFBRmYvRFZnV0Zad0p4OGY1SlF4bEttYnBpbjlXCmtpTnFZMHYvaFAyNHpIKzdWOTM5SmZMRXdNZVB3TWRrYXFsZGp2YkdUQlNwN0lKczNML2hzVVkyTkNUNHJVSnUKRUpnekF4dW01N0ZXeGYydnBQcFVBVmdBWlFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVVlJd25XUzJTc2FrWlk0R2E1UXNFZlFWQ2FWVXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUppb0d5dVB2bzlnTVUxenlVQm41bXpGaVUzVytPQ2RHeGJ3M1JjenFMckYKN0FKd2V3Q01PdHl1UDlkWDNlMEtuUkxIRXhra0F4ZzQwRGxmcTRkWWJZZGhaSFVRbm10dGsrRnhLTHMzU3VuWgovd2xUZGR3Y1BpUXl3WlJ0VUhCdGxGaUtkYzEydUtvd3hJemd5eWpZTGxTYktyNHpxanpnMkxoL0xicXRpWnVyCjdwNFlGL29aaWdFRllGQzBRTTVpZHl3SS91OEJ1Y1ZJdmRVeFNycTJJZnVDeDJkU0ZZUW0vZlVoVmlpWFBoTkMKdjduY2JPTGQ3OWtqMHVXeThJV1RRRWNKSVN3UW13V2xyZU1hcVovcGRrY1VVaEpYS29KaUdManV6aUFDZXJZRgowSXRJWmh2c3FXbk4vci9OSUZ3amttWlFDN3ZQcjZqV00rZTJiTzJib0hJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeControlPlaneKubeControllerManagerClientCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lJU3A0Uk1sSzlOSFF3RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRJek1Ea3lOVEl4TXpRek9Wb1hEVEkwTURreU5ESXhNelF6T1Zvd01ERVhNQlVHQTFVRUNoTU9jM2x6CmRHVnRPbTFoYzNSbGNuTXhGVEFUQmdOVkJBTVRESE41YzNSbGJUcGhaRzFwYmpDQ0FTSXdEUVlKS29aSWh2Y04KQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxPR3BmYW1kck13RFFYcHovY3lGRmhmS3pzTitBN2NPL1pKdkhFVQpydExNNzdSQTBtZkxiZW01dUlxM2RNcCt3bnJ1dVJRSUwwQzUrWUZtSDNiTEJIeE96ZE9BUVRjTGIvSFJYSzd3ClkrWW9uM0tCZW9KaXFoTjYyV3JrcGg3TzFHZ2dXMXJFNlk4MGgvOGNFeHVHbHVpL084c1B1ekhwZnVmWm4vK0sKaHgvR09JZjlqbm5sakVwUFRhQXhheGZSN1ExUWdDUk1uQ3FyWWtrVjZoczhZMmpvd09mcXFwOHdURXdIdmxjOApUL2RtKzJ0WDA0NUkyWGNNUXk1dU1wcWFxQkdLNXorbFNjdk9WOUhocTc5Qkw0YXdhQVQ4WFlPQnh6bG9ZdHRCCjhqNlErZUhyeDN5TnFqWTZVVXhvRVNnWlBtcTJNbmZ5QnNFN2twU3NEK0k1UmU4Q0F3RUFBYU4xTUhNd0RnWUQKVlIwUEFRSC9CQVFEQWdXZ01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpIUVlEVlIwT0JCWUVGRzdVaXlJUGRoa0ZZU1NYT0UvMHBzQ25EWGV1TUI4R0ExVWRJd1FZTUJhQUZOMXVGdUJFCjRKWmxxQlM2TnZqSmpoT3VDSVlPTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDc1dGMy9JVVBBclJ1dTJhTTkKZHlEL1hBVlF6QkRoc3FILzBlLzk5dVNDYmFmQ0psdEVpeTZzMEtyVklYS0o5ZGhiUnRWSTUyTjFHS0hpc0pZQgpnVVd2SStkQy8xTjNtYnRjVFRZRTVzemlzUWg4dUNpbklZMEMwYTRyeFVnZmZvRFc0bStFN3hiZDJHZ3dKSGNMCnllS0JsamN5OTh0d3RCd3hJTXYwV2wyMFovejJCOUlHbS8xd2UvOFpWekd6d3IySE41SXR1SmFDemtvbG9HSmMKSHlRUk9uZ0FXVWtwN3gyYW9Bd213WnVJRTEzdUIvMVRJakpvUGJMNjhZbWdHb2xBTnZwT0duc016Q3RKZDNlWApwVEJXUGtoaGlBamxOZE8xWmtIYk5wZmpBYy9WVHF1cVV6WlBvZmVxa1Naekt6VmdocjN1ZEg2MWNJWVpwQnA5CjZxK2EKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBczRhbDlxWjJzekFOQmVuUDl6SVVXRjhyT3czNER0dzc5a204Y1JTdTBzenZ0RURTClo4dHQ2Ym00aXJkMHluN0NldTY1RkFndlFMbjVnV1lmZHNzRWZFN04wNEJCTnd0djhkRmNydkJqNWlpZmNvRjYKZ21LcUUzclphdVNtSHM3VWFDQmJXc1RwanpTSC94d1RHNGFXNkw4N3l3KzdNZWwrNTltZi80cUhIOFk0aC8yTwplZVdNU2s5Tm9ERnJGOUh0RFZDQUpFeWNLcXRpU1JYcUd6eGphT2pBNStxcW56Qk1UQWUrVnp4UDkyYjdhMWZUCmpralpkd3hETG00eW1wcW9FWXJuUDZWSnk4NVgwZUdydjBFdmhyQm9CUHhkZzRISE9XaGkyMEh5UHBENTRldkgKZkkycU5qcFJUR2dSS0JrK2FyWXlkL0lHd1R1U2xLd1A0amxGN3dJREFRQUJBb0lCQUVqUVF2NFFOREtuT1pEOQpiVGtRbWNuaUI3R3pEN3BQUHc2OGgyN0IrY3BNRHFqb1phNXRodzMySXRBNGFtazdFbnd6Mk9NMEVwNUpEOWFZCjZnZ1BmYWxCZVIvZ2RCTDBVNW9iMVdDcTVZblRUaUJ1UFpjbWwxN0JRKytqLzNDZGFPODJ1SGJQU1ArcFNjT0IKeW9vdWc0U3hFM3BmemdnSGNVNXVLUVBIVnRqZXFkWnV0YkpLOHJDc2dvaG91U2FmUWpBcG9lMlBYTmJjWThSSAptTzJUME1jSjVTTXdBVVk3V3ZTR29ZU0dFSDVUanNPUnY3MkVZeEh2RzVtd2VPbldnQ2FEaE5kTWpmN1B2R1pkCmY4d2lINDZWbXkrbHBLaE83cE5BelBXcnFXajBQaGZiYjBpSUk5VjhZVERBQWJQZ3M1TVdwbTNxRWJqNDQ1b0gKdFpIM0lNRUNnWUVBM0NZb0c1a0ZoOVRoME1yZlJEN01lWlhsZkpVaElMSVR0TFptUTVaVVNxejRWVnpyMkZFQgpEWWJPTG5teVBJcEVHeVgrb2t5bFJ4VUFSMGRxM1grT2JGWkxZQ29VQ0FQanFBdDh1ZkhsQVlySUdsbmxSSG9jCkttWWMwNkU0OGJPSXJnRVR5VlRFTVZUalJMdG56dkYvQWxMelA0blo4WThaSm13b3hxU3g5ZzhDZ1lFQTBNTHkKYUdGemw2dlhMMmt6bGw3bHBGSDNEQUQwNCtxY2FRL0ozU2RmbUFtTVpEYUgydzdDUFl4bGk4bytOQU4rZEs2MAp1TXkzMXRzYkkxQnNSbVZ1NUkxU1JwUDF4YkUvZzQ3d3VmY3Rxa2lpcytybGw0SzdRSVZLWWVpWmZveGlVM0ovCk9SdFNDNFpIQnIwS21SRHpoTkZzc3VyYWNFdGorWXFOaEp2TWtpRUNnWUErMkxHNGR5MnFBaTdZNFNGdHBSUFEKWGVkZWNtQTdxanFQNjBZMFl6VDdBSGdBUG4raGlEWnB1eU1mQjJUSGZaMUZ0c29EWVNnSnE4Z2hrUlREMk1jNgp6RVBHVnh6UzBQRnJwcVBiblYrSDJpdVh3alArSVhIcTlLMmtDTEZ0NXBmTlBNZCtRVEdrOTV2Tm9rWlhRSC9HCmxSR1dBTzl6MHlzVjJlaW1GSnd0SndLQmdRQ2ZqMUZPSEtZSUdDeVpyVFBqeTlhRHVLNDFlNG14cGtFMFFBQVAKUzZmU0FnSlBHaXJPY01KZjNxNUNvU3JZQUkrbnlWeVNIczZvcHNGZ1JYanNlVnkvelpCRUo1VGpMQzJhZFNkagpUQnlZR1hwYVA4Q0tCRDd3K3ErMms5eTJEOENiZlZqbUlnNmNobDVGTlRvamNnUmUwTjdmQllnOTZqR1lxcUN0CjZaTDdZUUtCZ1FEVlNLc2F0KzJFdENxbjdwVUR5VkhhZ1REeGdMNWhJU2NIQXNKTCtQbm5UT1lIRzlNSGVUMDQKWm9jd0VUT0xNdFZsTFMxWTRMK0Fwa3ZNSnRBcldVd1VRYW5icERUYlcyTmYvTEgwVENJUWtLRk9aaGpwemYvSgpFVTIyMlRHeW5RbCtMOTNoZE5DY2Nmb2Q4Y1dMK1A5ZkJqQW5jdjRtUVc3bG9vdTIweGxvUmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kube-control-plane-kube-controller-manager-client.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBczRhbDlxWjJzekFOQmVuUDl6SVVXRjhyT3czNER0dzc5a204Y1JTdTBzenZ0RURTClo4dHQ2Ym00aXJkMHluN0NldTY1RkFndlFMbjVnV1lmZHNzRWZFN04wNEJCTnd0djhkRmNydkJqNWlpZmNvRjYKZ21LcUUzclphdVNtSHM3VWFDQmJXc1RwanpTSC94d1RHNGFXNkw4N3l3KzdNZWwrNTltZi80cUhIOFk0aC8yTwplZVdNU2s5Tm9ERnJGOUh0RFZDQUpFeWNLcXRpU1JYcUd6eGphT2pBNStxcW56Qk1UQWUrVnp4UDkyYjdhMWZUCmpralpkd3hETG00eW1wcW9FWXJuUDZWSnk4NVgwZUdydjBFdmhyQm9CUHhkZzRISE9XaGkyMEh5UHBENTRldkgKZkkycU5qcFJUR2dSS0JrK2FyWXlkL0lHd1R1U2xLd1A0amxGN3dJREFRQUJBb0lCQUVqUVF2NFFOREtuT1pEOQpiVGtRbWNuaUI3R3pEN3BQUHc2OGgyN0IrY3BNRHFqb1phNXRodzMySXRBNGFtazdFbnd6Mk9NMEVwNUpEOWFZCjZnZ1BmYWxCZVIvZ2RCTDBVNW9iMVdDcTVZblRUaUJ1UFpjbWwxN0JRKytqLzNDZGFPODJ1SGJQU1ArcFNjT0IKeW9vdWc0U3hFM3BmemdnSGNVNXVLUVBIVnRqZXFkWnV0YkpLOHJDc2dvaG91U2FmUWpBcG9lMlBYTmJjWThSSAptTzJUME1jSjVTTXdBVVk3V3ZTR29ZU0dFSDVUanNPUnY3MkVZeEh2RzVtd2VPbldnQ2FEaE5kTWpmN1B2R1pkCmY4d2lINDZWbXkrbHBLaE83cE5BelBXcnFXajBQaGZiYjBpSUk5VjhZVERBQWJQZ3M1TVdwbTNxRWJqNDQ1b0gKdFpIM0lNRUNnWUVBM0NZb0c1a0ZoOVRoME1yZlJEN01lWlhsZkpVaElMSVR0TFptUTVaVVNxejRWVnpyMkZFQgpEWWJPTG5teVBJcEVHeVgrb2t5bFJ4VUFSMGRxM1grT2JGWkxZQ29VQ0FQanFBdDh1ZkhsQVlySUdsbmxSSG9jCkttWWMwNkU0OGJPSXJnRVR5VlRFTVZUalJMdG56dkYvQWxMelA0blo4WThaSm13b3hxU3g5ZzhDZ1lFQTBNTHkKYUdGemw2dlhMMmt6bGw3bHBGSDNEQUQwNCtxY2FRL0ozU2RmbUFtTVpEYUgydzdDUFl4bGk4bytOQU4rZEs2MAp1TXkzMXRzYkkxQnNSbVZ1NUkxU1JwUDF4YkUvZzQ3d3VmY3Rxa2lpcytybGw0SzdRSVZLWWVpWmZveGlVM0ovCk9SdFNDNFpIQnIwS21SRHpoTkZzc3VyYWNFdGorWXFOaEp2TWtpRUNnWUErMkxHNGR5MnFBaTdZNFNGdHBSUFEKWGVkZWNtQTdxanFQNjBZMFl6VDdBSGdBUG4raGlEWnB1eU1mQjJUSGZaMUZ0c29EWVNnSnE4Z2hrUlREMk1jNgp6RVBHVnh6UzBQRnJwcVBiblYrSDJpdVh3alArSVhIcTlLMmtDTEZ0NXBmTlBNZCtRVEdrOTV2Tm9rWlhRSC9HCmxSR1dBTzl6MHlzVjJlaW1GSnd0SndLQmdRQ2ZqMUZPSEtZSUdDeVpyVFBqeTlhRHVLNDFlNG14cGtFMFFBQVAKUzZmU0FnSlBHaXJPY01KZjNxNUNvU3JZQUkrbnlWeVNIczZvcHNGZ1JYanNlVnkvelpCRUo1VGpMQzJhZFNkagpUQnlZR1hwYVA4Q0tCRDd3K3ErMms5eTJEOENiZlZqbUlnNmNobDVGTlRvamNnUmUwTjdmQllnOTZqR1lxcUN0CjZaTDdZUUtCZ1FEVlNLc2F0KzJFdENxbjdwVUR5VkhhZ1REeGdMNWhJU2NIQXNKTCtQbm5UT1lIRzlNSGVUMDQKWm9jd0VUT0xNdFZsTFMxWTRMK0Fwa3ZNSnRBcldVd1VRYW5icERUYlcyTmYvTEgwVENJUWtLRk9aaGpwemYvSgpFVTIyMlRHeW5RbCtMOTNoZE5DY2Nmb2Q4Y1dMK1A5ZkJqQW5jdjRtUVc3bG9vdTIweGxvUmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/kube-control-plane-kube-controller-manager-client.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lJU3A0Uk1sSzlOSFF3RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRJek1Ea3lOVEl4TXpRek9Wb1hEVEkwTURreU5ESXhNelF6T1Zvd01ERVhNQlVHQTFVRUNoTU9jM2x6CmRHVnRPbTFoYzNSbGNuTXhGVEFUQmdOVkJBTVRESE41YzNSbGJUcGhaRzFwYmpDQ0FTSXdEUVlKS29aSWh2Y04KQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxPR3BmYW1kck13RFFYcHovY3lGRmhmS3pzTitBN2NPL1pKdkhFVQpydExNNzdSQTBtZkxiZW01dUlxM2RNcCt3bnJ1dVJRSUwwQzUrWUZtSDNiTEJIeE96ZE9BUVRjTGIvSFJYSzd3ClkrWW9uM0tCZW9KaXFoTjYyV3JrcGg3TzFHZ2dXMXJFNlk4MGgvOGNFeHVHbHVpL084c1B1ekhwZnVmWm4vK0sKaHgvR09JZjlqbm5sakVwUFRhQXhheGZSN1ExUWdDUk1uQ3FyWWtrVjZoczhZMmpvd09mcXFwOHdURXdIdmxjOApUL2RtKzJ0WDA0NUkyWGNNUXk1dU1wcWFxQkdLNXorbFNjdk9WOUhocTc5Qkw0YXdhQVQ4WFlPQnh6bG9ZdHRCCjhqNlErZUhyeDN5TnFqWTZVVXhvRVNnWlBtcTJNbmZ5QnNFN2twU3NEK0k1UmU4Q0F3RUFBYU4xTUhNd0RnWUQKVlIwUEFRSC9CQVFEQWdXZ01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpIUVlEVlIwT0JCWUVGRzdVaXlJUGRoa0ZZU1NYT0UvMHBzQ25EWGV1TUI4R0ExVWRJd1FZTUJhQUZOMXVGdUJFCjRKWmxxQlM2TnZqSmpoT3VDSVlPTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDc1dGMy9JVVBBclJ1dTJhTTkKZHlEL1hBVlF6QkRoc3FILzBlLzk5dVNDYmFmQ0psdEVpeTZzMEtyVklYS0o5ZGhiUnRWSTUyTjFHS0hpc0pZQgpnVVd2SStkQy8xTjNtYnRjVFRZRTVzemlzUWg4dUNpbklZMEMwYTRyeFVnZmZvRFc0bStFN3hiZDJHZ3dKSGNMCnllS0JsamN5OTh0d3RCd3hJTXYwV2wyMFovejJCOUlHbS8xd2UvOFpWekd6d3IySE41SXR1SmFDemtvbG9HSmMKSHlRUk9uZ0FXVWtwN3gyYW9Bd213WnVJRTEzdUIvMVRJakpvUGJMNjhZbWdHb2xBTnZwT0duc016Q3RKZDNlWApwVEJXUGtoaGlBamxOZE8xWmtIYk5wZmpBYy9WVHF1cVV6WlBvZmVxa1Naekt6VmdocjN1ZEg2MWNJWVpwQnA5CjZxK2EKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.KubeControlPlaneKubeSchedulerClientCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lJSnVoY3B3MGpiVmt3RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRJek1Ea3lOVEl4TXpRek9Wb1hEVEkwTURreU5ESXhNelEwTUZvd01ERVhNQlVHQTFVRUNoTU9jM2x6CmRHVnRPbTFoYzNSbGNuTXhGVEFUQmdOVkJBTVRESE41YzNSbGJUcGhaRzFwYmpDQ0FTSXdEUVlKS29aSWh2Y04KQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU5sUFFZUEthSkhtLzBUVnlHUXJ3TGRWWnVEUkpVZTV5cHJNRGZQSApFUkJNN2VnQUl1ZDNpMmlidERMNzJJd3ArOEQ3ZEQ4dmNDa2p3UE41YURqTjdORUxubUhCZFIrRi9QN2dxMUlZCkpib3NpNVhSWGlObG5IcFdsWGMwZmNNV1ZDV3M2VWk3KzhvZ0t0MHRYS21uZWJ3enk3NzRSMVlGNHVmRndTaWMKMDFZTFgydi9OQk9HQk5nNGw3aE4wRXRIaUU0c29lSXlWSnU3angxVEJnOE56eTR0ZTFaQy9TYnViKzBWTGNzMwpGWW9Xc3BvZE4vZ0owMFIxUUdDbGpFS0FsUk1CY0lVQXFiblpld3NuWXZLaVZGUS9UeFVwMitsSmdtU2xEUU1LCnVsQnVreHRPN0RtR29PdXZCUWJLRGtRWmZnRXVaN1Qza3c3WkpTbVl5TGtGOGtNQ0F3RUFBYU4xTUhNd0RnWUQKVlIwUEFRSC9CQVFEQWdXZ01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpIUVlEVlIwT0JCWUVGTUNLUHVoYjFZRS8wSFVIZW82V0pQcjdBZWMzTUI4R0ExVWRJd1FZTUJhQUZOMXVGdUJFCjRKWmxxQlM2TnZqSmpoT3VDSVlPTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFEWDdlTGhTelJ6K3NvWG8wamMKdVJnc241WHhTRlNvY0F1VURpeHAxZ3VKTU5zdmlucHdFVnFXMmZqTWh4NFg0NlZyQXdxNkxTUW5MTzJsVUpDUwpEWE95RmZJK0NsNFErbkFpaEJSMlNVQjRkd091b1l2elVhei9YN2dLMDB2QUdhM2FpbUVmR2FVZ2tENFJPR2J3Ck9QMHVGNTkza0JnbkZyWmx2UmJ2SWEzN1JZMTlnWHZrWFB4MTRsTjdIVm9tdHg3V3FNZkJhdERINGNBMGJWNXkKbFhCd3NXWGJPNHZtYUl4MGpvaXJVU0pLVWNFbVU0MkNqUkxPY0dLSEZ2cUlKMUpJZllRTXRpbDI3L1hNOElhVgpKNWtHYm5qVWhBOW9nTTRmSEUyVUNPTkwyTi92U2RISVJ3Y01XcVlpT1NQQ0Rya3M1aU1YazRKT2RGaWVCOStQCjhCdmsKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMlU5Qmc4cG9rZWIvUk5YSVpDdkF0MVZtNE5FbFI3bkttc3dOODhjUkVFenQ2QUFpCjUzZUxhSnUwTXZ2WWpDbjd3UHQwUHk5d0tTUEE4M2xvT00zczBRdWVZY0YxSDRYOC91Q3JVaGdsdWl5TGxkRmUKSTJXY2VsYVZkelI5d3haVUphenBTTHY3eWlBcTNTMWNxYWQ1dkRQTHZ2aEhWZ1hpNThYQktKelRWZ3RmYS84MApFNFlFMkRpWHVFM1FTMGVJVGl5aDRqSlVtN3VQSFZNR0R3M1BMaTE3VmtMOUp1NXY3UlV0eXpjVmloYXltaDAzCitBblRSSFZBWUtXTVFvQ1ZFd0Z3aFFDcHVkbDdDeWRpOHFKVVZEOVBGU25iNlVtQ1pLVU5Bd3E2VUc2VEcwN3MKT1lhZzY2OEZCc29PUkJsK0FTNW50UGVURHRrbEtaakl1UVh5UXdJREFRQUJBb0lCQUdNNUVRMEFDcWN6OWpLVAorcC9pYW1oTGttSHNuVDBXMUMvQ0pFeS9CRWVSR0wvcDhBWUlTNXRFSFE5NmR2SG82WTdBUWQvbjVTcWpyS0ovCk9OdFhDMTZZRTRWSE5CZGtzcFFlT1p1T2N3dUM4MmxBNDk3OXNta1p4NzFhTm1JeGU5S0lGU3lreU44TnVRU3MKaGJiaFJYQnRwZ1pZanhuMExocnQ3TGlDZ3V5eUJUMjd2UlR0WmlTYlFOYzljQlVvb0pkclJ3ZElPc2hFS1NoNwpzbit3R2o1bnFaaHZUeEk5Z3NudU5iRGUzQkF1TW12Yms0MGFDK0JDR2UrdzB0RXdtNVNvazFyRTNlL1VoMkl1CldHVkFiN0VRM3dwSGt2M2NPcjN2MTNkRVcyOVdkS3NBeE1ZUnc5dXRvS1puSFNpa3J4bXAxNzVYNllIOGd0YS8KMkg1T3l3RUNnWUVBNTNFMm1PeG1YTUNYaWJTSFljdExIOUxYTW5JQzBBZHdiallnVXVjaU1rZG5kdEkraExpNgpTTlZQVisybG1DbGxZdTNrZXcySjZ1R1owYTYrYU41amEveHUvdytieHIvNmhSaVQzSG9Hcmx0TjJVd2d3YmphCnJtN1FocEQwaldpRDRkZVIrdVlEbVlkYk1WRDBSaDlzTmVuWHdrcDlzT2FFcE9NY3VzK2tMbUVDZ1lFQThGNG0KY28vckdrUnlCaWd6TUV6Slo4TkQ3WTBrWVBPMU80NFU3K2JZaVN0VmlWS2hWdGp1VmNZVXdBRzc4dVhCUlF3RgpScTRXYnV0cGtFaWVWSzlWbmZCUURtV3ZhV3VxWjg4QndwbGlPQlErOTdFWDZLQld6T1IxWWFxd0pIVEkwSWQ3ClBmMHY3Ums4YXUybVpBMUJMc2hRL09GMlNxWTFVYytVelVrcmV5TUNnWUFyMjMxUUgwUUtnWWgxMU5ydXdqcGIKTG5ZUEhpSEFVQmlUR2Zpb0hScVMwb3Nkcmh1Z3hPeXdEcFA1Z3BRbHNIcUE4N21mUStLRnV2aU9Eb0lRbDB2WgowNzBvNGtsUHNXT0V3ektKemluajhuTmZJUmozL05LYnlXNEVnZ1dGb20rVFpXbEpWVHNMWmVYM0EzTTJzbytyCjY4TXlFekdjU3lLSnFHdnlUcFM3SVFLQmdRRGNzY1ZoV0l6SGdHS2xEcEg1WGZkcWd4bkNhZDRsK24zRFliQU4KbVFubDM5allqZnErNzh6ZENsTVEvRWFpUFp2WGxyTGRjNGY3YmNCdURvNzVPRWRIRFZlajhHOC9QdkNtQWFZZgpFNC9mNTQ3dEF6ZnRpaEpJYTlidXhyYVZzbmlUSm1IY3g3UVNZU0pkRnppNEVvZHZ1ZExLYlFTY2c4RGZEZFlWCktvSjJ1d0tCZ1FDTHhsL2JzUm5vbnkybE42bFl1QzgxYzc4bGZIL3dKcGF2a0dNeldjSnZCOUd0YU8xR3BuelEKLytNWk00R01HVVh0cG1KM0FNeUJXcW9EaGtGR01GeCtaMi9sd1Y0N0tFaXBtU1VrcDVaaFhXNTFRMFk3VHZMUwpSWnV4V2VEQXpnaXZ2cEhVVmprUU9xeEdSZEI2ekR2aHhHTjFkZVFQbTNsR0E3cUVrS1lOdnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kube-control-plane-kube-scheduler-client.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMlU5Qmc4cG9rZWIvUk5YSVpDdkF0MVZtNE5FbFI3bkttc3dOODhjUkVFenQ2QUFpCjUzZUxhSnUwTXZ2WWpDbjd3UHQwUHk5d0tTUEE4M2xvT00zczBRdWVZY0YxSDRYOC91Q3JVaGdsdWl5TGxkRmUKSTJXY2VsYVZkelI5d3haVUphenBTTHY3eWlBcTNTMWNxYWQ1dkRQTHZ2aEhWZ1hpNThYQktKelRWZ3RmYS84MApFNFlFMkRpWHVFM1FTMGVJVGl5aDRqSlVtN3VQSFZNR0R3M1BMaTE3VmtMOUp1NXY3UlV0eXpjVmloYXltaDAzCitBblRSSFZBWUtXTVFvQ1ZFd0Z3aFFDcHVkbDdDeWRpOHFKVVZEOVBGU25iNlVtQ1pLVU5Bd3E2VUc2VEcwN3MKT1lhZzY2OEZCc29PUkJsK0FTNW50UGVURHRrbEtaakl1UVh5UXdJREFRQUJBb0lCQUdNNUVRMEFDcWN6OWpLVAorcC9pYW1oTGttSHNuVDBXMUMvQ0pFeS9CRWVSR0wvcDhBWUlTNXRFSFE5NmR2SG82WTdBUWQvbjVTcWpyS0ovCk9OdFhDMTZZRTRWSE5CZGtzcFFlT1p1T2N3dUM4MmxBNDk3OXNta1p4NzFhTm1JeGU5S0lGU3lreU44TnVRU3MKaGJiaFJYQnRwZ1pZanhuMExocnQ3TGlDZ3V5eUJUMjd2UlR0WmlTYlFOYzljQlVvb0pkclJ3ZElPc2hFS1NoNwpzbit3R2o1bnFaaHZUeEk5Z3NudU5iRGUzQkF1TW12Yms0MGFDK0JDR2UrdzB0RXdtNVNvazFyRTNlL1VoMkl1CldHVkFiN0VRM3dwSGt2M2NPcjN2MTNkRVcyOVdkS3NBeE1ZUnc5dXRvS1puSFNpa3J4bXAxNzVYNllIOGd0YS8KMkg1T3l3RUNnWUVBNTNFMm1PeG1YTUNYaWJTSFljdExIOUxYTW5JQzBBZHdiallnVXVjaU1rZG5kdEkraExpNgpTTlZQVisybG1DbGxZdTNrZXcySjZ1R1owYTYrYU41amEveHUvdytieHIvNmhSaVQzSG9Hcmx0TjJVd2d3YmphCnJtN1FocEQwaldpRDRkZVIrdVlEbVlkYk1WRDBSaDlzTmVuWHdrcDlzT2FFcE9NY3VzK2tMbUVDZ1lFQThGNG0KY28vckdrUnlCaWd6TUV6Slo4TkQ3WTBrWVBPMU80NFU3K2JZaVN0VmlWS2hWdGp1VmNZVXdBRzc4dVhCUlF3RgpScTRXYnV0cGtFaWVWSzlWbmZCUURtV3ZhV3VxWjg4QndwbGlPQlErOTdFWDZLQld6T1IxWWFxd0pIVEkwSWQ3ClBmMHY3Ums4YXUybVpBMUJMc2hRL09GMlNxWTFVYytVelVrcmV5TUNnWUFyMjMxUUgwUUtnWWgxMU5ydXdqcGIKTG5ZUEhpSEFVQmlUR2Zpb0hScVMwb3Nkcmh1Z3hPeXdEcFA1Z3BRbHNIcUE4N21mUStLRnV2aU9Eb0lRbDB2WgowNzBvNGtsUHNXT0V3ektKemluajhuTmZJUmozL05LYnlXNEVnZ1dGb20rVFpXbEpWVHNMWmVYM0EzTTJzbytyCjY4TXlFekdjU3lLSnFHdnlUcFM3SVFLQmdRRGNzY1ZoV0l6SGdHS2xEcEg1WGZkcWd4bkNhZDRsK24zRFliQU4KbVFubDM5allqZnErNzh6ZENsTVEvRWFpUFp2WGxyTGRjNGY3YmNCdURvNzVPRWRIRFZlajhHOC9QdkNtQWFZZgpFNC9mNTQ3dEF6ZnRpaEpJYTlidXhyYVZzbmlUSm1IY3g3UVNZU0pkRnppNEVvZHZ1ZExLYlFTY2c4RGZEZFlWCktvSjJ1d0tCZ1FDTHhsL2JzUm5vbnkybE42bFl1QzgxYzc4bGZIL3dKcGF2a0dNeldjSnZCOUd0YU8xR3BuelEKLytNWk00R01HVVh0cG1KM0FNeUJXcW9EaGtGR01GeCtaMi9sd1Y0N0tFaXBtU1VrcDVaaFhXNTFRMFk3VHZMUwpSWnV4V2VEQXpnaXZ2cEhVVmprUU9xeEdSZEI2ekR2aHhHTjFkZVFQbTNsR0E3cUVrS1lOdnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/kube-control-plane-kube-scheduler-client.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lJSnVoY3B3MGpiVmt3RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRJek1Ea3lOVEl4TXpRek9Wb1hEVEkwTURreU5ESXhNelEwTUZvd01ERVhNQlVHQTFVRUNoTU9jM2x6CmRHVnRPbTFoYzNSbGNuTXhGVEFUQmdOVkJBTVRESE41YzNSbGJUcGhaRzFwYmpDQ0FTSXdEUVlKS29aSWh2Y04KQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU5sUFFZUEthSkhtLzBUVnlHUXJ3TGRWWnVEUkpVZTV5cHJNRGZQSApFUkJNN2VnQUl1ZDNpMmlidERMNzJJd3ArOEQ3ZEQ4dmNDa2p3UE41YURqTjdORUxubUhCZFIrRi9QN2dxMUlZCkpib3NpNVhSWGlObG5IcFdsWGMwZmNNV1ZDV3M2VWk3KzhvZ0t0MHRYS21uZWJ3enk3NzRSMVlGNHVmRndTaWMKMDFZTFgydi9OQk9HQk5nNGw3aE4wRXRIaUU0c29lSXlWSnU3angxVEJnOE56eTR0ZTFaQy9TYnViKzBWTGNzMwpGWW9Xc3BvZE4vZ0owMFIxUUdDbGpFS0FsUk1CY0lVQXFiblpld3NuWXZLaVZGUS9UeFVwMitsSmdtU2xEUU1LCnVsQnVreHRPN0RtR29PdXZCUWJLRGtRWmZnRXVaN1Qza3c3WkpTbVl5TGtGOGtNQ0F3RUFBYU4xTUhNd0RnWUQKVlIwUEFRSC9CQVFEQWdXZ01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpIUVlEVlIwT0JCWUVGTUNLUHVoYjFZRS8wSFVIZW82V0pQcjdBZWMzTUI4R0ExVWRJd1FZTUJhQUZOMXVGdUJFCjRKWmxxQlM2TnZqSmpoT3VDSVlPTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFEWDdlTGhTelJ6K3NvWG8wamMKdVJnc241WHhTRlNvY0F1VURpeHAxZ3VKTU5zdmlucHdFVnFXMmZqTWh4NFg0NlZyQXdxNkxTUW5MTzJsVUpDUwpEWE95RmZJK0NsNFErbkFpaEJSMlNVQjRkd091b1l2elVhei9YN2dLMDB2QUdhM2FpbUVmR2FVZ2tENFJPR2J3Ck9QMHVGNTkza0JnbkZyWmx2UmJ2SWEzN1JZMTlnWHZrWFB4MTRsTjdIVm9tdHg3V3FNZkJhdERINGNBMGJWNXkKbFhCd3NXWGJPNHZtYUl4MGpvaXJVU0pLVWNFbVU0MkNqUkxPY0dLSEZ2cUlKMUpJZllRTXRpbDI3L1hNOElhVgpKNWtHYm5qVWhBOW9nTTRmSEUyVUNPTkwyTi92U2RISVJ3Y01XcVlpT1NQQ0Rya3M1aU1YazRKT2RGaWVCOStQCjhCdmsKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.KubeControlPlaneSignerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURORENDQWh5Z0F3SUJBZ0lJSHVIUnU4eDN5eDR3RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRJek1Ea3lOVEl4TXpRek9Wb1hEVEkwTURreU5ESXhNelF6T1Zvd09ERVNNQkFHQTFVRUN4TUpiM0JsCmJuTm9hV1owTVNJd0lBWURWUVFERXhscmRXSmxMV052Ym5SeWIyd3RjR3hoYm1VdGMybG5ibVZ5TUlJQklqQU4KQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBOE9JUFc1azUwYjNrelQrWmVXbWg1ZzFpM2xsQwpOS1lLMDRiNU92N1F5aTMwV3QrR1pPRkVnU3I1NFRmWWg1bmIrTml6RFp6cWFOMlZnK2VrNURTRUxhbmRGQXVWCjljeHVNamV1NGllVThpS3NOYlh1ZHIzV09aazV1d2VnMFRjRmhidzhkak5BYVFGVXV6dHlJVEtNdDJWUFVIMEkKNWpZVC9BMThRRSt5SXRKODFIRE5OWFMxaVBSUS9tNkMrcVN0dEd3MnhzeUhuUjNxMjBWeGR2cTlUOEV3cTE0SApuS08veUppQWFWZmNsd0FJN1drcEVqZGVUZ1cvVkd0VGNSbndzQlFEZEtGbmhxU01ERlVNck9MVjZ0Z2pJeWU5CnJSaUh5cG4wakI4MjNIMkhQOHVmNW5FcDBUcjFPdTNQQmdHWW85Y3NGb0xzQUdOekpHV0ViWXl1M3dJREFRQUIKbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVQozVzRXNEVUZ2xtV29GTG8yK01tT0U2NEloZzR3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUxHS1FPamhJWDMyCktiMzEzTzlZYTRHR2llTmRrWTR5YWhERXJPQzdlcTNqQnNVdWN3dW9EQks3KzkyRDg4dXBiVVZGTTRTcjVIaGIKcW5aY0U0bVpSZzIxLzMxSTl3NTlZSHFsN0ZTNHl6RkY4TUo0M1Q5VjZoKy9SRGRZWU9DSWFMRmdkTXJMSG9YSgptTzBxZWI0dGtYdlBkRkJoSUZNdFpOZEZWMHZmMENQeGpnYUVZQitjUVVuMjh3YUZvdktNSnJheEtYS1loV3I4CmZtSkxLT3RScms2MXh6b3NmM2lkM3dkTjJBMEdINDJ1eG5EMjdTYjQ5ZlFNQWNZVUtKZkdIQjFBRDJ2RjByeXAKLy9TZDlvL3lNK1M3ZmpIS1VJblNSNEx1T3M4MkRwRkYwU1Q5NHJFTHhhcG0xYzZnZHlHQk1ldVVjTndhT056ZQo0ZENkWEJQTWVuMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBOE9JUFc1azUwYjNrelQrWmVXbWg1ZzFpM2xsQ05LWUswNGI1T3Y3UXlpMzBXdCtHClpPRkVnU3I1NFRmWWg1bmIrTml6RFp6cWFOMlZnK2VrNURTRUxhbmRGQXVWOWN4dU1qZXU0aWVVOGlLc05iWHUKZHIzV09aazV1d2VnMFRjRmhidzhkak5BYVFGVXV6dHlJVEtNdDJWUFVIMEk1allUL0ExOFFFK3lJdEo4MUhETgpOWFMxaVBSUS9tNkMrcVN0dEd3MnhzeUhuUjNxMjBWeGR2cTlUOEV3cTE0SG5LTy95SmlBYVZmY2x3QUk3V2twCkVqZGVUZ1cvVkd0VGNSbndzQlFEZEtGbmhxU01ERlVNck9MVjZ0Z2pJeWU5clJpSHlwbjBqQjgyM0gySFA4dWYKNW5FcDBUcjFPdTNQQmdHWW85Y3NGb0xzQUdOekpHV0ViWXl1M3dJREFRQUJBb0lCQUI5LzBEWlFNU2xtUlpjNQphOTVlbTljemhPeENpOC9LcnJ1K2VMVG9RWEZPMVJkVkI0UUZtU215N3Y0dWlWZ2lISXZMK280YktPUVJwYzJiCjZ3b1VlL3hrckE1RS9aVW82SGdVby8vYTRUVlFwMmhXcEJwTzlNYVBiT2N5Tml0bG9Jaytka0dXcmlPTkV3RncKNHBuSXZISDNBNG9vNzVMN0cxM29mWWtEWXUzK2kyOXNlQ0EzaHYvSUlsYlF2VDkyVkFnNEtFTVZaV0QvWitabwpiTkZPNW5MN0JkRm9UODQrRlhOaGdOaFlHeFRHTGtSTDAxNlE2R3pmRElrWTZzaGtGZkYyS00xelplUndCR1FpCnQ2SWRZRXdVZElEYU1WUVRvNXdtY1gwNDA3aXkvYkprcHQranV2dXZheDFPeE4xQVRjbWovblVPazR5b0VBYisKMWF3RVJGRUNnWUVBLzNYalRGcUR0K29rY3JVN1V4TUtOd1dPenlvaXRJaGx6TkRsbHdkVnVwQzZHNE5tNXNIRwpmMTVrMzJOQXZMa0EvN2YxcTBHeHFYM2NCK01JNk5WUU1FTnZXandaV0FHeHFGdERhVUNoSVpnVTZENjN6VWdvCnVuR2c1cnVHQnZ4Y1dYT3FDRG10UTJ6cTF4Mzg0MTdUVk9lNUVqK25ZdmM4eDU2a1dtQi9kb1VDZ1lFQThXUksKZkIxeUxkcVV4MUR2TW9jQzJhbE5scGZHVHVyQmg2d1cvVldMa1R6TmxmTWwvWmIveXRzbDBsRUtMV2NSdzZkQwpaSGpBU094Z28yeXVXbzdxMXViQlk4QkRJdkRaRGpsdUFpYWdKVzcvckQ3OHY2SzkvRS9qNm1XbUFPNXlXN0xaCmNjbjJMMnBsRUVwb3dxc21ESGxVdzF2K2xpUjNIN0VLN1dMWVJ4TUNnWUVBbTFkb2ZJbWVCenhPSmFLbkRJRkwKZU9IY1VZVmh6VDRVQ1ZRT0NLVGhNSzNKUGVuTnJReXdVOHRtczZCN1FVZU9uL0dSWmk1d2hveU9QQTJHNFc2MQpjR1BSVnFHdEY2TVFFVHhONWJielJLWmlNRWZUSlBWNExzZmgrK3lVTjdORnhPOWN1ZHU0eklOeTJwVFZycjErCjdPWnIxL2oxSkcwTGZLZXZjWFcwakxFQ2dZRUExZWREUWJ4dUkwZmdNc2I3VDFEb0s2eWsvbDg3OFU2QmRCSUEKeFRoNjFwYUVydTJwcW8rVjExSmVyNEgwZk1zcXFLK2NXNS9NOUZIU1NMN1R1WmVQYmlOSkYzV1ZpRzdZU0l5SAplUXgxT1BhbFJTTURvV1U2NlV4NThJbG1rc2k1T1p6QXB0NktjdlhhM0phelFsMmE5ODdFVitFN05oeldHcFV0CjA3R1ZhVlVDZ1lFQTQ3LzhSM215d0JkdFZJVzBtWElEQ0RsMkZxYVdDbDRNdmVvNEx5ekhRU0F0NjVVeXdOOWgKUlRFd1VJcmJ1MlJMblptMm1mOWI5akZOZjN3ZGJFNmwxVlFEYXRpeUdrdnRuWGZmRlZKWTNzZmdoRVMweTlYYQpkeGVJVTZRR2lQTDB3YTNMSzJ3eU5VOHNWR0J2TmhXU2x4cEtxTSt5dGVMdnZZS3RSdmcyUFBJPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kube-control-plane-signer.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBOE9JUFc1azUwYjNrelQrWmVXbWg1ZzFpM2xsQ05LWUswNGI1T3Y3UXlpMzBXdCtHClpPRkVnU3I1NFRmWWg1bmIrTml6RFp6cWFOMlZnK2VrNURTRUxhbmRGQXVWOWN4dU1qZXU0aWVVOGlLc05iWHUKZHIzV09aazV1d2VnMFRjRmhidzhkak5BYVFGVXV6dHlJVEtNdDJWUFVIMEk1allUL0ExOFFFK3lJdEo4MUhETgpOWFMxaVBSUS9tNkMrcVN0dEd3MnhzeUhuUjNxMjBWeGR2cTlUOEV3cTE0SG5LTy95SmlBYVZmY2x3QUk3V2twCkVqZGVUZ1cvVkd0VGNSbndzQlFEZEtGbmhxU01ERlVNck9MVjZ0Z2pJeWU5clJpSHlwbjBqQjgyM0gySFA4dWYKNW5FcDBUcjFPdTNQQmdHWW85Y3NGb0xzQUdOekpHV0ViWXl1M3dJREFRQUJBb0lCQUI5LzBEWlFNU2xtUlpjNQphOTVlbTljemhPeENpOC9LcnJ1K2VMVG9RWEZPMVJkVkI0UUZtU215N3Y0dWlWZ2lISXZMK280YktPUVJwYzJiCjZ3b1VlL3hrckE1RS9aVW82SGdVby8vYTRUVlFwMmhXcEJwTzlNYVBiT2N5Tml0bG9Jaytka0dXcmlPTkV3RncKNHBuSXZISDNBNG9vNzVMN0cxM29mWWtEWXUzK2kyOXNlQ0EzaHYvSUlsYlF2VDkyVkFnNEtFTVZaV0QvWitabwpiTkZPNW5MN0JkRm9UODQrRlhOaGdOaFlHeFRHTGtSTDAxNlE2R3pmRElrWTZzaGtGZkYyS00xelplUndCR1FpCnQ2SWRZRXdVZElEYU1WUVRvNXdtY1gwNDA3aXkvYkprcHQranV2dXZheDFPeE4xQVRjbWovblVPazR5b0VBYisKMWF3RVJGRUNnWUVBLzNYalRGcUR0K29rY3JVN1V4TUtOd1dPenlvaXRJaGx6TkRsbHdkVnVwQzZHNE5tNXNIRwpmMTVrMzJOQXZMa0EvN2YxcTBHeHFYM2NCK01JNk5WUU1FTnZXandaV0FHeHFGdERhVUNoSVpnVTZENjN6VWdvCnVuR2c1cnVHQnZ4Y1dYT3FDRG10UTJ6cTF4Mzg0MTdUVk9lNUVqK25ZdmM4eDU2a1dtQi9kb1VDZ1lFQThXUksKZkIxeUxkcVV4MUR2TW9jQzJhbE5scGZHVHVyQmg2d1cvVldMa1R6TmxmTWwvWmIveXRzbDBsRUtMV2NSdzZkQwpaSGpBU094Z28yeXVXbzdxMXViQlk4QkRJdkRaRGpsdUFpYWdKVzcvckQ3OHY2SzkvRS9qNm1XbUFPNXlXN0xaCmNjbjJMMnBsRUVwb3dxc21ESGxVdzF2K2xpUjNIN0VLN1dMWVJ4TUNnWUVBbTFkb2ZJbWVCenhPSmFLbkRJRkwKZU9IY1VZVmh6VDRVQ1ZRT0NLVGhNSzNKUGVuTnJReXdVOHRtczZCN1FVZU9uL0dSWmk1d2hveU9QQTJHNFc2MQpjR1BSVnFHdEY2TVFFVHhONWJielJLWmlNRWZUSlBWNExzZmgrK3lVTjdORnhPOWN1ZHU0eklOeTJwVFZycjErCjdPWnIxL2oxSkcwTGZLZXZjWFcwakxFQ2dZRUExZWREUWJ4dUkwZmdNc2I3VDFEb0s2eWsvbDg3OFU2QmRCSUEKeFRoNjFwYUVydTJwcW8rVjExSmVyNEgwZk1zcXFLK2NXNS9NOUZIU1NMN1R1WmVQYmlOSkYzV1ZpRzdZU0l5SAplUXgxT1BhbFJTTURvV1U2NlV4NThJbG1rc2k1T1p6QXB0NktjdlhhM0phelFsMmE5ODdFVitFN05oeldHcFV0CjA3R1ZhVlVDZ1lFQTQ3LzhSM215d0JkdFZJVzBtWElEQ0RsMkZxYVdDbDRNdmVvNEx5ekhRU0F0NjVVeXdOOWgKUlRFd1VJcmJ1MlJMblptMm1mOWI5akZOZjN3ZGJFNmwxVlFEYXRpeUdrdnRuWGZmRlZKWTNzZmdoRVMweTlYYQpkeGVJVTZRR2lQTDB3YTNMSzJ3eU5VOHNWR0J2TmhXU2x4cEtxTSt5dGVMdnZZS3RSdmcyUFBJPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/kube-control-plane-signer.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURORENDQWh5Z0F3SUJBZ0lJSHVIUnU4eDN5eDR3RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRJek1Ea3lOVEl4TXpRek9Wb1hEVEkwTURreU5ESXhNelF6T1Zvd09ERVNNQkFHQTFVRUN4TUpiM0JsCmJuTm9hV1owTVNJd0lBWURWUVFERXhscmRXSmxMV052Ym5SeWIyd3RjR3hoYm1VdGMybG5ibVZ5TUlJQklqQU4KQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBOE9JUFc1azUwYjNrelQrWmVXbWg1ZzFpM2xsQwpOS1lLMDRiNU92N1F5aTMwV3QrR1pPRkVnU3I1NFRmWWg1bmIrTml6RFp6cWFOMlZnK2VrNURTRUxhbmRGQXVWCjljeHVNamV1NGllVThpS3NOYlh1ZHIzV09aazV1d2VnMFRjRmhidzhkak5BYVFGVXV6dHlJVEtNdDJWUFVIMEkKNWpZVC9BMThRRSt5SXRKODFIRE5OWFMxaVBSUS9tNkMrcVN0dEd3MnhzeUhuUjNxMjBWeGR2cTlUOEV3cTE0SApuS08veUppQWFWZmNsd0FJN1drcEVqZGVUZ1cvVkd0VGNSbndzQlFEZEtGbmhxU01ERlVNck9MVjZ0Z2pJeWU5CnJSaUh5cG4wakI4MjNIMkhQOHVmNW5FcDBUcjFPdTNQQmdHWW85Y3NGb0xzQUdOekpHV0ViWXl1M3dJREFRQUIKbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVQozVzRXNEVUZ2xtV29GTG8yK01tT0U2NEloZzR3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUxHS1FPamhJWDMyCktiMzEzTzlZYTRHR2llTmRrWTR5YWhERXJPQzdlcTNqQnNVdWN3dW9EQks3KzkyRDg4dXBiVVZGTTRTcjVIaGIKcW5aY0U0bVpSZzIxLzMxSTl3NTlZSHFsN0ZTNHl6RkY4TUo0M1Q5VjZoKy9SRGRZWU9DSWFMRmdkTXJMSG9YSgptTzBxZWI0dGtYdlBkRkJoSUZNdFpOZEZWMHZmMENQeGpnYUVZQitjUVVuMjh3YUZvdktNSnJheEtYS1loV3I4CmZtSkxLT3RScms2MXh6b3NmM2lkM3dkTjJBMEdINDJ1eG5EMjdTYjQ5ZlFNQWNZVUtKZkdIQjFBRDJ2RjByeXAKLy9TZDlvL3lNK1M3ZmpIS1VJblNSNEx1T3M4MkRwRkYwU1Q5NHJFTHhhcG0xYzZnZHlHQk1ldVVjTndhT056ZQo0ZENkWEJQTWVuMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.KubeletBootstrapCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lJS0ozUnE2Tjc5Rk13RFFZSktvWklodmNOQVFFTEJRQXdRakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Td3dLZ1lEVlFRREV5TnJkV0psYkdWMExXSnZiM1J6ZEhKaGNDMXJkV0psWTI5dQpabWxuTFhOcFoyNWxjakFlRncweU16QTVNalV5TVRNME16WmFGdzB6TXpBNU1qSXlNVE0wTXpaYU1FSXhFakFRCkJnTlZCQXNUQ1c5d1pXNXphR2xtZERFc01Db0dBMVVFQXhNamEzVmlaV3hsZEMxaWIyOTBjM1J5WVhBdGEzVmkKWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEWApINGhzYUUvVXRvQW55VHJ1cTYvYVlwVzZnSS9mN1Nod1JodjdGa0lYa0NhcHR5Yk1uVERqZEFray9GZ0VTbUkzCjRWMUJaZCtXdlJxYVI0eXo0SldaSWgyd1paUEV4RnozajEzU1pubklJYW9YMFZwZC9hYTlsQytSZitKM2t3K0IKRk9RaHVySHJqL0hqT0NPRGVkV1RLVGY5NEdIK3l4d05RcWExQkJKRnpQZnBxOHZ2d0M3SFU3Um9pcXVockpHZwpQWVdkYlprOWhPL1RqUk4xQk5KVmlFVVk4eEVzUHU4QVVHYUFVNkk5ZVpmbGhiS3RnNTBWcE9HR0lBUGZ0UEE4CmxHaEpuQjFoSG15NnQyWlFEYU9uQW91SXZHODN4VENEbmNwWnBuQ3N6WEl5MmEva0FVRVFLVmFDekh5dVJsR0MKTllJUkRIWkErdXJybEZDSkVvMGRBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQgpBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlR0Sk5UY3JNMHVTWDh5WDNJenpkK1RPK0hGMlRBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFGQ2ZhRkczelFDS1FET2VmaUVSSGNIKzZsMVdJNndFdWIzRDFUTEQrd1QyYXd4RlYKMG8vZlNFQXpHbEI5YkIrRmZKSWhubC82VlAwanhtNS9aa2JiZ3FUNFp6WkNTdG5haWk0TTFKMGQ0YTZWaXRVdgpWYW5HNnkyQ3dTNngzQ0pXZVByZ1RhM0UzWXpMZWNmUUdxcFlXVUt0ME5aUFJLNVpXWWNQbXowNDBBNmwrV2lVCi9VMnFzaS9PQS9GTmlCODRqVzlOdVpCSU42dElEcldLWGNrRDNxRk1aNDdsdnVKc2J2b2p2WDNjbU8wV2JnK3kKVkc0THo0THRxczIwRmtLYzhvM1dldmcya0JBY2RwditIbjhNZ2xpWHBGZVB5N3JqT3FBZUhIeTUzdlZUT2xTdApURENweWZ4c2NvRXRSZzFIb3UwTU1ycUlYY2hlTTI3VHo5M0pEZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "FileList": [
            {
                "Filename": "tls/kubelet-bootstrap-kubeconfig-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lJS0ozUnE2Tjc5Rk13RFFZSktvWklodmNOQVFFTEJRQXdRakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Td3dLZ1lEVlFRREV5TnJkV0psYkdWMExXSnZiM1J6ZEhKaGNDMXJkV0psWTI5dQpabWxuTFhOcFoyNWxjakFlRncweU16QTVNalV5TVRNME16WmFGdzB6TXpBNU1qSXlNVE0wTXpaYU1FSXhFakFRCkJnTlZCQXNUQ1c5d1pXNXphR2xtZERFc01Db0dBMVVFQXhNamEzVmlaV3hsZEMxaWIyOTBjM1J5WVhBdGEzVmkKWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEWApINGhzYUUvVXRvQW55VHJ1cTYvYVlwVzZnSS9mN1Nod1JodjdGa0lYa0NhcHR5Yk1uVERqZEFray9GZ0VTbUkzCjRWMUJaZCtXdlJxYVI0eXo0SldaSWgyd1paUEV4RnozajEzU1pubklJYW9YMFZwZC9hYTlsQytSZitKM2t3K0IKRk9RaHVySHJqL0hqT0NPRGVkV1RLVGY5NEdIK3l4d05RcWExQkJKRnpQZnBxOHZ2d0M3SFU3Um9pcXVockpHZwpQWVdkYlprOWhPL1RqUk4xQk5KVmlFVVk4eEVzUHU4QVVHYUFVNkk5ZVpmbGhiS3RnNTBWcE9HR0lBUGZ0UEE4CmxHaEpuQjFoSG15NnQyWlFEYU9uQW91SXZHODN4VENEbmNwWnBuQ3N6WEl5MmEva0FVRVFLVmFDekh5dVJsR0MKTllJUkRIWkErdXJybEZDSkVvMGRBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQgpBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlR0Sk5UY3JNMHVTWDh5WDNJenpkK1RPK0hGMlRBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFGQ2ZhRkczelFDS1FET2VmaUVSSGNIKzZsMVdJNndFdWIzRDFUTEQrd1QyYXd4RlYKMG8vZlNFQXpHbEI5YkIrRmZKSWhubC82VlAwanhtNS9aa2JiZ3FUNFp6WkNTdG5haWk0TTFKMGQ0YTZWaXRVdgpWYW5HNnkyQ3dTNngzQ0pXZVByZ1RhM0UzWXpMZWNmUUdxcFlXVUt0ME5aUFJLNVpXWWNQbXowNDBBNmwrV2lVCi9VMnFzaS9PQS9GTmlCODRqVzlOdVpCSU42dElEcldLWGNrRDNxRk1aNDdsdnVKc2J2b2p2WDNjbU8wV2JnK3kKVkc0THo0THRxczIwRmtLYzhvM1dldmcya0JBY2RwditIbjhNZ2xpWHBGZVB5N3JqT3FBZUhIeTUzdlZUT2xTdApURENweWZ4c2NvRXRSZzFIb3UwTU1ycUlYY2hlTTI3VHo5M0pEZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeletBootstrapCertSigner": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lJS0ozUnE2Tjc5Rk13RFFZSktvWklodmNOQVFFTEJRQXdRakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Td3dLZ1lEVlFRREV5TnJkV0psYkdWMExXSnZiM1J6ZEhKaGNDMXJkV0psWTI5dQpabWxuTFhOcFoyNWxjakFlRncweU16QTVNalV5TVRNME16WmFGdzB6TXpBNU1qSXlNVE0wTXpaYU1FSXhFakFRCkJnTlZCQXNUQ1c5d1pXNXphR2xtZERFc01Db0dBMVVFQXhNamEzVmlaV3hsZEMxaWIyOTBjM1J5WVhBdGEzVmkKWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEWApINGhzYUUvVXRvQW55VHJ1cTYvYVlwVzZnSS9mN1Nod1JodjdGa0lYa0NhcHR5Yk1uVERqZEFray9GZ0VTbUkzCjRWMUJaZCtXdlJxYVI0eXo0SldaSWgyd1paUEV4RnozajEzU1pubklJYW9YMFZwZC9hYTlsQytSZitKM2t3K0IKRk9RaHVySHJqL0hqT0NPRGVkV1RLVGY5NEdIK3l4d05RcWExQkJKRnpQZnBxOHZ2d0M3SFU3Um9pcXVockpHZwpQWVdkYlprOWhPL1RqUk4xQk5KVmlFVVk4eEVzUHU4QVVHYUFVNkk5ZVpmbGhiS3RnNTBWcE9HR0lBUGZ0UEE4CmxHaEpuQjFoSG15NnQyWlFEYU9uQW91SXZHODN4VENEbmNwWnBuQ3N6WEl5MmEva0FVRVFLVmFDekh5dVJsR0MKTllJUkRIWkErdXJybEZDSkVvMGRBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQgpBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlR0Sk5UY3JNMHVTWDh5WDNJenpkK1RPK0hGMlRBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFGQ2ZhRkczelFDS1FET2VmaUVSSGNIKzZsMVdJNndFdWIzRDFUTEQrd1QyYXd4RlYKMG8vZlNFQXpHbEI5YkIrRmZKSWhubC82VlAwanhtNS9aa2JiZ3FUNFp6WkNTdG5haWk0TTFKMGQ0YTZWaXRVdgpWYW5HNnkyQ3dTNngzQ0pXZVByZ1RhM0UzWXpMZWNmUUdxcFlXVUt0ME5aUFJLNVpXWWNQbXowNDBBNmwrV2lVCi9VMnFzaS9PQS9GTmlCODRqVzlOdVpCSU42dElEcldLWGNrRDNxRk1aNDdsdnVKc2J2b2p2WDNjbU8wV2JnK3kKVkc0THo0THRxczIwRmtLYzhvM1dldmcya0JBY2RwditIbjhNZ2xpWHBGZVB5N3JqT3FBZUhIeTUzdlZUT2xTdApURENweWZ4c2NvRXRSZzFIb3UwTU1ycUlYY2hlTTI3VHo5M0pEZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBMXgrSWJHaFAxTGFBSjhrNjdxdXYybUtWdW9DUDMrMG9jRVliK3haQ0Y1QW1xYmNtCnpKMHc0M1FKSlB4WUJFcGlOK0ZkUVdYZmxyMGFta2VNcytDVm1TSWRzR1dUeE1SYzk0OWQwbVo1eUNHcUY5RmEKWGYybXZaUXZrWC9pZDVNUGdSVGtJYnF4NjQveDR6Z2pnM25Wa3lrMy9lQmgvc3NjRFVLbXRRUVNSY3ozNmF2TAo3OEF1eDFPMGFJcXJvYXlSb0QyRm5XMlpQWVR2MDQwVGRRVFNWWWhGR1BNUkxEN3ZBRkJtZ0ZPaVBYbVg1WVd5CnJZT2RGYVRoaGlBRDM3VHdQSlJvU1p3ZFlSNXN1cmRtVUEyanB3S0xpTHh2TjhVd2c1M0tXYVp3ck0xeU10bXYKNUFGQkVDbFdnc3g4cmtaUmdqV0NFUXgyUVBycTY1UlFpUktOSFFJREFRQUJBb0lCQUI3NFdEQ2JOOXI4eHloegpMUHZOVmN6UDRwUnVDOGlHSVF0QTNLaGlSUE9WZWl0Mnhhd3hlU2RWdmpkSDZQZjlLWFM0Q2kvdkZhaGk0eUNRCjZtMi9DR3A2WWVIU1RkckhGa2RCcVpVdjBacUJWamFGbWtmcnk0U0JmL09uZ0pnTVlQQUpiT3A2TVVFamdRUmcKUWFTYzlxVndDcktQQ2l5Zld4T0JvL1J0ZUovNXBhVVVNeVlKZGJ0UWtveHZINVRDd3d5cVgvMkc2NUovYmg2eQpFRlJLV1gzOGdVdGh2aTdGUHZlQkpobWs2VngxTWFScERSLy9YYjk2VCtYTjQvM3FjU1E1c1B5Z2JJOHIwRmdHClh6b1IyaUc1cjF5WDJHVDNtMFFPZWh4UHlYbjM1aHpJZmZBWEtia1dGY3VPcTUvNFREcGovUlpyU2tYd1VpTjgKMjJpb05BRUNnWUVBNyt2UVJkRjlCd3o2YzRUcWRCZys4QUhZWFRNeFRWWk1ZNlFNUThqbzdHdDFCSEZFZnA3UQpjbkxDZTJHem9lNENoNUpwbFFXaEk4dlJ6ZUxsb2NEbUdhNFkrZWlnK1VhT21CK2paSk1ibm9tSkgyNy9URTdICmhVaW0rd2ZyT1NKK20yYmNJNWVRTlhDdWRZQ3dXWjFZcERPdVpWS1cwZ2w4M2w4MlV3YndJQjBDZ1lFQTVZcEcKYS91UjM5VGdZUzFoM1dkeXlxKy9ydFdvVm1Sd2ozNE1Xd3VFY3BBVE44SXBxTjUzWGJ5U240aGNyeDVQNkhvYgp1TEZKVjRvRkJMWVhYQzczcS9kOTBDaFg0R3I1VmpsOUNDZ1hibEpBeENPK3lyU3RyS1ovek1aRk9LSFpaN2tQCjg2amFtUStFZGNuTDJHN1dnQURKS3c4a2s0MEcwdzhEUXFFYWtRRUNnWUFsSXJyNkU1TG1wSHVmcGRNa1pSeFkKeWZCVGZMa0UzM2F6ZFpEd2JRaWdqNEZ0VHBycmZtbUZUWDRNMnZLUy9lUW1WK00vemI5RGF5anVWVkIxMlFYRQpzODNwNExnSjNZSDB5ZkRnZ0dTbUJXUFVHYm9xZFljc2VqSmVhTHRmL0piY051K2NFcm1maS9GMC9wWk5TSzJQCnZQQWhmc2NaZTU1NFRRUjdsWGRWZ1FLQmdHbWFOeEhnMkZqWThDM2xHaHdwUnJlWEthRys3RVpxeVJwTERGWXEKczFHZGxTblc2eUdrejlmUk5NZXVqYTJIVFk0UDk0YitFVmJ6eWFGRVFQVUpLcXIwSHU3UVVMV1BvWXlZd0R3cgpiYlEwcFZWWGVLUjdnVmRuOW0zNFhjcFRNOWt6Vy9KbW9jTS9UMXA5YjRud1hFRGhtNnR5dVFvbEhKbW5VNEdvCjZyY0JBb0dBU21GYUNiQ2hRZU5OOThYV3dhemJaSXhrbTFWWml1NytnaG03Nm9UdGhuOCtHc2J2T2tqYnBPSS8KTUtMNFBOcE40MFVwMWFiNldFSDhqZ3pIMDhtVFdGNUZ4VjRSempNa3I3OXZCOGVRYURLNWk5bUdSc1lzeVpDRwo5WU9aTmVMYUlaaGJFUmt1ZFFGbjduTDN0bXRHeWJ5NWc1d0pjS2ZXdndyaG9aWWFDbnc9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kubelet-bootstrap-kubeconfig-signer.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBMXgrSWJHaFAxTGFBSjhrNjdxdXYybUtWdW9DUDMrMG9jRVliK3haQ0Y1QW1xYmNtCnpKMHc0M1FKSlB4WUJFcGlOK0ZkUVdYZmxyMGFta2VNcytDVm1TSWRzR1dUeE1SYzk0OWQwbVo1eUNHcUY5RmEKWGYybXZaUXZrWC9pZDVNUGdSVGtJYnF4NjQveDR6Z2pnM25Wa3lrMy9lQmgvc3NjRFVLbXRRUVNSY3ozNmF2TAo3OEF1eDFPMGFJcXJvYXlSb0QyRm5XMlpQWVR2MDQwVGRRVFNWWWhGR1BNUkxEN3ZBRkJtZ0ZPaVBYbVg1WVd5CnJZT2RGYVRoaGlBRDM3VHdQSlJvU1p3ZFlSNXN1cmRtVUEyanB3S0xpTHh2TjhVd2c1M0tXYVp3ck0xeU10bXYKNUFGQkVDbFdnc3g4cmtaUmdqV0NFUXgyUVBycTY1UlFpUktOSFFJREFRQUJBb0lCQUI3NFdEQ2JOOXI4eHloegpMUHZOVmN6UDRwUnVDOGlHSVF0QTNLaGlSUE9WZWl0Mnhhd3hlU2RWdmpkSDZQZjlLWFM0Q2kvdkZhaGk0eUNRCjZtMi9DR3A2WWVIU1RkckhGa2RCcVpVdjBacUJWamFGbWtmcnk0U0JmL09uZ0pnTVlQQUpiT3A2TVVFamdRUmcKUWFTYzlxVndDcktQQ2l5Zld4T0JvL1J0ZUovNXBhVVVNeVlKZGJ0UWtveHZINVRDd3d5cVgvMkc2NUovYmg2eQpFRlJLV1gzOGdVdGh2aTdGUHZlQkpobWs2VngxTWFScERSLy9YYjk2VCtYTjQvM3FjU1E1c1B5Z2JJOHIwRmdHClh6b1IyaUc1cjF5WDJHVDNtMFFPZWh4UHlYbjM1aHpJZmZBWEtia1dGY3VPcTUvNFREcGovUlpyU2tYd1VpTjgKMjJpb05BRUNnWUVBNyt2UVJkRjlCd3o2YzRUcWRCZys4QUhZWFRNeFRWWk1ZNlFNUThqbzdHdDFCSEZFZnA3UQpjbkxDZTJHem9lNENoNUpwbFFXaEk4dlJ6ZUxsb2NEbUdhNFkrZWlnK1VhT21CK2paSk1ibm9tSkgyNy9URTdICmhVaW0rd2ZyT1NKK20yYmNJNWVRTlhDdWRZQ3dXWjFZcERPdVpWS1cwZ2w4M2w4MlV3YndJQjBDZ1lFQTVZcEcKYS91UjM5VGdZUzFoM1dkeXlxKy9ydFdvVm1Sd2ozNE1Xd3VFY3BBVE44SXBxTjUzWGJ5U240aGNyeDVQNkhvYgp1TEZKVjRvRkJMWVhYQzczcS9kOTBDaFg0R3I1VmpsOUNDZ1hibEpBeENPK3lyU3RyS1ovek1aRk9LSFpaN2tQCjg2amFtUStFZGNuTDJHN1dnQURKS3c4a2s0MEcwdzhEUXFFYWtRRUNnWUFsSXJyNkU1TG1wSHVmcGRNa1pSeFkKeWZCVGZMa0UzM2F6ZFpEd2JRaWdqNEZ0VHBycmZtbUZUWDRNMnZLUy9lUW1WK00vemI5RGF5anVWVkIxMlFYRQpzODNwNExnSjNZSDB5ZkRnZ0dTbUJXUFVHYm9xZFljc2VqSmVhTHRmL0piY051K2NFcm1maS9GMC9wWk5TSzJQCnZQQWhmc2NaZTU1NFRRUjdsWGRWZ1FLQmdHbWFOeEhnMkZqWThDM2xHaHdwUnJlWEthRys3RVpxeVJwTERGWXEKczFHZGxTblc2eUdrejlmUk5NZXVqYTJIVFk0UDk0YitFVmJ6eWFGRVFQVUpLcXIwSHU3UVVMV1BvWXlZd0R3cgpiYlEwcFZWWGVLUjdnVmRuOW0zNFhjcFRNOWt6Vy9KbW9jTS9UMXA5YjRud1hFRGhtNnR5dVFvbEhKbW5VNEdvCjZyY0JBb0dBU21GYUNiQ2hRZU5OOThYV3dhemJaSXhrbTFWWml1NytnaG03Nm9UdGhuOCtHc2J2T2tqYnBPSS8KTUtMNFBOcE40MFVwMWFiNldFSDhqZ3pIMDhtVFdGNUZ4VjRSempNa3I3OXZCOGVRYURLNWk5bUdSc1lzeVpDRwo5WU9aTmVMYUlaaGJFUmt1ZFFGbjduTDN0bXRHeWJ5NWc1d0pjS2ZXdndyaG9aWWFDbnc9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/kubelet-bootstrap-kubeconfig-signer.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lJS0ozUnE2Tjc5Rk13RFFZSktvWklodmNOQVFFTEJRQXdRakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Td3dLZ1lEVlFRREV5TnJkV0psYkdWMExXSnZiM1J6ZEhKaGNDMXJkV0psWTI5dQpabWxuTFhOcFoyNWxjakFlRncweU16QTVNalV5TVRNME16WmFGdzB6TXpBNU1qSXlNVE0wTXpaYU1FSXhFakFRCkJnTlZCQXNUQ1c5d1pXNXphR2xtZERFc01Db0dBMVVFQXhNamEzVmlaV3hsZEMxaWIyOTBjM1J5WVhBdGEzVmkKWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEWApINGhzYUUvVXRvQW55VHJ1cTYvYVlwVzZnSS9mN1Nod1JodjdGa0lYa0NhcHR5Yk1uVERqZEFray9GZ0VTbUkzCjRWMUJaZCtXdlJxYVI0eXo0SldaSWgyd1paUEV4RnozajEzU1pubklJYW9YMFZwZC9hYTlsQytSZitKM2t3K0IKRk9RaHVySHJqL0hqT0NPRGVkV1RLVGY5NEdIK3l4d05RcWExQkJKRnpQZnBxOHZ2d0M3SFU3Um9pcXVockpHZwpQWVdkYlprOWhPL1RqUk4xQk5KVmlFVVk4eEVzUHU4QVVHYUFVNkk5ZVpmbGhiS3RnNTBWcE9HR0lBUGZ0UEE4CmxHaEpuQjFoSG15NnQyWlFEYU9uQW91SXZHODN4VENEbmNwWnBuQ3N6WEl5MmEva0FVRVFLVmFDekh5dVJsR0MKTllJUkRIWkErdXJybEZDSkVvMGRBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQgpBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlR0Sk5UY3JNMHVTWDh5WDNJenpkK1RPK0hGMlRBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFGQ2ZhRkczelFDS1FET2VmaUVSSGNIKzZsMVdJNndFdWIzRDFUTEQrd1QyYXd4RlYKMG8vZlNFQXpHbEI5YkIrRmZKSWhubC82VlAwanhtNS9aa2JiZ3FUNFp6WkNTdG5haWk0TTFKMGQ0YTZWaXRVdgpWYW5HNnkyQ3dTNngzQ0pXZVByZ1RhM0UzWXpMZWNmUUdxcFlXVUt0ME5aUFJLNVpXWWNQbXowNDBBNmwrV2lVCi9VMnFzaS9PQS9GTmlCODRqVzlOdVpCSU42dElEcldLWGNrRDNxRk1aNDdsdnVKc2J2b2p2WDNjbU8wV2JnK3kKVkc0THo0THRxczIwRmtLYzhvM1dldmcya0JBY2RwditIbjhNZ2xpWHBGZVB5N3JqT3FBZUhIeTUzdlZUT2xTdApURENweWZ4c2NvRXRSZzFIb3UwTU1ycUlYY2hlTTI3VHo5M0pEZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeletCSRSignerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lJVE0rU2pwLzV2NXd3RFFZSktvWklodmNOQVFFTEJRQXdMVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SY3dGUVlEVlFRREV3NXJkV0psYkdWMExYTnBaMjVsY2pBZUZ3MHlNekE1TWpVeQpNVE0wTXpsYUZ3MHlNekE1TWpZeU1UTTBNemxhTUMweEVqQVFCZ05WQkFzVENXOXdaVzV6YUdsbWRERVhNQlVHCkExVUVBeE1PYTNWaVpXeGxkQzF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRREM2R2ljcmtXOCtNVXVEOU9WQlM4czgwRjhOd3QvWkl4bHFxNVp2YlNDL0dNYUZFeGJRTUYvZzF3dQp3VGlab3cyYURBMmt1aFUvajdibTdTaVFnTXRWd1V3dm00QVB3RnZXNlJWcSs3MENPWUFwWHV4eGN2VkpubnVjCjljRTJPTzhmcUdqRkhUYWZoKzB0cjB5L0VQMkl0SFNwdkt5Ukx5M2Nuc0ZFTnJwb29TZlJ0ZDlxazZ3ODYyWGwKWUdJcUVOKzlLaEc1aWhib0U4TlN0WlFTb1ZuWm92b2xCd0RnTHlNNnVHSEd2ek1odUZYQVdhTHh2ajBKMS8rNwpyWW9WRHh2bldFYXMxR3lVaytHVWNuVkkwY3BoYi9adGZBRUhHRlhMSTQzUS9TUFlkcDRIRVVjeVYzOU91eEF2Ci95Um1IYTF4MG4vRmxKbTEwd0FQK2hoMk9SbTFBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlR2YVY1eFd6YklXVEF4SkJPeng5ZThyS2p3SWpBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFuN29wYW1pVVVwaHZwZUwwM0RvLzZ2SlN2WVB1VnNGcUNaUkN3dXZtCnAwODEyK3M4VXYwQUdLZldkOXU5N01tNlIwRG5HanFYMkRVT3dBY1QyUXZjb0lPMDNzZmx4MlNFdG1BT3UyRWgKV2ZxQlBkZEgzSW1XZW5hWUhvWjE5L0Vka1JYN096OVpjai9kdEZ2YjYvNVY2MnNGR1pKcW1WeVFqRjVVOFhIagpOeFRQYVdJZmhMRjN5T0phdWlJdFoxWi9qSHk4RlB2Y3ZseGNpNm5mSk41QTZFMW9SR1lHZThWSm52NmxCeklVCjQ2ZlRKNndVV2twSGNiRy9WRjFKaWpwZC9wWVo2NGVnbDlybjNpaDh3N0xqZjJzcGo0K2hsTWcwYWZISlg5U3AKbS81cHU5bldMSytyNmFWRnNiTmNKYUg5S213WTZlbnFCWnpnbnU1WWRwVTIzZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd3Vob25LNUZ2UGpGTGcvVGxRVXZMUE5CZkRjTGYyU01aYXF1V2IyMGd2eGpHaFJNClcwREJmNE5jTHNFNG1hTU5tZ3dOcExvVlA0KzI1dTBva0lETFZjRk1MNXVBRDhCYjF1a1ZhdnU5QWptQUtWN3MKY1hMMVNaNTduUFhCTmpqdkg2aG94UjAybjRmdExhOU12eEQ5aUxSMHFieXNrUzh0M0o3QlJEYTZhS0VuMGJYZgphcE9zUE90bDVXQmlLaERmdlNvUnVZb1c2QlBEVXJXVUVxRloyYUw2SlFjQTRDOGpPcmhoeHI4ekliaFZ3Rm1pCjhiNDlDZGYvdTYyS0ZROGI1MWhHck5Sc2xKUGhsSEoxU05IS1lXLzJiWHdCQnhoVnl5T04wUDBqMkhhZUJ4RkgKTWxkL1Ryc1FMLzhrWmgydGNkSi94WlNadGRNQUQvb1lkamtadFFJREFRQUJBb0lCQUNJZGFjb2Eyc3dEd3dlWAo3NUhDMFlvTm5lV3ZBTTB3ZlQ2Q1RIZ2FzMURGK2xhalBPWXdCRzVjUUxOU1VLVGJuRkxkVHpvSTlCVW5BMzJSCi95cWowSE5YSFEyc0t4TVd1VHg1bWEwYkdPOGR2MmYrWEdaVEY4bmwrbjd6cVBqanFEOGpUQXRNWExZNXBYTDgKbnZOR2R3b0pnKzM5dnpxK1JrbTZZOXVidEs4QlQ1RUkwcnlhV09Fak0yQ2VSZm9QR3JSa0xFWS9ydVA4TVBVUApzM3ord2NPZHlhMDFDcFN6U0dRSUJGZ1hlZDNXRzVlQ01mbjFZMEo3d0x3TktYYlhmc1F2eWtGaWU5NmYvTTByCm1sM2ZoUXh1L1UrajZMbWcrMFpnTURQNkszM3dtWUtiVHhHQWVRNlpNMUVCMWU0ZnVrbUZmRXdpQ3k3T3FQbjcKQXpKRU5GVUNnWUVBOXEzK0hCVzJySlVwUS9DS0xkam9EZzVBdXI3eU1EUkpGaVRHOXlkb0FCQVlNSlFsQSt6NApFKzlkL3MrcXpDMFN5em5qa2VDTDFNbGNFaVpxY2xKVjUxclZ0S0JHUDZ2VGkvS0NFVHNMbUVielJSNjQ0bFR6CnVGVTYyamd5ajZ3VXVCM1E5cGhVbnBvMFZxamVmaitCQzZNMTdDVWJTK3VZRHl1Q0pZcTJpa3NDZ1lFQXlrV24KVEUzODIxV2hJdXVKektzMUU1TWhIaVpuSXBZc3ptZHR2ZEl6ZHVGb3YwY2hnZVlwbjI4TktTOENydXZtSGd6VwpaaUwvYzhyd2ZGUHhMV2gvQXNucUZ3SzkzSXJ1NXAraG55T1VvWTVzZnYyaWFza01CaE5OTHNpblBZTndoekZMCmhucTdtMHdaUFJyb2hkWWswdzR5d0xkTDhzaXhvTjhGL2x6SWEvOENnWUVBd3A2L3ozU3FMVHQ1MVNwZ09vL1oKZGMxMDhHRmFQd0hoYitFUVFVc0wySkRhSk9tYzBwNFJrOWpVdGdjdDMrem4yUU1STXJTUVhnK0gzcUlFZGJIVQpLTFlYeVd4eVFDWFd2NkZUVVRqZWl3UGZSdmRZTXVtSGFEV0dPMGovU3k4Zklhd1VnNW5ubVVKY2JNckt6NXhXCnVkSEk1MGpYWW15OENhdndBS0tTSmtVQ2dZQjFMS1oreUlyYlVKNlpDUk41c2hCOE4zWXU3aFkrN2ZvazA3dTYKQStQMlVSd0orcDNKajFpN1dHeXFWK1paQ0tUMDhZRGVDQll0c1BsaFBJdHhQNkNjTC9YZ3dLRFYrdEhzWGJzVgo0bG0rd1MvTzNRVlNrUWJiR2lGVEliL29IWlY1YTdBUnhsV1o0QnFhMEZTMCsxbTN2ZmpldFJCVkk3ZnF0bWZWCmMxQlRad0tCZ1FDdi9LSG1xNjU3K1BCc2pPUWgzV3lpUHplVE11YkxVRURJNFhPOFVvTUVYc0duNUtJVThQenUKTWpaM1EyMTc3VHVLYitYN21Mc0R5ckZqTHEvdUJTaXRzT3E2cWNDR1ZXQUMyc0FiWXFySnBYY1owNTlmTTgyZgpNYWhFZWU1bldnaTF4UXJsMjl3bjJFOUJyeGNQdWlLKy9HWWYwUkE2dFVyWlA3em5ST2poU3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kubelet-signer.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd3Vob25LNUZ2UGpGTGcvVGxRVXZMUE5CZkRjTGYyU01aYXF1V2IyMGd2eGpHaFJNClcwREJmNE5jTHNFNG1hTU5tZ3dOcExvVlA0KzI1dTBva0lETFZjRk1MNXVBRDhCYjF1a1ZhdnU5QWptQUtWN3MKY1hMMVNaNTduUFhCTmpqdkg2aG94UjAybjRmdExhOU12eEQ5aUxSMHFieXNrUzh0M0o3QlJEYTZhS0VuMGJYZgphcE9zUE90bDVXQmlLaERmdlNvUnVZb1c2QlBEVXJXVUVxRloyYUw2SlFjQTRDOGpPcmhoeHI4ekliaFZ3Rm1pCjhiNDlDZGYvdTYyS0ZROGI1MWhHck5Sc2xKUGhsSEoxU05IS1lXLzJiWHdCQnhoVnl5T04wUDBqMkhhZUJ4RkgKTWxkL1Ryc1FMLzhrWmgydGNkSi94WlNadGRNQUQvb1lkamtadFFJREFRQUJBb0lCQUNJZGFjb2Eyc3dEd3dlWAo3NUhDMFlvTm5lV3ZBTTB3ZlQ2Q1RIZ2FzMURGK2xhalBPWXdCRzVjUUxOU1VLVGJuRkxkVHpvSTlCVW5BMzJSCi95cWowSE5YSFEyc0t4TVd1VHg1bWEwYkdPOGR2MmYrWEdaVEY4bmwrbjd6cVBqanFEOGpUQXRNWExZNXBYTDgKbnZOR2R3b0pnKzM5dnpxK1JrbTZZOXVidEs4QlQ1RUkwcnlhV09Fak0yQ2VSZm9QR3JSa0xFWS9ydVA4TVBVUApzM3ord2NPZHlhMDFDcFN6U0dRSUJGZ1hlZDNXRzVlQ01mbjFZMEo3d0x3TktYYlhmc1F2eWtGaWU5NmYvTTByCm1sM2ZoUXh1L1UrajZMbWcrMFpnTURQNkszM3dtWUtiVHhHQWVRNlpNMUVCMWU0ZnVrbUZmRXdpQ3k3T3FQbjcKQXpKRU5GVUNnWUVBOXEzK0hCVzJySlVwUS9DS0xkam9EZzVBdXI3eU1EUkpGaVRHOXlkb0FCQVlNSlFsQSt6NApFKzlkL3MrcXpDMFN5em5qa2VDTDFNbGNFaVpxY2xKVjUxclZ0S0JHUDZ2VGkvS0NFVHNMbUVielJSNjQ0bFR6CnVGVTYyamd5ajZ3VXVCM1E5cGhVbnBvMFZxamVmaitCQzZNMTdDVWJTK3VZRHl1Q0pZcTJpa3NDZ1lFQXlrV24KVEUzODIxV2hJdXVKektzMUU1TWhIaVpuSXBZc3ptZHR2ZEl6ZHVGb3YwY2hnZVlwbjI4TktTOENydXZtSGd6VwpaaUwvYzhyd2ZGUHhMV2gvQXNucUZ3SzkzSXJ1NXAraG55T1VvWTVzZnYyaWFza01CaE5OTHNpblBZTndoekZMCmhucTdtMHdaUFJyb2hkWWswdzR5d0xkTDhzaXhvTjhGL2x6SWEvOENnWUVBd3A2L3ozU3FMVHQ1MVNwZ09vL1oKZGMxMDhHRmFQd0hoYitFUVFVc0wySkRhSk9tYzBwNFJrOWpVdGdjdDMrem4yUU1STXJTUVhnK0gzcUlFZGJIVQpLTFlYeVd4eVFDWFd2NkZUVVRqZWl3UGZSdmRZTXVtSGFEV0dPMGovU3k4Zklhd1VnNW5ubVVKY2JNckt6NXhXCnVkSEk1MGpYWW15OENhdndBS0tTSmtVQ2dZQjFMS1oreUlyYlVKNlpDUk41c2hCOE4zWXU3aFkrN2ZvazA3dTYKQStQMlVSd0orcDNKajFpN1dHeXFWK1paQ0tUMDhZRGVDQll0c1BsaFBJdHhQNkNjTC9YZ3dLRFYrdEhzWGJzVgo0bG0rd1MvTzNRVlNrUWJiR2lGVEliL29IWlY1YTdBUnhsV1o0QnFhMEZTMCsxbTN2ZmpldFJCVkk3ZnF0bWZWCmMxQlRad0tCZ1FDdi9LSG1xNjU3K1BCc2pPUWgzV3lpUHplVE11YkxVRURJNFhPOFVvTUVYc0duNUtJVThQenUKTWpaM1EyMTc3VHVLYitYN21Mc0R5ckZqTHEvdUJTaXRzT3E2cWNDR1ZXQUMyc0FiWXFySnBYY1owNTlmTTgyZgpNYWhFZWU1bldnaTF4UXJsMjl3bjJFOUJyeGNQdWlLKy9HWWYwUkE2dFVyWlA3em5ST2poU3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/kubelet-signer.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lJVE0rU2pwLzV2NXd3RFFZSktvWklodmNOQVFFTEJRQXdMVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SY3dGUVlEVlFRREV3NXJkV0psYkdWMExYTnBaMjVsY2pBZUZ3MHlNekE1TWpVeQpNVE0wTXpsYUZ3MHlNekE1TWpZeU1UTTBNemxhTUMweEVqQVFCZ05WQkFzVENXOXdaVzV6YUdsbWRERVhNQlVHCkExVUVBeE1PYTNWaVpXeGxkQzF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRREM2R2ljcmtXOCtNVXVEOU9WQlM4czgwRjhOd3QvWkl4bHFxNVp2YlNDL0dNYUZFeGJRTUYvZzF3dQp3VGlab3cyYURBMmt1aFUvajdibTdTaVFnTXRWd1V3dm00QVB3RnZXNlJWcSs3MENPWUFwWHV4eGN2VkpubnVjCjljRTJPTzhmcUdqRkhUYWZoKzB0cjB5L0VQMkl0SFNwdkt5Ukx5M2Nuc0ZFTnJwb29TZlJ0ZDlxazZ3ODYyWGwKWUdJcUVOKzlLaEc1aWhib0U4TlN0WlFTb1ZuWm92b2xCd0RnTHlNNnVHSEd2ek1odUZYQVdhTHh2ajBKMS8rNwpyWW9WRHh2bldFYXMxR3lVaytHVWNuVkkwY3BoYi9adGZBRUhHRlhMSTQzUS9TUFlkcDRIRVVjeVYzOU91eEF2Ci95Um1IYTF4MG4vRmxKbTEwd0FQK2hoMk9SbTFBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlR2YVY1eFd6YklXVEF4SkJPeng5ZThyS2p3SWpBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFuN29wYW1pVVVwaHZwZUwwM0RvLzZ2SlN2WVB1VnNGcUNaUkN3dXZtCnAwODEyK3M4VXYwQUdLZldkOXU5N01tNlIwRG5HanFYMkRVT3dBY1QyUXZjb0lPMDNzZmx4MlNFdG1BT3UyRWgKV2ZxQlBkZEgzSW1XZW5hWUhvWjE5L0Vka1JYN096OVpjai9kdEZ2YjYvNVY2MnNGR1pKcW1WeVFqRjVVOFhIagpOeFRQYVdJZmhMRjN5T0phdWlJdFoxWi9qSHk4RlB2Y3ZseGNpNm5mSk41QTZFMW9SR1lHZThWSm52NmxCeklVCjQ2ZlRKNndVV2twSGNiRy9WRjFKaWpwZC9wWVo2NGVnbDlybjNpaDh3N0xqZjJzcGo0K2hsTWcwYWZISlg5U3AKbS81cHU5bldMSytyNmFWRnNiTmNKYUg5S213WTZlbnFCWnpnbnU1WWRwVTIzZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeletClientCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lJVE0rU2pwLzV2NXd3RFFZSktvWklodmNOQVFFTEJRQXdMVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SY3dGUVlEVlFRREV3NXJkV0psYkdWMExYTnBaMjVsY2pBZUZ3MHlNekE1TWpVeQpNVE0wTXpsYUZ3MHlNekE1TWpZeU1UTTBNemxhTUMweEVqQVFCZ05WQkFzVENXOXdaVzV6YUdsbWRERVhNQlVHCkExVUVBeE1PYTNWaVpXeGxkQzF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRREM2R2ljcmtXOCtNVXVEOU9WQlM4czgwRjhOd3QvWkl4bHFxNVp2YlNDL0dNYUZFeGJRTUYvZzF3dQp3VGlab3cyYURBMmt1aFUvajdibTdTaVFnTXRWd1V3dm00QVB3RnZXNlJWcSs3MENPWUFwWHV4eGN2VkpubnVjCjljRTJPTzhmcUdqRkhUYWZoKzB0cjB5L0VQMkl0SFNwdkt5Ukx5M2Nuc0ZFTnJwb29TZlJ0ZDlxazZ3ODYyWGwKWUdJcUVOKzlLaEc1aWhib0U4TlN0WlFTb1ZuWm92b2xCd0RnTHlNNnVHSEd2ek1odUZYQVdhTHh2ajBKMS8rNwpyWW9WRHh2bldFYXMxR3lVaytHVWNuVkkwY3BoYi9adGZBRUhHRlhMSTQzUS9TUFlkcDRIRVVjeVYzOU91eEF2Ci95Um1IYTF4MG4vRmxKbTEwd0FQK2hoMk9SbTFBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlR2YVY1eFd6YklXVEF4SkJPeng5ZThyS2p3SWpBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFuN29wYW1pVVVwaHZwZUwwM0RvLzZ2SlN2WVB1VnNGcUNaUkN3dXZtCnAwODEyK3M4VXYwQUdLZldkOXU5N01tNlIwRG5HanFYMkRVT3dBY1QyUXZjb0lPMDNzZmx4MlNFdG1BT3UyRWgKV2ZxQlBkZEgzSW1XZW5hWUhvWjE5L0Vka1JYN096OVpjai9kdEZ2YjYvNVY2MnNGR1pKcW1WeVFqRjVVOFhIagpOeFRQYVdJZmhMRjN5T0phdWlJdFoxWi9qSHk4RlB2Y3ZseGNpNm5mSk41QTZFMW9SR1lHZThWSm52NmxCeklVCjQ2ZlRKNndVV2twSGNiRy9WRjFKaWpwZC9wWVo2NGVnbDlybjNpaDh3N0xqZjJzcGo0K2hsTWcwYWZISlg5U3AKbS81cHU5bldMSytyNmFWRnNiTmNKYUg5S213WTZlbnFCWnpnbnU1WWRwVTIzZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "FileList": [
            {
                "Filename": "tls/kubelet-client-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lJVE0rU2pwLzV2NXd3RFFZSktvWklodmNOQVFFTEJRQXdMVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SY3dGUVlEVlFRREV3NXJkV0psYkdWMExYTnBaMjVsY2pBZUZ3MHlNekE1TWpVeQpNVE0wTXpsYUZ3MHlNekE1TWpZeU1UTTBNemxhTUMweEVqQVFCZ05WQkFzVENXOXdaVzV6YUdsbWRERVhNQlVHCkExVUVBeE1PYTNWaVpXeGxkQzF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRREM2R2ljcmtXOCtNVXVEOU9WQlM4czgwRjhOd3QvWkl4bHFxNVp2YlNDL0dNYUZFeGJRTUYvZzF3dQp3VGlab3cyYURBMmt1aFUvajdibTdTaVFnTXRWd1V3dm00QVB3RnZXNlJWcSs3MENPWUFwWHV4eGN2VkpubnVjCjljRTJPTzhmcUdqRkhUYWZoKzB0cjB5L0VQMkl0SFNwdkt5Ukx5M2Nuc0ZFTnJwb29TZlJ0ZDlxazZ3ODYyWGwKWUdJcUVOKzlLaEc1aWhib0U4TlN0WlFTb1ZuWm92b2xCd0RnTHlNNnVHSEd2ek1odUZYQVdhTHh2ajBKMS8rNwpyWW9WRHh2bldFYXMxR3lVaytHVWNuVkkwY3BoYi9adGZBRUhHRlhMSTQzUS9TUFlkcDRIRVVjeVYzOU91eEF2Ci95Um1IYTF4MG4vRmxKbTEwd0FQK2hoMk9SbTFBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlR2YVY1eFd6YklXVEF4SkJPeng5ZThyS2p3SWpBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFuN29wYW1pVVVwaHZwZUwwM0RvLzZ2SlN2WVB1VnNGcUNaUkN3dXZtCnAwODEyK3M4VXYwQUdLZldkOXU5N01tNlIwRG5HanFYMkRVT3dBY1QyUXZjb0lPMDNzZmx4MlNFdG1BT3UyRWgKV2ZxQlBkZEgzSW1XZW5hWUhvWjE5L0Vka1JYN096OVpjai9kdEZ2YjYvNVY2MnNGR1pKcW1WeVFqRjVVOFhIagpOeFRQYVdJZmhMRjN5T0phdWlJdFoxWi9qSHk4RlB2Y3ZseGNpNm5mSk41QTZFMW9SR1lHZThWSm52NmxCeklVCjQ2ZlRKNndVV2twSGNiRy9WRjFKaWpwZC9wWVo2NGVnbDlybjNpaDh3N0xqZjJzcGo0K2hsTWcwYWZISlg5U3AKbS81cHU5bldMSytyNmFWRnNiTmNKYUg5S213WTZlbnFCWnpnbnU1WWRwVTIzZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeletClientCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ4RENDQXRpZ0F3SUJBZ0lJSTQ1c0xEWG93SG93RFFZSktvWklodmNOQVFFTEJRQXdRakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Td3dLZ1lEVlFRREV5TnJkV0psYkdWMExXSnZiM1J6ZEhKaGNDMXJkV0psWTI5dQpabWxuTFhOcFoyNWxjakFlRncweU16QTVNalV5TVRNME16WmFGdzB6TXpBNU1qSXlNVE0wTXpaYU1JRzJNV0F3CkhRWURWUVFLRXhaemVYTjBaVzA2YzJWeWRtbGpaV0ZqWTI5MWJuUnpNRDhHQTFVRUNoTTRjM2x6ZEdWdE9uTmwKY25acFkyVmhZMk52ZFc1MGN6cHZjR1Z1YzJocFpuUXRiV0ZqYUdsdVpTMWpiMjVtYVdjdGIzQmxjbUYwYjNJeApVakJRQmdOVkJBTVRTWE41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwdmNHVnVjMmhwWm5RdGJXRmphR2x1ClpTMWpiMjVtYVdjdGIzQmxjbUYwYjNJNmJtOWtaUzFpYjI5MGMzUnlZWEJ3WlhJd2dnRWlNQTBHQ1NxR1NJYjMKRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDclpLWU9rTk8zZHZpejBnaENOM0NDZUR4dXM2aENMZlp5emMxLwpQZ3BMWVlXbTJKcGhPc3ZPKzlKMGNHWkcxUUpibjBzZzJmNjFqblhaajUyMm1CcWc4VE5VTVhMTEtlTVpTTkdFCm1HL0tDc0RESnkza2JHTW1YeFdPZytQM0d4Q1BtSURxQjhxRDZmSXNhWHhnNXI1OFZURndlZUFkNkZMQWhRaGcKN3QvNWtaVzAvSi9hT2Y1Z0NDZ3lTd1VpNW12cGw0c1pQcEVFamYxSVNnYzN6RkMreEREdDRQc2ovYlZTTVN6NAoyQVdzcVJjOUZwbjU4aUhGVHU0V0UvQTZ3K2IrNVkycEp2UTFhMWk3cnVwcDNPV2NGLy9GOE4rSktXRVdBTGFTCmhWQ3JRaDJGTzFpcGtPcVFzWkFkckNxSmxJZ0RaMmg4Sms3WHhNb3dVdU5sS2VmdkFnTUJBQUdqZFRCek1BNEcKQTFVZER3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQjBHQTFVZERnUVdCQlNzVUJvSUtUOFNvY0pQdGdKL2ZKcEtveUppbHpBZkJnTlZIU01FR0RBV2dCVHRKTlRjCnJNMHVTWDh5WDNJenpkK1RPK0hGMlRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUNhWitEVHhkRVhIK2VkL3gKclhlTmYva1JUTFNhMVRVZkVweFJSd3NhUThuVS9SdG9ydnk1a2VpUDU3ZmlXR1BjVkpCS2ttQWI2Mk9Zalh3SApzU3FibGk1a2g0azJOYUQrYThuanRzYjFsN29jMHdYaUtQdVdScFJ3NUp6N3hzdk9Zck41NWwyeTFTMjBmUjVhCmpnZ082SlJtSG5hNGxKbjYyamJhczdxUGR0MkJUalhTQyt1VHlVSDB6TGo1ZC9zREtkWDhPR1Y5UHgwd1JXeSsKUmVKVDhGVzY2alNOUVE0MWE2QmpZdmJJcXhxNlFaQ1J4ZnNpdVFxL1ZSZnY2MG9mUzcwdWh1cXhQY0tOTlhyMAo2OUQxeU92K2VFTGhaRk5OTTdQd2dhZXlkQ1lwWjNLY1Jya29DckZEdHc3TmJkUXJ5czhsSCtnSnVRYWFMdC81CkNBL0FIZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcTJTbURwRFR0M2I0czlJSVFqZHdnbmc4YnJPb1FpMzJjczNOZno0S1MyR0ZwdGlhCllUckx6dnZTZEhCbVJ0VUNXNTlMSU5uK3RZNTEyWStkdHBnYW9QRXpWREZ5eXluakdValJoSmh2eWdyQXd5Y3QKNUd4akpsOFZqb1BqOXhzUWo1aUE2Z2ZLZytueUxHbDhZT2ErZkZVeGNIbmdIZWhTd0lVSVlPN2YrWkdWdFB5Zgoyam4rWUFnb01rc0ZJdVpyNlplTEdUNlJCSTM5U0VvSE44eFF2c1F3N2VEN0kvMjFVakVzK05nRnJLa1hQUmFaCitmSWh4VTd1RmhQd09zUG0vdVdOcVNiME5XdFl1NjdxYWR6bG5CZi94ZkRmaVNsaEZnQzJrb1ZRcTBJZGhUdFkKcVpEcWtMR1FIYXdxaVpTSUEyZG9mQ1pPMThUS01GTGpaU25uN3dJREFRQUJBb0lCQUdxTE1yOHpRS2w0QjdxaApBZ2xIdFdVbG9VdWYyeVRvdFo5QVdGS1ZHb2twb28vSmJvNnFvaStWVTRxV3BMMjdoSys0SWxmVnJBVG8vbEcwCmVYSWNzOUVBbjh2aXdWMlNPRjVyYWZOblgzYlZvR2F3WUZMekhkK29sQm4zMnlxdFpHb2ZmMlA4VytRTTlrS3QKZ0dnc2lKVjUwRFgvVFZiS0tVY01hOXoySWIxZHdtd0YreTdaK3RtK2FxQ3MvNVlZRnltL3R5R0U4N0l6Vk9OWQpYNTVlSG93YzhHRlBKYTR0YVEwcnJtZ2c2a2FwOXJITzNKalZnZlFVb0xuZVhCeDRnUmJlK0pZMkhack9GbHhwClhwbGpkdlZxWGRhMmovbWdia2ZHanBZazAxakMrSlloL1BXblZHZlBRUFJMb3pRVkw0d21wUnJxK1QvVHpjei8KdHg0aWI0RUNnWUVBMnFEd1dvakwrSVI3ZTNWUVREUUd6SzJMS2ErZ09wZzFBTUlkb2x1T2EvdU9pM05qTGNDYwp1YVVLaWkycGMxSE81bHM0UlIxa2cvYWl5M1NwcGxESnRSekkzVjFSNEtEWUNRYVlZTldmRVo4S2tuRTltQThZCmlXQzRCQlh0ZlhEQ0pEa3RGbFJzZWFMK1hjZTB5SENVK3dyY0xWMmdvWGsreUYvN1NxOXZkWkVDZ1lFQXlMQzIKUFJmOUxtQ0JkbE9kcFZWZ1I3cGlTVk5Tdjc2RklSUW5NcEsyQWc1UThKNDJFc2NSNmNvR3hITmRUc1QrOUhXTgpUbWRjVHlaZ21YcHZ3WGFoQVkxMC9jZXVQbnJqcjQ1N2ZGMnBFN00vYk44a01hSWc0UnQ2UmhNMHFIMHhrYnZqCjZZN1p1aG9YTGNvSk8zRVlEME1uNmlaSjFHbFRMSU5laUhZR3hYOENnWUJUK2Q5NGx2VHA1MUZhOFl1L1NYaVgKSTgzQlhGRktVRzZEZFF4VzhaMzZBaTBWaVdPK0RpN2s2K3pwZUhLTzlneG4xUC8vSkRRWXNDS0Z6YkRnVGtXOApDR3RyQTg1UVh0ZThWOGt0NEwveHo4b0t4KzVsdXQ2czNmYXdzdzkrMEZIeUFmZzhqSDhDRmNab2xTM3VrN2ZWCjJhMEt5OXpJU1Q4QlRrVEN3aklvMFFLQmdFMWVHcE5JMlRqMHlWUUZmaVBMMnhjcjJsSXNSaDFYWkZsUlBKODUKZ2VNZkE4TVBLd2RvS1JhNDVJejljSDQ2WVpONmNlUkU0b2c4NGthb3RjYWVaZ21FTUJMWjFPbVBWSkZNVzN5aApXdG9XWXlBa2tmNTBZenFFN2tsdmhBQmtheVNraTROeHA2d2YvTW1STnFmc3ZIcTl4L2h6bEVqSDVlR21MMTVxCktjZ2ZBb0dBRmVGN2RhVjdreUNZYUM1TUxPK0taQkM3YXlFeGR4cjdlUjllNWpYUzNJMlhDeHQ0eFcrclBVS2MKZGsyQ3RnYkZ0bFhFTnFUbkVtM0M3WEpCNFdqVGdWUThJKzBPN3gyWERicXYzcDl4VnllNU9zdUhqZWQrZDdOOAp6VDBJV2pOSndVWFpyYnJ2czNYZG9YaS90ZExxV0t0aStkSmxncjlKMnJIMlAzVWlYOWM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kubelet-client.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcTJTbURwRFR0M2I0czlJSVFqZHdnbmc4YnJPb1FpMzJjczNOZno0S1MyR0ZwdGlhCllUckx6dnZTZEhCbVJ0VUNXNTlMSU5uK3RZNTEyWStkdHBnYW9QRXpWREZ5eXluakdValJoSmh2eWdyQXd5Y3QKNUd4akpsOFZqb1BqOXhzUWo1aUE2Z2ZLZytueUxHbDhZT2ErZkZVeGNIbmdIZWhTd0lVSVlPN2YrWkdWdFB5Zgoyam4rWUFnb01rc0ZJdVpyNlplTEdUNlJCSTM5U0VvSE44eFF2c1F3N2VEN0kvMjFVakVzK05nRnJLa1hQUmFaCitmSWh4VTd1RmhQd09zUG0vdVdOcVNiME5XdFl1NjdxYWR6bG5CZi94ZkRmaVNsaEZnQzJrb1ZRcTBJZGhUdFkKcVpEcWtMR1FIYXdxaVpTSUEyZG9mQ1pPMThUS01GTGpaU25uN3dJREFRQUJBb0lCQUdxTE1yOHpRS2w0QjdxaApBZ2xIdFdVbG9VdWYyeVRvdFo5QVdGS1ZHb2twb28vSmJvNnFvaStWVTRxV3BMMjdoSys0SWxmVnJBVG8vbEcwCmVYSWNzOUVBbjh2aXdWMlNPRjVyYWZOblgzYlZvR2F3WUZMekhkK29sQm4zMnlxdFpHb2ZmMlA4VytRTTlrS3QKZ0dnc2lKVjUwRFgvVFZiS0tVY01hOXoySWIxZHdtd0YreTdaK3RtK2FxQ3MvNVlZRnltL3R5R0U4N0l6Vk9OWQpYNTVlSG93YzhHRlBKYTR0YVEwcnJtZ2c2a2FwOXJITzNKalZnZlFVb0xuZVhCeDRnUmJlK0pZMkhack9GbHhwClhwbGpkdlZxWGRhMmovbWdia2ZHanBZazAxakMrSlloL1BXblZHZlBRUFJMb3pRVkw0d21wUnJxK1QvVHpjei8KdHg0aWI0RUNnWUVBMnFEd1dvakwrSVI3ZTNWUVREUUd6SzJMS2ErZ09wZzFBTUlkb2x1T2EvdU9pM05qTGNDYwp1YVVLaWkycGMxSE81bHM0UlIxa2cvYWl5M1NwcGxESnRSekkzVjFSNEtEWUNRYVlZTldmRVo4S2tuRTltQThZCmlXQzRCQlh0ZlhEQ0pEa3RGbFJzZWFMK1hjZTB5SENVK3dyY0xWMmdvWGsreUYvN1NxOXZkWkVDZ1lFQXlMQzIKUFJmOUxtQ0JkbE9kcFZWZ1I3cGlTVk5Tdjc2RklSUW5NcEsyQWc1UThKNDJFc2NSNmNvR3hITmRUc1QrOUhXTgpUbWRjVHlaZ21YcHZ3WGFoQVkxMC9jZXVQbnJqcjQ1N2ZGMnBFN00vYk44a01hSWc0UnQ2UmhNMHFIMHhrYnZqCjZZN1p1aG9YTGNvSk8zRVlEME1uNmlaSjFHbFRMSU5laUhZR3hYOENnWUJUK2Q5NGx2VHA1MUZhOFl1L1NYaVgKSTgzQlhGRktVRzZEZFF4VzhaMzZBaTBWaVdPK0RpN2s2K3pwZUhLTzlneG4xUC8vSkRRWXNDS0Z6YkRnVGtXOApDR3RyQTg1UVh0ZThWOGt0NEwveHo4b0t4KzVsdXQ2czNmYXdzdzkrMEZIeUFmZzhqSDhDRmNab2xTM3VrN2ZWCjJhMEt5OXpJU1Q4QlRrVEN3aklvMFFLQmdFMWVHcE5JMlRqMHlWUUZmaVBMMnhjcjJsSXNSaDFYWkZsUlBKODUKZ2VNZkE4TVBLd2RvS1JhNDVJejljSDQ2WVpONmNlUkU0b2c4NGthb3RjYWVaZ21FTUJMWjFPbVBWSkZNVzN5aApXdG9XWXlBa2tmNTBZenFFN2tsdmhBQmtheVNraTROeHA2d2YvTW1STnFmc3ZIcTl4L2h6bEVqSDVlR21MMTVxCktjZ2ZBb0dBRmVGN2RhVjdreUNZYUM1TUxPK0taQkM3YXlFeGR4cjdlUjllNWpYUzNJMlhDeHQ0eFcrclBVS2MKZGsyQ3RnYkZ0bFhFTnFUbkVtM0M3WEpCNFdqVGdWUThJKzBPN3gyWERicXYzcDl4VnllNU9zdUhqZWQrZDdOOAp6VDBJV2pOSndVWFpyYnJ2czNYZG9YaS90ZExxV0t0aStkSmxncjlKMnJIMlAzVWlYOWM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/kubelet-client.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ4RENDQXRpZ0F3SUJBZ0lJSTQ1c0xEWG93SG93RFFZSktvWklodmNOQVFFTEJRQXdRakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Td3dLZ1lEVlFRREV5TnJkV0psYkdWMExXSnZiM1J6ZEhKaGNDMXJkV0psWTI5dQpabWxuTFhOcFoyNWxjakFlRncweU16QTVNalV5TVRNME16WmFGdzB6TXpBNU1qSXlNVE0wTXpaYU1JRzJNV0F3CkhRWURWUVFLRXhaemVYTjBaVzA2YzJWeWRtbGpaV0ZqWTI5MWJuUnpNRDhHQTFVRUNoTTRjM2x6ZEdWdE9uTmwKY25acFkyVmhZMk52ZFc1MGN6cHZjR1Z1YzJocFpuUXRiV0ZqYUdsdVpTMWpiMjVtYVdjdGIzQmxjbUYwYjNJeApVakJRQmdOVkJBTVRTWE41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwdmNHVnVjMmhwWm5RdGJXRmphR2x1ClpTMWpiMjVtYVdjdGIzQmxjbUYwYjNJNmJtOWtaUzFpYjI5MGMzUnlZWEJ3WlhJd2dnRWlNQTBHQ1NxR1NJYjMKRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDclpLWU9rTk8zZHZpejBnaENOM0NDZUR4dXM2aENMZlp5emMxLwpQZ3BMWVlXbTJKcGhPc3ZPKzlKMGNHWkcxUUpibjBzZzJmNjFqblhaajUyMm1CcWc4VE5VTVhMTEtlTVpTTkdFCm1HL0tDc0RESnkza2JHTW1YeFdPZytQM0d4Q1BtSURxQjhxRDZmSXNhWHhnNXI1OFZURndlZUFkNkZMQWhRaGcKN3QvNWtaVzAvSi9hT2Y1Z0NDZ3lTd1VpNW12cGw0c1pQcEVFamYxSVNnYzN6RkMreEREdDRQc2ovYlZTTVN6NAoyQVdzcVJjOUZwbjU4aUhGVHU0V0UvQTZ3K2IrNVkycEp2UTFhMWk3cnVwcDNPV2NGLy9GOE4rSktXRVdBTGFTCmhWQ3JRaDJGTzFpcGtPcVFzWkFkckNxSmxJZ0RaMmg4Sms3WHhNb3dVdU5sS2VmdkFnTUJBQUdqZFRCek1BNEcKQTFVZER3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQjBHQTFVZERnUVdCQlNzVUJvSUtUOFNvY0pQdGdKL2ZKcEtveUppbHpBZkJnTlZIU01FR0RBV2dCVHRKTlRjCnJNMHVTWDh5WDNJenpkK1RPK0hGMlRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUNhWitEVHhkRVhIK2VkL3gKclhlTmYva1JUTFNhMVRVZkVweFJSd3NhUThuVS9SdG9ydnk1a2VpUDU3ZmlXR1BjVkpCS2ttQWI2Mk9Zalh3SApzU3FibGk1a2g0azJOYUQrYThuanRzYjFsN29jMHdYaUtQdVdScFJ3NUp6N3hzdk9Zck41NWwyeTFTMjBmUjVhCmpnZ082SlJtSG5hNGxKbjYyamJhczdxUGR0MkJUalhTQyt1VHlVSDB6TGo1ZC9zREtkWDhPR1Y5UHgwd1JXeSsKUmVKVDhGVzY2alNOUVE0MWE2QmpZdmJJcXhxNlFaQ1J4ZnNpdVFxL1ZSZnY2MG9mUzcwdWh1cXhQY0tOTlhyMAo2OUQxeU92K2VFTGhaRk5OTTdQd2dhZXlkQ1lwWjNLY1Jya29DckZEdHc3TmJkUXJ5czhsSCtnSnVRYWFMdC81CkNBL0FIZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeletServingCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lJVE0rU2pwLzV2NXd3RFFZSktvWklodmNOQVFFTEJRQXdMVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SY3dGUVlEVlFRREV3NXJkV0psYkdWMExYTnBaMjVsY2pBZUZ3MHlNekE1TWpVeQpNVE0wTXpsYUZ3MHlNekE1TWpZeU1UTTBNemxhTUMweEVqQVFCZ05WQkFzVENXOXdaVzV6YUdsbWRERVhNQlVHCkExVUVBeE1PYTNWaVpXeGxkQzF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRREM2R2ljcmtXOCtNVXVEOU9WQlM4czgwRjhOd3QvWkl4bHFxNVp2YlNDL0dNYUZFeGJRTUYvZzF3dQp3VGlab3cyYURBMmt1aFUvajdibTdTaVFnTXRWd1V3dm00QVB3RnZXNlJWcSs3MENPWUFwWHV4eGN2VkpubnVjCjljRTJPTzhmcUdqRkhUYWZoKzB0cjB5L0VQMkl0SFNwdkt5Ukx5M2Nuc0ZFTnJwb29TZlJ0ZDlxazZ3ODYyWGwKWUdJcUVOKzlLaEc1aWhib0U4TlN0WlFTb1ZuWm92b2xCd0RnTHlNNnVHSEd2ek1odUZYQVdhTHh2ajBKMS8rNwpyWW9WRHh2bldFYXMxR3lVaytHVWNuVkkwY3BoYi9adGZBRUhHRlhMSTQzUS9TUFlkcDRIRVVjeVYzOU91eEF2Ci95Um1IYTF4MG4vRmxKbTEwd0FQK2hoMk9SbTFBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlR2YVY1eFd6YklXVEF4SkJPeng5ZThyS2p3SWpBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFuN29wYW1pVVVwaHZwZUwwM0RvLzZ2SlN2WVB1VnNGcUNaUkN3dXZtCnAwODEyK3M4VXYwQUdLZldkOXU5N01tNlIwRG5HanFYMkRVT3dBY1QyUXZjb0lPMDNzZmx4MlNFdG1BT3UyRWgKV2ZxQlBkZEgzSW1XZW5hWUhvWjE5L0Vka1JYN096OVpjai9kdEZ2YjYvNVY2MnNGR1pKcW1WeVFqRjVVOFhIagpOeFRQYVdJZmhMRjN5T0phdWlJdFoxWi9qSHk4RlB2Y3ZseGNpNm5mSk41QTZFMW9SR1lHZThWSm52NmxCeklVCjQ2ZlRKNndVV2twSGNiRy9WRjFKaWpwZC9wWVo2NGVnbDlybjNpaDh3N0xqZjJzcGo0K2hsTWcwYWZISlg5U3AKbS81cHU5bldMSytyNmFWRnNiTmNKYUg5S213WTZlbnFCWnpnbnU1WWRwVTIzZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "FileList": [
            {
                "Filename": "tls/kubelet-serving-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lJVE0rU2pwLzV2NXd3RFFZSktvWklodmNOQVFFTEJRQXdMVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SY3dGUVlEVlFRREV3NXJkV0psYkdWMExYTnBaMjVsY2pBZUZ3MHlNekE1TWpVeQpNVE0wTXpsYUZ3MHlNekE1TWpZeU1UTTBNemxhTUMweEVqQVFCZ05WQkFzVENXOXdaVzV6YUdsbWRERVhNQlVHCkExVUVBeE1PYTNWaVpXeGxkQzF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRREM2R2ljcmtXOCtNVXVEOU9WQlM4czgwRjhOd3QvWkl4bHFxNVp2YlNDL0dNYUZFeGJRTUYvZzF3dQp3VGlab3cyYURBMmt1aFUvajdibTdTaVFnTXRWd1V3dm00QVB3RnZXNlJWcSs3MENPWUFwWHV4eGN2VkpubnVjCjljRTJPTzhmcUdqRkhUYWZoKzB0cjB5L0VQMkl0SFNwdkt5Ukx5M2Nuc0ZFTnJwb29TZlJ0ZDlxazZ3ODYyWGwKWUdJcUVOKzlLaEc1aWhib0U4TlN0WlFTb1ZuWm92b2xCd0RnTHlNNnVHSEd2ek1odUZYQVdhTHh2ajBKMS8rNwpyWW9WRHh2bldFYXMxR3lVaytHVWNuVkkwY3BoYi9adGZBRUhHRlhMSTQzUS9TUFlkcDRIRVVjeVYzOU91eEF2Ci95Um1IYTF4MG4vRmxKbTEwd0FQK2hoMk9SbTFBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlR2YVY1eFd6YklXVEF4SkJPeng5ZThyS2p3SWpBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFuN29wYW1pVVVwaHZwZUwwM0RvLzZ2SlN2WVB1VnNGcUNaUkN3dXZtCnAwODEyK3M4VXYwQUdLZldkOXU5N01tNlIwRG5HanFYMkRVT3dBY1QyUXZjb0lPMDNzZmx4MlNFdG1BT3UyRWgKV2ZxQlBkZEgzSW1XZW5hWUhvWjE5L0Vka1JYN096OVpjai9kdEZ2YjYvNVY2MnNGR1pKcW1WeVFqRjVVOFhIagpOeFRQYVdJZmhMRjN5T0phdWlJdFoxWi9qSHk4RlB2Y3ZseGNpNm5mSk41QTZFMW9SR1lHZThWSm52NmxCeklVCjQ2ZlRKNndVV2twSGNiRy9WRjFKaWpwZC9wWVo2NGVnbDlybjNpaDh3N0xqZjJzcGo0K2hsTWcwYWZISlg5U3AKbS81cHU5bldMSytyNmFWRnNiTmNKYUg5S213WTZlbnFCWnpnbnU1WWRwVTIzZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.MCSCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhekNDQWxPZ0F3SUJBZ0lJQXlZdzEzWlVaeDR3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEl6TURreU5USXhNelF6TlZvWApEVE16TURreU1qSXhNelF6TlZvd0p6RWxNQ01HQTFVRUF4TWNjM2x6ZEdWdE9tMWhZMmhwYm1VdFkyOXVabWxuCkxYTmxjblpsY2pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTUgwcjd6NE5TRDQKVjVuTkRoUGxld2Jidys5MUFwZi9mcENQeWZXcEVqU2xCNDhtZmM4WVUxUWlTNEs4YWtwSGYyQ216M3ZaekV6cApyUVg2cHU5ZWJRSldpMkYxZXE5VG43a0lGR1pwR042VmJ1UElRdU0xaEczNU5DN2lGTm1mNTdxbEdPb09sS2hNCmhNb0FyR1FHUnNSb3hZWjZYK21abk1yMjZnS3luNGlzR2FoVXFpY0Rna2JReW5ES1o2aFFWMEhNTi9iLzQySzIKQ2wwWG9RbksrTjhiekNIOUNFSzlDQWY0MnlRWEFnenBJL2Jyc2dmM09NMVlLQTZzYmcyYUFaTHVoRVhNVHY4bQpUWW9kaUd5Z1JTa3pjdGx1T282NjRTeHRWZktrWFgraE04bktEWXZKZi9heWtDTEgrbFFIUkx4bGJIOTNpOHB4Cjg2dUh5MVI2OXA4Q0F3RUFBYU9CbXpDQm1EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBVEFNQmdOVkhSTUIKQWY4RUFqQUFNQjBHQTFVZERnUVdCQlNRcEowOTI0am5lVW5NOXVUTVFKWjQ5bktLV0RBZkJnTlZIU01FR0RBVwpnQlI3Y3JmN2E1c2VYVkhSN1h4U2xQeW03WHNuOURBekJnTlZIUkVFTERBcWdpaGhjR2t0YVc1MExtVmtaaTFrClpXMXZMbk5oYm1SaWIzZ3hPRGd3TG05d1pXNTBiR011WTI5dE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQk4KU1RpQVFRdXhLcDVsd2lTNVNuZE5QdVpIVDlyaFZUdWVHbnBtUDUzQU5WWUhmTVB3VndyMEZGNEdzTzUxYjhUVgpnQlczV1FMV0l2dERUNU9JbnZCVXBNdXM5amNUNXg4ZUh5NmZiN0xDMkhjOTRkWUwrSGFWTGs3eUtSdE5rRGlYCjNlNTNJL0ZpbjY0c3ZLbThrQ1c4VTBLZy83MWx6Ym9jSk5qVGpaY0Fka2dMZlJVaUNNbUtLOUpxT00yVjNJRkwKUjgzNmZza3A0RXZPUTJWVGs3QTJpMWFjT3pNaDRmVXMzS1piL2doOE1qTjljL0VEVEFQVVpOdTE0MzdxNnpsTApidjlPZi9PVXpLWmdNNXJnVGV5Sm9jcFNuWjFEalpnTWVubzJIOENkSzN3MXdTcHA4WDliZk9vOFdCdGtHUjlXCm42akZRWEgweTZoU05pc1AxM2hwCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd2ZTdnZQZzFJUGhYbWMwT0UrVjdCdHZENzNVQ2wvOStrSS9KOWFrU05LVUhqeVo5Cnp4aFRWQ0pMZ3J4cVNrZC9ZS2JQZTluTVRPbXRCZnFtNzE1dEFsYUxZWFY2cjFPZnVRZ1VabWtZM3BWdTQ4aEMKNHpXRWJmazBMdUlVMlovbnVxVVk2ZzZVcUV5RXlnQ3NaQVpHeEdqRmhucGY2Wm1jeXZicUFyS2ZpS3dacUZTcQpKd09DUnRES2NNcG5xRkJYUWN3Mzl2L2pZcllLWFJlaENjcjQzeHZNSWYwSVFyMElCL2piSkJjQ0RPa2o5dXV5CkIvYzR6VmdvRHF4dURab0JrdTZFUmN4Ty95Wk5paDJJYktCRktUTnkyVzQ2anJyaExHMVY4cVJkZjZFenljb04KaThsLzlyS1FJc2Y2VkFkRXZHVnNmM2VMeW5IenE0ZkxWSHIybndJREFRQUJBb0lCQUFXb2xkZjFoZGRJWjRYZApMYVAyOWZmbFFYb2k5OGhuYzlIVDRCaUNyajFLODBXQjRmbkF3KzJZY291RjQ3UDNFZ2hIMVpYUGJONXhrdEt4CjFWejJiRWU5THFQUlFac0wzWVVRYjBmdG1RUWxaKzdOVU9aQUVYVUQ2RG5WN3JYS3JJQU5nUVNUR0ZNd3FFOGMKWmVzbEk3dG5NeHdSUmVzU3lEaERxK0FZUmY4K3VTQkF6VXVFdSt6dFBMUkdicVlvNC9iZXgzWmk3Y2ZqMmltdwpUMlBqRU16VjlMOXdNMXpwRFZjQ215R3Z1STBBZkV2ZXl4VnNldmFidkQ3NVIrWmJ0aWluRUdrMHdVSGh0WU1vCm0wTDA2YWFXb1BZTE5OUG11QXV1Ri9kblZmNE94L1lEMG1OMTd5TWZDMDVFTGp3LzZHNFhkZUZQTmVWMDcwYTUKQWJ0WEVjRUNnWUVBM0wwQldYZXNaUVFwM1hRd3RwOFpIQnRXTDlXNmNaam1nbktLdUg0TkFaRkUzbzNOK1N2Ywo5Qlc2V3pmVjQzU0pzcXVFbXZmb3NBRGNoM2pVMWw2STdqUC8vN3B6SzBqRkM1S0IxUmxxVXlFSEpKckw2bjNnCmFoK2paNVV3MHdyMVZPd1R2WWo3ejErSzRCc1l3TUFLMktlOFgyV3pRYWg0U1d5UVdFaFhRZ1VDZ1lFQTRQQnMKUjRtVVBqNDJQUjUwNGJGeDI5b0xKRnZjL0toakVtdlRkVjkvTm9PUUJYNFpRdVB3Nmluek85M3lvS1FFT1FNNQpLK3V5WFlvL1F3akl2MTB0WkRFK3RjZTEvM24vM2JOT3ltbXVYYjlNZi9aUGM0aFlWSFBkeTFwVTA2UTdxczlICjdxSmJ6VjZnNzVZMnA5akpjOWl4RnFOQ3lnc2FQSUJFZ29oSWcxTUNnWUVBenEzOXZIcU1KVTFmc2FXZ0V1NG0Kd2FWcTdvRU5BRjRzdnNsbXo5WGVjYkJHTHFmUnl0TmlIL3pVTDZLNUZ5Ni8yMVl6WkRKcFlacDg0aSttQVU0awpvZng0WDBhQm5XNldhUDUxcUVVU3crRXg0Zms2bzBYWFFTWjhobmt2YlB0ZXVIUVBDN0ZlTFU0RkowN1h2MnBRCi9Za1luSzRKeUpsb2Z6OHliQ2JYNU0wQ2dZRUFoK25ka3pBWENiRHZkdWlqT1FmTncwaXhlTXVrOEdrU1M3d3AKTGYrQXowQ1pVaWhLUFRlYmh2SElEWUZqTEJ0T2plQmJ1Q1VYUmh2VmM3eW9CN0RXVDNiTjdHcDZscDV4c3RTNApJK2ZOT3NudkFGYWsxU3NxTEFWQ202KytGNDlobWlqYXp0NzlWMDc1TVNyelpXSEEvNldNQXlDc3A0WWoyVENyCnRLK0NHUThDZ1lCRzAwekV1emI2b3lNU3gyc2U5K2xQc3diMUpxaDk5SUdjMHpxU1dOU1BJMXRHVlJwT1IzTFUKWS9DVldRbVdKWjUzTnljVFc2d09UMEpFUjJBMFZBZEdjUDVJbnE1aXNFY2FyZVIrS2tNbldlRDM2Y0VBM1RMawpaOGQ4NGwyK05hMVNkOEVYRjJjTDcxQzUrdGpSRDZpQlI2RXZnTlJzRkxpM0FoZ29UUHNCcXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/machine-config-server.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd2ZTdnZQZzFJUGhYbWMwT0UrVjdCdHZENzNVQ2wvOStrSS9KOWFrU05LVUhqeVo5Cnp4aFRWQ0pMZ3J4cVNrZC9ZS2JQZTluTVRPbXRCZnFtNzE1dEFsYUxZWFY2cjFPZnVRZ1VabWtZM3BWdTQ4aEMKNHpXRWJmazBMdUlVMlovbnVxVVk2ZzZVcUV5RXlnQ3NaQVpHeEdqRmhucGY2Wm1jeXZicUFyS2ZpS3dacUZTcQpKd09DUnRES2NNcG5xRkJYUWN3Mzl2L2pZcllLWFJlaENjcjQzeHZNSWYwSVFyMElCL2piSkJjQ0RPa2o5dXV5CkIvYzR6VmdvRHF4dURab0JrdTZFUmN4Ty95Wk5paDJJYktCRktUTnkyVzQ2anJyaExHMVY4cVJkZjZFenljb04KaThsLzlyS1FJc2Y2VkFkRXZHVnNmM2VMeW5IenE0ZkxWSHIybndJREFRQUJBb0lCQUFXb2xkZjFoZGRJWjRYZApMYVAyOWZmbFFYb2k5OGhuYzlIVDRCaUNyajFLODBXQjRmbkF3KzJZY291RjQ3UDNFZ2hIMVpYUGJONXhrdEt4CjFWejJiRWU5THFQUlFac0wzWVVRYjBmdG1RUWxaKzdOVU9aQUVYVUQ2RG5WN3JYS3JJQU5nUVNUR0ZNd3FFOGMKWmVzbEk3dG5NeHdSUmVzU3lEaERxK0FZUmY4K3VTQkF6VXVFdSt6dFBMUkdicVlvNC9iZXgzWmk3Y2ZqMmltdwpUMlBqRU16VjlMOXdNMXpwRFZjQ215R3Z1STBBZkV2ZXl4VnNldmFidkQ3NVIrWmJ0aWluRUdrMHdVSGh0WU1vCm0wTDA2YWFXb1BZTE5OUG11QXV1Ri9kblZmNE94L1lEMG1OMTd5TWZDMDVFTGp3LzZHNFhkZUZQTmVWMDcwYTUKQWJ0WEVjRUNnWUVBM0wwQldYZXNaUVFwM1hRd3RwOFpIQnRXTDlXNmNaam1nbktLdUg0TkFaRkUzbzNOK1N2Ywo5Qlc2V3pmVjQzU0pzcXVFbXZmb3NBRGNoM2pVMWw2STdqUC8vN3B6SzBqRkM1S0IxUmxxVXlFSEpKckw2bjNnCmFoK2paNVV3MHdyMVZPd1R2WWo3ejErSzRCc1l3TUFLMktlOFgyV3pRYWg0U1d5UVdFaFhRZ1VDZ1lFQTRQQnMKUjRtVVBqNDJQUjUwNGJGeDI5b0xKRnZjL0toakVtdlRkVjkvTm9PUUJYNFpRdVB3Nmluek85M3lvS1FFT1FNNQpLK3V5WFlvL1F3akl2MTB0WkRFK3RjZTEvM24vM2JOT3ltbXVYYjlNZi9aUGM0aFlWSFBkeTFwVTA2UTdxczlICjdxSmJ6VjZnNzVZMnA5akpjOWl4RnFOQ3lnc2FQSUJFZ29oSWcxTUNnWUVBenEzOXZIcU1KVTFmc2FXZ0V1NG0Kd2FWcTdvRU5BRjRzdnNsbXo5WGVjYkJHTHFmUnl0TmlIL3pVTDZLNUZ5Ni8yMVl6WkRKcFlacDg0aSttQVU0awpvZng0WDBhQm5XNldhUDUxcUVVU3crRXg0Zms2bzBYWFFTWjhobmt2YlB0ZXVIUVBDN0ZlTFU0RkowN1h2MnBRCi9Za1luSzRKeUpsb2Z6OHliQ2JYNU0wQ2dZRUFoK25ka3pBWENiRHZkdWlqT1FmTncwaXhlTXVrOEdrU1M3d3AKTGYrQXowQ1pVaWhLUFRlYmh2SElEWUZqTEJ0T2plQmJ1Q1VYUmh2VmM3eW9CN0RXVDNiTjdHcDZscDV4c3RTNApJK2ZOT3NudkFGYWsxU3NxTEFWQ202KytGNDlobWlqYXp0NzlWMDc1TVNyelpXSEEvNldNQXlDc3A0WWoyVENyCnRLK0NHUThDZ1lCRzAwekV1emI2b3lNU3gyc2U5K2xQc3diMUpxaDk5SUdjMHpxU1dOU1BJMXRHVlJwT1IzTFUKWS9DVldRbVdKWjUzTnljVFc2d09UMEpFUjJBMFZBZEdjUDVJbnE1aXNFY2FyZVIrS2tNbldlRDM2Y0VBM1RMawpaOGQ4NGwyK05hMVNkOEVYRjJjTDcxQzUrdGpSRDZpQlI2RXZnTlJzRkxpM0FoZ29UUHNCcXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/machine-config-server.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhekNDQWxPZ0F3SUJBZ0lJQXlZdzEzWlVaeDR3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEl6TURreU5USXhNelF6TlZvWApEVE16TURreU1qSXhNelF6TlZvd0p6RWxNQ01HQTFVRUF4TWNjM2x6ZEdWdE9tMWhZMmhwYm1VdFkyOXVabWxuCkxYTmxjblpsY2pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTUgwcjd6NE5TRDQKVjVuTkRoUGxld2Jidys5MUFwZi9mcENQeWZXcEVqU2xCNDhtZmM4WVUxUWlTNEs4YWtwSGYyQ216M3ZaekV6cApyUVg2cHU5ZWJRSldpMkYxZXE5VG43a0lGR1pwR042VmJ1UElRdU0xaEczNU5DN2lGTm1mNTdxbEdPb09sS2hNCmhNb0FyR1FHUnNSb3hZWjZYK21abk1yMjZnS3luNGlzR2FoVXFpY0Rna2JReW5ES1o2aFFWMEhNTi9iLzQySzIKQ2wwWG9RbksrTjhiekNIOUNFSzlDQWY0MnlRWEFnenBJL2Jyc2dmM09NMVlLQTZzYmcyYUFaTHVoRVhNVHY4bQpUWW9kaUd5Z1JTa3pjdGx1T282NjRTeHRWZktrWFgraE04bktEWXZKZi9heWtDTEgrbFFIUkx4bGJIOTNpOHB4Cjg2dUh5MVI2OXA4Q0F3RUFBYU9CbXpDQm1EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBVEFNQmdOVkhSTUIKQWY4RUFqQUFNQjBHQTFVZERnUVdCQlNRcEowOTI0am5lVW5NOXVUTVFKWjQ5bktLV0RBZkJnTlZIU01FR0RBVwpnQlI3Y3JmN2E1c2VYVkhSN1h4U2xQeW03WHNuOURBekJnTlZIUkVFTERBcWdpaGhjR2t0YVc1MExtVmtaaTFrClpXMXZMbk5oYm1SaWIzZ3hPRGd3TG05d1pXNTBiR011WTI5dE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQk4KU1RpQVFRdXhLcDVsd2lTNVNuZE5QdVpIVDlyaFZUdWVHbnBtUDUzQU5WWUhmTVB3VndyMEZGNEdzTzUxYjhUVgpnQlczV1FMV0l2dERUNU9JbnZCVXBNdXM5amNUNXg4ZUh5NmZiN0xDMkhjOTRkWUwrSGFWTGs3eUtSdE5rRGlYCjNlNTNJL0ZpbjY0c3ZLbThrQ1c4VTBLZy83MWx6Ym9jSk5qVGpaY0Fka2dMZlJVaUNNbUtLOUpxT00yVjNJRkwKUjgzNmZza3A0RXZPUTJWVGs3QTJpMWFjT3pNaDRmVXMzS1piL2doOE1qTjljL0VEVEFQVVpOdTE0MzdxNnpsTApidjlPZi9PVXpLWmdNNXJnVGV5Sm9jcFNuWjFEalpnTWVubzJIOENkSzN3MXdTcHA4WDliZk9vOFdCdGtHUjlXCm42akZRWEgweTZoU05pc1AxM2hwCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.RootCA": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lJWVBCSFFjbGdzR1l3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEl6TURreU5USXhNelF6TlZvWApEVE16TURreU1qSXhNelF6TlZvd0pqRVNNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5CmIyOTBMV05oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3Wm9jZkVobUd2SXgKTTFOZkJVakZEZWFIN0JkQ3piSnFqQ3F4c1lCQnBOSHUyMzhlcjhzR3ZHdC9QajhtTUJzaUpmVmZhclMzNHdXKwpRU1VLNGVrUlFZNUVQY09kUzloZjE2MzMxYjNvQy9KbHU5dnNucXdNdzI2MDAzVmF4Z3N1dnhNSTltZ2hEVHRXCnJYYndSejkvWWFxa0xYdUhFd0lJMVlzWVJlNXMxSEF6aitrcTRGbmRzOERKYktPcFJMS2d4L2x1cmZOdnNSVHoKL1ljMDc1dm5SYnhtRXBqWUdRWXA0eTBIUUZmTlcwcndFRzY2SlljWkxhZUUyWXdnWFZ0MEdkVHkxMGdnK2VyVwpMR3hFMWFQR3QydXJjMktEVVh4TldFcTNQZVBOSXlOTWVzdlY4YklxT2IwL2tNbHZXNGFvMFo5bGY5SWIrMVlICk41Vkg4cXBVNHdJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWUzSzMrMnViSGwxUjBlMThVcFQ4cHUxN0ovUXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUxjZ3hqV1g0bWRjNWJRZ3QzejU2dnJQNHluWm90RU8vdmdPYnhtelNuTUMwVE1wdDZHZFltQ3N2bE92ClVEdXBkY1VmeUZDZ1Y0ZlBXQnBUYTNpaEVaYnhKVktjRFk1NEoxZmNjUkQxNDE5ZGFKQVVBRkpXY1ZiQTdQUjIKVUgvVkVONHk3L1gxamVCbUIxUGVwOXBIZUNOb1dtVGdiSjFvcVpCcWgzWkdqT2Rla3lXUDQrWmIxRnNJcWJxegpGbjBGUmw5WTBQdFo1V3pvNnNBbGQ3YUU3Q3lTKzE5QVYzTzkyRVRuYnN5bWNVSDdCMThOSzBkUnd5aHhKSTMzCnhDSmxZanczUEZvMU9WSWU0Q1pYSjFmLzFFNld4QVk1cElETERNRk5XREJldDB6bFc1azlwdkZSdEZVSnA5N04KVlBqTlExc3paR2lIbHIyRjBNblB2bkFPL0NFPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd1pvY2ZFaG1Hdkl4TTFOZkJVakZEZWFIN0JkQ3piSnFqQ3F4c1lCQnBOSHUyMzhlCnI4c0d2R3QvUGo4bU1Cc2lKZlZmYXJTMzR3VytRU1VLNGVrUlFZNUVQY09kUzloZjE2MzMxYjNvQy9KbHU5dnMKbnF3TXcyNjAwM1ZheGdzdXZ4TUk5bWdoRFR0V3JYYndSejkvWWFxa0xYdUhFd0lJMVlzWVJlNXMxSEF6aitrcQo0Rm5kczhESmJLT3BSTEtneC9sdXJmTnZzUlR6L1ljMDc1dm5SYnhtRXBqWUdRWXA0eTBIUUZmTlcwcndFRzY2CkpZY1pMYWVFMll3Z1hWdDBHZFR5MTBnZytlcldMR3hFMWFQR3QydXJjMktEVVh4TldFcTNQZVBOSXlOTWVzdlYKOGJJcU9iMC9rTWx2VzRhbzBaOWxmOUliKzFZSE41Vkg4cXBVNHdJREFRQUJBb0lCQVFDT3d4ejBUTkwyVmRnUQpHQTkrcncyWVZZR3ZoK3VjRVUvZWNuRThDZTdlSW14M2NZTG9jTmRUeEJVOWlvV1hmYnF0c1FZZWdvc0RIcTRRCkRjZTdsUWxEaFN3dk8zdFhmWVFYWUZMY1M4Qzhabys4ZXMwK3FISjAvc0xiRjdQTFRGMjVTc2tXSXUwVWU4aEwKKytQdE5oYXhwNHFQZTRLOGNvaWZKNFhMczZpTzhhKzhNTGcxWGFlSENQUDM4NnVaa2VOWHlCK2g4emdHNldEVAp3SUVwZXZFa2NPMVFWaGJTdHRMMld0S01odlI0QWNZeks0eG1BRnREZzhFRmp4Q0VlTEdUMk96Y012VnlqQ0pGCk54Vmx3TkVZdUx6TkxEMStSYXlVbjlqSitoYXNqWHJuMk5zS2ZqVkZRcUFuRW5zd0VDdUlONXZMYUtUYUU4ak0KcjBhZCtxanBBb0dCQU1iNkZHc2xVTG42bnFQS1A0SmFjbGoyTnVwSlQzcnpVdHRkNWJTQ1F1U3NUay95MlFHRwpicjRraVlYUWpDRmtMNWU0NnNZQ0p4UXRJSkJwWStGbXFKOU9nQWR3dU4xU0E2U2tPZFJrVHJVNlpVcmpDMUNCCndJTjd5NjRQQXo5SkV1NWV3RDRKQzdQY1czaWgyV1hVZkY1QkRDRFp6MVZOME0wczc4NGE4aGtuQW9HQkFQa1YKdEVPZG5aTUJDbnYwRmxaOUE1WE5SL3YvenVQcit0VEJLbjBvcUdMV2NYNXM1dENBeGY3NFY3MVhaaXZWN3lZcApUYmtGOTFBUjdGaTVVb01rUlFlWGpHamtSN1lCUFBJK2RSNGlqTzhSdnZleDJjeHR5cmpraFBDckc5dk8xL01UCnRCRk56aDBPVjZBWWRac2IyKy90UkFiTzcxN3kyTzg0aG9NTytxUGxBb0dBSFNTOTN0K3RUa0F1QWpGNlVkNXIKaHlvdzZ1bm44VXM0WkpjQk1Rb3ZRQTBZdjA4RGg5eW4xY1BHUE1wSjdBNGZobXA0UUo1S0dRTnZGSmZMSUZXSAo5eVZwVFMydWRnUXdNbW8zYWl0eTk4cGcwYklsa3hvZUYyUUhkaXdPdnJNMlNhR3BLS3pzZ09DU3FUMlRlUDNCClpaRERkUUJTQk4yTDZyRmRRbVBoOTlzQ2dZQmViM01qdTRzMVk4eWt5QnI3K1hPMWhObkkyZWlIa3oxTEVsMVkKakdTaTdHaWxKUWF4Z0ZFUTVQam02VTdzU2JUY3hBWWFvdjlyMVEvRlo2VzM0TFZuTm5iZWdjWUtaQmZHUkJYRgpNaFk2d1lDa2lrSm45aXhJd3lMLzErKzgrNFAyUGI4a1hGcEx1OWRPOUZjS1VwcWxNVkI4UUZLU3JnRy9XSy91CjJtditYUUtCZ0F1NkpzUW9RRnJDZnRjTC9DOEJhNVNvNjNwYkovQU5wOUtpR3dkNU1kR2ZkOGFQYzdmMlQ1ejgKTUpqSlVScHpnZzdieE9lMnB4NTFhUDBjSjgyQlZzcU9USTN4NDF1NkZHQndhYW0zWmN6V08zNTBpdVRZc3NzRgpBeFAyaTdsQXFKZ3FUdG53UE1hV3RlSzVOUDhBMC9TeHZleHl5ay9jOXR1OTNFYk5NR1JCCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/root-ca.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd1pvY2ZFaG1Hdkl4TTFOZkJVakZEZWFIN0JkQ3piSnFqQ3F4c1lCQnBOSHUyMzhlCnI4c0d2R3QvUGo4bU1Cc2lKZlZmYXJTMzR3VytRU1VLNGVrUlFZNUVQY09kUzloZjE2MzMxYjNvQy9KbHU5dnMKbnF3TXcyNjAwM1ZheGdzdXZ4TUk5bWdoRFR0V3JYYndSejkvWWFxa0xYdUhFd0lJMVlzWVJlNXMxSEF6aitrcQo0Rm5kczhESmJLT3BSTEtneC9sdXJmTnZzUlR6L1ljMDc1dm5SYnhtRXBqWUdRWXA0eTBIUUZmTlcwcndFRzY2CkpZY1pMYWVFMll3Z1hWdDBHZFR5MTBnZytlcldMR3hFMWFQR3QydXJjMktEVVh4TldFcTNQZVBOSXlOTWVzdlYKOGJJcU9iMC9rTWx2VzRhbzBaOWxmOUliKzFZSE41Vkg4cXBVNHdJREFRQUJBb0lCQVFDT3d4ejBUTkwyVmRnUQpHQTkrcncyWVZZR3ZoK3VjRVUvZWNuRThDZTdlSW14M2NZTG9jTmRUeEJVOWlvV1hmYnF0c1FZZWdvc0RIcTRRCkRjZTdsUWxEaFN3dk8zdFhmWVFYWUZMY1M4Qzhabys4ZXMwK3FISjAvc0xiRjdQTFRGMjVTc2tXSXUwVWU4aEwKKytQdE5oYXhwNHFQZTRLOGNvaWZKNFhMczZpTzhhKzhNTGcxWGFlSENQUDM4NnVaa2VOWHlCK2g4emdHNldEVAp3SUVwZXZFa2NPMVFWaGJTdHRMMld0S01odlI0QWNZeks0eG1BRnREZzhFRmp4Q0VlTEdUMk96Y012VnlqQ0pGCk54Vmx3TkVZdUx6TkxEMStSYXlVbjlqSitoYXNqWHJuMk5zS2ZqVkZRcUFuRW5zd0VDdUlONXZMYUtUYUU4ak0KcjBhZCtxanBBb0dCQU1iNkZHc2xVTG42bnFQS1A0SmFjbGoyTnVwSlQzcnpVdHRkNWJTQ1F1U3NUay95MlFHRwpicjRraVlYUWpDRmtMNWU0NnNZQ0p4UXRJSkJwWStGbXFKOU9nQWR3dU4xU0E2U2tPZFJrVHJVNlpVcmpDMUNCCndJTjd5NjRQQXo5SkV1NWV3RDRKQzdQY1czaWgyV1hVZkY1QkRDRFp6MVZOME0wczc4NGE4aGtuQW9HQkFQa1YKdEVPZG5aTUJDbnYwRmxaOUE1WE5SL3YvenVQcit0VEJLbjBvcUdMV2NYNXM1dENBeGY3NFY3MVhaaXZWN3lZcApUYmtGOTFBUjdGaTVVb01rUlFlWGpHamtSN1lCUFBJK2RSNGlqTzhSdnZleDJjeHR5cmpraFBDckc5dk8xL01UCnRCRk56aDBPVjZBWWRac2IyKy90UkFiTzcxN3kyTzg0aG9NTytxUGxBb0dBSFNTOTN0K3RUa0F1QWpGNlVkNXIKaHlvdzZ1bm44VXM0WkpjQk1Rb3ZRQTBZdjA4RGg5eW4xY1BHUE1wSjdBNGZobXA0UUo1S0dRTnZGSmZMSUZXSAo5eVZwVFMydWRnUXdNbW8zYWl0eTk4cGcwYklsa3hvZUYyUUhkaXdPdnJNMlNhR3BLS3pzZ09DU3FUMlRlUDNCClpaRERkUUJTQk4yTDZyRmRRbVBoOTlzQ2dZQmViM01qdTRzMVk4eWt5QnI3K1hPMWhObkkyZWlIa3oxTEVsMVkKakdTaTdHaWxKUWF4Z0ZFUTVQam02VTdzU2JUY3hBWWFvdjlyMVEvRlo2VzM0TFZuTm5iZWdjWUtaQmZHUkJYRgpNaFk2d1lDa2lrSm45aXhJd3lMLzErKzgrNFAyUGI4a1hGcEx1OWRPOUZjS1VwcWxNVkI4UUZLU3JnRy9XSy91CjJtditYUUtCZ0F1NkpzUW9RRnJDZnRjTC9DOEJhNVNvNjNwYkovQU5wOUtpR3dkNU1kR2ZkOGFQYzdmMlQ1ejgKTUpqSlVScHpnZzdieE9lMnB4NTFhUDBjSjgyQlZzcU9USTN4NDF1NkZHQndhYW0zWmN6V08zNTBpdVRZc3NzRgpBeFAyaTdsQXFKZ3FUdG53UE1hV3RlSzVOUDhBMC9TeHZleHl5ay9jOXR1OTNFYk5NR1JCCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/root-ca.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lJWVBCSFFjbGdzR1l3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEl6TURreU5USXhNelF6TlZvWApEVE16TURreU1qSXhNelF6TlZvd0pqRVNNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5CmIyOTBMV05oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3Wm9jZkVobUd2SXgKTTFOZkJVakZEZWFIN0JkQ3piSnFqQ3F4c1lCQnBOSHUyMzhlcjhzR3ZHdC9QajhtTUJzaUpmVmZhclMzNHdXKwpRU1VLNGVrUlFZNUVQY09kUzloZjE2MzMxYjNvQy9KbHU5dnNucXdNdzI2MDAzVmF4Z3N1dnhNSTltZ2hEVHRXCnJYYndSejkvWWFxa0xYdUhFd0lJMVlzWVJlNXMxSEF6aitrcTRGbmRzOERKYktPcFJMS2d4L2x1cmZOdnNSVHoKL1ljMDc1dm5SYnhtRXBqWUdRWXA0eTBIUUZmTlcwcndFRzY2SlljWkxhZUUyWXdnWFZ0MEdkVHkxMGdnK2VyVwpMR3hFMWFQR3QydXJjMktEVVh4TldFcTNQZVBOSXlOTWVzdlY4YklxT2IwL2tNbHZXNGFvMFo5bGY5SWIrMVlICk41Vkg4cXBVNHdJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWUzSzMrMnViSGwxUjBlMThVcFQ4cHUxN0ovUXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUxjZ3hqV1g0bWRjNWJRZ3QzejU2dnJQNHluWm90RU8vdmdPYnhtelNuTUMwVE1wdDZHZFltQ3N2bE92ClVEdXBkY1VmeUZDZ1Y0ZlBXQnBUYTNpaEVaYnhKVktjRFk1NEoxZmNjUkQxNDE5ZGFKQVVBRkpXY1ZiQTdQUjIKVUgvVkVONHk3L1gxamVCbUIxUGVwOXBIZUNOb1dtVGdiSjFvcVpCcWgzWkdqT2Rla3lXUDQrWmIxRnNJcWJxegpGbjBGUmw5WTBQdFo1V3pvNnNBbGQ3YUU3Q3lTKzE5QVYzTzkyRVRuYnN5bWNVSDdCMThOSzBkUnd5aHhKSTMzCnhDSmxZanczUEZvMU9WSWU0Q1pYSjFmLzFFNld4QVk1cElETERNRk5XREJldDB6bFc1azlwdkZSdEZVSnA5N04KVlBqTlExc3paR2lIbHIyRjBNblB2bkFPL0NFPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.ServiceAccountKeyPair": {
        "Pvt": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdFpzQjlKSmtlQ21lTjdHMUpBc29PRWp0NWY3ZHlYU1BiL28vWE5md2xxY2xWOWJICmh1RnlMSUk4RjNPa2pDUkl4YXIxY25NL3A5eHpjdlkrazhNOWhZZGY5azlLeTFZQzF6NHEwOTd4R0FNSmJZNmMKVURBRGtPTHg0QVk2YStDSmJtVm9iRTJMODBWMHpyMThBV0o4R0doc1I2T2NoeWZSaVo5L2VHWDFzcy94WEE2egpJWW5rMTl4eUp5Q1NoRTBZUkp3WWdqb1RDdklzTzRxR1Zub1E0ZnI3dU95b01uMm91NVdMYy9qclpUN2FWdmdZCkJadCtEalJ6b0dzcjZSVmFHdk5jODdtYkhzU3FpR0RuTnJIdWpTMlMxZys4RGhaTWJTU3RzbDRyenExRVZqOS8KcW1HZzErV3g1V0I0UGdDVG1xeUFUeEo2ekFaQ0NWd1VMUUgxNlFJREFRQUJBb0lCQUVBR1d3VWZpMTQxeGZyNgpvdE1IUC9HLy9HZEdtR2lLdUhzUTdiL012WnhQWjBIMWpiaUd5TnJhTzFkRlJQREhaZ1NTUmlCSWMxdTV3OVgyCjdJN3BtVW4zTlNUQVJhMDBNS0l6MzZOOGlPRWZTUGFmL1luanM0NGtCSVFuamZjMFhSOVhqeDRIcE54cVUwa0QKMHJFbVNIdk9iTVpBNzFGUy8zT1drTGtnc1NPTnhmZ3l4OFNLNU9LOFNnS2J4a2c0WGZIN2ZCV2tYMm5HNzFCbwp2TVdsWHkzSXBuMW1VOXpmcEo0dDF5eFBienRlMmZOYmhzRDJDQ3RyOHFSR21IdlRvSExQWGdqSzBDY0pEMkd1CkRYYmJxeVBLK3IxTWtJSEZyeEtTb3grMWJ4SEdPZ2plcXc5V1JnZ2NobHNGVXQyaVozZmpQbkR4YkNTY1BDRDEKQllyZ1NVVUNnWUVBMzFKNnRkOHNuNkZ2L0w2MjNLV2VBUXF0VUZyNW81WUZXdGRWMWhkcTJodE9CdDJLem9ONwo3eGsyNzJkbE9rVGVGbUthbGtCTG9CemNBbUp5QWVjQ3pzSnVLbDVuUXd0NkpGaVNMUWFjN1ByTWVKMFRZZTN6CjFLUHpKL3RsVXFOVUYvRkJ2T1k1OXdFbFdCMGRQdThKYzdEc0k3NVZTditOdnJIUXJlMldVWE1DZ1lFQTBDM1kKWCtDZklxWEdOVS9pY0E1R214c2Rhb3lnbGZKTkF5QUZFNG9yREdxRDZlWC9yZzljMUU0dzIyRkE1YkVEY29iQwpFUUYwcnhIb2Fjcy85NDZOZTdxNzhlTGgzNEdPTWY1cmVPMndxc0dMZjhjR3JqMXpKek1GTk01SitqcXpwSHpxCmU0NVRSOTNXR0dUZWFOZHIrNVE2cmZTMnl1MW9MeXFNTGpmU1ZETUNnWUVBMEdCbWpaTmJVT3ZTMGJPbWJzVysKWTl4eGtUd0NHWWpmSUQ4eklad2lJTGMvbkJwVjdaSTBMd3FJL3VPc1NhMSt5TVppMWZYU1d1anl4T3JVMUQrWQptQkpGdHhUMUoxTHJPa1RHeUdxV1BHMWNJdUwxOWZlUS80V25XbFF4MitUNGo0cVd1MHJiSlVZVmNWMWhMNXJkCloremF1aE5jQktubHVkeXpDY2RaN2s4Q2dZQnZVaVNqV0hVZ1RPOUpzTmNRUHNJSXpSNFV6UEJPWG94S0FJUlcKWjRzUGo2SE1vSjN4a090OTUvWCtTZW92S1ZJRG13WUptL0t1YjNBTnFvOGhMUXlCUG1Da1AwT3poZzdvc3ZqNwphSGNSU0gvMUt4TnFkeGV0dlgycU9DbWM4bWovcTRDajQzNnJMbmYvQVdsaFBOalVaZlplOFQ0U0U1T2pyU2ZhCnl5VGd1d0tCZ1FDdW9abGhTK1NuMHJzb1RCQm5hdmk0WGczVEpMV2Z6SkpWZmlMSHBGNlJheXpnMlV0bFBKclAKUDl5dWMvdUQ1bnZRbEpML2MrNjlUSk55VXBud0duZytiNTVxZHlwYTU1ZjUvL3pkMk1Tb1NKajhNY1I5T3dYWgpsSXBGSjFXcHpmaE9QQmxyU1JsbUhSUGY2cmNwSW1OYVA0cGhabTB1eEk1Zk5Bb3lLaGRIdnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "Pub": "LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdFpzQjlKSmtlQ21lTjdHMUpBc28KT0VqdDVmN2R5WFNQYi9vL1hOZndscWNsVjliSGh1RnlMSUk4RjNPa2pDUkl4YXIxY25NL3A5eHpjdlkrazhNOQpoWWRmOWs5S3kxWUMxejRxMDk3eEdBTUpiWTZjVURBRGtPTHg0QVk2YStDSmJtVm9iRTJMODBWMHpyMThBV0o4CkdHaHNSNk9jaHlmUmlaOS9lR1gxc3MveFhBNnpJWW5rMTl4eUp5Q1NoRTBZUkp3WWdqb1RDdklzTzRxR1Zub1EKNGZyN3VPeW9NbjJvdTVXTGMvanJaVDdhVnZnWUJadCtEalJ6b0dzcjZSVmFHdk5jODdtYkhzU3FpR0RuTnJIdQpqUzJTMWcrOERoWk1iU1N0c2w0cnpxMUVWajkvcW1HZzErV3g1V0I0UGdDVG1xeUFUeEo2ekFaQ0NWd1VMUUgxCjZRSURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0K",
        "FileList": [
            {
                "Filename": "tls/service-account.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdFpzQjlKSmtlQ21lTjdHMUpBc29PRWp0NWY3ZHlYU1BiL28vWE5md2xxY2xWOWJICmh1RnlMSUk4RjNPa2pDUkl4YXIxY25NL3A5eHpjdlkrazhNOWhZZGY5azlLeTFZQzF6NHEwOTd4R0FNSmJZNmMKVURBRGtPTHg0QVk2YStDSmJtVm9iRTJMODBWMHpyMThBV0o4R0doc1I2T2NoeWZSaVo5L2VHWDFzcy94WEE2egpJWW5rMTl4eUp5Q1NoRTBZUkp3WWdqb1RDdklzTzRxR1Zub1E0ZnI3dU95b01uMm91NVdMYy9qclpUN2FWdmdZCkJadCtEalJ6b0dzcjZSVmFHdk5jODdtYkhzU3FpR0RuTnJIdWpTMlMxZys4RGhaTWJTU3RzbDRyenExRVZqOS8KcW1HZzErV3g1V0I0UGdDVG1xeUFUeEo2ekFaQ0NWd1VMUUgxNlFJREFRQUJBb0lCQUVBR1d3VWZpMTQxeGZyNgpvdE1IUC9HLy9HZEdtR2lLdUhzUTdiL012WnhQWjBIMWpiaUd5TnJhTzFkRlJQREhaZ1NTUmlCSWMxdTV3OVgyCjdJN3BtVW4zTlNUQVJhMDBNS0l6MzZOOGlPRWZTUGFmL1luanM0NGtCSVFuamZjMFhSOVhqeDRIcE54cVUwa0QKMHJFbVNIdk9iTVpBNzFGUy8zT1drTGtnc1NPTnhmZ3l4OFNLNU9LOFNnS2J4a2c0WGZIN2ZCV2tYMm5HNzFCbwp2TVdsWHkzSXBuMW1VOXpmcEo0dDF5eFBienRlMmZOYmhzRDJDQ3RyOHFSR21IdlRvSExQWGdqSzBDY0pEMkd1CkRYYmJxeVBLK3IxTWtJSEZyeEtTb3grMWJ4SEdPZ2plcXc5V1JnZ2NobHNGVXQyaVozZmpQbkR4YkNTY1BDRDEKQllyZ1NVVUNnWUVBMzFKNnRkOHNuNkZ2L0w2MjNLV2VBUXF0VUZyNW81WUZXdGRWMWhkcTJodE9CdDJLem9ONwo3eGsyNzJkbE9rVGVGbUthbGtCTG9CemNBbUp5QWVjQ3pzSnVLbDVuUXd0NkpGaVNMUWFjN1ByTWVKMFRZZTN6CjFLUHpKL3RsVXFOVUYvRkJ2T1k1OXdFbFdCMGRQdThKYzdEc0k3NVZTditOdnJIUXJlMldVWE1DZ1lFQTBDM1kKWCtDZklxWEdOVS9pY0E1R214c2Rhb3lnbGZKTkF5QUZFNG9yREdxRDZlWC9yZzljMUU0dzIyRkE1YkVEY29iQwpFUUYwcnhIb2Fjcy85NDZOZTdxNzhlTGgzNEdPTWY1cmVPMndxc0dMZjhjR3JqMXpKek1GTk01SitqcXpwSHpxCmU0NVRSOTNXR0dUZWFOZHIrNVE2cmZTMnl1MW9MeXFNTGpmU1ZETUNnWUVBMEdCbWpaTmJVT3ZTMGJPbWJzVysKWTl4eGtUd0NHWWpmSUQ4eklad2lJTGMvbkJwVjdaSTBMd3FJL3VPc1NhMSt5TVppMWZYU1d1anl4T3JVMUQrWQptQkpGdHhUMUoxTHJPa1RHeUdxV1BHMWNJdUwxOWZlUS80V25XbFF4MitUNGo0cVd1MHJiSlVZVmNWMWhMNXJkCloremF1aE5jQktubHVkeXpDY2RaN2s4Q2dZQnZVaVNqV0hVZ1RPOUpzTmNRUHNJSXpSNFV6UEJPWG94S0FJUlcKWjRzUGo2SE1vSjN4a090OTUvWCtTZW92S1ZJRG13WUptL0t1YjNBTnFvOGhMUXlCUG1Da1AwT3poZzdvc3ZqNwphSGNSU0gvMUt4TnFkeGV0dlgycU9DbWM4bWovcTRDajQzNnJMbmYvQVdsaFBOalVaZlplOFQ0U0U1T2pyU2ZhCnl5VGd1d0tCZ1FDdW9abGhTK1NuMHJzb1RCQm5hdmk0WGczVEpMV2Z6SkpWZmlMSHBGNlJheXpnMlV0bFBKclAKUDl5dWMvdUQ1bnZRbEpML2MrNjlUSk55VXBud0duZytiNTVxZHlwYTU1ZjUvL3pkMk1Tb1NKajhNY1I5T3dYWgpsSXBGSjFXcHpmaE9QQmxyU1JsbUhSUGY2cmNwSW1OYVA0cGhabTB1eEk1Zk5Bb3lLaGRIdnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/service-account.pub",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdFpzQjlKSmtlQ21lTjdHMUpBc28KT0VqdDVmN2R5WFNQYi9vL1hOZndscWNsVjliSGh1RnlMSUk4RjNPa2pDUkl4YXIxY25NL3A5eHpjdlkrazhNOQpoWWRmOWs5S3kxWUMxejRxMDk3eEdBTUpiWTZjVURBRGtPTHg0QVk2YStDSmJtVm9iRTJMODBWMHpyMThBV0o4CkdHaHNSNk9jaHlmUmlaOS9lR1gxc3MveFhBNnpJWW5rMTl4eUp5Q1NoRTBZUkp3WWdqb1RDdklzTzRxR1Zub1EKNGZyN3VPeW9NbjJvdTVXTGMvanJaVDdhVnZnWUJadCtEalJ6b0dzcjZSVmFHdk5jODdtYkhzU3FpR0RuTnJIdQpqUzJTMWcrOERoWk1iU1N0c2w0cnpxMUVWajkvcW1HZzErV3g1V0I0UGdDVG1xeUFUeEo2ekFaQ0NWd1VMUUgxCjZRSURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0K"
            }
        ]
    }
}